globals
//globals from AbilityIndicator:
constant boolean LIBRARY_AbilityIndicator=true
//endglobals from AbilityIndicator
//globals from Agent:
constant boolean LIBRARY_Agent=true
//endglobals from Agent
//globals from Base64:
constant boolean LIBRARY_Base64=true
constant integer Base64__CHARSET_MAX= 16
constant integer Base64__CHARSET_LENGTH= 64
string array Base64__CHARSET
//endglobals from Base64
//globals from Buff:
constant boolean LIBRARY_Buff=true
trigger BUFF_CREATE_TRIGGER= CreateTrigger()
trigger BUFF_REFRESH_TRIGGER= CreateTrigger()
integer BUFF_CREATE_ID= - 1
integer BUFF_CREATE_CASTER= - 1
integer BUFF_CREATE_TARGET= - 1
real BUFF_CREATE_DURATION= 0.
integer BUFF_LAST_CREATED= - 1
//endglobals from Buff
//globals from Camera:
constant boolean LIBRARY_Camera=true
//endglobals from Camera
//globals from Chingho:
constant boolean LIBRARY_Chingho=true
//endglobals from Chingho
//globals from ConstantString:
constant boolean LIBRARY_ConstantString=true
		
constant string DAMAGE_STRING_PHYSICAL= "|cffff9900물리피해|r"
constant string DAMAGE_STRING_MAGICAL= "|cff9999ff마법피해|r"
constant string ATTACK_STRING_BASIC= "|cffff9900기본공격|r"
constant string ATTACK_STRING_SPELL= "|cff9999ff기술공격|r"
constant string STRING_COLOR_ATTACK= "|cffff9900"
constant string STRING_COLOR_MAGICPOWER= "|cff9999ff"
constant string STRING_COLOR_DEFFENCE= "|cff999999"
constant string STRING_COLOR_RESISTANCE= "|cff00ffcc"
constant string STRING_COLOR_ACCURACY= "|cffff00ff"
constant string STRING_COLOR_EVASION= "|cff99ccff"
constant string STRING_COLOR_CONSTANT= "|cffffff00"

string array STAT_TYPE_COLOR
string array STAT_TYPE_ICON
string array STAT_TYPE_DESCRIPTION
string array TIER_STRING_COLOR
//endglobals from ConstantString
//globals from Damage:
constant boolean LIBRARY_Damage=true

integer ATTACK_TYPE= 0
constant integer ATTACK_TYPE_BASIC= 0
constant integer ATTACK_TYPE_SPELL= 1
constant integer ATTACK_TYPE_HYBRID= 2
constant integer ATTACK_TYPE_ETC= 3
integer DAMAGE_TYPE= 0
constant integer DAMAGE_TYPE_PHYSICAL= 0
constant integer DAMAGE_TYPE_MAGICAL= 1
constant integer DAMAGE_TYPE_TRUE= 2
boolean IS_TARGET= true
boolean IS_AOE= false
integer INTERVAL_TYPE= 0
constant integer INTERVAL_TYPE_SINGLE= 0
constant integer INTERVAL_TYPE_PERIODIC= 1
integer VECTOR_TYPE= 0
constant integer VECTOR_TYPE_OUTTER= 0
constant integer VECTOR_TYPE_INNER= 1
boolean IS_ONHIT= false
boolean IS_RANGED= false

integer DAMAGE_ID= 0
boolean USE_DAMAGE_POSITION= false
real DAMAGE_X= 0.
real DAMAGE_Y= 0.

integer DAMAGE_ATTACKER= 0
integer DAMAGE_TARGET= 0
real DAMAGE_LAST= 0.
real DAMAGE_AMOUNT= 0.
real DAMAGE_AMOUNT_ORIGIN= 0.
real DAMAGE_LOWBOUND= 0.
real DAMAGE_HP_REDUCED= 0.

constant real DAMAGE_EVENT_NULL= 0.0
//endglobals from Damage
//globals from Event:
constant boolean LIBRARY_Event=true
constant real DAMAGE_EVENT_MODIFY_STAT= 1.0
constant real DAMAGE_EVENT_MODIFY_DAMAGE= 2.0
constant real DAMAGE_EVENT_AFTER_HPREDUCE= 3.0
constant real DAMAGE_EVENT_BEFORE_HPREDUCE= 4.0
constant real RIGHT_CLICK_EVENT= 5.0
//endglobals from Event
//globals from Explosion:
constant boolean LIBRARY_Explosion=true
//endglobals from Explosion
//globals from FixCam:
constant boolean LIBRARY_FixCam=true
		//
		// 시스템 설정
		//
constant real FixCam__SYSTEM_TIMEOUT= 0.03125
constant integer FixCam__OFFSET= 20
		
boolean array FixCam__FIX
real array FixCam__VALUE
real array FixCam__EASE
//endglobals from FixCam
//globals from Frame:
constant boolean LIBRARY_Frame=true
//endglobals from Frame
//globals from ItemPrototype:
constant boolean LIBRARY_ItemPrototype=true
//endglobals from ItemPrototype
//globals from LocationEx:
constant boolean LIBRARY_LocationEx=true
location LocationEx__LOC= Location(0, 0)
//endglobals from LocationEx
//globals from Math:
constant boolean LIBRARY_Math=true
//endglobals from Math
//globals from MissileGroup:
constant boolean LIBRARY_MissileGroup=true
//endglobals from MissileGroup
//globals from Mover:
constant boolean LIBRARY_Mover=true
//endglobals from Mover
//globals from Object:
constant boolean LIBRARY_Object=true
//endglobals from Object
//globals from ProgressBar:
constant boolean LIBRARY_ProgressBar=true
//endglobals from ProgressBar
//globals from Round:
constant boolean LIBRARY_Round=true
constant integer ROUND_TIME_INITIAL= 15
constant integer ROUND_TIME= 90
integer ROUND_TIME_REMAIN= 0
//endglobals from Round
//globals from TimerUtils:
constant boolean LIBRARY_TimerUtils=true
constant integer HASH_SIZE= 32768
constant integer HASH_UP= 4292476928
constant integer HASH_DOWN= 131072
constant integer HASH_BIAS= 16384
constant real TIMER_TICK= 0.025
// processed:         integer array TimerUtils__Data[HASH_SIZE]
// processed:         timer array TimerUtils__Timer[HASH_SIZE]
// processed: 		group array TimerUtils__Group[HASH_SIZE]
integer array TimerUtils__tH
integer array TimerUtils__gH
integer TimerUtils__tN= 0
integer TimerUtils__gN= 0
constant integer TimerUtils__HELD=0x28829022
        //use a totally random number here, the more improbable someone uses it, the better.
//endglobals from TimerUtils
//globals from Tip:
constant boolean LIBRARY_Tip=true
//endglobals from Tip
//globals from Tombstone:
constant boolean LIBRARY_Tombstone=true
//endglobals from Tombstone
//globals from TreeOfLife:
constant boolean LIBRARY_TreeOfLife=true
//endglobals from TreeOfLife
//globals from Trigger:
constant boolean LIBRARY_Trigger=true
trigger Trigger__GENERIC= null
//endglobals from Trigger
//globals from UI:
constant boolean LIBRARY_UI=true
framehandle FRAME_GAME_UI= null
framehandle FRAME_ORIGIN= null
framehandle FRAME_MINIMAP= null
framehandle FRAME_MINIMAP_BACKDROP= null
framehandle FRAME_PORTRAIT= null
framehandle FRAME_PORTRAIT_BACKDROP= null
framehandle FRAME_HP_BAR= null
framehandle FRAME_MP_BAR= null
framehandle FRAME_ABILITY_CONTAINER= null
framehandle FRAME_STAT1= null
framehandle FRAME_STAT2= null
framehandle FRAME_EXP_BAR= null
framehandle FRAME_SKILL_SHOP= null
framehandle FRAME_SKILL_SHOP_BACKDROP= null
framehandle FRAME_SLOT_CHANGER= null
framehandle FRAME_MAKE_POTION= null
// processed: 		framehandle array FRAME_ABILITY_ICON[10]

constant integer UI___MINIMAP_OFFSET_X= 0
constant integer UI___MINIMAP_OFFSET_Y= 16
constant integer UI___MINIMAP_SIZE= 224
constant integer UI___MINIMAP_BORDER= 0
constant integer UI___PORTRAIT_SIZE= 96
constant integer UI___PORTRAIT_OFFSET_Y= 160
constant integer UI___PORTRAIT_OFFSET_X= - 360
constant integer UI___PORTRAIT_BORDER= 0
constant integer UI___BAR_WIDTH= 720
constant integer UI___BAR_HEIGHT= 24
constant integer UI___HP_BAR_OFFSET_Y= 136
constant integer UI___MP_BAR_OFFSET_Y= 112
constant integer UI___ABILITY_CONTAINER_WIDTH= 720
constant integer UI___ABILITY_CONTAINER_HEIGHT= 96
constant integer UI___ABILITY_CONTAINER_OFFSET_Y= 16
constant integer UI___ABILITY_ICON_SIZE= 64
constant integer UI___ABILITY_TOOLTIP_OFFSET_Y= 160
constant integer UI___CHINGHO_HEIGHT= 32
constant integer UI___STAT1_WIDTH= 192
constant integer UI___EXP_BAR_HEIGHT= 12
constant integer UI___SKILL_SHOP_OFFSET_Y= - 16
constant integer UI___SKILL_SHOP_WIDTH= 1280
constant integer UI___SKILL_SHOP_HEIGHT= 428
constant integer UI___SKILL_SHOP_INSET= 32
constant integer UI___ABILITY_ERROR_OFFSET_Y= 268
constant integer UI___SLOT_CHANGER_WIDTH= ( 64 * 10 ) + 16
constant integer UI___SLOT_CHANGER_HEIGHT= ( 64 * 3 ) + 16
constant integer UI___SLOT_CHANGER_OFFSET_Y= - 96

//endglobals from UI
//globals from UndeadData:
constant boolean LIBRARY_UndeadData=true
//endglobals from UndeadData
//globals from UnitActor:
constant boolean LIBRARY_UnitActor=true
//endglobals from UnitActor
//globals from UnitMovement:
constant boolean LIBRARY_UnitMovement=true
//endglobals from UnitMovement
//globals from UnitPrototype:
constant boolean LIBRARY_UnitPrototype=true
constant integer STAT_TYPE_MAXHP= 0
constant integer STAT_TYPE_MAXMP= 1
constant integer STAT_TYPE_ATTACK= 2
constant integer STAT_TYPE_DEFFENCE= 3
constant integer STAT_TYPE_MAGICPOWER= 4
constant integer STAT_TYPE_RESISTANCE= 5
constant integer STAT_TYPE_ACCURACY= 6
constant integer STAT_TYPE_EVASION= 7
constant integer STAT_TYPE_ARMOR_PENET= 8
constant integer STAT_TYPE_MAGIC_PENET= 9
constant integer STAT_TYPE_SPELL_BOOST= 10
constant integer STAT_TYPE_MOVEMENT_SPEED= 11
constant integer STAT_TYPE_ATTACK_SPEED= 12
constant integer STAT_TYPE_LUCK= 13
constant integer STAT_TYPE_ATTACK_RANGE= 14
constant integer STAT_TYPE_HPREGEN= 15
constant integer STAT_TYPE_MPREGEN= 16
constant integer STAT_TYPE_HEAL_AMP= 17
constant integer STAT_TYPE_SIZE= 18

constant integer STAT_INDEX_BASE= 0
constant integer STAT_INDEX_LEVEL= 1
constant integer STAT_INDEX_MULTIPLY= 2
constant integer STAT_INDEX_DIVIDE= 3
constant integer STAT_INDEX_PLUS= 4
constant integer STAT_INDEX_MINUS= 5
constant integer STAT_INDEX_SIZE= 6

// processed: 		boolean array STAT_TYPE_CLAMP[STAT_TYPE_SIZE]
// processed: 		string array STAT_TYPE_NAME[STAT_TYPE_SIZE]
// processed: 		real array STAT_NORMAL_VALUE[STAT_TYPE_SIZE]

constant integer ABILITY_SIZE= 10

constant integer ITEM_SIZE= 6

constant integer STATUS_STUN= 0
constant integer STATUS_ENSNARE= 1
constant integer STATUS_DISARM= 2
constant integer STATUS_CAST= 3
constant integer STATUS_INVINCIBLE= 4
constant integer STATUS_SILENCE= 5
constant integer STATUS_EVASION= 6
constant integer STATUS_BLIND= 7
constant integer STATUS_GRABBED= 8
constant integer STATUS_DEAD= 9
constant integer STATUS_UNSTOP= 10
constant integer STATUS_SIZE= 11

constant real GRAVITY_DEFAULT= 600.

integer INDEX_STAT= 0
integer INDEX_ABILITY= 0
integer INDEX_ITEM= 0
integer INDEX_STATUS= 0
integer INDEX_LAST= 0

trigger DEATH_TRIGGER= CreateTrigger()
integer DEATH_UNIT= 0
integer DEATH_KILLER= 0

trigger LEVEL_TRIGGER= CreateTrigger()
integer LEVEL_UNIT= 0
integer LEVEL_LEVEL= 0

trigger REVIVE_TRIGGER= CreateTrigger()
integer REVIVE_UNIT= 0

trigger ABILITY_TRIGGER= CreateTrigger()
integer ABILITY_ABILITY= 0
integer ABILITY_CASTER= 0
integer ABILITY_TARGET= 0
real ABILITY_POSITION_X= 0.
real ABILITY_POSITION_Y= 0.

trigger UNREGISTER_GROUP= CreateTrigger()
unit UNREGISTER_GROUP_UNIT= null

group UnitPrototype_GROUP= null

//endglobals from UnitPrototype
//globals from YouCantAttackAlly:
constant boolean LIBRARY_YouCantAttackAlly=true
trigger YouCantAttackAlly__TRIG= CreateTrigger()
//endglobals from YouCantAttackAlly
//globals from AbilityPrototype:
constant boolean LIBRARY_AbilityPrototype=true
trigger ABILITY_CREATE_TRIGGER= CreateTrigger()
integer ABILITY_CREATE_ID= - 1
integer ABILITY_LAST_CREATED= - 1
trigger ERROR_MESSAGE_TRIGGER= CreateTrigger()
player ERROR_MESSAGE_PLAYER= null
string ERROR_MESSAGE= ""
constant real AbilityPrototype__COMMAND_TIMER_TICK= 0.05
trigger ABILITY_SYNC_TARGET_TRIGGER= CreateTrigger()
//endglobals from AbilityPrototype
//globals from Actor:
constant boolean LIBRARY_Actor=true
//endglobals from Actor
//globals from CloseUI:
constant boolean LIBRARY_CloseUI=true
//endglobals from CloseUI
//globals from Curve:
constant boolean LIBRARY_Curve=true
constant integer INDEX_POSITION_X= 0
constant integer INDEX_POSITION_Y= 1
constant integer INDEX_POSITION_Z= 2
constant integer INDEX_POSITION_SIZE= 3
constant integer INDEX_POINT_ORIGIN= 0
constant integer INDEX_POINT_LAST= 1
constant integer INDEX_POINT_MIDDLE= 2
hashtable Curve__HASH= InitHashtable()
//endglobals from Curve
//globals from Effect:
constant boolean LIBRARY_Effect=true
constant real HEIGHT_DEFAULT= 95
constant string EF_SLASH= "Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl"
constant string EF_BLOOD= "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
constant string EF_ROCK= "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
constant string EF_ARROW= "Abilities\\Weapons\\Arrow\\ArrowMissile.mdl"
constant string EF_EXPLOSION= "Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl"
//endglobals from Effect
//globals from Group:
constant boolean LIBRARY_Group=true
integer Group__LOOP_INDEX= 0
real Group__TARGET_X= 0
real Group__TARGET_Y= 0
real Group__CURRENT_DIST= 0
unit Group__CURRENT_UNIT= null
group Group__RETURNGROUP= null
//endglobals from Group
//globals from Lightning:
constant boolean LIBRARY_Lightning=true
//endglobals from Lightning
//globals from Line:
constant boolean LIBRARY_Line=true
hashtable Line__HASH= InitHashtable()
//endglobals from Line
//globals from SkillShop:
constant boolean LIBRARY_SkillShop=true
integer array CHANCE_TIER1
integer array CHANCE_TIER2
integer array CHANCE_TIER3
integer array CHANCE_TIER4
integer array CHANCE_TIER5
integer array CHANCE_TOTAL
constant integer CHANCE_LEVEL_MAX= 11
integer array SkillShop___MAX_EXP
constant integer LEVEL_MAX= 11
//endglobals from SkillShop
//globals from SlotChanger:
constant boolean LIBRARY_SlotChanger=true
//endglobals from SlotChanger
//globals from Sound:
constant boolean LIBRARY_Sound=true
//endglobals from Sound
//globals from TextTag:
constant boolean LIBRARY_TextTag=true
//endglobals from TextTag
//globals from Timer:
constant boolean LIBRARY_Timer=true
timer Timer__NEWTIMER
//endglobals from Timer
//globals from UnitData:
constant boolean LIBRARY_UnitData=true
//endglobals from UnitData
//globals from User:
constant boolean LIBRARY_User=true
constant integer PLAYER_MAX= 4
	
trigger GOLD_REFRESH_TRIGGER= CreateTrigger()
player GOLD_REFRESH_PLAYER= null
//endglobals from User
//globals from Ability:
constant boolean LIBRARY_Ability=true
hashtable Ability__HASH= InitHashtable()
constant string ABILITY_STRING_TARGET_LOCATION= "|cff00ffff지점 목표물|r"
constant string ABILITY_STRING_TARGET_UNIT= "|cff00ffff유닛 목표물|r"
constant string ABILITY_STRING_IMMEDIATE= "|cff00ffff즉시 시전|r"
constant string ABILITY_STRING_PASSIVE= "|cff00ffff지속효과|r"
constant string ABILITY_STRING_DRAG_TO_USE= "|cff00ffff끌어서 사용|r"
constant string ABILITY_STRING_WEAPON= "|cffcc0000무기변형|r"
constant string ABILITY_TAG_IRON= "|cffffff00강철|r"
constant string ABILITY_TAG_ASSASSINATE= "|cffffff00암살|r"
constant string ABILITY_TAG_BRAWL= "|cffffff00체술|r"
constant string ABILITY_TAG_MAGIC= "|cffffff00마법|r"
constant string ABILITY_TAG_LIGHTNING= "|cffffff00전격|r"
constant string ABILITY_TAG_FIREARM= "|cffffff00병기|r"
constant string ABILITY_TAG_SHOOTING= "|cffffff00사격|r"
constant string ABILITY_TAG_FIRE= "|cffffff00화염|r"
constant string ABILITY_TAG_DIVINE= "|cffffff00신성|r"
constant string ABILITY_TAG_PRODUCT= "|cffffff00생산|r"
constant string ABILITY_TAG_DRUG= "|cffffff00약물|r"
constant string ABILITY_TAG_POISON= "|cffffff00독성|r"
constant string ABILITY_TAG_CARDMAGIC= "|cffffff00카드마술|r"
constant string ABILITY_TAG_THROW= "|cffffff00투척|r"
constant string ABILITY_TAG_DARK= "|cffffff00암흑|r"
constant string ABILITY_TAG_DRAGON= "|cffffff00용혈|r"
constant string ABILITY_TAG_FROST= "|cffffff00냉기|r"
constant string ABILITY_TAG_UNDEAD= "|cffffff00언데드|r"
constant string ABILITY_TAG_BUG= "|cffffff00벌레|r"
//endglobals from Ability
//globals from CharacterSelect:
constant boolean LIBRARY_CharacterSelect=true
integer array CharacterSelect_ID
integer array CharacterSelect_CHINGHO_ID
boolean array CharacterSelect___READY

trigger CharacterSelect___MAIN_TRIGGER= null
triggercondition CharacterSelect___MAIN_COND= null
integer CharacterSelect___TIME= 60

framehandle CharacterSelect_BACKGROUND= null
framehandle CharacterSelect___CONTAINER= null
framehandle CharacterSelect___HEADER_BACKDROP= null
framehandle CharacterSelect___HEADER_TEXT= null
framehandle CharacterSelect___CONFIRM= null
boolean CharacterSelect___CONFIRM_DISABLE= false
framehandle CharacterSelect___CHINGHO= null
framehandle CharacterSelect___CHINGHO_HEADER_BACKDROP= null
framehandle CharacterSelect___CHINGHO_HEADER_TEXT= null
framehandle CharacterSelect___CHINGHO_PAGE_NEXT= null
framehandle CharacterSelect___CHINGHO_PAGE_PREV= null
framehandle CharacterSelect___PANEL_CONTAINER= null
framehandle CharacterSelect___PANEL_HEADER_BACKDROP= null
framehandle CharacterSelect___PANEL_HEADER_TEXT= null
framehandle CharacterSelect___FADE= null
constant integer CharacterSelect___WIDTH= 768
constant integer CharacterSelect___HEIGHT= 320
constant integer CharacterSelect___OFFSET_X= - 128 - 16
constant integer CharacterSelect___OFFSET_Y= 128
constant integer CharacterSelect___PER_ROW= 8
constant integer CharacterSelect___WIDGET_INSET= 16
constant integer CharacterSelect___WIDGET_SIZE= 80
constant integer CharacterSelect___CHINGHO_WIDTH= 256
constant integer CharacterSelect___CHINGHO_HEIGHT= 640 - 64 + 16

integer CharacterSelect___WIDGET_INDEX= 0
integer CharacterSelect___CHINGHO_WIDGET_INDEX= 0
constant integer CharacterSelect___CHINGHO_PER_PAGE= 8
framehandle array CharacterSelect___CHINGHO_PAGE
integer array CharacterSelect___CHINGHO_PAGE_INDEX
integer CharacterSelect___CHINGHO_PAGE_MAX= 0

trigger CharacterSelect___PANEL_REFRESH_REQUEST= null
player CharacterSelect___PANEL_REFRESH_PLAYER= null
//endglobals from CharacterSelect
//globals from Circle:
constant boolean LIBRARY_Circle=true
//endglobals from Circle
//globals from Guardians:
constant boolean LIBRARY_Guardians=true
//endglobals from Guardians
//globals from Missile:
constant boolean LIBRARY_Missile=true
//endglobals from Missile
//globals from Movement:
constant boolean LIBRARY_Movement=true
//endglobals from Movement
//globals from Unit:
constant boolean LIBRARY_Unit=true
//endglobals from Unit
//globals from Game:
constant boolean LIBRARY_Game=true
constant boolean Game___TEST= true

player PLAYER_UNDEAD= Player(20)
player PLAYER_MONSTER= Player(23)
player PLAYER_GUARDIANS= Player(21)
player PLAYER_SYSTEM= Player(24)

trigger Game___LEAVE_TRIGGER= CreateTrigger()
		
//endglobals from Game
//globals from Undead:
constant boolean LIBRARY_Undead=true
trigger Undead_CREATE_REQUEST= CreateTrigger()
real Undead_CREATE_X= 0.
real Undead_CREATE_Y= 0.
integer Undead_CREATE_ID= 0
integer Undead_CREATE_POSITION= 0
integer Undead_LAST_CREATED= 0

group Undead_GROUP= null
//endglobals from Undead
//globals from Wave:
constant boolean LIBRARY_Wave=true
rect array Wave___RECT
hashtable Wave___HASH= InitHashtable()
//endglobals from Wave
    // User-defined
real udg_EVENT_VALUE= 0

    // Generated
rect gg_rct_c1= null
rect gg_rct_spawn= null
rect gg_rct_c2= null
rect gg_rct_GateWest= null
rect gg_rct_GateEast= null
rect gg_rct_GateNorth= null
rect gg_rct_GateSouth= null
rect gg_rct_GuardianWest= null
rect gg_rct_GuardianNorth= null
rect gg_rct_GuardianEast= null
rect gg_rct_GuardianSouth= null
camerasetup gg_cam_Cam00= null
sound gg_snd_BigButtonClick= null
sound gg_snd_Error= null
sound gg_snd_MetalHeavyChopFlesh3= null
sound gg_snd_HeroDropItem1= null
sound gg_snd_Tomes= null
sound gg_snd_MouseClick1= null
sound gg_snd_Hint= null
trigger RIGHT_CLICK= CreateTrigger()
trigger RIGHT_CLICK_RECEIVE= CreateTrigger()
player RIGHT_CLICK_PLAYER= null
unit RIGHT_CLICK_UNIT= null
string BuffStun__NAME= "기절"
integer BuffStun__ID= 'Stun'
integer BuffStun__INDIVISUAL= 0
string BuffStun__ICON_PATH= "BTNStun"
string BuffEnsn__NAME= "속박"
integer BuffEnsn__ID= 'Ensn'
integer BuffEnsn__INDIVISUAL= 0
string BuffEnsn__ICON_PATH= "BTNEnsnare"
constant integer Ability0000__ID= '0000'
constant string Ability0000__NAME= "후려치기"
constant string Ability0000__ICON_PATH= "BTNSteelMelee"
constant integer Ability0000__TIER= 1
constant integer Ability0000__COST= 1
constant integer Ability0000__STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0000__STAT_INDEX2= STAT_TYPE_ARMOR_PENET
constant real Ability0000__CHARGE_DURATION= 0.25
constant real Ability0000__CHARGE_SPEED= 1250.
constant real Ability0000__KNOCKBACK_DISTANCE= 100.
constant real Ability0000__KNOCKABCK_DURATION= 0.5
constant real Ability0000__DAMAGE_PER_ATTACK= 1.5
constant real Ability0000__DAMAGE_PER_LEVEL= 0.05
constant real Ability0000__DAMAGE_PER_ATTACK_ALTERNATE= 2.0
constant real Ability0000__BACKSWING= 0.15
constant real Ability0000__COLRAD= 75.
constant integer Ability0001__ID= '0001'
constant string Ability0001__NAME= "쌍극의 번개"
constant string Ability0001__ICON_PATH= "btn-ability-protoss-doubleshieldrecharge"
constant integer Ability0001__TIER= 1
constant integer Ability0001__COST= 1
constant integer Ability0001__STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0001__STAT_INDEX2= STAT_TYPE_MAGIC_PENET
constant real Ability0001__DELAY= 0.65
constant real Ability0001__CAST= 0.25
constant real Ability0001__BALL_UP= 0.3
constant real Ability0001__BALL_HEIGHT= 85.
constant real Ability0001__BALL_DISTANCE= 350.
constant real Ability0001__BALL_RADIUS= 55.
constant real Ability0001__RANGE= 500.
constant string Ability0001__EFFECT_PATH1= "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl"
constant string Ability0001__EFFECT_PATH2= "Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl"
constant real Ability0001__DAMAGE_PER_MAGICPOWER= 2.25
constant real Ability0001__DAMAGE_PER_LEVEL= 0.05
constant integer Ability0002__ID= '0002'
constant string Ability0002__NAME= "고정사격"
constant string Ability0002__ICON_PATH= "BTNDwarvenLongRifle"
constant integer Ability0002__TIER= 1
constant integer Ability0002__COST= 1
constant integer Ability0002__STAT_INDEX1= STAT_TYPE_ACCURACY
constant integer Ability0002__STAT_INDEX2= STAT_TYPE_ARMOR_PENET
constant real Ability0002__DELAY= 2.
constant real Ability0002__BACKSWING= 0.25
constant real Ability0002__STARTAT= 45.
constant string Ability0002__EFFECT_PATH1= "Abilities\\Weapons\\Mortar\\MortarMissile.mdl"
constant real Ability0002__DAMAGE_PER_ATTACK= 2.65
constant real Ability0002__DAMAGE_PER_LEVEL= 0.05
constant real Ability0002__VELO= 1875.
constant integer Ability0003__ID= '0003'
constant string Ability0003__NAME= "화염구"
constant string Ability0003__ICON_PATH= "BTNFireBolt"
constant integer Ability0003__TIER= 1
constant integer Ability0003__COST= 1
constant integer Ability0003__STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0003__STAT_INDEX2= STAT_TYPE_SPELL_BOOST
constant real Ability0003__DELAY= 0.2
constant real Ability0003__DAMAGE_PER_MAGICPOWER= 2.25
constant real Ability0003__DAMAGE_PER_LEVEL= 0.05
constant real Ability0003__BACKSWING= 0.15
constant real Ability0003__STARTAT= 32.5
constant real Ability0003__COLRAD= 65.
constant real Ability0003__EXPRAD= 145.
constant real Ability0003__VELO= 1100.
constant real Ability0003__RANGE= 750.
constant string Ability0003__EFFECT_PATH1= "Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl"
constant string Ability0003__EFFECT_PATH2= "Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl"
constant integer Ability0004__ID= '0004'
constant string Ability0004__NAME= "연쇄번개"
constant string Ability0004__ICON_PATH= "btn-ability-swarm-kerrigan-chainreaction"
constant integer Ability0004__TIER= 1
constant integer Ability0004__COST= 1
constant integer Ability0004__STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0004__STAT_INDEX2= STAT_TYPE_ACCURACY
constant real Ability0004__DELAY= 0.2
constant real Ability0004__DAMAGE_PER_MAGICPOWER= 1.55
constant real Ability0004__DAMAGE_PER_ACCURACY= 0.85
constant real Ability0004__DAMAGE_PER_LEVEL= 0.05
constant real Ability0004__BACKSWING= 0.15
constant real Ability0004__INTERVAL= 0.15
constant real Ability0004__RANGE= 575.
constant real Ability0004__RANGE_SECOND= 315.
constant integer Ability0004__TARGET_MAX= 4
constant string Ability0004__EFFECT_PATH1= "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl"
constant integer Ability0005__ID= '0005'
constant string Ability0005__NAME= "신성의 빛"
constant string Ability0005__ICON_PATH= "BTNHolyBolt"
constant integer Ability0005__TIER= 1
constant integer Ability0005__COST= 1
constant integer Ability0005__STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0005__STAT_INDEX2= STAT_TYPE_MAXHP
constant real Ability0005__DELAY= 0.2
constant real Ability0005__HEAL_PER_MAGICPOWER= 0.85
constant real Ability0005__HEAL_PER_MAXHP= 0.025
constant real Ability0005__DAMAGE_PER_LEVEL= 0.05
constant real Ability0005__BACKSWING= 0.15
constant real Ability0005__RANGE= 600.
constant string Ability0005__EFFECT_PATH1= "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl"
constant integer Ability0006__ID= '0006'
constant string Ability0006__NAME= "점멸"
constant string Ability0006__ICON_PATH= "BTNBlink"
constant integer Ability0006__TIER= 1
constant integer Ability0006__COST= 1
constant integer Ability0006__STAT_INDEX1= STAT_TYPE_EVASION
constant integer Ability0006__STAT_INDEX2= STAT_TYPE_ACCURACY
constant real Ability0006__RANGE_MAX= 600.
constant real Ability0006__CDR_PER_LEVEL= 0.1
constant string Ability0006__EFFECT_PATH1= "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl"
constant string Ability0006__EFFECT_PATH2= "Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl"
constant integer Ability0007__ID= '0007'
constant string Ability0007__NAME= "순보"
constant string Ability0007__ICON_PATH= "BTNSavageStrike"
constant integer Ability0007__TIER= 1
constant integer Ability0007__COST= 1
constant integer Ability0007__STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0007__STAT_INDEX2= STAT_TYPE_ACCURACY
constant real Ability0007__RANGE_MAX= 500.
constant real Ability0007__DAMAGE_PER_ATTACK= 1.25
constant real Ability0007__DAMAGE_PER_ACCURACY= 0.3
constant real Ability0007__DAMAGE_PER_LEVEL= 0.1
constant integer Ability0007__MANA_RESTORE= 24
constant real Ability0007__EXPRAD= 65
constant string Ability0007__EFFECT_PATH1= "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl"
constant string Ability0007__EFFECT_PATH2= "Effects\\WindSlash.mdl"
constant string Ability0007__EFFECT_PATH3= "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
constant integer Abilityu000__ID= 'u000'
constant string Abilityu000__NAME= "뛰어들기"
constant string Abilityu000__ICON_PATH= "BTNGhoulFrenzy"
constant integer Abilityu000__TIER= 1
constant integer Abilityu000__COST= 1
constant integer Abilityu000__STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Abilityu000__STAT_INDEX2= STAT_TYPE_ARMOR_PENET
constant real Abilityu000__DAMAGE_PER_ATTACK= 2.
constant real Abilityu000__DAMAGE_PER_LEVEL= 0.05
constant real Abilityu000__BACKSWING= 0.15
constant real Abilityu000__RANGE= 500.
constant real Abilityu000__RANGE_ADDITIONAL= 100.
constant real Abilityu000__VELO= 1500.
string Buffu001__NAME= "끈적거미"
integer Buffu001__ID= 'u001'
integer Buffu001__INDIVISUAL= 0
string Buffu001__ICON_PATH= "BTNMonsterSpiderCarapace_01"
constant integer Abilityu001__ID= 'u001'
constant string Abilityu001__NAME= "끈적거미"
constant string Abilityu001__ICON_PATH= "BTNMonsterSpiderCarapace_01"
constant integer Abilityu001__TIER= 1
constant integer Abilityu001__COST= 1
constant integer Abilityu001__STAT_INDEX1= STAT_TYPE_ACCURACY
constant integer Abilityu001__STAT_INDEX2= STAT_TYPE_ATTACK
constant real Abilityu001__BACKSWING= 0.25
constant real Abilityu001__STARTAT= 25.
constant string Abilityu001__EFFECT_PATH1= "Abilities\\Weapons\\CryptFiendMissile\\CryptFiendMissile.mdl"
constant real Abilityu001__DAMAGE_PER_ATTACK= 1.05
constant real Abilityu001__DAMAGE_PER_LEVEL= 0.05
constant real Abilityu001__VELO= 900
constant real Abilityu001__DURATION= 4.
constant integer Ability0010__ID= '0010'
constant string Ability0010__NAME= "물약 제조"
constant string Ability0010__ICON_PATH= "BTNVialEmpty"
constant integer Ability0010__TIER= 2
constant integer Ability0010__COST= 2
constant integer Ability0010__STAT_INDEX1= STAT_TYPE_HPREGEN
constant integer Ability0010__STAT_INDEX2= STAT_TYPE_MPREGEN
constant integer Ability0010__ID2= '0011'
constant integer Ability0010__ID3= '0012'
constant real Ability0010__CHANNELING= 3.
constant real Ability0010__DELAY= 0.2
constant real Ability0010__DAMAGE_BASE= 80
constant real Ability0010__DAMAGE_PER_LEVEL= 0.2
constant real Ability0010__HEAL_BAESU= 0.65
constant real Ability0010__MANA_RESTORE= 20
constant real Ability0010__MANA_RESTORE_PER_LEVEL= 2
constant real Ability0010__BACKSWING= 0.15
constant real Ability0010__EXPRAD= 175.
constant real Ability0010__RANGE= 600.
constant real Ability0010__FLIGHT_DURATION= 0.5
constant integer Ability0010__MANACOST2= 20
constant integer Ability0010__POTION_MAX= 10
constant integer Ability0010__POTION_MAX_PER_LEVEL= 2
constant string Ability0010__EFFECT_PATH1= "Effects\\ThrowingHealthPotion.mdl"
constant string Ability0010__EFFECT_PATH2= "Effects\\ThrowingManaPotion.mdl"
constant string Ability0010__EFFECT_PATH3= "Abilities\\Weapons\\BatTrollMissile\\BatTrollMissile.mdl"
constant string Ability0010__EFFECT_PATH4= "Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl"
constant string Ability0010__EFFECT_PATH5= "Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl"
constant string Ability0010__EFFECT_PATH6= "Abilities\\Weapons\\Mortar\\MortarMissile.mdl"
constant string Ability0010__EFFECT_PATH7= "Abilities\\Spells\\Undead\\ReplenishMana\\ReplenishManaCaster.mdl"
constant string Ability0010__EFFECT_PATH8= "Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl"
constant string Ability0010__EFFECT_PATH9= "Objects\\Spawnmodels\\Other\\ToonBoom\\ToonBoom.mdl"
constant string Ability0010__EFFECT_PATH10= "Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCaster.mdl"
constant string Ability0010__EFFECT_PATH11= "Abilities\\Spells\\Human\\Heal\\HealTarget.mdl"
constant string Ability0010__EFFECT_PATH12= "Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl"
			
trigger Ability0010__POTION_ADD_TRIGGER= CreateTrigger()
integer Ability0010__POTION_ADD_ABILITY= 0
integer Ability0010__POTION_ADD_INDEX= 0
constant integer Ability0013__ID= '0013'
constant string Ability0013__NAME= "소용돌이"
constant string Ability0013__ICON_PATH= "BTNWhirlwind"
constant integer Ability0013__TIER= 2
constant integer Ability0013__COST= 2
constant integer Ability0013__STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0013__STAT_INDEX2= STAT_TYPE_ARMOR_PENET
constant real Ability0013__INTERVAL= 0.25
constant integer Ability0013__COUNT= 8
constant real Ability0013__DAMAGE_PER_ATTACK= 0.3
constant real Ability0013__DAMAGE_PER_LEVEL= 0.1
constant real Ability0013__RAD= 200.
constant real Ability0013__ROTSPEED= 6.
constant string Ability0013__EFFECT_PATH1= "Effects\\Whirlwind.mdl"
constant string Ability0013__EFFECT_PATH2= "Abilities\\Weapons\\Rifle\\RifleImpact.mdl"
constant string Ability0013__EFFECT_PATH3= "Effects\\WindSlash.mdl"
constant integer Ability0014__ID= '0014'
constant string Ability0014__NAME= "카드 투척"
constant string Ability0014__ICON_PATH= "BTNPickACard"
constant integer Ability0014__TIER= 2
constant integer Ability0014__COST= 2
constant integer Ability0014__STAT_INDEX1= STAT_TYPE_ACCURACY
constant integer Ability0014__STAT_INDEX2= STAT_TYPE_ATTACK
constant real Ability0014__BACKSWING= 0.25
constant real Ability0014__STARTAT= 25.
constant string Ability0014__EFFECT_PATH1= "Effects\\MagicCardRed.mdl"
constant string Ability0014__EFFECT_PATH2= "Effects\\MagicCardBlue.mdl"
constant string Ability0014__EFFECT_PATH3= "Effects\\MagicCardGold.mdl"
constant string Ability0014__EFFECT_PATH4= "Effects\\MagicCardPurple.mdl"
constant real Ability0014__DAMAGE_PER_ATTACK= 0.55
constant real Ability0014__DAMAGE_PER_LEVEL= 0.1
constant integer Ability0014__NEED_TO= 4
constant real Ability0014__VELO= 1250
constant integer Ability0015__ID= '0015'
constant string Ability0015__NAME= "암흑비전파동"
constant string Ability0015__ICON_PATH= "BTNArchonQ"
constant integer Ability0015__TIER= 2
constant integer Ability0015__COST= 2
constant integer Ability0015__STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0015__STAT_INDEX2= STAT_TYPE_MAGIC_PENET
constant real Ability0015__DELAY= 0.5
constant real Ability0015__BACKSWING= 0.25
constant real Ability0015__DAMAGE_PER_MAGICPOWER= 2.65
constant real Ability0015__DAMAGE_PER_LEVEL= 0.1
constant real Ability0015__COLRAD= 80.
constant real Ability0015__CHARGE_MAX_AT= 1.25
constant real Ability0015__CHARGE_TIMEOUT= 2.5
constant real Ability0015__RANGE_INITIAL= 450.
constant real Ability0015__RANGE_MAX= 1000.
constant string Ability0015__EFFECT_PATH1= "Abilities\\Weapons\\VengeanceMissile\\VengeanceMissile.mdl"
constant string Ability0015__EFFECT_PATH2= "Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl"
constant integer Ability0016__ID= '0016'
constant string Ability0016__NAME= "수리검 투척"
constant string Ability0016__ICON_PATH= "BTNShuriken"
constant integer Ability0016__TIER= 2
constant integer Ability0016__COST= 2
constant integer Ability0016__STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0016__STAT_INDEX2= STAT_TYPE_ACCURACY
constant real Ability0016__DELAY= 0.25
constant real Ability0016__DAMAGE_PER_ATTACK= 0.15
constant real Ability0016__DAMAGE_PER_ACCURACY= 0.05
constant real Ability0016__DAMAGE_PER_LEVEL= 0.1
constant real Ability0016__BACKSWING= 0.15
constant real Ability0016__INTERVAL= 0.15
constant integer Ability0016__COUNT= 3
constant integer Ability0016__CHARGE= 3
constant real Ability0016__RANGE= 500.
constant real Ability0016__STARTAT= 35.
constant real Ability0016__VELO= 1250.
constant string Ability0016__EFFECT_PATH1= "Effects\\Shuriken.mdl"
string Buffu010___NAME= "광란"
integer Buffu010___ID= 'u010'
integer Buffu010___INDIVISUAL= 0
string Buffu010___ICON_PATH= "BTNUnholyFrenzy"
constant integer Abilityu010___ID= 'u010'
constant string Abilityu010___NAME= "광란"
constant string Abilityu010___ICON_PATH= "BTNUnholyFrenzy"
constant integer Abilityu010___TIER= 2
constant integer Abilityu010___COST= 2
constant integer Abilityu010___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Abilityu010___STAT_INDEX2= STAT_TYPE_MAXHP
constant real Abilityu010___DURATION= 3.
string Buffu011___NAME= "부패가스"
integer Buffu011___ID= 'u011'
integer Buffu011___INDIVISUAL= 0
string Buffu011___ICON_PATH= "BTNPlagueCloud"
constant integer Abilityu011___ID= 'u011'
constant string Abilityu011___NAME= "부패가스"
constant string Abilityu011___ICON_PATH= "BTNPlagueCloud"
constant integer Abilityu011___TIER= 2
constant integer Abilityu011___COST= 2
constant integer Abilityu011___STAT_INDEX1= STAT_TYPE_HPREGEN
constant integer Abilityu011___STAT_INDEX2= STAT_TYPE_RESISTANCE
constant real Abilityu011___DURATION= 1.5
constant real Abilityu011___INTERVAL= 0.5
constant real Abilityu011___DAMAGE_PER_HPREGEN= 0.75
constant real Abilityu011___DAMAGE_PER_LEVEL= 0.1
constant integer Abilityu011___COUNT= 8
constant real Abilityu011___EXPRAD= 200.
constant string Abilityu011___EFFECT_PATH1= "Abilities\\Spells\\Undead\\PlagueCloud\\PlagueCloudCaster.mdl"
			
trigger Abilityu011___DESTROY_REQUEST= CreateTrigger()
integer Abilityu011___DESTROY_REQUEST_ABILITY= 0
constant integer Ability0020___ID= '0020'
constant string Ability0020___NAME= "기관총 난사"
constant string Ability0020___ICON_PATH= "BTNFlakCannons"
constant integer Ability0020___TIER= 3
constant integer Ability0020___COST= 3
constant integer Ability0020___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0020___STAT_INDEX2= STAT_TYPE_ACCURACY
constant real Ability0020___INTERVAL= 0.125
constant integer Ability0020___COUNT= 8
constant real Ability0020___DAMAGE_PER_ATTACK= 0.45
constant real Ability0020___DAMAGE_PER_LEVEL= 0.15
constant real Ability0020___BACKSWING= 0.15
constant real Ability0020___STARTAT= 32.5
constant real Ability0020___COLRAD= 65.
constant real Ability0020___VELO= 1875.
constant real Ability0020___RANGE= 750.
constant string Ability0020___EFFECT_PATH1= "Effects\\Bullet.mdl"
constant string Ability0020___EFFECT_PATH2= "Abilities\\Weapons\\Rifle\\RifleImpact.mdl"
string Buff0021___NAME= "감속"
integer Buff0021___ID= '0021'
integer Buff0021___INDIVISUAL= 1
string Buff0021___ICON_PATH= "BTNSlow"
constant integer Ability0021___ID= '0021'
constant string Ability0021___NAME= "감속"
constant string Ability0021___ICON_PATH= "BTNSlow"
constant integer Ability0021___TIER= 3
constant integer Ability0021___COST= 3
constant integer Ability0021___STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0021___STAT_INDEX2= STAT_TYPE_MPREGEN
constant real Ability0021___CAST= 0.25
constant real Ability0021___INTERVAL= 0.5
constant integer Ability0021___COUNT= 10
constant real Ability0021___DAMAGE_PER_MAGICPOWER= 0.10
constant real Ability0021___DAMAGE_PER_LEVEL= 0.15
constant real Ability0021___REDUCE_VAL= 0.2
constant real Ability0021___DURATION= 4.5
constant integer Ability0021___SLOW= 15
constant real Ability0021___BACKSWING= 0.15
constant real Ability0021___EXPRAD= 200.
constant real Ability0021___RANGE= 800.
constant string Ability0021___EFFECT_PATH1= "Abilities\\Spells\\Human\\slow\\slowtarget.mdl"
constant string Ability0021___EFFECT_PATH2= "Abilities\\Spells\\Human\\Slow\\SlowCaster.mdl"
constant string Ability0021___EFFECT_PATH3= "Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl"
constant integer Ability0030___ID= '0030'
constant string Ability0030___NAME= "미사일 컨테이너"
constant string Ability0030___ICON_PATH= "BTNClusterRockets"
constant integer Ability0030___TIER= 4
constant integer Ability0030___COST= 4
constant integer Ability0030___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer Ability0030___STAT_INDEX2= STAT_TYPE_SPELL_BOOST
constant real Ability0030___DELAY= 0.2
constant integer Ability0030___COUNT= 20
constant real Ability0030___INTERVAL= 0.125
constant real Ability0030___DAMAGE_PER_ATTACK= 0.85
constant real Ability0030___DAMAGE_PER_LEVEL= 0.2
constant real Ability0030___DAMAGE_SECONDARY= 0.3
constant real Ability0030___BACKSWING= 0.15
constant real Ability0030___STARTAT= 32.5
constant real Ability0030___COLRAD= 65.
constant real Ability0030___EXPRAD= 500.
constant real Ability0030___VELO= 400.
constant real Ability0030___RANGE= 1200.
constant string Ability0030___EFFECT_PATH1= "Effects\\MissilePod.mdl"
constant string Ability0030___EFFECT_PATH2= "Abilities\\Spells\\Other\\TinkerRocket\\TinkerRocketMissile.mdl"
constant string Ability0030___EFFECT_PATH3= "Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl"
constant integer Ability0040___ID= '0040'
constant string Ability0040___NAME= "화룡의 숨결"
constant string Ability0040___ICON_PATH= "BTNstorm_ui_icon_deathwing_molten_flame"
constant integer Ability0040___TIER= 5
constant integer Ability0040___COST= 5
constant integer Ability0040___STAT_INDEX1= STAT_TYPE_MAGICPOWER
constant integer Ability0040___STAT_INDEX2= STAT_TYPE_MAGIC_PENET
constant real Ability0040___CAST= 0.75
constant real Ability0040___INTERVAL= 0.2
constant integer Ability0040___COUNT= 15
constant real Ability0040___DAMAGE_PER_MAGICPOWER= 0.4
constant real Ability0040___DAMAGE_PER_LEVEL= 0.25
constant real Ability0040___IGNORE_GUARD= 0.5
constant real Ability0040___EXPRAD= 250.
constant real Ability0040___RANGE= 800.
constant real Ability0040___DRAGON_DIST= 800.
constant real Ability0040___FIRE_OFFSET= 200.
constant integer Ability0040___ALPHA= 200
constant string Ability0040___EFFECT_PATH1= "units\\creeps\\RedDragon\\RedDragon.mdl"
constant string Ability0040___EFFECT_PATH2= "Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl"
constant string Ability0040___EFFECT_PATH3= "Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
constant string Ability0040___EFFECT_PATH4= "Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl"
constant string Ability0040___EFFECT_PATH5= "Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeTarget.mdl"
constant integer AbilityC000___ID= 'C000'
constant string AbilityC000___NAME= "새내기"
constant string AbilityC000___ICON_PATH= "BTNMurgalSlave"
constant integer AbilityC000___TIER= 0
constant integer AbilityC000___COST= 0
constant integer AbilityC000___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC000___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC001___ID= 'C001'
constant string AbilityC001___NAME= "동인천 역가드"
constant string AbilityC001___ICON_PATH= "BTNSacrifice"
constant integer AbilityC001___TIER= 0
constant integer AbilityC001___COST= 0
constant integer AbilityC001___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC001___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC002___ID= 'C002'
constant string AbilityC002___NAME= "가짜광기"
constant string AbilityC002___ICON_PATH= "BTNBerserkForTrolls"
constant integer AbilityC002___TIER= 0
constant integer AbilityC002___COST= 0
constant integer AbilityC002___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC002___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC003___ID= 'C003'
constant string AbilityC003___NAME= "꿈나무"
constant string AbilityC003___ICON_PATH= "BTNAcorn"
constant integer AbilityC003___TIER= 0
constant integer AbilityC003___COST= 0
constant integer AbilityC003___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC003___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC004___ID= 'C004'
constant string AbilityC004___NAME= "아이돌"
constant string AbilityC004___ICON_PATH= "BTNSorceress"
constant integer AbilityC004___TIER= 0
constant integer AbilityC004___COST= 0
constant integer AbilityC004___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC004___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC005___ID= 'C005'
constant string AbilityC005___NAME= "정의의 사도"
constant string AbilityC005___ICON_PATH= "BTNRacoon"
constant integer AbilityC005___TIER= 0
constant integer AbilityC005___COST= 0
constant integer AbilityC005___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC005___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC006___ID= 'C006'
constant string AbilityC006___NAME= "치유계"
constant string AbilityC006___ICON_PATH= "BTNFountainOfLife"
constant integer AbilityC006___TIER= 0
constant integer AbilityC006___COST= 0
constant integer AbilityC006___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC006___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC007___ID= 'C007'
constant string AbilityC007___NAME= "패셔니스타"
constant string AbilityC007___ICON_PATH= "BTNRobeOfTheMagi"
constant integer AbilityC007___TIER= 0
constant integer AbilityC007___COST= 0
constant integer AbilityC007___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC007___STAT_INDEX2= STAT_TYPE_ATTACK
constant integer AbilityC008___ID= 'C008'
constant string AbilityC008___NAME= "밤의 일족"
constant string AbilityC008___ICON_PATH= "BTNElunesBlessing"
constant integer AbilityC008___TIER= 0
constant integer AbilityC008___COST= 0
constant integer AbilityC008___STAT_INDEX1= STAT_TYPE_ATTACK
constant integer AbilityC008___STAT_INDEX2= STAT_TYPE_ATTACK

trigger l__library_init

//JASSHelper struct globals:
constant integer si__AbilityIndicator=1
integer si__AbilityIndicator_F=0
integer si__AbilityIndicator_I=0
integer array si__AbilityIndicator_V
string s__AbilityIndicator_CIRCLE_PATH= "Effects\\CastRangeCircle.mdl"
string s__AbilityIndicator_CURSOR_PATH= "Effects\\CastRangeCircle.mdl"
effect s__AbilityIndicator_CURSOR= null
integer array s__AbilityIndicator_abil
integer array s__AbilityIndicator_circle
player array s__AbilityIndicator_owner
constant integer si__LineIndicator=2
integer array s__LineIndicator_ef
real array s__LineIndicator_yaw
real array s__LineIndicator_range
real array s__LineIndicator_width
real array s__LineIndicator_x
real array s__LineIndicator_y
constant integer si__Agent=3
constant integer s__Agent_INDEX_ORIGIN_HANDLE= 0
constant integer s__Agent_INDEX_INSTANCE_ID= 1
agent array s__Agent_origin_agent
hashtable s__Agent_HASH= InitHashtable()
constant integer si__Base64=4
integer si__Base64_F=0
integer si__Base64_I=0
integer array si__Base64_V
constant integer si__Buff=5
integer si__Buff_F=0
integer si__Buff_I=0
integer array si__Buff_V
hashtable s__Buff_HASH= InitHashtable()
integer array s__Buff_node_prev
integer array s__Buff_node_next
integer array s__Buff_caster
integer array s__Buff_target
integer array s__Buff_id
integer array s__Buff_buff_effect
integer array s__Buff_level
timer array s__Buff_main_timer
real array s__Buff_duration_true
real array s__Buff_duration_max
boolean array s__Buff_duration_display
real array s__Buff_timeout
real array s__Buff_interval
string array s__Buff_icon
string array s__Buff_name
boolean array s__Buff_icon_display
boolean array s__Buff_want_kill
constant integer si__Camera=6
integer si__Camera_F=0
integer si__Camera_I=0
integer array si__Camera_V
constant integer si__Chingho=7
constant integer si__ConstantString=8
integer si__ConstantString_F=0
integer si__ConstantString_I=0
integer array si__ConstantString_V
constant integer si__Damage=9
constant integer si__Event=10
integer si__Event_F=0
integer si__Event_I=0
integer array si__Event_V
constant integer si__Explosion=11
integer si__Explosion_F=0
integer si__Explosion_I=0
integer array si__Explosion_V
integer array s__Explosion_owner
real array s__Explosion_x
real array s__Explosion_y
real array s__Explosion_radius_explosion
integer array s__Explosion_count
real array s__Explosion_interval
timer array s__Explosion_main_timer
group array s__Explosion_group_wave
real array s__Explosion_max_distance
real array s__Explosion_min_distance
integer array s__Explosion_nearest
integer array s__Explosion_furthest
boolean array s__Explosion_activate_initial
integer array s__Explosion_damage_type
integer array s__Explosion_attack_type
boolean array s__Explosion_is_target
boolean array s__Explosion_is_aoe
integer array s__Explosion_interval_type
integer array s__Explosion_vector_type
boolean array s__Explosion_is_onhit
boolean array s__Explosion_is_ranged
weapontype array s__Explosion_weapon_type
integer array s__Explosion_damage_id
real array s__Explosion_damage_x
real array s__Explosion_damage_y
boolean array s__Explosion_use_damage_position
real array s__Explosion_damage
boolean array s__Explosion_affect_enemy
boolean array s__Explosion_affect_ally
boolean array s__Explosion_affect_invincible
boolean array s__Explosion_affect_evasion
boolean array s__Explosion_affect_self
constant integer si__LineExplosion=12
real array s__LineExplosion_x2
real array s__LineExplosion_y2
constant integer si__SectorExplosion=13
real array s__SectorExplosion_angle
real array s__SectorExplosion_width
constant integer si__Item_prototype=14
integer si__Item_prototype_F=0
integer si__Item_prototype_I=0
integer array si__Item_prototype_V
constant integer si__LocationEx=15
constant integer si__Math=16
integer si__Math_F=0
integer si__Math_I=0
integer array si__Math_V
constant integer si__MissileGroup=17
integer si__MissileGroup_F=0
integer si__MissileGroup_I=0
integer array si__MissileGroup_V
hashtable s__MissileGroup_HASH= InitHashtable()
group array s__MissileGroup_group_wave
timer array s__MissileGroup_main_timer
constant integer si__Mover=18
integer si__Mover_F=0
integer si__Mover_I=0
integer array si__Mover_V
hashtable s__Mover_HASH= InitHashtable()
integer array s__Mover_owner
real array s__Mover_velo
boolean array s__Mover_refresh_facing
timer array s__Mover_main_timer
trigger array s__Mover_main_trigger
triggercondition array s__Mover_main_cond
unit array s__Mover_dummy
constant integer si__Object=19
integer si__Object_F=0
integer si__Object_I=0
integer array si__Object_V
real array s__Object_x_true
real array s__Object_offset_x_true
real array s__Object_y_true
real array s__Object_offset_y_true
real array s__Object_z_true
real array s__Object_offset_z_true
real array s__Object_yaw_true
real array s__Object_offset_yaw_true
real array s__Object_pitch_true
real array s__Object_offset_pitch_true
real array s__Object_roll_true
real array s__Object_offset_roll_true
real array s__Object_pivot_x
real array s__Object_pivot_y
real array s__Object_pivot_z
integer array s__Object_movement
constant integer si__ProgressBar=20
integer si__ProgressBar_F=0
integer si__ProgressBar_I=0
integer array si__ProgressBar_V
constant integer s__ProgressBar_OFFSET_Y= 300
constant integer s__ProgressBar_WIDTH= 640
constant integer s__ProgressBar_HEIGHT= 32
framehandle array s__ProgressBar_backdrop
framehandle array s__ProgressBar_fill
framehandle array s__ProgressBar_text
real array s__ProgressBar_value_true
boolean array s__ProgressBar_reverse
constant integer si__Round=21
integer si__Round_F=0
integer si__Round_I=0
integer array si__Round_V
integer s__Round_ROUND= 0
timer s__Round_TIMER= null
framehandle s__Round_BACKDROP= null
framehandle s__Round_TEXT= null
framehandle s__Round_ICON= null
framehandle s__Round_ROUND_BACKDROP= null
framehandle s__Round_ROUND_TEXT= null
constant integer si__Tip=22
integer si__Tip_F=0
integer si__Tip_I=0
integer array si__Tip_V
trigger s__Tip_TRIGGER= CreateTrigger()
string array s__Tip_TIPS
integer s__Tip_TIP_MAX= 0
real s__Tip_TIP_INTERVAL= 60.
constant integer si__Tombstone=23
integer si__Tombstone_F=0
integer si__Tombstone_I=0
integer array si__Tombstone_V
boolean s__Tombstone_GAME_OVER= false
constant string s__Tombstone_EFFECT_PATH1= "Doodads\\Northrend\\Props\\NorthrendTombstone\\NorthrendTombstone2.mdl"
constant string s__Tombstone_EFFECT_PATH2= "Abilities\\Spells\\Orc\\Reincarnation\\ReincarnationTarget.mdl"
integer array s__Tombstone_THIS
constant real s__Tombstone_TICK= 0.1
constant real s__Tombstone_HEAL_PER_SEC= 0.04
integer array s__Tombstone_ef
integer array s__Tombstone_owner
timer array s__Tombstone_main_timer
framehandle array s__Tombstone_text
constant integer si__TreeOfLife=24
integer si__TreeOfLife_F=0
integer si__TreeOfLife_I=0
integer array si__TreeOfLife_V
constant integer s__TreeOfLife_WIDTH= 356
constant integer s__TreeOfLife_HEIGHT= 8
constant integer s__TreeOfLife_ICON_SIZE= 48
constant string s__TreeOfLife_EFFECT_PATH1= "buildings\\nightelf\\TreeofLife\\TreeofLife.mdl"
constant string s__TreeOfLife_EFFECT_PATH2= "Objects\\Spawnmodels\\Undead\\UndeadDissipate\\UndeadDissipate.mdl"
real s__TreeOfLife_RANGE= 400.
integer s__TreeOfLife_LEVEL= 1
integer s__TreeOfLife_UNIT= 0
constant real s__TreeOfLife_TICK= 0.5
real s__TreeOfLife_MAXHP_TRUE= 10000.
real s__TreeOfLife_HP_TRUE= 10000.
timer s__TreeOfLife_MAIN_TIMER= null
framehandle s__TreeOfLife_BUTTON= null
framehandle s__TreeOfLife_ICON= null
framehandle s__TreeOfLife_DEATH_OVERLAY= null
framehandle s__TreeOfLife_GAUGE_BACKDROP= null
framehandle s__TreeOfLife_GAUGE_FILL= null
framehandle s__TreeOfLife_HP_TEXT= null
boolean s__TreeOfLife_IN= false
trigger s__TreeOfLife_MAIN_TRIGGER= null
triggercondition s__TreeOfLife_MAIN_COND= null
constant integer si__Trigger=25
integer si__Trigger_F=0
integer si__Trigger_I=0
integer array si__Trigger_V
hashtable s__Trigger_HASH= InitHashtable()
constant integer si__ChinghoFrame=26
integer si__ChinghoFrame_F=0
integer si__ChinghoFrame_I=0
integer array si__ChinghoFrame_V
integer array s__ChinghoFrame_id
framehandle array s__ChinghoFrame_backdrop
framehandle array s__ChinghoFrame_icon1
framehandle array s__ChinghoFrame_icon2
framehandle array s__ChinghoFrame_name
constant integer si__IconFrame=27
integer si__IconFrame_F=0
integer si__IconFrame_I=0
integer array si__IconFrame_V
constant integer si__BuffIcon=28
constant integer si__AbilityIcon=29
integer array s__AbilityIcon_target
constant integer s__AbilityIcon_TOOLTIP_SUB_WIDTH= 64
constant integer s__AbilityIcon_TOOLTIP_SUB_HEIGHT= 20
constant integer s__AbilityIcon_TOOLTIP_HEADER_HEIGHT= 96
constant integer s__AbilityIcon_TOOLTIP_ICON_SIZE= 48
constant integer s__AbilityIcon_TOOLTIP_STAT_BONUS_HEIGHT= 40
integer array s__AbilityIcon_index
boolean array s__AbilityIcon_mouse_in
framehandle array s__AbilityIcon_icon_container
framehandle array s__AbilityIcon_icon_backdrop
framehandle array s__AbilityIcon_nem_backdrop
framehandle array s__AbilityIcon_cooldown_backdrop
framehandle array s__AbilityIcon_cooldown_text
framehandle array s__AbilityIcon_cooldown_text_backdrop
framehandle array s__AbilityIcon_hotkey_backdrop
framehandle array s__AbilityIcon_hotkey_text
framehandle array s__AbilityIcon_gauge_backdrop
framehandle array s__AbilityIcon_gauge_fill
framehandle array s__AbilityIcon_extra_backdrop
framehandle array s__AbilityIcon_extra_text
framehandle array s__AbilityIcon_weapon_particle
framehandle array s__AbilityIcon_tooltip_mouseover
framehandle array s__AbilityIcon_tooltip_container
framehandle array s__AbilityIcon_tooltip_outline
framehandle array s__AbilityIcon_tooltip_backdrop
framehandle array s__AbilityIcon_tooltip_text
framehandle array s__AbilityIcon_tooltip_stat_bonus_icon1
framehandle array s__AbilityIcon_tooltip_stat_bonus_icon2
framehandle array s__AbilityIcon_tooltip_stat_bonus_text1
framehandle array s__AbilityIcon_tooltip_stat_bonus_text2
framehandle array s__AbilityIcon_tooltip_header
framehandle array s__AbilityIcon_tooltip_icon
framehandle array s__AbilityIcon_tooltip_name
framehandle array s__AbilityIcon_tooltip_tag
framehandle array s__AbilityIcon_tooltip_casttype
framehandle array s__AbilityIcon_tooltip_manacost_backdrop
framehandle array s__AbilityIcon_tooltip_manacost_text
framehandle array s__AbilityIcon_tooltip_cooldown_backdrop
framehandle array s__AbilityIcon_tooltip_cooldown_text
framehandle array s__AbilityIcon_unique
trigger array s__AbilityIcon_btn_trigger
triggercondition array s__AbilityIcon_btn_cond
constant integer si__StatIcon=30
constant integer s__StatIcon_HEIGHT= 24
constant integer s__StatIcon_WIDTH= 108
constant integer s__StatIcon_PER_COL= 4
integer array s__StatIcon_stat_index
integer array s__StatIcon_format
integer array s__StatIcon_target
framehandle array s__StatIcon_backdrop
framehandle array s__StatIcon_text
framehandle array s__StatIcon_mouseover
framehandle array s__StatIcon_tooltip_container
framehandle array s__StatIcon_tooltip_backdrop
framehandle array s__StatIcon_tooltip_text
constant integer si__Closeable=31
integer si__Closeable_F=0
integer si__Closeable_I=0
integer array si__Closeable_V
constant integer si__UI=32
integer si__UI_F=0
integer si__UI_I=0
integer array si__UI_V
hashtable s__UI_HASH= InitHashtable()
integer s__UI_INDEX_ABILITY_ICON= 0
integer s__UI_INDEX_STAT_ICON= 0
integer s__UI_INDEX_BUFF_ICON= 0
integer s__UI_INDEX_SKILL_SHOP_WIDGET= 0
integer s__UI_INDEX_SLOT_CHANGER_WIDGET= 0
integer s__UI_INDEX_SLOT_CHANGER_BUTTON= 0
integer s__UI_INDEX_SLOT_CHANGER_ICON= 0
integer s__UI_INDEX_SLOT_CHANGER_INDEX= 0
integer s__UI_INDEX_SLOT_CHANGER_HOTKEY= 0
integer array s__UI_target
timer array s__UI_main_timer
framehandle array s__UI_container
framehandle array s__UI_hp_fill
framehandle array s__UI_hp_text
framehandle array s__UI_hp_icon
framehandle array s__UI_mp_fill
framehandle array s__UI_mp_text
framehandle array s__UI_mp_icon
framehandle array s__UI_level_backdrop
framehandle array s__UI_level_text
framehandle array s__UI_exp_fill
framehandle array s__UI_exp_text
framehandle array s__UI_name
framehandle array s__UI_ability_error
integer array s__UI_THIS
integer array s__UI_chingho
real array s__UI_ability_error_lifespan
constant integer si__UndeadU000=33
constant integer s__UndeadU000_ID= 'U000'
constant integer si__UndeadU001=34
constant integer s__UndeadU001_ID= 'U001'
constant integer si__UndeadU002=35
constant integer s__UndeadU002_ID= 'U002'
constant integer si__UndeadU003=36
constant integer s__UndeadU003_ID= 'U003'
constant integer si__UndeadU004=37
constant integer s__UndeadU004_ID= 'U004'
constant integer si__UnitActor=38
integer array s__UnitActor_target
integer array s__UnitActor_link_ability
integer array s__UnitActor_level
trigger array s__UnitActor_suspend_trigger
triggercondition array s__UnitActor_suspend_condition
boolean array s__UnitActor_suspend_stun
boolean array s__UnitActor_suspend_ensnare
boolean array s__UnitActor_suspend_silence
boolean array s__UnitActor_suspend_dead
boolean array s__UnitActor_suspend_rclick
boolean array s__UnitActor_suspend_stop
boolean array s__UnitActor_channeling
constant integer si__Backswing=39
constant real s__Backswing_BACKSWING_DEFAULT= 0.25
constant integer si__MeleeAttack=40
constant real s__MeleeAttack_DAMAGE_POINT_DEFAULT= 0.25
constant integer si__UnitMovement=41
boolean array s__UnitMovement_suspend_ensnare
boolean array s__UnitMovement_suspend_stun
boolean array s__UnitMovement_suspend_silence
boolean array s__UnitMovement_suspend_dead
real array s__UnitMovement_radius_explosion
real array s__UnitMovement_radius_wave
real array s__UnitMovement_radius_target
group array s__UnitMovement_group_wave
group array s__UnitMovement_group_collision
boolean array s__UnitMovement_flag_collision
boolean array s__UnitMovement_flag_wave
integer array s__UnitMovement_level
integer array s__UnitMovement_damage_type
integer array s__UnitMovement_attack_type
boolean array s__UnitMovement_is_target
boolean array s__UnitMovement_is_aoe
integer array s__UnitMovement_interval_type
integer array s__UnitMovement_vector_type
boolean array s__UnitMovement_is_onhit
boolean array s__UnitMovement_is_ranged
weapontype array s__UnitMovement_weapon_type
integer array s__UnitMovement_damage_id
real array s__UnitMovement_damage_x
real array s__UnitMovement_damage_y
boolean array s__UnitMovement_use_damage_position
real array s__UnitMovement_damage
boolean array s__UnitMovement_affect_enemy
boolean array s__UnitMovement_affect_ally
boolean array s__UnitMovement_affect_invincible
boolean array s__UnitMovement_affect_evasion
boolean array s__UnitMovement_affect_self
constant integer si__knockback=42
constant integer si__Unit_prototype=43
trigger s__Unit_prototype_TRIGGER_DAMAGE= CreateTrigger()
trigger s__Unit_prototype_TRIGGER_ORDER_IMMEDIATE= CreateTrigger()
trigger s__Unit_prototype_TRIGGER_ORDER_POINT= CreateTrigger()
trigger s__Unit_prototype_TRIGGER_ORDER_TARGET= CreateTrigger()
timer array s__Unit_prototype_main_timer
timer array s__Unit_prototype_decay_timer
integer array s__Unit_prototype_facing_circle
string array s__Unit_prototype_class
string array s__Unit_prototype_origin_name
player array s__Unit_prototype_origin_player
integer array s__Unit_prototype_level_true
integer array s__Unit_prototype_exp
integer array s__Unit_prototype_exp_max
boolean array s__Unit_prototype_is_revive
real array s__Unit_prototype_z_velo
real array s__Unit_prototype_gravity
integer array s__Unit_prototype_collision_true
integer array s__Unit_prototype_avul
integer array s__Unit_prototype_weapon_ability
unit array s__Unit_prototype_mover_unit
constant integer si__Ability_prototype=44
integer si__Ability_prototype_F=0
integer si__Ability_prototype_I=0
integer array si__Ability_prototype_V
timer array s__Ability_prototype_cooldown_timer
timer array s__Ability_prototype_command_timer
timer array s__Ability_prototype_decay_timer
timer array s__Ability_prototype_indicator_timer
integer array s__Ability_prototype_owner
integer array s__Ability_prototype_indicator
integer array s__Ability_prototype_link_actor
boolean array s__Ability_prototype_is_active
boolean array s__Ability_prototype_is_target
boolean array s__Ability_prototype_is_freetarget
boolean array s__Ability_prototype_is_immediate
boolean array s__Ability_prototype_useable_stun
boolean array s__Ability_prototype_useable_cast
boolean array s__Ability_prototype_useable_ensnare
boolean array s__Ability_prototype_useable_silence
boolean array s__Ability_prototype_useable_grabbed
boolean array s__Ability_prototype_useable_dead
boolean array s__Ability_prototype_target_useable_invincible
boolean array s__Ability_prototype_target_useable_enemy
boolean array s__Ability_prototype_target_useable_ally
boolean array s__Ability_prototype_target_useable_self
boolean array s__Ability_prototype_target_useable_grabbed
boolean array s__Ability_prototype_target_useable_dead
boolean array s__Ability_prototype_reserve_order
boolean array s__Ability_prototype_preserve_order
boolean array s__Ability_prototype_is_following
boolean array s__Ability_prototype_is_reserving
boolean array s__Ability_prototype_drag_to_use
boolean array s__Ability_prototype_pressing
boolean array s__Ability_prototype_cancle_rightclick
boolean array s__Ability_prototype_check_cast
integer array s__Ability_prototype_smart
integer array s__Ability_prototype_id
string array s__Ability_prototype_name
string array s__Ability_prototype_icon
integer array s__Ability_prototype_level
integer array s__Ability_prototype_manacost
real array s__Ability_prototype_cooldown_remaining
real array s__Ability_prototype_cooldown_max
real array s__Ability_prototype_cooldown_min
integer array s__Ability_prototype_count
integer array s__Ability_prototype_count_max
integer array s__Ability_prototype_value
real array s__Ability_prototype_gauge
real array s__Ability_prototype_weapon_range
real array s__Ability_prototype_weapon_delay
trigger array s__Ability_prototype_command_trigger
triggercondition array s__Ability_prototype_command_condition
real array s__Ability_prototype_command_x
real array s__Ability_prototype_command_y
unit array s__Ability_prototype_command_target
real array s__Ability_prototype_command_x2
real array s__Ability_prototype_command_y2
real array s__Ability_prototype_command_x_temp
real array s__Ability_prototype_command_y_temp
boolean array s__Ability_prototype_is_ai
real array s__Ability_prototype_ai_mouse_x
real array s__Ability_prototype_ai_mouse_y
unit array s__Ability_prototype_ai_target
real array s__Ability_prototype_cast_range
real array s__Ability_prototype_cast_delay
boolean array s__Ability_prototype_dead
constant integer si__Actor=45
integer si__Actor_F=0
integer si__Actor_I=0
integer array si__Actor_V
integer array s__Actor_actor
integer array s__Actor_progress_bar
integer array s__Actor_stage
real array s__Actor_timeout
real array s__Actor_duration
real array s__Actor_duration_max
timer array s__Actor_main_timer
boolean array s__Actor_want_destroy
real array s__Actor_x_true
real array s__Actor_y_true
real array s__Actor_x2
real array s__Actor_y2
constant integer si__CloseUI=46
integer si__CloseUI_F=0
integer si__CloseUI_I=0
integer array si__CloseUI_V
trigger array s__CloseUI_esc_trigger
triggercondition array s__CloseUI_esc_cond
player array s__CloseUI_owner
constant integer si__Curve=47
real array s__Curve_value
real array s__Curve_overtime
integer array s__Curve_index_max
constant integer si__Bezier=48
constant integer si__Bezier2=49
constant integer si__Bezier3=50
constant integer si__EffectDecay=51
integer si__EffectDecay_F=0
integer si__EffectDecay_I=0
integer array si__EffectDecay_V
effect array s__EffectDecay_origin_effect
timer array s__EffectDecay_t
constant integer si__Effect=52
timer array s__Effect_decay_timer
real array s__Effect_scale_true
integer array s__Effect_r_true
integer array s__Effect_g_true
integer array s__Effect_b_true
integer array s__Effect_a_true
boolean array s__Effect_want_remove
boolean array s__Effect_permanant
boolean array s__Effect_refresh_position
boolean array s__Effect_refresh_orientation
constant integer si__Group=53
integer si__Group_F=0
integer si__Group_I=0
integer array si__Group_V
hashtable s__Group_HASH= InitHashtable()
constant integer si__Lightning=54
timer array s__Lightning_t
real array s__Lightning_duration
real array s__Lightning_fade
lightning array s__Lightning_l
string array s__Lightning_type
integer array s__Lightning_t1
integer array s__Lightning_t2
real array s__Lightning_x1
real array s__Lightning_y1
real array s__Lightning_z1
real array s__Lightning_x2
real array s__Lightning_y2
real array s__Lightning_z2
real array s__Lightning_ox1
real array s__Lightning_oy1
real array s__Lightning_oz1
real array s__Lightning_ox2
real array s__Lightning_oy2
real array s__Lightning_oz2
real array s__Lightning_r
real array s__Lightning_g
real array s__Lightning_b
real array s__Lightning_alpha
constant integer si__Line__Line=55
integer si__Line__Line_F=0
integer si__Line__Line_I=0
integer array si__Line__Line_V
real array s__Line__Line_x
real array s__Line__Line_y
real array s__Line__Line_z
real array s__Line__Line_angle
real array s__Line__Line_length
real array s__Line__Line_width
real array s__Line__Line_r
real array s__Line__Line_g
real array s__Line__Line_b
real array s__Line__Line_a
real array s__Line__Line_alpha_max
boolean array s__Line__Line_permanent
boolean array s__Line__Line_refresh_color
boolean array s__Line__Line_refresh_position
player array s__Line__Line_visible_player
timer array s__Line__Line_t
timer array s__Line__Line_pointtimer
real array s__Line__Line_angleaxis
real array s__Line__Line_lengthaxis
real array s__Line__Line_widthaxis
real array s__Line__Line_velo
real array s__Line__Line_dir
real array s__Line__Line_alphaaxis
real array s__Line__Line_temp_overtime
constant integer si__Square=56
constant integer si__DoubleLine=57
constant integer si__Arrow=58
constant integer si__SkillShopWidget=59
integer array s__SkillShopWidget_id
trigger array s__SkillShopWidget_btn_trigger
triggercondition array s__SkillShopWidget_btn_cond
framehandle array s__SkillShopWidget_container
framehandle array s__SkillShopWidget_icon
framehandle array s__SkillShopWidget_name
framehandle array s__SkillShopWidget_tag
framehandle array s__SkillShopWidget_btn
framehandle array s__SkillShopWidget_bonus_stat1
framehandle array s__SkillShopWidget_bonus_stat2
constant integer si__SkillShop=60
constant real s__SkillShop_EXP_GAUGE_WIDTH= 256 - 4 - 32 - 32
integer array s__SkillShop_level
integer array s__SkillShop_exp
integer array s__SkillShop_exp_max
trigger array s__SkillShop_keypress
triggercondition array s__SkillShop_keypress_cond
player array s__SkillShop_owner
framehandle array s__SkillShop_container
framehandle array s__SkillShop_btn_refresh
framehandle array s__SkillShop_btn_autorefresh
framehandle array s__SkillShop_btn_donate
framehandle array s__SkillShop_exp_outline
framehandle array s__SkillShop_exp_backdrop
framehandle array s__SkillShop_exp_fill
framehandle array s__SkillShop_exp_text
framehandle array s__SkillShop_level_backdrop
framehandle array s__SkillShop_level_text
framehandle array s__SkillShop_autorefresh_text_backdrop
framehandle array s__SkillShop_autorefresh_text
framehandle array s__SkillShop_gold_backdrop
framehandle array s__SkillShop_gold_icon
framehandle array s__SkillShop_gold_text
framehandle array s__SkillShop_chance_backdrop
framehandle array s__SkillShop_chance_text
boolean array s__SkillShop_autorefresh
integer array s__SkillShop_autorefresh_time
integer array s__SkillShop_autorefresh_time_max
integer array s__SkillShop_THIS
boolean array s__SkillShop_visible_flag
constant integer si__SlotChanger=61
integer si__SlotChanger_F=0
integer si__SlotChanger_I=0
integer array si__SlotChanger_V
integer array s__SlotChanger_THIS
boolean array s__SlotChanger_visible_flag
player array s__SlotChanger_owner
trigger array s__SlotChanger_keypress
triggercondition array s__SlotChanger_keypress_cond
framehandle array s__SlotChanger_container
framehandle array s__SlotChanger_confirm_button
integer array s__SlotChanger_state
integer array s__SlotChanger_first_index
constant integer si__Sound3D=62
integer si__Sound3D_F=0
integer si__Sound3D_I=0
integer array si__Sound3D_V
constant integer si__InstantText=63
integer si__InstantText_F=0
integer si__InstantText_I=0
integer array si__InstantText_V
real s__InstantText_SIZE= 16.
integer s__InstantText_R= 255
integer s__InstantText_G= 255
integer s__InstantText_B= 255
constant integer si__Timer=64
integer si__Timer_F=0
integer si__Timer_I=0
integer array si__Timer_V
constant integer si__UnitData=65
hashtable s__UnitData_HASH= InitHashtable()
integer s__UnitData_INDEX_EXTERNAL= 0
integer s__UnitData_ID= 0
constant integer si__User=66
string array s__User_ORIGIN_NAME
string array s__User_BATTLE_TAG
string array s__User_CURRENT_NAME
trigger array s__User_KEYPRESS
integer array s__User_FOCUSUNIT
string array s__User_TEAMCOLOR_TO_STRING
string array s__User_OSKEY_INDEX_TO_STRING
hashtable s__User_HASH= InitHashtable()
constant integer si__Ability=67
integer array s__Ability_TABLE_INDEX
constant integer s__Ability_TABLE_INDEX_LIMIT= 1024
constant integer s__Ability_INDEX_TAG= 0
constant integer s__Ability_INDEX_ICON_PATH= 8
constant integer s__Ability_INDEX_NAME= 9
constant integer s__Ability_INDEX_TIER= 10
constant integer s__Ability_INDEX_COST= 11
constant integer s__Ability_INDEX_BONUS_STAT= 12
constant integer s__Ability_INDEX_TOOLTIP= 14
constant integer s__Ability_INDEX_LAST= 15
real array s__Ability_stat_bonus1
real array s__Ability_stat_bonus2
boolean array s__Ability_signiture
constant integer si__ChinghoWidget=68
integer si__ChinghoWidget_F=0
integer si__ChinghoWidget_I=0
integer array si__ChinghoWidget_V
integer array s__ChinghoWidget_id
framehandle array s__ChinghoWidget_btn
trigger array s__ChinghoWidget_main_trigger
triggercondition array s__ChinghoWidget_main_cond
constant integer si__CharacterWidget=69
integer si__CharacterWidget_F=0
integer si__CharacterWidget_I=0
integer array si__CharacterWidget_V
integer array s__CharacterWidget_id
framehandle array s__CharacterWidget_btn
trigger array s__CharacterWidget_main_trigger
triggercondition array s__CharacterWidget_main_cond
constant integer si__CharacterInfoPanel=70
integer si__CharacterInfoPanel_F=0
integer si__CharacterInfoPanel_I=0
integer array si__CharacterInfoPanel_V
framehandle array s__CharacterInfoPanel_container
framehandle array s__CharacterInfoPanel_character
framehandle array s__CharacterInfoPanel_a1
framehandle array s__CharacterInfoPanel_a2
framehandle array s__CharacterInfoPanel_a_title
framehandle array s__CharacterInfoPanel_name
framehandle array s__CharacterInfoPanel_tool_backdrop
framehandle array s__CharacterInfoPanel_tool_text
integer array s__CharacterInfoPanel_cf
constant integer si__CharacterSelect=71
integer array s__CharacterSelect_WIDGET
integer array s__CharacterSelect_CHINGHO_WIDGET
integer array s__CharacterSelect_PANEL
constant integer si__Circle=72
string s__Circle_PATH_TEMP= "Effects\\RCircle.mdl"
timer array s__Circle_main_timer
real array s__Circle_timeout
real array s__Circle_fadepoint
real array s__Circle_fade
real array s__Circle_alpha
real array s__Circle_alpha_max
real array s__Circle_overtime
constant integer si__TargetCircle=73
player array s__TargetCircle_owner
constant integer si__Guardian=74
real array s__Guardian_origin_x
real array s__Guardian_origin_y
real array s__Guardian_origin_yaw
boolean array s__Guardian_moving
boolean array s__Guardian_attacking
integer array s__Guardian_position
real array s__Guardian_acquire_range
integer array s__Guardian_target
timer array s__Guardian_ai_timer
constant integer si__GuardianFrame=75
integer si__GuardianFrame_F=0
integer si__GuardianFrame_I=0
integer array si__GuardianFrame_V
integer array s__GuardianFrame_THIS
constant integer s__GuardianFrame_WIDTH= 128
constant integer s__GuardianFrame_HEIGHT= 48
constant real s__GuardianFrame_OFFSET_X= 4
integer array s__GuardianFrame_target
integer array s__GuardianFrame_index
framehandle array s__GuardianFrame_container
framehandle array s__GuardianFrame_icon
framehandle array s__GuardianFrame_gauge_backdrop
framehandle array s__GuardianFrame_gauge_fill
framehandle array s__GuardianFrame_position
framehandle array s__GuardianFrame_death
boolean array s__GuardianFrame_in
trigger array s__GuardianFrame_main_trigger
triggercondition array s__GuardianFrame_main_cond
constant integer si__Guardians=76
integer si__Guardians_F=0
integer si__Guardians_I=0
integer array si__Guardians_V
integer array s__Guardians_GUARDIAN
timer s__Guardians_FRAME_REFRESH_TIMER= null
constant integer si__Missile=77
timer array s__Missile_main_timer
integer array s__Missile_owner
integer array s__Missile_target_true
boolean array s__Missile_want_kill
boolean array s__Missile_want_destroy
boolean array s__Missile_flag_collision
boolean array s__Missile_flag_wave
boolean array s__Missile_flag_explosion
group array s__Missile_group_wave
group array s__Missile_group_collision
integer array s__Missile_group_link
real array s__Missile_radius_wave_true
real array s__Missile_radius_explosion_true
real array s__Missile_radius_target
real array s__Missile_wave_timeout
real array s__Missile_wave_interval
integer array s__Missile_damage_type
integer array s__Missile_attack_type
boolean array s__Missile_is_target
boolean array s__Missile_is_aoe
integer array s__Missile_interval_type
integer array s__Missile_vector_type
boolean array s__Missile_is_onhit
boolean array s__Missile_is_ranged
weapontype array s__Missile_weapon_type
integer array s__Missile_damage_id
real array s__Missile_damage_x
real array s__Missile_damage_y
boolean array s__Missile_use_damage_position
real array s__Missile_damage
boolean array s__Missile_affect_enemy
boolean array s__Missile_affect_ally
boolean array s__Missile_affect_invincible
boolean array s__Missile_affect_evasion
boolean array s__Missile_affect_self
constant integer si__Movement=78
integer array s__Movement_target_true
boolean array s__Movement_use_collision
real array s__Movement_velo
real array s__Movement_friction
real array s__Movement_yaw
real array s__Movement_z_velo
real array s__Movement_gravity
real array s__Movement_next_x
real array s__Movement_next_y
real array s__Movement_next_z
real array s__Movement_target_x
real array s__Movement_target_y
real array s__Movement_target_z
integer array s__Movement_curve_true
boolean array s__Movement_flag_target
boolean array s__Movement_flag_target_attatch
boolean array s__Movement_flag_curve
boolean array s__Movement_flag_target_location
boolean array s__Movement_refresh_facing
constant integer si__Unit=79
triggercondition s__Unit_LEVEL_COND= null
integer array s__Unit_chingho
constant integer si__Game=80
integer si__Game_F=0
integer si__Game_I=0
integer array si__Game_V
constant integer si__Undead=81
constant real s__Undead_AI_TICK= 1.
timer array s__Undead_ai_timer
trigger array s__Undead_main_trigger
triggercondition array s__Undead_main_cond
integer array s__Undead_target
boolean array s__Undead_target_is_different
integer array s__Undead_position
boolean array s__Undead_running
real array s__Undead_acquire_range
constant integer si__Wave___spawner=82
integer si__Wave___spawner_F=0
integer si__Wave___spawner_I=0
integer array si__Wave___spawner_V
timer array s__Wave___spawner_main_timer
integer array s__Wave___spawner_index
integer array s__Wave___spawner_level
integer array s__Wave___spawner_position
integer array s__Wave___spawner_count
constant integer si__Wave=83
integer s__Wave_INDEX= 0
integer s__Wave_LAST_INDEX= 0
integer s__Wave_MAX_INDEX= 0
constant integer si__Mouse=84
constant integer si__BuffStun_main=85
integer array s__BuffStun_main_ef
constant integer si__BuffEnsn_main=86
constant integer si__Ability0000_mv=87
constant integer si__Ability0000_actor=88
real array s__Ability0000_actor_angle
constant integer si__Ability0000__ind=89
constant integer si__Ability0000_main=90
constant integer si__Ability0001_explosion=91
constant integer si__Ability0001_a2=92
integer array s__Ability0001_a2_effect_1
integer array s__Ability0001_a2_effect_2
integer array s__Ability0001_a2_sq
real array s__Ability0001_a2_angle
constant integer si__Ability0001_actor=93
constant integer si__Ability0001__ind=94
constant integer si__Ability0001_main=95
constant integer si__Ability0002_actor=96
boolean array s__Ability0002_actor_play
real array s__Ability0002_actor_mana
constant integer si__Ability0002_main=97
constant integer si__Ability0003__ball=98
integer array s__Ability0003__ball_l
constant integer si__Ability0003_actor=99
real array s__Ability0003_actor_angle
constant integer si__Ability0003__ind=100
constant integer si__Ability0003_main=101
constant integer si__Ability0004__chain=102
integer array s__Ability0004__chain_target_previous
integer array s__Ability0004__chain_count
real array s__Ability0004__chain_radius_explosion
group array s__Ability0004__chain_group_wave
group array s__Ability0004__chain_already
integer array s__Ability0004__chain_damage_type
integer array s__Ability0004__chain_attack_type
boolean array s__Ability0004__chain_is_target
boolean array s__Ability0004__chain_is_aoe
integer array s__Ability0004__chain_interval_type
integer array s__Ability0004__chain_vector_type
boolean array s__Ability0004__chain_is_onhit
boolean array s__Ability0004__chain_is_ranged
weapontype array s__Ability0004__chain_weapon_type
integer array s__Ability0004__chain_damage_id
real array s__Ability0004__chain_damage_x
real array s__Ability0004__chain_damage_y
boolean array s__Ability0004__chain_use_damage_position
real array s__Ability0004__chain_damage
boolean array s__Ability0004__chain_affect_enemy
boolean array s__Ability0004__chain_affect_ally
boolean array s__Ability0004__chain_affect_invincible
boolean array s__Ability0004__chain_affect_evasion
boolean array s__Ability0004__chain_affect_self
constant integer si__Ability0004_actor=103
constant integer si__Ability0004_main=104
constant integer si__Ability0005_actor=105
constant integer si__Ability0005_main=106
constant integer si__Ability0006_main=107
constant integer si__Ability0007__exp=108
boolean array s__Ability0007__exp_b
constant integer si__Ability0007__ind=109
constant integer si__Ability0007_main=110
constant integer si__Abilityu000_actor=111
integer array s__Abilityu000_actor_ability_target
constant integer si__Abilityu000_main=112
constant integer si__Buffu001_main=113
constant real s__Buffu001_main_SLOW= 5.
constant string s__Buffu001_main_EFFECT_PATH1= "Abilities\\Weapons\\CryptFiendMissile\\CryptFiendMissile.mdl"
real array s__Buffu001_main_val
constant integer si__Abilityu001__mss=114
constant integer si__Abilityu001_actor=115
constant integer si__Abilityu001_main=116
constant integer si__Ability0010_potion=117
integer array s__Ability0010_potion_potion_index
integer array s__Ability0010_potion_level
real array s__Ability0010_potion_tx
real array s__Ability0010_potion_ty
constant integer si__Ability0010_make=118
integer array s__Ability0010_make_ef
real array s__Ability0010_make_mp
integer array s__Ability0010_make_potion_index
constant integer si__Ability0010_actor=119
integer array s__Ability0010_actor_potion_index
constant integer si__Ability0010__ind=120
integer array s__Ability0010__ind_c
constant integer si__Ability0010_main=121
constant integer s__Ability0010_main_POTION_TYPE_MAX= 4
integer s__Ability0010_main_INDEX_BTN_CREATE= 0
integer s__Ability0010_main_INDEX_BTN_SET= 0
integer s__Ability0010_main_INDEX_POTION_COUNT= 0
integer s__Ability0010_main_INDEX_COUNT_TEXT= 0
integer s__Ability0010_main_INDEX_TOOLTIP_BACKDROP= 0
integer s__Ability0010_main_INDEX_TOOLTIP_TEXT= 0
integer s__Ability0010_main_INDEX_TOOLTIP_CONTAINER= 0
string array s__Ability0010_main_POTION_ICON_PATH
string array s__Ability0010_main_POTION_NAME
integer array s__Ability0010_main_potion_index
boolean array s__Ability0010_main_visible_flag
framehandle array s__Ability0010_main_container
trigger array s__Ability0010_main_keypress
triggercondition array s__Ability0010_main_keypress_cond
hashtable s__Ability0010_main_HASH= InitHashtable()
constant integer si__Ability0013__exp=122
integer array s__Ability0013__exp_level
constant integer si__Ability0013_actor=123
integer array s__Ability0013_actor_mover
integer array s__Ability0013_actor_ex
integer array s__Ability0013_actor_c
integer array s__Ability0013_actor_ef
real array s__Ability0013_actor_anim_progress
constant integer si__Ability0013_main=124
constant integer si__additional=125
constant integer si__Ability0014_actor=126
constant integer si__Ability0014_main=127
constant integer si__Ability0015__exp=128
integer array s__Ability0015__exp_level
constant integer si__Ability0015_actor=129
real array s__Ability0015_actor_range
real array s__Ability0015_actor_angle
integer array s__Ability0015_actor_sq
constant integer si__Ability0015__ind=130
constant integer si__Ability0015_charge=131
integer array s__Ability0015_charge_ef
integer array s__Ability0015_charge_mv
constant integer si__Ability0015_main=132
real array s__Ability0015_main_range_temp
constant integer si__Ability0016_actor=133
integer array s__Ability0016_actor_mv
integer array s__Ability0016_actor_count
constant integer si__Ability0016_main=134
constant integer si__Buffu010_main=135
constant real s__Buffu010_main_ATTACK_SPEED_BONUS= 3.
constant real s__Buffu010_main_DAMAGE_PER_LEVEL= 0.15
constant real s__Buffu010_main_HP_COST= 0.05
constant real s__Buffu010_main_HP_THRESHOLD= 0.1
constant string s__Buffu010_main_EFFECT_PATH1= "Abilities\\Spells\\Undead\\UnholyFrenzy\\UnholyFrenzyTarget.mdl"
trigger array s__Buffu010_main_main_trigger
triggercondition array s__Buffu010_main_main_cond
constant integer si__Abilityu010_main=136
constant integer si__Buffu011_main=137
constant real s__Buffu011_main_REDUCE= 0.75
constant string s__Buffu011_main_EFFECT_PATH1= "Units\\Undead\\PlagueCloud\\PlagueCloudtarget.mdl"
constant integer si__Abilityu011___exx=138
integer array s__Abilityu011___exx_a
integer array s__Abilityu011___exx_level
integer array s__Abilityu011___exx_ef
constant integer si__Abilityu011_main=139
integer array s__Abilityu011_main_ex
trigger array s__Abilityu011_main_main_trigger
triggercondition array s__Abilityu011_main_main_cond
constant integer si__Ability0020___bullet=140
constant integer si__Ability0020_actor=141
integer array s__Ability0020_actor_count
real array s__Ability0020_actor_angle
real array s__Ability0020_actor_shoot
integer array s__Ability0020_actor_mover
constant integer si__Ability0020___ind=142
constant integer si__Ability0020_main=143
constant integer si__Buff0021_main=144
constant real s__Buff0021_main_DAMAGE_PER_MAGICPOWER= 0.10
constant real s__Buff0021_main_DAMAGE_PER_LEVEL= 0.15
constant real s__Buff0021_main_REDUCE_VAL= 0.2
constant integer s__Buff0021_main_SLOW= 15
constant string s__Buff0021_main_EFFECT_PATH1= "Abilities\\Spells\\Human\\slow\\slowtarget.mdl"
integer array s__Buff0021_main_val1
real array s__Buff0021_main_val2
constant integer si__Ability0021_explosion=145
integer array s__Ability0021_explosion_c
integer array s__Ability0021_explosion_ef
integer array s__Ability0021_explosion_level
constant integer si__Ability0021_actor=146
constant integer si__Ability0021___ind=147
integer array s__Ability0021___ind_c
constant integer si__Ability0021_main=148
constant integer si__Ability0030___mss=149
constant integer si__Ability0030___ball=150
integer array s__Ability0030___ball_count_true
integer array s__Ability0030___ball_level
integer array s__Ability0030___ball_c
integer array s__Ability0030___ball_mg
constant integer si__Ability0030_actor=151
real array s__Ability0030_actor_angle
constant integer si__Ability0030___ind=152
constant integer si__Ability0030_main=153
constant integer si__Ability0040___mystruct=154
integer si__Ability0040___mystruct_F=0
integer si__Ability0040___mystruct_I=0
integer array si__Ability0040___mystruct_V
real s__Ability0040___mystruct_DURATION= 1.
real array s__Ability0040___mystruct_timeout
timer array s__Ability0040___mystruct_t
integer array s__Ability0040___mystruct_ef
boolean array s__Ability0040___mystruct_b
constant integer si__Ability0040_explosion=155
integer array s__Ability0040_explosion_c
integer array s__Ability0040_explosion_ef
integer array s__Ability0040_explosion_ef2
integer array s__Ability0040_explosion_level
constant integer si__Ability0040_actor=156
integer array s__Ability0040_actor_ef
boolean array s__Ability0040_actor_b
constant integer si__Ability0040___ind=157
integer array s__Ability0040___ind_c
constant integer si__Ability0040_main=158
constant integer si__AbilityC000_main=159
constant integer si__AbilityC001_main=160
constant integer si__AbilityC002_main=161
constant integer si__AbilityC003_main=162
constant integer si__AbilityC004_main=163
constant integer si__AbilityC005_main=164
constant integer si__AbilityC006_main=165
constant integer si__AbilityC007_main=166
constant integer si__AbilityC008_main=167
integer array s__TimerUtils__Data
integer array s__2TimerUtils__Data
integer array s__3TimerUtils__Data
integer array s__4TimerUtils__Data
integer array s__5TimerUtils__Data
timer array s__TimerUtils__Timer
timer array s__2TimerUtils__Timer
timer array s__3TimerUtils__Timer
timer array s__4TimerUtils__Timer
timer array s__5TimerUtils__Timer
group array s__TimerUtils__Group
group array s__2TimerUtils__Group
group array s__3TimerUtils__Group
group array s__4TimerUtils__Group
group array s__5TimerUtils__Group
framehandle array s__FRAME_ABILITY_ICON
boolean array s__STAT_TYPE_CLAMP
string array s__STAT_TYPE_NAME
real array s__STAT_NORMAL_VALUE
integer array s__s__SlotChanger_ABILITY_TEMP
trigger array s__s__Mouse_MOVE
real array s__s__Mouse_X
real array s__s__Mouse_Y
trigger array st__AbilityIndicator_setColor
trigger array st__AbilityIndicator_refresh
trigger array st__AbilityIndicator_show
trigger array st__LineIndicator_beforeRefresh
trigger array st__Buff_addValue
trigger array st__Buff_init
trigger array st__Buff_update
trigger array st__Buff_intervalAction
trigger array st__Buff_periodicAction
trigger array st__Explosion_rangeFilter
trigger array st__Explosion_beforeExplosion
trigger array st__Explosion_afterExplosion
trigger array st__Explosion_explosionFilterAdditional
trigger array st__Explosion_executeExplosion
trigger array st__Object__get_x
trigger array st__Object__get_y
trigger array st__Object__get_z
trigger array st__Object__get_yaw
trigger array st__Object__get_pitch
trigger array st__Object__get_roll
trigger array st__Object__set_x
trigger array st__Object__set_y
trigger array st__Object__set_z
trigger array st__Object__set_yaw
trigger array st__Object__set_pitch
trigger array st__Object__set_roll
trigger array st__Object__get_offset_x
trigger array st__Object__get_offset_y
trigger array st__Object__get_offset_z
trigger array st__Object__get_offset_yaw
trigger array st__Object__get_offset_pitch
trigger array st__Object__get_offset_roll
trigger array st__Object__set_offset_x
trigger array st__Object__set_offset_y
trigger array st__Object__set_offset_z
trigger array st__Object__set_offset_yaw
trigger array st__Object__set_offset_pitch
trigger array st__Object__set_offset_roll
trigger array st__Object_setOrientation
trigger array st__Object_move
trigger array st__Closeable_close
trigger array st__UnitActor_rightClick
trigger array st__UnitActor_onSuspend
trigger array st__UnitActor_onComplete
trigger array st__UnitActor_periodicAction
trigger array st__UnitActor_suspendFilterAdditional
trigger array st__MeleeAttack_onSuspend
trigger array st__MeleeAttack_onComplete
trigger array st__UnitMovement_explosionFilterAdditional
trigger array st__UnitMovement_executeExplosion
trigger array st__UnitMovement_rangeFilter
trigger array st__UnitMovement_waveFilterAdditional
trigger array st__UnitMovement_waveRangeFilter
trigger array st__UnitMovement_executeWave
trigger array st__UnitMovement_collisionFilterAdditional
trigger array st__UnitMovement_targetFilterAdditional
trigger array st__UnitMovement_executeTarget
trigger array st__UnitMovement_suspendFilter
trigger array st__UnitMovement_onSuspend
trigger array st__UnitMovement_onComplete
trigger array st__UnitMovement_onCollision
trigger array st__Ability_prototype_addValue
trigger array st__Ability_prototype_addLevel
trigger array st__Ability_prototype_addCount
trigger array st__Ability_prototype_useCount
trigger array st__Ability_prototype_getMaxCooldown
trigger array st__Ability_prototype_iconClick
trigger array st__Ability_prototype_relativeTooltip
trigger array st__Ability_prototype_onUnlink
trigger array st__Ability_prototype_basicAttack
trigger array st__Ability_prototype_execute
trigger array st__Ability_prototype_targetFilterAdditional
trigger array st__Ability_prototype_useFilterAdditional
trigger array st__Ability_prototype_init
trigger array st__Ability_prototype_update
trigger array st__Ability_prototype_onRelease
trigger array st__Ability_prototype_beforeRelease
trigger array st__Ability_prototype_onKeyboard
trigger array st__Ability_prototype_onPress
trigger array st__Ability_prototype_beforePress
trigger array st__Ability_prototype_getAttackSpeedValue
trigger array st__Ability_prototype_leftClick
trigger array st__Ability_prototype_onRightClick
trigger array st__Ability_prototype_onStop
trigger array st__Ability_prototype_stopButton
trigger array st__Ability_prototype_onDeath
trigger array st__Actor__get_x
trigger array st__Actor__set_x
trigger array st__Actor__get_y
trigger array st__Actor__set_y
trigger array st__Actor_onSuspend
trigger array st__Actor_onComplete
trigger array st__Actor_periodicAction
trigger array st__Actor_suspendFilter
trigger array st__Actor_killFilter
trigger array st__Curve_getCarculatedX
trigger array st__Curve_getCarculatedY
trigger array st__Curve_getCarculatedZ
trigger array st__Line__Line_setColor
trigger array st__Line__Line_setLocalColor
trigger array st__Line__Line_refreshPosition
trigger array st__Line__Line_periodicAction
trigger array st__Ability_iconClick
trigger array st__Ability_deactivate
trigger array st__Missile_explosionFilterAdditional
trigger array st__Missile_executeExplosion
trigger array st__Missile_rangeFilter
trigger array st__Missile_waveFilterAdditional
trigger array st__Missile_waveRangeFilter
trigger array st__Missile_executeWave
trigger array st__Missile_collisionFilterAdditional
trigger array st__Missile_targetFilterAdditional
trigger array st__Missile_executeTarget
trigger array st__Missile_killFilter
trigger array st__Missile_onBound
trigger array st__Missile_beforeExplosion
trigger array st__Missile_afterExplosion
trigger array st__Missile_beforeWave
trigger array st__Missile_afterWave
trigger array st__Missile_periodicAction
trigger array st__Movement__get_target
trigger array st__Movement_onSuspend
trigger array st__Movement_onComplete
trigger array st__Movement_onCollision
trigger array st__Movement_moveAction
trigger array st__Movement_suspendFilter
trigger array st__Movement_periodicAction
trigger array st__Undead_isGuardianAlive
trigger array st__Undead_getNearestHero
trigger array st__Undead_getNearestGuardian
trigger array st__Undead_onSetTarget
trigger array st__Undead_onFreeTarget
trigger array st__Undead_refreshTarget
trigger array st__Undead_periodicAction
trigger array st__Undead_onDamaged
trigger array st__Undead_init
integer array si__AbilityIndicator_type
trigger array st__AbilityIndicator_onDestroy
integer array si__Buff_type
trigger array st__Buff_onDestroy
integer array si__Explosion_type
trigger array st__Explosion_onDestroy
integer array si__Object_type
trigger array st__Object_onDestroy
integer array si__IconFrame_type
trigger array st__IconFrame_onDestroy
integer array si__Closeable_type
trigger array st__Closeable_onDestroy
integer array si__Ability_prototype_type
trigger array st__Ability_prototype_onDestroy
integer array si__Actor_type
trigger array st__Actor_onDestroy
integer array si__Line__Line_type
trigger array st__Line__Line_onDestroy
trigger st__AbilityIndicator_create
trigger st__LineIndicator_create
trigger st__Agent_create
trigger st__Buff_create
trigger st__Buff_destroy
trigger st__Explosion_create
trigger st__Explosion_destroy
trigger st__LineExplosion_create
trigger st__Math_distancePoints
trigger st__MissileGroup_onDestroy
trigger st__MissileGroup_destroy
trigger st__Mover_onDestroy
trigger st__Mover_destroy
trigger st__ProgressBar_onDestroy
trigger st__Tombstone_onDestroy
trigger st__TreeOfLife_addLevel
trigger st__TreeOfLife_end
trigger st__Trigger_getData
trigger st__Trigger_new
trigger st__Trigger_remove
trigger st__ChinghoFrame_onDestroy
trigger st__UI_onDestroy
trigger st__UnitActor_create
trigger st__UnitActor_destroy
trigger st__MeleeAttack_create
trigger st__UnitMovement_damageTarget
trigger st__UnitMovement_create
trigger st__Unit_prototype__get_origin_unit
trigger st__Unit_prototype__get_level
trigger st__Unit_prototype__set_level
trigger st__Unit_prototype_getCarculatedStatValue
trigger st__Unit_prototype_refreshLevelStatValue
trigger st__Unit_prototype__get_owner
trigger st__Unit_prototype__get_name
trigger st__Unit_prototype__get_hp
trigger st__Unit_prototype__set_hp
trigger st__Unit_prototype__get_hpregen
trigger st__Unit_prototype_restoreHP
trigger st__Unit_prototype__get_maxhp
trigger st__Unit_prototype__set_maxhp
trigger st__Unit_prototype__get_mp
trigger st__Unit_prototype__get_mpregen
trigger st__Unit_prototype__get_maxmp
trigger st__Unit_prototype__set_maxmp
trigger st__Unit_prototype__get_attack
trigger st__Unit_prototype__get_attack_speed
trigger st__Unit_prototype__get_attack_range
trigger st__Unit_prototype__set_attack_range
trigger st__Unit_prototype__get_movement_speed
trigger st__Unit_prototype__set_movement_speed
trigger st__Unit_prototype__get_accuracy
trigger st__Unit_prototype__get_evasion
trigger st__Unit_prototype__set_collision
trigger st__Unit_prototype_damageTarget
trigger st__Unit_prototype_getAbility
trigger st__Unit_prototype_getStatus
trigger st__Unit_prototype_plusStatus
trigger st__Unit_prototype_minusStatus
trigger st__Unit_prototype_resetAnim
trigger st__Unit_prototype_setAnim
trigger st__Unit_prototype_queueAnim
trigger st__Unit_prototype_setAnimSpeed
trigger st__Unit_prototype_isMoveable
trigger st__Unit_prototype_inRange
trigger st__Unit_prototype_inLine
trigger st__Unit_prototype_inSector
trigger st__Unit_prototype_isEnemy
trigger st__Unit_prototype_isAlly
trigger st__Unit_prototype_isUnitType
trigger st__Unit_prototype_issueTargetOrder
trigger st__Unit_prototype_get
trigger st__Unit_prototype_create
trigger st__Unit_prototype_destroy
trigger st__Ability_prototype_getCarculatedManacost
trigger st__Ability_prototype_getCarculatedMaxCooldown
trigger st__Ability_prototype_cancleFollow
trigger st__Ability_prototype_cancleReservation
trigger st__Ability_prototype_useRequest
trigger st__Ability_prototype_pressRequest
trigger st__Ability_prototype_setPressState
trigger st__Ability_prototype_essentialInit
trigger st__Ability_prototype_create
trigger st__Ability_prototype_kill
trigger st__Ability_prototype_new
trigger st__Ability_prototype_sendSyncTarget
trigger st__Ability_prototype_destroy
trigger st__Actor_create
trigger st__Actor_destroy
trigger st__CloseUI_onDestroy
trigger st__Curve_create
trigger st__Bezier_create
trigger st__Effect__get_origin_effect
trigger st__Effect_setScale
trigger st__Effect_setAlpha
trigger st__Effect_setColor
trigger st__Effect_setPosition
trigger st__Effect_setDuration
trigger st__Effect_kill
trigger st__Effect_setAnim
trigger st__Effect_setLocalAlpha
trigger st__Effect_setLocalColor
trigger st__Effect_create
trigger st__Effect_destroy
trigger st__Group_new
trigger st__Group_release
trigger st__Group_clear
trigger st__Group_getNearest
trigger st__Lightning_destroy
trigger st__Line__Line_create
trigger st__Line__Line_destroy
trigger st__SkillShop_addLevel
trigger st__SkillShop_getTierChance
trigger st__SlotChanger_stateDefault
trigger st__SlotChanger_close
trigger st__SlotChanger_onDestroy
trigger st__InstantText_setColor
trigger st__InstantText_createForBothPlayer
trigger st__Timer_getData
trigger st__Timer_getDataEx
trigger st__Timer_pause
trigger st__Timer_start
trigger st__Timer_release
trigger st__Timer_new
trigger st__User_oskeyIndex2String
trigger st__User_getGold
trigger st__User_addGold
trigger st__User_getFocusUnit
trigger st__Ability_getTypeTier
trigger st__Ability_getRandomAbility
trigger st__Ability_getTypeTooltip
trigger st__Ability_getTypeCost
trigger st__Ability_getTypeName
trigger st__Ability_getTypeIconPath
trigger st__Ability_getTypeBonusStatIndex
trigger st__Ability_getTypeTag
trigger st__ChinghoWidget_onDestroy
trigger st__CharacterWidget_onDestroy
trigger st__CharacterInfoPanel_onDestroy
trigger st__CharacterSelect_finish
trigger st__Circle_destroy
trigger st__TargetCircle_create
trigger st__GuardianFrame_onDestroy
trigger st__Guardians_addLevel
trigger st__Missile_damageTarget
trigger st__Missile_create
trigger st__Movement__get_z
trigger st__Movement__set_target
trigger st__Movement__get_curve
trigger st__Movement__set_curve
trigger st__Movement_setTargetLocation
trigger st__Movement_create
trigger st__Movement_destroy
trigger st__Unit_create
trigger st__Game_defeat
trigger st__Game_addLevel
trigger st__Game_endSelect
trigger st__Undead_getTarget
trigger st__Undead_encount
trigger st__Undead_create
trigger st__Wave___spawner_onDestroy
trigger st__Wave___spawner_destroy
trigger st__Wave_spawn
trigger st__Mouse_triggerRegisterGenericRightClick
trigger st__Mouse_getX
trigger st__Mouse_getY
trigger st__Mouse_activateRefresher
trigger st__Ability0004__chain_rangeFilter
trigger st__Ability0004__chain_explosionFilterAdditional
trigger st__Ability0004__chain_executeExplosion
trigger st__Ability0040___mystruct_onDestroy
trigger st__Ability0040___mystruct_destroy
integer f__arg_integer1
integer f__arg_integer2
integer f__arg_integer3
boolean f__arg_boolean1
player f__arg_player1
player f__arg_player2
agent f__arg_agent1
real f__arg_real1
real f__arg_real2
real f__arg_real3
real f__arg_real4
real f__arg_real5
real f__arg_real6
string f__arg_string1
trigger f__arg_trigger1
weapontype f__arg_weapontype1
unittype f__arg_unittype1
widget f__arg_widget1
unit f__arg_unit1
animtype f__arg_animtype1
group f__arg_group1
timer f__arg_timer1
code f__arg_code1
integer f__arg_this
integer f__result_integer
boolean f__result_boolean
real f__result_real
trigger f__result_trigger
unit f__result_unit
player f__result_player
string f__result_string
effect f__result_effect
group f__result_group
timer f__result_timer

endglobals


function sg__TimerUtils__Data_get takes integer i returns integer
    if(i<8191) then
        return s__TimerUtils__Data[i]
    elseif(i<24573) then
        if(i<16382) then
            return s__2TimerUtils__Data[i-8191]
        else
            return s__3TimerUtils__Data[i-16382]
        endif
    elseif(i<32764) then
        return s__4TimerUtils__Data[i-24573]
    else
        return s__5TimerUtils__Data[i-32764]
    endif
endfunction

function sg__TimerUtils__Data_set takes integer i,integer v returns nothing
    if(i<8191) then
        set s__TimerUtils__Data[i]=v
    elseif(i<24573) then
        if(i<16382) then
            set s__2TimerUtils__Data[i-8191]=v
        else
            set s__3TimerUtils__Data[i-16382]=v
        endif
    elseif(i<32764) then
        set s__4TimerUtils__Data[i-24573]=v
    else
        set s__5TimerUtils__Data[i-32764]=v
    endif
endfunction

function sg__TimerUtils__Timer_get takes integer i returns timer
    if(i<8191) then
        return s__TimerUtils__Timer[i]
    elseif(i<24573) then
        if(i<16382) then
            return s__2TimerUtils__Timer[i-8191]
        else
            return s__3TimerUtils__Timer[i-16382]
        endif
    elseif(i<32764) then
        return s__4TimerUtils__Timer[i-24573]
    else
        return s__5TimerUtils__Timer[i-32764]
    endif
endfunction

function sg__TimerUtils__Timer_set takes integer i,timer v returns nothing
    if(i<8191) then
        set s__TimerUtils__Timer[i]=v
    elseif(i<24573) then
        if(i<16382) then
            set s__2TimerUtils__Timer[i-8191]=v
        else
            set s__3TimerUtils__Timer[i-16382]=v
        endif
    elseif(i<32764) then
        set s__4TimerUtils__Timer[i-24573]=v
    else
        set s__5TimerUtils__Timer[i-32764]=v
    endif
endfunction

function sg__TimerUtils__Group_get takes integer i returns group
    if(i<8191) then
        return s__TimerUtils__Group[i]
    elseif(i<24573) then
        if(i<16382) then
            return s__2TimerUtils__Group[i-8191]
        else
            return s__3TimerUtils__Group[i-16382]
        endif
    elseif(i<32764) then
        return s__4TimerUtils__Group[i-24573]
    else
        return s__5TimerUtils__Group[i-32764]
    endif
endfunction

function sg__TimerUtils__Group_set takes integer i,group v returns nothing
    if(i<8191) then
        set s__TimerUtils__Group[i]=v
    elseif(i<24573) then
        if(i<16382) then
            set s__2TimerUtils__Group[i-8191]=v
        else
            set s__3TimerUtils__Group[i-16382]=v
        endif
    elseif(i<32764) then
        set s__4TimerUtils__Group[i-24573]=v
    else
        set s__5TimerUtils__Group[i-32764]=v
    endif
endfunction

//Generated method caller for AbilityIndicator.setColor
function sc__AbilityIndicator_setColor takes integer this,integer r,integer g,integer b returns nothing
    set f__arg_this=this
    set f__arg_integer1=r
    set f__arg_integer2=g
    set f__arg_integer3=b
    call TriggerEvaluate(st__AbilityIndicator_setColor[si__AbilityIndicator_type[this]])
endfunction

//Generated method caller for AbilityIndicator.refresh
function sc__AbilityIndicator_refresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_refresh[si__AbilityIndicator_type[this]])
endfunction

//Generated method caller for AbilityIndicator.show
function sc__AbilityIndicator_show takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__AbilityIndicator_show[si__AbilityIndicator_type[this]])
endfunction

//Generated method caller for AbilityIndicator.create
function sc__AbilityIndicator_create takes integer abil,player owner returns integer
    set f__arg_integer1=abil
    set f__arg_player1=owner
    call TriggerEvaluate(st__AbilityIndicator_create)
 return f__result_integer
endfunction

//Generated method caller for AbilityIndicator.onDestroy
function sc__AbilityIndicator_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[1])
endfunction

//Generated allocator of AbilityIndicator
function s__AbilityIndicator__allocate takes nothing returns integer
 local integer this=si__AbilityIndicator_F
    if (this!=0) then
        set si__AbilityIndicator_F=si__AbilityIndicator_V[this]
    else
        set si__AbilityIndicator_I=si__AbilityIndicator_I+1
        set this=si__AbilityIndicator_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__AbilityIndicator_abil[this]= 0
   set s__AbilityIndicator_circle[this]= 0
   set s__AbilityIndicator_owner[this]= null
    set si__AbilityIndicator_type[this]=1
    set si__AbilityIndicator_V[this]=-1
 return this
endfunction

//Generated destructor of AbilityIndicator
function sc__AbilityIndicator_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AbilityIndicator_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[si__AbilityIndicator_type[this]])
    set si__AbilityIndicator_V[this]=si__AbilityIndicator_F
    set si__AbilityIndicator_F=this
endfunction

//Generated method caller for LineIndicator.beforeRefresh
function sc__LineIndicator_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[si__AbilityIndicator_type[this]])
endfunction

//Generated method caller for LineIndicator.refresh
function sc__LineIndicator_refresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_refresh[2])
endfunction

//Generated method caller for LineIndicator.show
function sc__LineIndicator_show takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__AbilityIndicator_show[2])
endfunction

//Generated method caller for LineIndicator.create
function sc__LineIndicator_create takes integer abil,player owner returns integer
    set f__arg_integer1=abil
    set f__arg_player1=owner
    call TriggerEvaluate(st__LineIndicator_create)
 return f__result_integer
endfunction

//Generated method caller for LineIndicator.onDestroy
function sc__LineIndicator_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[2])
endfunction

//Generated allocator of LineIndicator
function s__LineIndicator__allocate takes integer abil ,player owner returns integer
 local integer this=sc__AbilityIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=2
    set kthis=this

   set s__LineIndicator_ef[this]= 0
   set s__LineIndicator_yaw[this]= 0.
   set s__LineIndicator_range[this]= 0.
   set s__LineIndicator_width[this]= 0.
   set s__LineIndicator_x[this]= 0.
   set s__LineIndicator_y[this]= 0.
 return this
endfunction


//Generated allocator of Base64
function s__Base64__allocate takes nothing returns integer
 local integer this=si__Base64_F
    if (this!=0) then
        set si__Base64_F=si__Base64_V[this]
    else
        set si__Base64_I=si__Base64_I+1
        set this=si__Base64_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Base64_V[this]=-1
 return this
endfunction

//Generated destructor of Base64
function s__Base64_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Base64_V[this]!=-1) then
        return
    endif
    set si__Base64_V[this]=si__Base64_F
    set si__Base64_F=this
endfunction

//Generated method caller for Buff.addValue
function sc__Buff_addValue takes integer this,integer level returns nothing
    set f__arg_this=this
    set f__arg_integer1=level
    call TriggerEvaluate(st__Buff_addValue[si__Buff_type[this]])
endfunction

//Generated method caller for Buff.init
function sc__Buff_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[si__Buff_type[this]])
endfunction

//Generated method caller for Buff.update
function sc__Buff_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[si__Buff_type[this]])
endfunction

//Generated method caller for Buff.intervalAction
function sc__Buff_intervalAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_intervalAction[si__Buff_type[this]])
endfunction

//Generated method caller for Buff.periodicAction
function sc__Buff_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_periodicAction[si__Buff_type[this]])
endfunction

//Generated method caller for Buff.create
function sc__Buff_create takes integer id,integer caster,integer target,real duration,string name returns integer
    set f__arg_integer1=id
    set f__arg_integer2=caster
    set f__arg_integer3=target
    set f__arg_real1=duration
    set f__arg_string1=name
    call TriggerEvaluate(st__Buff_create)
 return f__result_integer
endfunction

//Generated method caller for Buff.onDestroy
function sc__Buff_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[5])
endfunction

//Generated allocator of Buff
function s__Buff__allocate takes nothing returns integer
 local integer this=si__Buff_F
    if (this!=0) then
        set si__Buff_F=si__Buff_V[this]
    else
        set si__Buff_I=si__Buff_I+1
        set this=si__Buff_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Buff_node_prev[this]= - 1
   set s__Buff_node_next[this]= - 1
   set s__Buff_caster[this]= 0
   set s__Buff_target[this]= 0
   set s__Buff_id[this]= 0
   set s__Buff_buff_effect[this]= 0
   set s__Buff_level[this]= 0
   set s__Buff_main_timer[this]= null
   set s__Buff_duration_true[this]= 0.
   set s__Buff_duration_max[this]= 0.
   set s__Buff_duration_display[this]= true
   set s__Buff_timeout[this]= 0.
   set s__Buff_interval[this]= 0.
   set s__Buff_icon[this]= ""
   set s__Buff_name[this]= ""
   set s__Buff_icon_display[this]= true
   set s__Buff_want_kill[this]= false
    set si__Buff_type[this]=5
    set si__Buff_V[this]=-1
 return this
endfunction

//Generated destructor of Buff
function sc__Buff_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Buff_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[si__Buff_type[this]])
    set si__Buff_V[this]=si__Buff_F
    set si__Buff_F=this
endfunction

//Generated allocator of Camera
function s__Camera__allocate takes nothing returns integer
 local integer this=si__Camera_F
    if (this!=0) then
        set si__Camera_F=si__Camera_V[this]
    else
        set si__Camera_I=si__Camera_I+1
        set this=si__Camera_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Camera_V[this]=-1
 return this
endfunction

//Generated destructor of Camera
function s__Camera_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Camera_V[this]!=-1) then
        return
    endif
    set si__Camera_V[this]=si__Camera_F
    set si__Camera_F=this
endfunction

//Generated allocator of ConstantString
function s__ConstantString__allocate takes nothing returns integer
 local integer this=si__ConstantString_F
    if (this!=0) then
        set si__ConstantString_F=si__ConstantString_V[this]
    else
        set si__ConstantString_I=si__ConstantString_I+1
        set this=si__ConstantString_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ConstantString_V[this]=-1
 return this
endfunction

//Generated destructor of ConstantString
function s__ConstantString_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ConstantString_V[this]!=-1) then
        return
    endif
    set si__ConstantString_V[this]=si__ConstantString_F
    set si__ConstantString_F=this
endfunction

//Generated allocator of Event
function s__Event__allocate takes nothing returns integer
 local integer this=si__Event_F
    if (this!=0) then
        set si__Event_F=si__Event_V[this]
    else
        set si__Event_I=si__Event_I+1
        set this=si__Event_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Event_V[this]=-1
 return this
endfunction

//Generated destructor of Event
function s__Event_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Event_V[this]!=-1) then
        return
    endif
    set si__Event_V[this]=si__Event_F
    set si__Event_F=this
endfunction

//Generated method caller for Explosion.rangeFilter
function sc__Explosion_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_rangeFilter[si__Explosion_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Explosion.beforeExplosion
function sc__Explosion_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_beforeExplosion[si__Explosion_type[this]])
endfunction

//Generated method caller for Explosion.afterExplosion
function sc__Explosion_afterExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_afterExplosion[si__Explosion_type[this]])
endfunction

//Generated method caller for Explosion.explosionFilterAdditional
function sc__Explosion_explosionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_explosionFilterAdditional[si__Explosion_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Explosion.executeExplosion
function sc__Explosion_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[si__Explosion_type[this]])
endfunction

//Generated method caller for Explosion.create
function sc__Explosion_create takes integer owner,real x,real y,real radius returns integer
    set f__arg_integer1=owner
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=radius
    call TriggerEvaluate(st__Explosion_create)
 return f__result_integer
endfunction

//Generated method caller for Explosion.onDestroy
function sc__Explosion_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_onDestroy[11])
endfunction

//Generated allocator of Explosion
function s__Explosion__allocate takes nothing returns integer
 local integer this=si__Explosion_F
    if (this!=0) then
        set si__Explosion_F=si__Explosion_V[this]
    else
        set si__Explosion_I=si__Explosion_I+1
        set this=si__Explosion_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Explosion_owner[this]= 0
   set s__Explosion_x[this]= 0.
   set s__Explosion_y[this]= 0.
   set s__Explosion_radius_explosion[this]= 0.
   set s__Explosion_count[this]= 1
   set s__Explosion_interval[this]= 0.
   set s__Explosion_main_timer[this]= null
   set s__Explosion_group_wave[this]= null
   set s__Explosion_max_distance[this]= - 1.
   set s__Explosion_min_distance[this]= - 1.
   set s__Explosion_nearest[this]= 0
   set s__Explosion_furthest[this]= 0
   set s__Explosion_activate_initial[this]= true
   set s__Explosion_damage_type[this]= DAMAGE_TYPE_PHYSICAL
   set s__Explosion_attack_type[this]= ATTACK_TYPE_BASIC
   set s__Explosion_is_target[this]= false
   set s__Explosion_is_aoe[this]= false
   set s__Explosion_interval_type[this]= INTERVAL_TYPE_SINGLE
   set s__Explosion_vector_type[this]= VECTOR_TYPE_OUTTER
   set s__Explosion_is_onhit[this]= true
   set s__Explosion_is_ranged[this]= true
   set s__Explosion_weapon_type[this]= WEAPON_TYPE_WHOKNOWS
   set s__Explosion_damage_id[this]= 0
   set s__Explosion_damage_x[this]= 0.
   set s__Explosion_damage_y[this]= 0.
   set s__Explosion_use_damage_position[this]= false
   set s__Explosion_damage[this]= 0.
   set s__Explosion_affect_enemy[this]= true
   set s__Explosion_affect_ally[this]= false
   set s__Explosion_affect_invincible[this]= false
   set s__Explosion_affect_evasion[this]= false
   set s__Explosion_affect_self[this]= false
    set si__Explosion_type[this]=11
    set si__Explosion_V[this]=-1
 return this
endfunction

//Generated destructor of Explosion
function sc__Explosion_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Explosion_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_onDestroy[si__Explosion_type[this]])
    set si__Explosion_V[this]=si__Explosion_F
    set si__Explosion_F=this
endfunction

//Generated method caller for LineExplosion.rangeFilter
function sc__LineExplosion_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_rangeFilter[12])
 return f__result_boolean
endfunction

//Generated method caller for LineExplosion.create
function sc__LineExplosion_create takes integer owner,real x,real y,real x2,real y2,real radius returns integer
    set f__arg_integer1=owner
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=x2
    set f__arg_real4=y2
    set f__arg_real5=radius
    call TriggerEvaluate(st__LineExplosion_create)
 return f__result_integer
endfunction

//Generated allocator of LineExplosion
function s__LineExplosion__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=12
    set kthis=this

   set s__LineExplosion_x2[this]= 0.
   set s__LineExplosion_y2[this]= 0.
 return this
endfunction


//Generated method caller for SectorExplosion.rangeFilter
function sc__SectorExplosion_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_rangeFilter[13])
 return f__result_boolean
endfunction

//Generated allocator of SectorExplosion
function s__SectorExplosion__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=13
    set kthis=this

   set s__SectorExplosion_angle[this]= 0.
   set s__SectorExplosion_width[this]= 0.
 return this
endfunction


//Generated method caller for Ability0040___ind.refresh
function sc__Ability0040___ind_refresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_refresh[157])
endfunction

//Generated method caller for Ability0040___ind.show
function sc__Ability0040___ind_show takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__AbilityIndicator_show[157])
endfunction

//Generated method caller for Ability0040___ind.onDestroy
function sc__Ability0040___ind_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[157])
endfunction

//Generated allocator of Ability0040___ind
function s__Ability0040___ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__AbilityIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=157
    set kthis=this

   set s__Ability0040___ind_c[this]= 0
 return this
endfunction


//Generated allocator of Item_prototype
function s__Item_prototype__allocate takes nothing returns integer
 local integer this=si__Item_prototype_F
    if (this!=0) then
        set si__Item_prototype_F=si__Item_prototype_V[this]
    else
        set si__Item_prototype_I=si__Item_prototype_I+1
        set this=si__Item_prototype_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Item_prototype_V[this]=-1
 return this
endfunction

//Generated destructor of Item_prototype
function s__Item_prototype_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Item_prototype_V[this]!=-1) then
        return
    endif
    set si__Item_prototype_V[this]=si__Item_prototype_F
    set si__Item_prototype_F=this
endfunction

//Generated method caller for Ability0040_explosion.beforeExplosion
function sc__Ability0040_explosion_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_beforeExplosion[155])
endfunction

//Generated method caller for Ability0040_explosion.executeExplosion
function sc__Ability0040_explosion_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[155])
endfunction

//Generated method caller for Ability0040_explosion.onDestroy
function sc__Ability0040_explosion_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_onDestroy[155])
endfunction

//Generated allocator of Ability0040_explosion
function s__Ability0040_explosion__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=155
    set kthis=this

   set s__Ability0040_explosion_c[this]= 0
   set s__Ability0040_explosion_ef[this]= 0
   set s__Ability0040_explosion_ef2[this]= 0
   set s__Ability0040_explosion_level[this]= 0
 return this
endfunction


//Generated method caller for Ability0040___mystruct.onDestroy
function sc__Ability0040___mystruct_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability0040___mystruct_onDestroy)
endfunction

//Generated allocator of Ability0040___mystruct
function s__Ability0040___mystruct__allocate takes nothing returns integer
 local integer this=si__Ability0040___mystruct_F
    if (this!=0) then
        set si__Ability0040___mystruct_F=si__Ability0040___mystruct_V[this]
    else
        set si__Ability0040___mystruct_I=si__Ability0040___mystruct_I+1
        set this=si__Ability0040___mystruct_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Ability0040___mystruct_timeout[this]= 0.
   set s__Ability0040___mystruct_t[this]= null
   set s__Ability0040___mystruct_ef[this]= 0
   set s__Ability0040___mystruct_b[this]= false
    set si__Ability0040___mystruct_V[this]=-1
 return this
endfunction

//Generated destructor of Ability0040___mystruct
function sc__Ability0040___mystruct_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ability0040___mystruct_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Ability0040___mystruct_onDestroy)
    set si__Ability0040___mystruct_V[this]=si__Ability0040___mystruct_F
    set si__Ability0040___mystruct_F=this
endfunction

//Generated method caller for Ability0030___ind.beforeRefresh
function sc__Ability0030___ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[152])
endfunction

//Generated allocator of Ability0030___ind
function s__Ability0030___ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=152
    set kthis=this

 return this
endfunction


//Generated method caller for Math.distancePoints
function sc__Math_distancePoints takes real x1,real y1,real x2,real y2 returns real
   local real dx= x2 - x1
   local real dy= y2 - y1
			return SquareRoot(dx * dx + dy * dy)
endfunction

//Generated allocator of Math
function s__Math__allocate takes nothing returns integer
 local integer this=si__Math_F
    if (this!=0) then
        set si__Math_F=si__Math_V[this]
    else
        set si__Math_I=si__Math_I+1
        set this=si__Math_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Math_V[this]=-1
 return this
endfunction

//Generated destructor of Math
function s__Math_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Math_V[this]!=-1) then
        return
    endif
    set si__Math_V[this]=si__Math_F
    set si__Math_F=this
endfunction

//Generated method caller for MissileGroup.onDestroy
function sc__MissileGroup_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__MissileGroup_onDestroy)
endfunction

//Generated allocator of MissileGroup
function s__MissileGroup__allocate takes nothing returns integer
 local integer this=si__MissileGroup_F
    if (this!=0) then
        set si__MissileGroup_F=si__MissileGroup_V[this]
    else
        set si__MissileGroup_I=si__MissileGroup_I+1
        set this=si__MissileGroup_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__MissileGroup_group_wave[this]= null
   set s__MissileGroup_main_timer[this]= null
    set si__MissileGroup_V[this]=-1
 return this
endfunction

//Generated destructor of MissileGroup
function sc__MissileGroup_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__MissileGroup_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__MissileGroup_onDestroy)
    set si__MissileGroup_V[this]=si__MissileGroup_F
    set si__MissileGroup_F=this
endfunction

//Generated method caller for Mover.onDestroy
function sc__Mover_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Mover_onDestroy)
endfunction

//Generated allocator of Mover
function s__Mover__allocate takes nothing returns integer
 local integer this=si__Mover_F
    if (this!=0) then
        set si__Mover_F=si__Mover_V[this]
    else
        set si__Mover_I=si__Mover_I+1
        set this=si__Mover_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Mover_owner[this]= 0
   set s__Mover_velo[this]= 1.
   set s__Mover_refresh_facing[this]= true
   set s__Mover_main_timer[this]= null
   set s__Mover_main_trigger[this]= null
   set s__Mover_main_cond[this]= null
   set s__Mover_dummy[this]= null
    set si__Mover_V[this]=-1
 return this
endfunction

//Generated destructor of Mover
function sc__Mover_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Mover_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Mover_onDestroy)
    set si__Mover_V[this]=si__Mover_F
    set si__Mover_F=this
endfunction

//Generated method caller for Object._get_x
function sc__Object__get_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_x[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_y
function sc__Object__get_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_y[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_z
function sc__Object__get_z takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_z[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_yaw
function sc__Object__get_yaw takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_yaw[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_pitch
function sc__Object__get_pitch takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_pitch[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_roll
function sc__Object__get_roll takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_roll[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._set_x
function sc__Object__set_x takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_x[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_y
function sc__Object__set_y takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_y[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_z
function sc__Object__set_z takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_z[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_yaw
function sc__Object__set_yaw takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_yaw[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_pitch
function sc__Object__set_pitch takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_pitch[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_roll
function sc__Object__set_roll takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_roll[si__Object_type[this]])
endfunction

//Generated method caller for Object._get_offset_x
function sc__Object__get_offset_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_x[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_offset_y
function sc__Object__get_offset_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_y[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_offset_z
function sc__Object__get_offset_z takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_z[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_offset_yaw
function sc__Object__get_offset_yaw takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_yaw[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_offset_pitch
function sc__Object__get_offset_pitch takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_pitch[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._get_offset_roll
function sc__Object__get_offset_roll takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_offset_roll[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Object._set_offset_x
function sc__Object__set_offset_x takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_x[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_offset_y
function sc__Object__set_offset_y takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_y[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_offset_z
function sc__Object__set_offset_z takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_z[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_offset_yaw
function sc__Object__set_offset_yaw takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_yaw[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_offset_pitch
function sc__Object__set_offset_pitch takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_pitch[si__Object_type[this]])
endfunction

//Generated method caller for Object._set_offset_roll
function sc__Object__set_offset_roll takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_roll[si__Object_type[this]])
endfunction

//Generated method caller for Object.setOrientation
function sc__Object_setOrientation takes integer this,real yaw,real pitch,real roll returns nothing
    set f__arg_this=this
    set f__arg_real1=yaw
    set f__arg_real2=pitch
    set f__arg_real3=roll
    call TriggerEvaluate(st__Object_setOrientation[si__Object_type[this]])
endfunction

//Generated method caller for Object.move
function sc__Object_move takes integer this,real x,real y,real z returns nothing
    set f__arg_this=this
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=z
    call TriggerEvaluate(st__Object_move[si__Object_type[this]])
endfunction

//Generated method caller for Object.onDestroy
function sc__Object_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[19])
endfunction

//Generated allocator of Object
function s__Object__allocate takes nothing returns integer
 local integer this=si__Object_F
    if (this!=0) then
        set si__Object_F=si__Object_V[this]
    else
        set si__Object_I=si__Object_I+1
        set this=si__Object_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Object_x_true[this]= 0.
   set s__Object_offset_x_true[this]= 0.
   set s__Object_y_true[this]= 0.
   set s__Object_offset_y_true[this]= 0.
   set s__Object_z_true[this]= 0.
   set s__Object_offset_z_true[this]= 0.
   set s__Object_yaw_true[this]= 0.
   set s__Object_offset_yaw_true[this]= 0.
   set s__Object_pitch_true[this]= 0.
   set s__Object_offset_pitch_true[this]= 0.
   set s__Object_roll_true[this]= 0.
   set s__Object_offset_roll_true[this]= 0.
   set s__Object_pivot_x[this]= 0.
   set s__Object_pivot_y[this]= 0.
   set s__Object_pivot_z[this]= 55.
   set s__Object_movement[this]= 0
    set si__Object_type[this]=19
    set si__Object_V[this]=-1
 return this
endfunction

//Generated destructor of Object
function sc__Object_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Object_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[si__Object_type[this]])
    set si__Object_V[this]=si__Object_F
    set si__Object_F=this
endfunction

//Generated method caller for Ability0021___ind.refresh
function sc__Ability0021___ind_refresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_refresh[147])
endfunction

//Generated method caller for Ability0021___ind.show
function sc__Ability0021___ind_show takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__AbilityIndicator_show[147])
endfunction

//Generated method caller for Ability0021___ind.onDestroy
function sc__Ability0021___ind_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[147])
endfunction

//Generated allocator of Ability0021___ind
function s__Ability0021___ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__AbilityIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=147
    set kthis=this

   set s__Ability0021___ind_c[this]= 0
 return this
endfunction


//Generated method caller for ProgressBar.onDestroy
function sc__ProgressBar_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__ProgressBar_onDestroy)
endfunction

//Generated allocator of ProgressBar
function s__ProgressBar__allocate takes nothing returns integer
 local integer this=si__ProgressBar_F
    if (this!=0) then
        set si__ProgressBar_F=si__ProgressBar_V[this]
    else
        set si__ProgressBar_I=si__ProgressBar_I+1
        set this=si__ProgressBar_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__ProgressBar_backdrop[this]= null
   set s__ProgressBar_fill[this]= null
   set s__ProgressBar_text[this]= null
   set s__ProgressBar_value_true[this]= 0.
   set s__ProgressBar_reverse[this]= false
    set si__ProgressBar_V[this]=-1
 return this
endfunction

//Generated destructor of ProgressBar
function sc__ProgressBar_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ProgressBar_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__ProgressBar_onDestroy)
    set si__ProgressBar_V[this]=si__ProgressBar_F
    set si__ProgressBar_F=this
endfunction

//Generated method caller for Ability0021_explosion.beforeExplosion
function sc__Ability0021_explosion_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_beforeExplosion[145])
endfunction

//Generated method caller for Ability0021_explosion.executeExplosion
function sc__Ability0021_explosion_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[145])
endfunction

//Generated method caller for Ability0021_explosion.onDestroy
function sc__Ability0021_explosion_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_onDestroy[145])
endfunction

//Generated allocator of Ability0021_explosion
function s__Ability0021_explosion__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=145
    set kthis=this

   set s__Ability0021_explosion_c[this]= 0
   set s__Ability0021_explosion_ef[this]= 0
   set s__Ability0021_explosion_level[this]= 0
 return this
endfunction


//Generated method caller for Buff0021_main.addValue
function sc__Buff0021_main_addValue takes integer this,integer level returns nothing
    set f__arg_this=this
    set f__arg_integer1=level
    call TriggerEvaluate(st__Buff_addValue[144])
endfunction

//Generated method caller for Buff0021_main.update
function sc__Buff0021_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[144])
endfunction

//Generated method caller for Buff0021_main.init
function sc__Buff0021_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[144])
endfunction

//Generated method caller for Buff0021_main.onDestroy
function sc__Buff0021_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[144])
endfunction

//Generated allocator of Buff0021_main
function s__Buff0021_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=144
    set kthis=this

   set s__Buff0021_main_val1[this]= 0
   set s__Buff0021_main_val2[this]= 0.
 return this
endfunction


//Generated allocator of Round
function s__Round__allocate takes nothing returns integer
 local integer this=si__Round_F
    if (this!=0) then
        set si__Round_F=si__Round_V[this]
    else
        set si__Round_I=si__Round_I+1
        set this=si__Round_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Round_V[this]=-1
 return this
endfunction

//Generated destructor of Round
function s__Round_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Round_V[this]!=-1) then
        return
    endif
    set si__Round_V[this]=si__Round_F
    set si__Round_F=this
endfunction

//Generated method caller for Ability0020___ind.beforeRefresh
function sc__Ability0020___ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[142])
endfunction

//Generated allocator of Ability0020___ind
function s__Ability0020___ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=142
    set kthis=this

 return this
endfunction


//Generated allocator of Tip
function s__Tip__allocate takes nothing returns integer
 local integer this=si__Tip_F
    if (this!=0) then
        set si__Tip_F=si__Tip_V[this]
    else
        set si__Tip_I=si__Tip_I+1
        set this=si__Tip_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Tip_V[this]=-1
 return this
endfunction

//Generated destructor of Tip
function s__Tip_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Tip_V[this]!=-1) then
        return
    endif
    set si__Tip_V[this]=si__Tip_F
    set si__Tip_F=this
endfunction

//Generated method caller for Tombstone.onDestroy
function sc__Tombstone_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Tombstone_onDestroy)
endfunction

//Generated allocator of Tombstone
function s__Tombstone__allocate takes nothing returns integer
 local integer this=si__Tombstone_F
    if (this!=0) then
        set si__Tombstone_F=si__Tombstone_V[this]
    else
        set si__Tombstone_I=si__Tombstone_I+1
        set this=si__Tombstone_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Tombstone_ef[this]= 0
   set s__Tombstone_owner[this]= 0
   set s__Tombstone_main_timer[this]= null
   set s__Tombstone_text[this]= null
    set si__Tombstone_V[this]=-1
 return this
endfunction

//Generated destructor of Tombstone
function sc__Tombstone_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Tombstone_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Tombstone_onDestroy)
    set si__Tombstone_V[this]=si__Tombstone_F
    set si__Tombstone_F=this
endfunction

//Generated method caller for TreeOfLife.addLevel
function sc__TreeOfLife_addLevel takes nothing returns nothing
    call TriggerEvaluate(st__TreeOfLife_addLevel)
endfunction

//Generated method caller for TreeOfLife.end
function sc__TreeOfLife_end takes nothing returns nothing
    call TriggerEvaluate(st__TreeOfLife_end)
endfunction

//Generated allocator of TreeOfLife
function s__TreeOfLife__allocate takes nothing returns integer
 local integer this=si__TreeOfLife_F
    if (this!=0) then
        set si__TreeOfLife_F=si__TreeOfLife_V[this]
    else
        set si__TreeOfLife_I=si__TreeOfLife_I+1
        set this=si__TreeOfLife_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__TreeOfLife_V[this]=-1
 return this
endfunction

//Generated destructor of TreeOfLife
function s__TreeOfLife_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__TreeOfLife_V[this]!=-1) then
        return
    endif
    set si__TreeOfLife_V[this]=si__TreeOfLife_F
    set si__TreeOfLife_F=this
endfunction

//Generated method caller for Abilityu011___exx.executeExplosion
function sc__Abilityu011___exx_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[138])
endfunction

//Generated method caller for Abilityu011___exx.beforeExplosion
function sc__Abilityu011___exx_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_beforeExplosion[138])
endfunction

//Generated method caller for Abilityu011___exx.onDestroy
function sc__Abilityu011___exx_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_onDestroy[138])
endfunction

//Generated allocator of Abilityu011___exx
function s__Abilityu011___exx__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=138
    set kthis=this

   set s__Abilityu011___exx_a[this]= 0
   set s__Abilityu011___exx_level[this]= 1
   set s__Abilityu011___exx_ef[this]= 0
 return this
endfunction


//Generated method caller for Buffu011_main.update
function sc__Buffu011_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[137])
endfunction

//Generated method caller for Buffu011_main.init
function sc__Buffu011_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[137])
endfunction

//Generated method caller for Buffu011_main.onDestroy
function sc__Buffu011_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[137])
endfunction

//Generated allocator of Buffu011_main
function s__Buffu011_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=137
    set kthis=this

 return this
endfunction


//Generated method caller for Trigger.getData
function sc__Trigger_getData takes trigger t returns integer
			return LoadInteger(s__Trigger_HASH, GetHandleId(t), 0)
endfunction

//Generated method caller for Trigger.new
function sc__Trigger_new takes integer data returns trigger
    set f__arg_integer1=data
    call TriggerEvaluate(st__Trigger_new)
 return f__result_trigger
endfunction

//Generated method caller for Trigger.remove
function sc__Trigger_remove takes trigger t returns nothing
    set f__arg_trigger1=t
    call TriggerEvaluate(st__Trigger_remove)
endfunction

//Generated allocator of Trigger
function s__Trigger__allocate takes nothing returns integer
 local integer this=si__Trigger_F
    if (this!=0) then
        set si__Trigger_F=si__Trigger_V[this]
    else
        set si__Trigger_I=si__Trigger_I+1
        set this=si__Trigger_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Trigger_V[this]=-1
 return this
endfunction

//Generated destructor of Trigger
function s__Trigger_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Trigger_V[this]!=-1) then
        return
    endif
    set si__Trigger_V[this]=si__Trigger_F
    set si__Trigger_F=this
endfunction

//Generated method caller for Buffu010_main.update
function sc__Buffu010_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[135])
endfunction

//Generated method caller for Buffu010_main.init
function sc__Buffu010_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[135])
endfunction

//Generated method caller for Buffu010_main.onDestroy
function sc__Buffu010_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[135])
endfunction

//Generated allocator of Buffu010_main
function s__Buffu010_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=135
    set kthis=this

   set s__Buffu010_main_main_trigger[this]= null
   set s__Buffu010_main_main_cond[this]= null
 return this
endfunction


//Generated method caller for ChinghoFrame.onDestroy
function sc__ChinghoFrame_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__ChinghoFrame_onDestroy)
endfunction

//Generated allocator of ChinghoFrame
function s__ChinghoFrame__allocate takes nothing returns integer
 local integer this=si__ChinghoFrame_F
    if (this!=0) then
        set si__ChinghoFrame_F=si__ChinghoFrame_V[this]
    else
        set si__ChinghoFrame_I=si__ChinghoFrame_I+1
        set this=si__ChinghoFrame_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__ChinghoFrame_id[this]= 0
   set s__ChinghoFrame_backdrop[this]= null
   set s__ChinghoFrame_icon1[this]= null
   set s__ChinghoFrame_icon2[this]= null
   set s__ChinghoFrame_name[this]= null
    set si__ChinghoFrame_V[this]=-1
 return this
endfunction

//Generated destructor of ChinghoFrame
function sc__ChinghoFrame_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChinghoFrame_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__ChinghoFrame_onDestroy)
    set si__ChinghoFrame_V[this]=si__ChinghoFrame_F
    set si__ChinghoFrame_F=this
endfunction

//Generated allocator of IconFrame
function s__IconFrame__allocate takes nothing returns integer
 local integer this=si__IconFrame_F
    if (this!=0) then
        set si__IconFrame_F=si__IconFrame_V[this]
    else
        set si__IconFrame_I=si__IconFrame_I+1
        set this=si__IconFrame_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__IconFrame_type[this]=27
    set si__IconFrame_V[this]=-1
 return this
endfunction

//Generated destructor of IconFrame
function sc__IconFrame_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__IconFrame_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__IconFrame_onDestroy[si__IconFrame_type[this]])
    set si__IconFrame_V[this]=si__IconFrame_F
    set si__IconFrame_F=this
endfunction

//Generated allocator of BuffIcon
function s__BuffIcon__allocate takes nothing returns integer
 local integer this=s__IconFrame__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__IconFrame_type[this]=28
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityIcon.onDestroy
function sc__AbilityIcon_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__IconFrame_onDestroy[29])
endfunction

//Generated allocator of AbilityIcon
function s__AbilityIcon__allocate takes nothing returns integer
 local integer this=s__IconFrame__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__IconFrame_type[this]=29
    set kthis=this

   set s__AbilityIcon_target[this]= 0
   set s__AbilityIcon_index[this]= 0
   set s__AbilityIcon_mouse_in[this]= false
   set s__AbilityIcon_icon_container[this]= null
   set s__AbilityIcon_icon_backdrop[this]= null
   set s__AbilityIcon_nem_backdrop[this]= null
   set s__AbilityIcon_cooldown_backdrop[this]= null
   set s__AbilityIcon_cooldown_text[this]= null
   set s__AbilityIcon_cooldown_text_backdrop[this]= null
   set s__AbilityIcon_hotkey_backdrop[this]= null
   set s__AbilityIcon_hotkey_text[this]= null
   set s__AbilityIcon_gauge_backdrop[this]= null
   set s__AbilityIcon_gauge_fill[this]= null
   set s__AbilityIcon_extra_backdrop[this]= null
   set s__AbilityIcon_extra_text[this]= null
   set s__AbilityIcon_weapon_particle[this]= null
   set s__AbilityIcon_tooltip_mouseover[this]= null
   set s__AbilityIcon_tooltip_container[this]= null
   set s__AbilityIcon_tooltip_outline[this]= null
   set s__AbilityIcon_tooltip_backdrop[this]= null
   set s__AbilityIcon_tooltip_text[this]= null
   set s__AbilityIcon_tooltip_stat_bonus_icon1[this]= null
   set s__AbilityIcon_tooltip_stat_bonus_icon2[this]= null
   set s__AbilityIcon_tooltip_stat_bonus_text1[this]= null
   set s__AbilityIcon_tooltip_stat_bonus_text2[this]= null
   set s__AbilityIcon_tooltip_header[this]= null
   set s__AbilityIcon_tooltip_icon[this]= null
   set s__AbilityIcon_tooltip_name[this]= null
   set s__AbilityIcon_tooltip_tag[this]= null
   set s__AbilityIcon_tooltip_casttype[this]= null
   set s__AbilityIcon_tooltip_manacost_backdrop[this]= null
   set s__AbilityIcon_tooltip_manacost_text[this]= null
   set s__AbilityIcon_tooltip_cooldown_backdrop[this]= null
   set s__AbilityIcon_tooltip_cooldown_text[this]= null
   set s__AbilityIcon_unique[this]= null
   set s__AbilityIcon_btn_trigger[this]= null
   set s__AbilityIcon_btn_cond[this]= null
 return this
endfunction


//Generated method caller for Ability0015__ind.beforeRefresh
function sc__Ability0015__ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[130])
endfunction

//Generated allocator of Ability0015__ind
function s__Ability0015__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=130
    set kthis=this

 return this
endfunction


//Generated method caller for StatIcon.onDestroy
function sc__StatIcon_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__IconFrame_onDestroy[30])
endfunction

//Generated allocator of StatIcon
function s__StatIcon__allocate takes nothing returns integer
 local integer this=s__IconFrame__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__IconFrame_type[this]=30
    set kthis=this

   set s__StatIcon_stat_index[this]= 0
   set s__StatIcon_format[this]= 0
   set s__StatIcon_target[this]= 0
   set s__StatIcon_backdrop[this]= null
   set s__StatIcon_text[this]= null
   set s__StatIcon_mouseover[this]= null
   set s__StatIcon_tooltip_container[this]= null
   set s__StatIcon_tooltip_backdrop[this]= null
   set s__StatIcon_tooltip_text[this]= null
 return this
endfunction


//Generated method caller for Ability0015__exp.executeExplosion
function sc__Ability0015__exp_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[128])
endfunction

//Generated allocator of Ability0015__exp
function s__Ability0015__exp__allocate takes integer owner ,real x ,real y ,real x2 ,real y2 ,real radius returns integer
 local integer this=sc__LineExplosion_create(owner,x,y,x2,y2,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=128
    set kthis=this

   set s__Ability0015__exp_level[this]= 0
 return this
endfunction


//Generated method caller for Closeable.close
function sc__Closeable_close takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Closeable_close[si__Closeable_type[this]])
 return f__result_boolean
endfunction

//Generated allocator of Closeable
function s__Closeable__allocate takes nothing returns integer
 local integer this=si__Closeable_F
    if (this!=0) then
        set si__Closeable_F=si__Closeable_V[this]
    else
        set si__Closeable_I=si__Closeable_I+1
        set this=si__Closeable_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Closeable_type[this]=31
    set si__Closeable_V[this]=-1
 return this
endfunction

//Generated destructor of Closeable
function sc__Closeable_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Closeable_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Closeable_onDestroy[si__Closeable_type[this]])
    set si__Closeable_V[this]=si__Closeable_F
    set si__Closeable_F=this
endfunction

//Generated method caller for UI.onDestroy
function sc__UI_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UI_onDestroy)
endfunction

//Generated allocator of UI
function s__UI__allocate takes nothing returns integer
 local integer this=si__UI_F
    if (this!=0) then
        set si__UI_F=si__UI_V[this]
    else
        set si__UI_I=si__UI_I+1
        set this=si__UI_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__UI_target[this]= 0
   set s__UI_main_timer[this]= null
   set s__UI_container[this]= null
   set s__UI_hp_fill[this]= null
   set s__UI_hp_text[this]= null
   set s__UI_hp_icon[this]= null
   set s__UI_mp_fill[this]= null
   set s__UI_mp_text[this]= null
   set s__UI_mp_icon[this]= null
   set s__UI_level_backdrop[this]= null
   set s__UI_level_text[this]= null
   set s__UI_exp_fill[this]= null
   set s__UI_exp_text[this]= null
   set s__UI_name[this]= null
   set s__UI_ability_error[this]= null
   set s__UI_chingho[this]= 0
   set s__UI_ability_error_lifespan[this]= 0.
    set si__UI_V[this]=-1
 return this
endfunction

//Generated destructor of UI
function sc__UI_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__UI_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__UI_onDestroy)
    set si__UI_V[this]=si__UI_F
    set si__UI_F=this
endfunction

//Generated method caller for Ability_prototype.addValue
function sc__Ability_prototype_addValue takes integer this,integer v returns nothing
    set f__arg_this=this
    set f__arg_integer1=v
    call TriggerEvaluate(st__Ability_prototype_addValue[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.addLevel
function sc__Ability_prototype_addLevel takes integer this,integer v returns nothing
    set f__arg_this=this
    set f__arg_integer1=v
    call TriggerEvaluate(st__Ability_prototype_addLevel[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.addCount
function sc__Ability_prototype_addCount takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_addCount[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.useCount
function sc__Ability_prototype_useCount takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_useCount[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.getCarculatedManacost
function sc__Ability_prototype_getCarculatedManacost takes integer this returns real
			return I2R(s__Ability_prototype_manacost[this])
endfunction

//Generated method caller for Ability_prototype.getMaxCooldown
function sc__Ability_prototype_getMaxCooldown takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_getMaxCooldown[si__Ability_prototype_type[this]])
 return f__result_real
endfunction

//Generated method caller for Ability_prototype.getCarculatedMaxCooldown
function sc__Ability_prototype_getCarculatedMaxCooldown takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_getCarculatedMaxCooldown)
 return f__result_real
endfunction

//Generated method caller for Ability_prototype.iconClick
function sc__Ability_prototype_iconClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_iconClick[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.relativeTooltip
function sc__Ability_prototype_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[si__Ability_prototype_type[this]])
 return f__result_string
endfunction

//Generated method caller for Ability_prototype.onUnlink
function sc__Ability_prototype_onUnlink takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onUnlink[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.basicAttack
function sc__Ability_prototype_basicAttack takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability_prototype_basicAttack[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.execute
function sc__Ability_prototype_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.cancleFollow
function sc__Ability_prototype_cancleFollow takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_cancleFollow)
endfunction

//Generated method caller for Ability_prototype.cancleReservation
function sc__Ability_prototype_cancleReservation takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_cancleReservation)
endfunction

//Generated method caller for Ability_prototype.targetFilterAdditional
function sc__Ability_prototype_targetFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability_prototype_targetFilterAdditional[si__Ability_prototype_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Ability_prototype.useFilterAdditional
function sc__Ability_prototype_useFilterAdditional takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_useFilterAdditional[si__Ability_prototype_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Ability_prototype.useRequest
function sc__Ability_prototype_useRequest takes integer this,real x,real y,unit target,boolean onpress returns boolean
    set f__arg_this=this
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_unit1=target
    set f__arg_boolean1=onpress
    call TriggerEvaluate(st__Ability_prototype_useRequest)
 return f__result_boolean
endfunction

//Generated method caller for Ability_prototype.init
function sc__Ability_prototype_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.update
function sc__Ability_prototype_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_update[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.pressRequest
function sc__Ability_prototype_pressRequest takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_pressRequest)
 return f__result_boolean
endfunction

//Generated method caller for Ability_prototype.setPressState
function sc__Ability_prototype_setPressState takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__Ability_prototype_setPressState)
endfunction

//Generated method caller for Ability_prototype.onRelease
function sc__Ability_prototype_onRelease takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onRelease[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.beforeRelease
function sc__Ability_prototype_beforeRelease takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_beforeRelease[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.onKeyboard
function sc__Ability_prototype_onKeyboard takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onKeyboard[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.onPress
function sc__Ability_prototype_onPress takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onPress[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.beforePress
function sc__Ability_prototype_beforePress takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_beforePress[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.getAttackSpeedValue
function sc__Ability_prototype_getAttackSpeedValue takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Ability_prototype_getAttackSpeedValue[si__Ability_prototype_type[this]])
 return f__result_real
endfunction

//Generated method caller for Ability_prototype.leftClick
function sc__Ability_prototype_leftClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_leftClick[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.onRightClick
function sc__Ability_prototype_onRightClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onRightClick[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.onStop
function sc__Ability_prototype_onStop takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onStop[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.stopButton
function sc__Ability_prototype_stopButton takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_stopButton[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.essentialInit
function sc__Ability_prototype_essentialInit takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_essentialInit)
endfunction

//Generated method caller for Ability_prototype.create
function sc__Ability_prototype_create takes nothing returns integer
    call TriggerEvaluate(st__Ability_prototype_create)
 return f__result_integer
endfunction

//Generated method caller for Ability_prototype.onDeath
function sc__Ability_prototype_onDeath takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onDeath[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability_prototype.kill
function sc__Ability_prototype_kill takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_kill)
endfunction

//Generated method caller for Ability_prototype.onDestroy
function sc__Ability_prototype_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onDestroy[44])
endfunction

//Generated method caller for Ability_prototype.new
function sc__Ability_prototype_new takes integer aid returns integer
			set ABILITY_LAST_CREATED=- 1
			set ABILITY_CREATE_ID=aid
			call TriggerEvaluate(ABILITY_CREATE_TRIGGER)
			return ABILITY_LAST_CREATED
endfunction

//Generated method caller for Ability_prototype.sendSyncTarget
function sc__Ability_prototype_sendSyncTarget takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_sendSyncTarget)
endfunction

//Generated allocator of Ability_prototype
function s__Ability_prototype__allocate takes nothing returns integer
 local integer this=si__Ability_prototype_F
    if (this!=0) then
        set si__Ability_prototype_F=si__Ability_prototype_V[this]
    else
        set si__Ability_prototype_I=si__Ability_prototype_I+1
        set this=si__Ability_prototype_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Ability_prototype_cooldown_timer[this]= null
   set s__Ability_prototype_command_timer[this]= null
   set s__Ability_prototype_decay_timer[this]= null
   set s__Ability_prototype_indicator_timer[this]= null
   set s__Ability_prototype_owner[this]= 0
   set s__Ability_prototype_indicator[this]= 0
   set s__Ability_prototype_link_actor[this]= 0
   set s__Ability_prototype_is_active[this]= false
   set s__Ability_prototype_is_target[this]= false
   set s__Ability_prototype_is_freetarget[this]= false
   set s__Ability_prototype_is_immediate[this]= false
   set s__Ability_prototype_useable_stun[this]= false
   set s__Ability_prototype_useable_cast[this]= false
   set s__Ability_prototype_useable_ensnare[this]= true
   set s__Ability_prototype_useable_silence[this]= false
   set s__Ability_prototype_useable_grabbed[this]= false
   set s__Ability_prototype_useable_dead[this]= false
   set s__Ability_prototype_target_useable_invincible[this]= false
   set s__Ability_prototype_target_useable_enemy[this]= true
   set s__Ability_prototype_target_useable_ally[this]= false
   set s__Ability_prototype_target_useable_self[this]= false
   set s__Ability_prototype_target_useable_grabbed[this]= true
   set s__Ability_prototype_target_useable_dead[this]= false
   set s__Ability_prototype_reserve_order[this]= true
   set s__Ability_prototype_preserve_order[this]= true
   set s__Ability_prototype_is_following[this]= false
   set s__Ability_prototype_is_reserving[this]= false
   set s__Ability_prototype_drag_to_use[this]= false
   set s__Ability_prototype_pressing[this]= false
   set s__Ability_prototype_cancle_rightclick[this]= true
   set s__Ability_prototype_check_cast[this]= false
   set s__Ability_prototype_smart[this]= 1
   set s__Ability_prototype_id[this]= 0
   set s__Ability_prototype_name[this]= ""
   set s__Ability_prototype_icon[this]= ""
   set s__Ability_prototype_level[this]= 1
   set s__Ability_prototype_manacost[this]= 0
   set s__Ability_prototype_cooldown_remaining[this]= 0.
   set s__Ability_prototype_cooldown_max[this]= 0.
   set s__Ability_prototype_cooldown_min[this]= 0.
   set s__Ability_prototype_count[this]= 1
   set s__Ability_prototype_count_max[this]= 1
   set s__Ability_prototype_value[this]= 0
   set s__Ability_prototype_gauge[this]= 0.
   set s__Ability_prototype_weapon_range[this]= 150.
   set s__Ability_prototype_weapon_delay[this]= 1.5
   set s__Ability_prototype_command_trigger[this]= null
   set s__Ability_prototype_command_condition[this]= null
   set s__Ability_prototype_command_x[this]= 0.
   set s__Ability_prototype_command_y[this]= 0.
   set s__Ability_prototype_command_target[this]= null
   set s__Ability_prototype_command_x2[this]= 0.
   set s__Ability_prototype_command_y2[this]= 0.
   set s__Ability_prototype_command_x_temp[this]= 0.
   set s__Ability_prototype_command_y_temp[this]= 0.
   set s__Ability_prototype_is_ai[this]= false
   set s__Ability_prototype_ai_mouse_x[this]= 0.
   set s__Ability_prototype_ai_mouse_y[this]= 0.
   set s__Ability_prototype_ai_target[this]= null
   set s__Ability_prototype_cast_range[this]= - 1.
   set s__Ability_prototype_cast_delay[this]= 0.
   set s__Ability_prototype_dead[this]= false
    set si__Ability_prototype_type[this]=44
    set si__Ability_prototype_V[this]=-1
 return this
endfunction

//Generated destructor of Ability_prototype
function sc__Ability_prototype_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ability_prototype_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onDestroy[si__Ability_prototype_type[this]])
    set si__Ability_prototype_V[this]=si__Ability_prototype_F
    set si__Ability_prototype_F=this
endfunction

//Generated method caller for Actor._get_x
function sc__Actor__get_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Actor__get_x[si__Actor_type[this]])
 return f__result_real
endfunction

//Generated method caller for Actor._set_x
function sc__Actor__set_x takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Actor__set_x[si__Actor_type[this]])
endfunction

//Generated method caller for Actor._get_y
function sc__Actor__get_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Actor__get_y[si__Actor_type[this]])
 return f__result_real
endfunction

//Generated method caller for Actor._set_y
function sc__Actor__set_y takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Actor__set_y[si__Actor_type[this]])
endfunction

//Generated method caller for Actor.onSuspend
function sc__Actor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[si__Actor_type[this]])
endfunction

//Generated method caller for Actor.onComplete
function sc__Actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[si__Actor_type[this]])
endfunction

//Generated method caller for Actor.periodicAction
function sc__Actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[si__Actor_type[this]])
endfunction

//Generated method caller for Actor.suspendFilter
function sc__Actor_suspendFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_suspendFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Actor.killFilter
function sc__Actor_killFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_killFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Actor.create
function sc__Actor_create takes integer actor,real x,real y,real duration returns integer
    set f__arg_integer1=actor
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=duration
    call TriggerEvaluate(st__Actor_create)
 return f__result_integer
endfunction

//Generated method caller for Actor.onDestroy
function sc__Actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[45])
endfunction

//Generated allocator of Actor
function s__Actor__allocate takes nothing returns integer
 local integer this=si__Actor_F
    if (this!=0) then
        set si__Actor_F=si__Actor_V[this]
    else
        set si__Actor_I=si__Actor_I+1
        set this=si__Actor_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Actor_actor[this]= 0
   set s__Actor_progress_bar[this]= 0
   set s__Actor_stage[this]= 0
   set s__Actor_timeout[this]= 0.
   set s__Actor_duration[this]= 0.
   set s__Actor_duration_max[this]= 0.
   set s__Actor_main_timer[this]= null
   set s__Actor_want_destroy[this]= false
   set s__Actor_x_true[this]= 0.
   set s__Actor_y_true[this]= 0.
   set s__Actor_x2[this]= 0.
   set s__Actor_y2[this]= 0.
    set si__Actor_type[this]=45
    set si__Actor_V[this]=-1
 return this
endfunction

//Generated destructor of Actor
function sc__Actor_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Actor_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[si__Actor_type[this]])
    set si__Actor_V[this]=si__Actor_F
    set si__Actor_F=this
endfunction

//Generated method caller for CloseUI.onDestroy
function sc__CloseUI_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__CloseUI_onDestroy)
endfunction

//Generated allocator of CloseUI
function s__CloseUI__allocate takes nothing returns integer
 local integer this=si__CloseUI_F
    if (this!=0) then
        set si__CloseUI_F=si__CloseUI_V[this]
    else
        set si__CloseUI_I=si__CloseUI_I+1
        set this=si__CloseUI_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__CloseUI_esc_trigger[this]= null
   set s__CloseUI_esc_cond[this]= null
   set s__CloseUI_owner[this]= null
    set si__CloseUI_V[this]=-1
 return this
endfunction

//Generated destructor of CloseUI
function sc__CloseUI_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CloseUI_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__CloseUI_onDestroy)
    set si__CloseUI_V[this]=si__CloseUI_F
    set si__CloseUI_F=this
endfunction

//Generated method caller for Ability0013__exp.executeExplosion
function sc__Ability0013__exp_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[122])
endfunction

//Generated method caller for Ability0013__exp.beforeExplosion
function sc__Ability0013__exp_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Explosion_beforeExplosion[122])
endfunction

//Generated allocator of Ability0013__exp
function s__Ability0013__exp__allocate takes integer owner ,real x ,real y ,real radius returns integer
 local integer this=sc__Explosion_create(owner,x,y,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=122
    set kthis=this

   set s__Ability0013__exp_level[this]= 0
 return this
endfunction


//Generated method caller for Curve.getCarculatedX
function sc__Curve_getCarculatedX takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedX[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Curve.getCarculatedY
function sc__Curve_getCarculatedY takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedY[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Curve.getCarculatedZ
function sc__Curve_getCarculatedZ takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedZ[si__Object_type[this]])
 return f__result_real
endfunction

//Generated method caller for Curve._get_x
function sc__Curve__get_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_x[47])
 return f__result_real
endfunction

//Generated method caller for Curve._get_y
function sc__Curve__get_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_y[47])
 return f__result_real
endfunction

//Generated method caller for Curve._get_z
function sc__Curve__get_z takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_z[47])
 return f__result_real
endfunction

//Generated method caller for Curve.create
function sc__Curve_create takes real x,real y,real z returns integer
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=z
    call TriggerEvaluate(st__Curve_create)
 return f__result_integer
endfunction

//Generated method caller for Curve.onDestroy
function sc__Curve_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[47])
endfunction

//Generated allocator of Curve
function s__Curve__allocate takes nothing returns integer
 local integer this=s__Object__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=47
    set kthis=this

   set s__Curve_value[this]= 0.
   set s__Curve_overtime[this]= 1.
   set s__Curve_index_max[this]= 0
 return this
endfunction


//Generated method caller for Ability0010__ind.refresh
function sc__Ability0010__ind_refresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_refresh[120])
endfunction

//Generated method caller for Ability0010__ind.show
function sc__Ability0010__ind_show takes integer this,boolean flag returns nothing
    set f__arg_this=this
    set f__arg_boolean1=flag
    call TriggerEvaluate(st__AbilityIndicator_show[120])
endfunction

//Generated method caller for Ability0010__ind.onDestroy
function sc__Ability0010__ind_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__AbilityIndicator_onDestroy[120])
endfunction

//Generated allocator of Ability0010__ind
function s__Ability0010__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__AbilityIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=120
    set kthis=this

   set s__Ability0010__ind_c[this]= 0
 return this
endfunction


//Generated method caller for Bezier.create
function sc__Bezier_create takes real x1,real y1,real z1,real x2,real y2,real z2 returns integer
    set f__arg_real1=x1
    set f__arg_real2=y1
    set f__arg_real3=z1
    set f__arg_real4=x2
    set f__arg_real5=y2
    set f__arg_real6=z2
    call TriggerEvaluate(st__Bezier_create)
 return f__result_integer
endfunction

//Generated allocator of Bezier
function s__Bezier__allocate takes real x ,real y ,real z returns integer
 local integer this=sc__Curve_create(x,y,z)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=48
    set kthis=this

 return this
endfunction


//Generated method caller for Bezier2.getCarculatedX
function sc__Bezier2_getCarculatedX takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedX[49])
 return f__result_real
endfunction

//Generated method caller for Bezier2.getCarculatedY
function sc__Bezier2_getCarculatedY takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedY[49])
 return f__result_real
endfunction

//Generated method caller for Bezier2.getCarculatedZ
function sc__Bezier2_getCarculatedZ takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedZ[49])
 return f__result_real
endfunction

//Generated allocator of Bezier2
function s__Bezier2__allocate takes real x1 ,real y1 ,real z1 ,real x2 ,real y2 ,real z2 returns integer
 local integer this=sc__Bezier_create(x1,y1,z1,x2,y2,z2)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=49
    set kthis=this

 return this
endfunction


//Generated method caller for Bezier3.getCarculatedX
function sc__Bezier3_getCarculatedX takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedX[50])
 return f__result_real
endfunction

//Generated method caller for Bezier3.getCarculatedY
function sc__Bezier3_getCarculatedY takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedY[50])
 return f__result_real
endfunction

//Generated method caller for Bezier3.getCarculatedZ
function sc__Bezier3_getCarculatedZ takes integer this,real v returns real
    set f__arg_this=this
    set f__arg_real1=v
    call TriggerEvaluate(st__Curve_getCarculatedZ[50])
 return f__result_real
endfunction

//Generated allocator of Bezier3
function s__Bezier3__allocate takes real x1 ,real y1 ,real z1 ,real x2 ,real y2 ,real z2 returns integer
 local integer this=sc__Bezier_create(x1,y1,z1,x2,y2,z2)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=50
    set kthis=this

 return this
endfunction


//Generated allocator of EffectDecay
function s__EffectDecay__allocate takes nothing returns integer
 local integer this=si__EffectDecay_F
    if (this!=0) then
        set si__EffectDecay_F=si__EffectDecay_V[this]
    else
        set si__EffectDecay_I=si__EffectDecay_I+1
        set this=si__EffectDecay_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EffectDecay_V[this]=-1
 return this
endfunction

//Generated destructor of EffectDecay
function s__EffectDecay_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EffectDecay_V[this]!=-1) then
        return
    endif
    set si__EffectDecay_V[this]=si__EffectDecay_F
    set si__EffectDecay_F=this
endfunction

//Generated method caller for Group.new
function sc__Group_new takes nothing returns group
    call TriggerEvaluate(st__Group_new)
 return f__result_group
endfunction

//Generated method caller for Group.release
function sc__Group_release takes group g returns nothing
    set f__arg_group1=g
    call TriggerEvaluate(st__Group_release)
endfunction

//Generated method caller for Group.clear
function sc__Group_clear takes group g returns nothing
			call GroupClear(g)
endfunction

//Generated method caller for Group.getNearest
function sc__Group_getNearest takes group g,real x,real y,unit except returns unit
    set f__arg_group1=g
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_unit1=except
    call TriggerEvaluate(st__Group_getNearest)
 return f__result_unit
endfunction

//Generated allocator of Group
function s__Group__allocate takes nothing returns integer
 local integer this=si__Group_F
    if (this!=0) then
        set si__Group_F=si__Group_V[this]
    else
        set si__Group_I=si__Group_I+1
        set this=si__Group_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Group_V[this]=-1
 return this
endfunction

//Generated destructor of Group
function s__Group_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Group_V[this]!=-1) then
        return
    endif
    set si__Group_V[this]=si__Group_F
    set si__Group_F=this
endfunction

//Generated method caller for Lightning.onDestroy
function sc__Lightning_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[54])
endfunction

//Generated allocator of Lightning
function s__Lightning__allocate takes nothing returns integer
 local integer this=s__Object__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=54
    set kthis=this

   set s__Lightning_t1[this]= 0
   set s__Lightning_t2[this]= 0
   set s__Lightning_r[this]= 1
   set s__Lightning_g[this]= 1
   set s__Lightning_b[this]= 1
   set s__Lightning_alpha[this]= 1
 return this
endfunction


//Generated method caller for Buffu001_main.addValue
function sc__Buffu001_main_addValue takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_addValue[113])
endfunction

//Generated method caller for Buffu001_main.update
function sc__Buffu001_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[113])
endfunction

//Generated method caller for Buffu001_main.init
function sc__Buffu001_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[113])
endfunction

//Generated method caller for Buffu001_main.onDestroy
function sc__Buffu001_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[113])
endfunction

//Generated allocator of Buffu001_main
function s__Buffu001_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=113
    set kthis=this

   set s__Buffu001_main_val[this]= 0.
 return this
endfunction


//Generated method caller for Line__Line.setColor
function sc__Line__Line_setColor takes integer this,real r,real g,real b,real a returns integer
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setColor[si__Line__Line_type[this]])
 return f__result_integer
endfunction

//Generated method caller for Line__Line.setLocalColor
function sc__Line__Line_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setLocalColor[si__Line__Line_type[this]])
endfunction

//Generated method caller for Line__Line.refreshPosition
function sc__Line__Line_refreshPosition takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_refreshPosition[si__Line__Line_type[this]])
endfunction

//Generated method caller for Line__Line.periodicAction
function sc__Line__Line_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_periodicAction[si__Line__Line_type[this]])
endfunction

//Generated method caller for Line__Line.create
function sc__Line__Line_create takes nothing returns integer
    call TriggerEvaluate(st__Line__Line_create)
 return f__result_integer
endfunction

//Generated method caller for Line__Line.onDestroy
function sc__Line__Line_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_onDestroy[55])
endfunction

//Generated allocator of Line__Line
function s__Line__Line__allocate takes nothing returns integer
 local integer this=si__Line__Line_F
    if (this!=0) then
        set si__Line__Line_F=si__Line__Line_V[this]
    else
        set si__Line__Line_I=si__Line__Line_I+1
        set this=si__Line__Line_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Line__Line_x[this]= 0.
   set s__Line__Line_y[this]= 0.
   set s__Line__Line_z[this]= 0.
   set s__Line__Line_angle[this]= 0.
   set s__Line__Line_length[this]= 0.
   set s__Line__Line_width[this]= 0.
   set s__Line__Line_r[this]= 1.
   set s__Line__Line_g[this]= 1.
   set s__Line__Line_b[this]= 1.
   set s__Line__Line_a[this]= 1.
   set s__Line__Line_alpha_max[this]= 1.
   set s__Line__Line_permanent[this]= false
   set s__Line__Line_refresh_color[this]= true
   set s__Line__Line_refresh_position[this]= true
   set s__Line__Line_visible_player[this]= null
   set s__Line__Line_t[this]= null
   set s__Line__Line_pointtimer[this]= null
   set s__Line__Line_angleaxis[this]= 0.
   set s__Line__Line_lengthaxis[this]= 0.
   set s__Line__Line_widthaxis[this]= 0.
   set s__Line__Line_velo[this]= 0.
   set s__Line__Line_dir[this]= 0.
   set s__Line__Line_alphaaxis[this]= 0.
   set s__Line__Line_temp_overtime[this]= 0.
    set si__Line__Line_type[this]=55
    set si__Line__Line_V[this]=-1
 return this
endfunction

//Generated destructor of Line__Line
function sc__Line__Line_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Line__Line_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_onDestroy[si__Line__Line_type[this]])
    set si__Line__Line_V[this]=si__Line__Line_F
    set si__Line__Line_F=this
endfunction

//Generated method caller for Square.setLocalColor
function sc__Square_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setLocalColor[56])
endfunction

//Generated method caller for Square.setColor
function sc__Square_setColor takes integer this,real r,real g,real b,real a returns integer
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setColor[56])
 return f__result_integer
endfunction

//Generated method caller for Square.refreshPosition
function sc__Square_refreshPosition takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_refreshPosition[56])
endfunction

//Generated method caller for Square.onDestroy
function sc__Square_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_onDestroy[56])
endfunction

//Generated allocator of Square
function s__Square__allocate takes nothing returns integer
 local integer this=sc__Line__Line_create()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Line__Line_type[this]=56
    set kthis=this

 return this
endfunction


//Generated method caller for DoubleLine.setLocalColor
function sc__DoubleLine_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setLocalColor[57])
endfunction

//Generated method caller for DoubleLine.setColor
function sc__DoubleLine_setColor takes integer this,real r,real g,real b,real a returns integer
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setColor[57])
 return f__result_integer
endfunction

//Generated method caller for DoubleLine.refreshPosition
function sc__DoubleLine_refreshPosition takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_refreshPosition[57])
endfunction

//Generated method caller for DoubleLine.onDestroy
function sc__DoubleLine_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_onDestroy[57])
endfunction

//Generated allocator of DoubleLine
function s__DoubleLine__allocate takes nothing returns integer
 local integer this=sc__Line__Line_create()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Line__Line_type[this]=57
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0007__ind.beforeRefresh
function sc__Ability0007__ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[109])
endfunction

//Generated allocator of Ability0007__ind
function s__Ability0007__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=109
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0007__exp.executeExplosion
function sc__Ability0007__exp_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[108])
endfunction

//Generated allocator of Ability0007__exp
function s__Ability0007__exp__allocate takes integer owner ,real x ,real y ,real x2 ,real y2 ,real radius returns integer
 local integer this=sc__LineExplosion_create(owner,x,y,x2,y2,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=108
    set kthis=this

   set s__Ability0007__exp_b[this]= false
 return this
endfunction


//Generated method caller for Arrow.refreshPosition
function sc__Arrow_refreshPosition takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_refreshPosition[58])
endfunction

//Generated method caller for Arrow.setLocalColor
function sc__Arrow_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setLocalColor[58])
endfunction

//Generated method caller for Arrow.setColor
function sc__Arrow_setColor takes integer this,real r,real g,real b,real a returns integer
    set f__arg_this=this
    set f__arg_real1=r
    set f__arg_real2=g
    set f__arg_real3=b
    set f__arg_real4=a
    call TriggerEvaluate(st__Line__Line_setColor[58])
 return f__result_integer
endfunction

//Generated method caller for Arrow.onDestroy
function sc__Arrow_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Line__Line_onDestroy[58])
endfunction

//Generated allocator of Arrow
function s__Arrow__allocate takes nothing returns integer
 local integer this=sc__Line__Line_create()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Line__Line_type[this]=58
    set kthis=this

 return this
endfunction


//Generated method caller for SkillShopWidget.onDestroy
function sc__SkillShopWidget_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__IconFrame_onDestroy[59])
endfunction

//Generated allocator of SkillShopWidget
function s__SkillShopWidget__allocate takes nothing returns integer
 local integer this=s__IconFrame__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__IconFrame_type[this]=59
    set kthis=this

   set s__SkillShopWidget_id[this]= 0
   set s__SkillShopWidget_btn_trigger[this]= null
   set s__SkillShopWidget_btn_cond[this]= null
   set s__SkillShopWidget_container[this]= null
   set s__SkillShopWidget_icon[this]= null
   set s__SkillShopWidget_name[this]= null
   set s__SkillShopWidget_tag[this]= null
   set s__SkillShopWidget_btn[this]= null
   set s__SkillShopWidget_bonus_stat1[this]= null
   set s__SkillShopWidget_bonus_stat2[this]= null
 return this
endfunction


//Generated method caller for SkillShop.addLevel
function sc__SkillShop_addLevel takes nothing returns nothing
    call TriggerEvaluate(st__SkillShop_addLevel)
endfunction

//Generated method caller for SkillShop.close
function sc__SkillShop_close takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Closeable_close[60])
 return f__result_boolean
endfunction

//Generated method caller for SkillShop.onDestroy
function sc__SkillShop_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Closeable_onDestroy[60])
endfunction

//Generated method caller for SkillShop.getTierChance
function sc__SkillShop_getTierChance takes integer level,integer tier returns integer
   local integer i= level
			if i > CHANCE_LEVEL_MAX then
				set i=CHANCE_LEVEL_MAX
			endif
			if tier == 1 then
				return CHANCE_TIER1[i]
			elseif tier == 2 then
				return CHANCE_TIER2[i]
			elseif tier == 3 then
				return CHANCE_TIER3[i]
			elseif tier == 4 then
				return CHANCE_TIER4[i]
			elseif tier == 5 then
				return CHANCE_TIER5[i]
			endif
			return 0
endfunction

//Generated allocator of SkillShop
function s__SkillShop__allocate takes nothing returns integer
 local integer this=s__Closeable__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Closeable_type[this]=60
    set kthis=this

   set s__SkillShop_level[this]= 1
   set s__SkillShop_exp[this]= 0
   set s__SkillShop_exp_max[this]= 2
   set s__SkillShop_keypress[this]= null
   set s__SkillShop_keypress_cond[this]= null
   set s__SkillShop_owner[this]= null
   set s__SkillShop_container[this]= null
   set s__SkillShop_btn_refresh[this]= null
   set s__SkillShop_btn_autorefresh[this]= null
   set s__SkillShop_btn_donate[this]= null
   set s__SkillShop_exp_outline[this]= null
   set s__SkillShop_exp_backdrop[this]= null
   set s__SkillShop_exp_fill[this]= null
   set s__SkillShop_exp_text[this]= null
   set s__SkillShop_level_backdrop[this]= null
   set s__SkillShop_level_text[this]= null
   set s__SkillShop_autorefresh_text_backdrop[this]= null
   set s__SkillShop_autorefresh_text[this]= null
   set s__SkillShop_gold_backdrop[this]= null
   set s__SkillShop_gold_icon[this]= null
   set s__SkillShop_gold_text[this]= null
   set s__SkillShop_chance_backdrop[this]= null
   set s__SkillShop_chance_text[this]= null
   set s__SkillShop_autorefresh[this]= true
   set s__SkillShop_autorefresh_time[this]= ROUND_TIME_INITIAL + ROUND_TIME
   set s__SkillShop_autorefresh_time_max[this]= ROUND_TIME
   set s__SkillShop_visible_flag[this]= false
 return this
endfunction


//Generated method caller for SlotChanger.stateDefault
function sc__SlotChanger_stateDefault takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__SlotChanger_stateDefault)
endfunction

//Generated method caller for SlotChanger.close
function sc__SlotChanger_close takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__SlotChanger_close)
 return f__result_boolean
endfunction

//Generated method caller for SlotChanger.onDestroy
function sc__SlotChanger_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__SlotChanger_onDestroy)
endfunction

//Generated allocator of SlotChanger
function s__SlotChanger__allocate takes nothing returns integer
 local integer this=si__SlotChanger_F
    if (this!=0) then
        set si__SlotChanger_F=si__SlotChanger_V[this]
    else
        set si__SlotChanger_I=si__SlotChanger_I+1
        set this=si__SlotChanger_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__SlotChanger_visible_flag[this]= false
   set s__SlotChanger_owner[this]= null
   set s__SlotChanger_keypress[this]= null
   set s__SlotChanger_keypress_cond[this]= null
   set s__SlotChanger_container[this]= null
   set s__SlotChanger_confirm_button[this]= null
   set s__SlotChanger_state[this]= 0
   set s__SlotChanger_first_index[this]= - 1
    set si__SlotChanger_V[this]=-1
 return this
endfunction

//Generated destructor of SlotChanger
function sc__SlotChanger_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SlotChanger_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__SlotChanger_onDestroy)
    set si__SlotChanger_V[this]=si__SlotChanger_F
    set si__SlotChanger_F=this
endfunction

//Generated allocator of Sound3D
function s__Sound3D__allocate takes nothing returns integer
 local integer this=si__Sound3D_F
    if (this!=0) then
        set si__Sound3D_F=si__Sound3D_V[this]
    else
        set si__Sound3D_I=si__Sound3D_I+1
        set this=si__Sound3D_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Sound3D_V[this]=-1
 return this
endfunction

//Generated destructor of Sound3D
function s__Sound3D_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Sound3D_V[this]!=-1) then
        return
    endif
    set si__Sound3D_V[this]=si__Sound3D_F
    set si__Sound3D_F=this
endfunction

//Generated method caller for InstantText.setColor
function sc__InstantText_setColor takes integer r,integer g,integer b returns nothing
			set s__InstantText_R=r
			set s__InstantText_G=g
			set s__InstantText_B=b
endfunction

//Generated method caller for InstantText.createForBothPlayer
function sc__InstantText_createForBothPlayer takes real x,real y,real z,string val,player forplayer,player forplayer2 returns nothing
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=z
    set f__arg_string1=val
    set f__arg_player1=forplayer
    set f__arg_player2=forplayer2
    call TriggerEvaluate(st__InstantText_createForBothPlayer)
endfunction

//Generated allocator of InstantText
function s__InstantText__allocate takes nothing returns integer
 local integer this=si__InstantText_F
    if (this!=0) then
        set si__InstantText_F=si__InstantText_V[this]
    else
        set si__InstantText_I=si__InstantText_I+1
        set this=si__InstantText_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__InstantText_V[this]=-1
 return this
endfunction

//Generated destructor of InstantText
function s__InstantText_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__InstantText_V[this]!=-1) then
        return
    endif
    set si__InstantText_V[this]=si__InstantText_F
    set si__InstantText_F=this
endfunction

//Generated method caller for Timer.getData
function sc__Timer_getData takes timer t returns integer
    set f__arg_timer1=t
    call TriggerEvaluate(st__Timer_getData)
 return f__result_integer
endfunction

//Generated method caller for Timer.getDataEx
function sc__Timer_getDataEx takes nothing returns integer
    call TriggerEvaluate(st__Timer_getDataEx)
 return f__result_integer
endfunction

//Generated method caller for Timer.pause
function sc__Timer_pause takes timer t returns nothing
			call PauseTimer(t)
endfunction

//Generated method caller for Timer.start
function sc__Timer_start takes timer t,real tick,boolean periodic,code func returns nothing
			call TimerStart(t, tick, periodic, func)
endfunction

//Generated method caller for Timer.release
function sc__Timer_release takes timer t returns nothing
    set f__arg_timer1=t
    call TriggerEvaluate(st__Timer_release)
endfunction

//Generated method caller for Timer.new
function sc__Timer_new takes integer data returns timer
    set f__arg_integer1=data
    call TriggerEvaluate(st__Timer_new)
 return f__result_timer
endfunction

//Generated allocator of Timer
function s__Timer__allocate takes nothing returns integer
 local integer this=si__Timer_F
    if (this!=0) then
        set si__Timer_F=si__Timer_V[this]
    else
        set si__Timer_I=si__Timer_I+1
        set this=si__Timer_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Timer_V[this]=-1
 return this
endfunction

//Generated destructor of Timer
function s__Timer_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Timer_V[this]!=-1) then
        return
    endif
    set si__Timer_V[this]=si__Timer_F
    set si__Timer_F=this
endfunction

//Generated method caller for Ability0003__ind.beforeRefresh
function sc__Ability0003__ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[100])
endfunction

//Generated allocator of Ability0003__ind
function s__Ability0003__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=100
    set kthis=this

 return this
endfunction


//Generated method caller for User.oskeyIndex2String
function sc__User_oskeyIndex2String takes integer index returns string
		return s__User_OSKEY_INDEX_TO_STRING[index]
endfunction

//Generated method caller for User.getGold
function sc__User_getGold takes player p returns integer
		return GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
endfunction

//Generated method caller for User.addGold
function sc__User_addGold takes player p,integer nv returns nothing
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + nv)
		set GOLD_REFRESH_PLAYER=null
		set GOLD_REFRESH_PLAYER=p
		call TriggerEvaluate(GOLD_REFRESH_TRIGGER)
endfunction

//Generated method caller for User.getFocusUnit
function sc__User_getFocusUnit takes player p returns integer
		return s__User_FOCUSUNIT[GetPlayerId(p)]
endfunction

//Generated method caller for Ability.getTypeTier
function sc__Ability_getTypeTier takes integer id returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_TIER)
endfunction

//Generated method caller for Ability.getRandomAbility
function sc__Ability_getRandomAbility takes integer table_num returns integer
   local integer i= GetRandomInt(0, s__Ability_TABLE_INDEX[table_num] - 1)
			return LoadInteger(Ability__HASH, table_num, i)
endfunction

//Generated method caller for Ability.getTypeTooltip
function sc__Ability_getTypeTooltip takes integer id returns string
			if HaveSavedString(Ability__HASH, id, s__Ability_INDEX_TOOLTIP) then
				return LoadStr(Ability__HASH, id, s__Ability_INDEX_TOOLTIP)
			else
				return "ToolTip Missing"
			endif
endfunction

//Generated method caller for Ability.getTypeCost
function sc__Ability_getTypeCost takes integer id returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_COST)
endfunction

//Generated method caller for Ability.getTypeName
function sc__Ability_getTypeName takes integer id returns string
			return LoadStr(Ability__HASH, id, s__Ability_INDEX_NAME)
endfunction

//Generated method caller for Ability.getTypeIconPath
function sc__Ability_getTypeIconPath takes integer id returns string
			return LoadStr(Ability__HASH, id, s__Ability_INDEX_ICON_PATH)
endfunction

//Generated method caller for Ability.getTypeBonusStatIndex
function sc__Ability_getTypeBonusStatIndex takes integer id,integer slot returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_BONUS_STAT + slot)
endfunction

//Generated method caller for Ability.getTypeTag
function sc__Ability_getTypeTag takes integer id,integer index returns string
			if HaveSavedString(Ability__HASH, id, index) and index < s__Ability_INDEX_ICON_PATH then
				return LoadStr(Ability__HASH, id, index)
			else
				return ""
			endif
endfunction

//Generated method caller for Ability.iconClick
function sc__Ability_iconClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_iconClick[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability.addLevel
function sc__Ability_addLevel takes integer this,integer v returns nothing
    set f__arg_this=this
    set f__arg_integer1=v
    call TriggerEvaluate(st__Ability_prototype_addLevel[67])
endfunction

//Generated method caller for Ability.deactivate
function sc__Ability_deactivate takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_deactivate[si__Ability_prototype_type[this]])
endfunction

//Generated method caller for Ability.onDeath
function sc__Ability_onDeath takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onDeath[67])
endfunction

//Generated allocator of Ability
function s__Ability__allocate takes nothing returns integer
 local integer this=sc__Ability_prototype_create()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=67
    set kthis=this

   set s__Ability_stat_bonus1[this]= 0.
   set s__Ability_stat_bonus2[this]= 0.
   set s__Ability_signiture[this]= false
 return this
endfunction


//Generated method caller for ChinghoWidget.onDestroy
function sc__ChinghoWidget_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__ChinghoWidget_onDestroy)
endfunction

//Generated allocator of ChinghoWidget
function s__ChinghoWidget__allocate takes nothing returns integer
 local integer this=si__ChinghoWidget_F
    if (this!=0) then
        set si__ChinghoWidget_F=si__ChinghoWidget_V[this]
    else
        set si__ChinghoWidget_I=si__ChinghoWidget_I+1
        set this=si__ChinghoWidget_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__ChinghoWidget_id[this]= 0
   set s__ChinghoWidget_btn[this]= null
   set s__ChinghoWidget_main_trigger[this]= null
   set s__ChinghoWidget_main_cond[this]= null
    set si__ChinghoWidget_V[this]=-1
 return this
endfunction

//Generated destructor of ChinghoWidget
function sc__ChinghoWidget_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChinghoWidget_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__ChinghoWidget_onDestroy)
    set si__ChinghoWidget_V[this]=si__ChinghoWidget_F
    set si__ChinghoWidget_F=this
endfunction

//Generated method caller for Ability0001_main.relativeTooltip
function sc__Ability0001_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[95])
 return f__result_string
endfunction

//Generated method caller for Ability0001_main.execute
function sc__Ability0001_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[95])
endfunction

//Generated method caller for Ability0001_main.init
function sc__Ability0001_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[95])
endfunction

//Generated allocator of Ability0001_main
function s__Ability0001_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=95
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0001__ind.beforeRefresh
function sc__Ability0001__ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[94])
endfunction

//Generated allocator of Ability0001__ind
function s__Ability0001__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=94
    set kthis=this

 return this
endfunction


//Generated method caller for CharacterWidget.onDestroy
function sc__CharacterWidget_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__CharacterWidget_onDestroy)
endfunction

//Generated allocator of CharacterWidget
function s__CharacterWidget__allocate takes nothing returns integer
 local integer this=si__CharacterWidget_F
    if (this!=0) then
        set si__CharacterWidget_F=si__CharacterWidget_V[this]
    else
        set si__CharacterWidget_I=si__CharacterWidget_I+1
        set this=si__CharacterWidget_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__CharacterWidget_id[this]= 0
   set s__CharacterWidget_btn[this]= null
   set s__CharacterWidget_main_trigger[this]= null
   set s__CharacterWidget_main_cond[this]= null
    set si__CharacterWidget_V[this]=-1
 return this
endfunction

//Generated destructor of CharacterWidget
function sc__CharacterWidget_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CharacterWidget_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__CharacterWidget_onDestroy)
    set si__CharacterWidget_V[this]=si__CharacterWidget_F
    set si__CharacterWidget_F=this
endfunction

//Generated method caller for CharacterInfoPanel.onDestroy
function sc__CharacterInfoPanel_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__CharacterInfoPanel_onDestroy)
endfunction

//Generated allocator of CharacterInfoPanel
function s__CharacterInfoPanel__allocate takes nothing returns integer
 local integer this=si__CharacterInfoPanel_F
    if (this!=0) then
        set si__CharacterInfoPanel_F=si__CharacterInfoPanel_V[this]
    else
        set si__CharacterInfoPanel_I=si__CharacterInfoPanel_I+1
        set this=si__CharacterInfoPanel_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__CharacterInfoPanel_container[this]= null
   set s__CharacterInfoPanel_character[this]= null
   set s__CharacterInfoPanel_a1[this]= null
   set s__CharacterInfoPanel_a2[this]= null
   set s__CharacterInfoPanel_a_title[this]= null
   set s__CharacterInfoPanel_name[this]= null
   set s__CharacterInfoPanel_tool_backdrop[this]= null
   set s__CharacterInfoPanel_tool_text[this]= null
   set s__CharacterInfoPanel_cf[this]= 0
    set si__CharacterInfoPanel_V[this]=-1
 return this
endfunction

//Generated destructor of CharacterInfoPanel
function sc__CharacterInfoPanel_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CharacterInfoPanel_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__CharacterInfoPanel_onDestroy)
    set si__CharacterInfoPanel_V[this]=si__CharacterInfoPanel_F
    set si__CharacterInfoPanel_F=this
endfunction

//Generated method caller for Ability0001_explosion.executeExplosion
function sc__Ability0001_explosion_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Explosion_executeExplosion[91])
endfunction

//Generated allocator of Ability0001_explosion
function s__Ability0001_explosion__allocate takes integer owner ,real x ,real y ,real x2 ,real y2 ,real radius returns integer
 local integer this=sc__LineExplosion_create(owner,x,y,x2,y2,radius)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Explosion_type[this]=91
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0000_main.relativeTooltip
function sc__Ability0000_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[90])
 return f__result_string
endfunction

//Generated method caller for Ability0000_main.execute
function sc__Ability0000_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[90])
endfunction

//Generated method caller for Ability0000_main.init
function sc__Ability0000_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[90])
endfunction

//Generated allocator of Ability0000_main
function s__Ability0000_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=90
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0000__ind.beforeRefresh
function sc__Ability0000__ind_beforeRefresh takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__LineIndicator_beforeRefresh[89])
endfunction

//Generated allocator of Ability0000__ind
function s__Ability0000__ind__allocate takes integer abil ,player owner returns integer
 local integer this=sc__LineIndicator_create(abil,owner)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__AbilityIndicator_type[this]=89
    set kthis=this

 return this
endfunction


//Generated method caller for CharacterSelect.finish
function sc__CharacterSelect_finish takes nothing returns nothing
    call TriggerEvaluate(st__CharacterSelect_finish)
endfunction

//Generated method caller for GuardianFrame.onDestroy
function sc__GuardianFrame_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__GuardianFrame_onDestroy)
endfunction

//Generated allocator of GuardianFrame
function s__GuardianFrame__allocate takes nothing returns integer
 local integer this=si__GuardianFrame_F
    if (this!=0) then
        set si__GuardianFrame_F=si__GuardianFrame_V[this]
    else
        set si__GuardianFrame_I=si__GuardianFrame_I+1
        set this=si__GuardianFrame_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__GuardianFrame_target[this]= 0
   set s__GuardianFrame_index[this]= 0
   set s__GuardianFrame_container[this]= null
   set s__GuardianFrame_icon[this]= null
   set s__GuardianFrame_gauge_backdrop[this]= null
   set s__GuardianFrame_gauge_fill[this]= null
   set s__GuardianFrame_position[this]= null
   set s__GuardianFrame_death[this]= null
   set s__GuardianFrame_in[this]= false
   set s__GuardianFrame_main_trigger[this]= null
   set s__GuardianFrame_main_cond[this]= null
    set si__GuardianFrame_V[this]=-1
 return this
endfunction

//Generated destructor of GuardianFrame
function sc__GuardianFrame_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__GuardianFrame_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__GuardianFrame_onDestroy)
    set si__GuardianFrame_V[this]=si__GuardianFrame_F
    set si__GuardianFrame_F=this
endfunction

//Generated method caller for BuffEnsn_main.update
function sc__BuffEnsn_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[86])
endfunction

//Generated method caller for BuffEnsn_main.init
function sc__BuffEnsn_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[86])
endfunction

//Generated method caller for BuffEnsn_main.onDestroy
function sc__BuffEnsn_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[86])
endfunction

//Generated allocator of BuffEnsn_main
function s__BuffEnsn_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=86
    set kthis=this

 return this
endfunction


//Generated method caller for BuffStun_main.update
function sc__BuffStun_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_update[85])
endfunction

//Generated method caller for BuffStun_main.init
function sc__BuffStun_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_init[85])
endfunction

//Generated method caller for BuffStun_main.onDestroy
function sc__BuffStun_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Buff_onDestroy[85])
endfunction

//Generated allocator of BuffStun_main
function s__BuffStun_main__allocate takes integer id ,integer caster ,integer target ,real duration ,string name returns integer
 local integer this=sc__Buff_create(id,caster,target,duration,name)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Buff_type[this]=85
    set kthis=this

   set s__BuffStun_main_ef[this]= 0
 return this
endfunction


//Generated method caller for Mouse.triggerRegisterGenericRightClick
function sc__Mouse_triggerRegisterGenericRightClick takes trigger t returns nothing
		call TriggerRegisterVariableEvent(t, "udg_EVENT_VALUE", EQUAL, RIGHT_CLICK_EVENT)
endfunction

//Generated method caller for Mouse.getX
function sc__Mouse_getX takes player p returns real
		return s__s__Mouse_X[GetPlayerId(p)]
endfunction

//Generated method caller for Mouse.getY
function sc__Mouse_getY takes player p returns real
		return s__s__Mouse_Y[GetPlayerId(p)]
endfunction

//Generated method caller for Mouse.activateRefresher
function sc__Mouse_activateRefresher takes player p returns nothing
    set f__arg_player1=p
    call TriggerEvaluate(st__Mouse_activateRefresher)
endfunction

//Generated method caller for Wave.spawn
function sc__Wave_spawn takes nothing returns nothing
    call TriggerEvaluate(st__Wave_spawn)
endfunction

//Generated method caller for Wave___spawner.onDestroy
function sc__Wave___spawner_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Wave___spawner_onDestroy)
endfunction

//Generated allocator of Wave___spawner
function s__Wave___spawner__allocate takes nothing returns integer
 local integer this=si__Wave___spawner_F
    if (this!=0) then
        set si__Wave___spawner_F=si__Wave___spawner_V[this]
    else
        set si__Wave___spawner_I=si__Wave___spawner_I+1
        set this=si__Wave___spawner_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Wave___spawner_main_timer[this]= null
   set s__Wave___spawner_index[this]= 0
   set s__Wave___spawner_level[this]= 0
   set s__Wave___spawner_position[this]= 0
   set s__Wave___spawner_count[this]= 0
    set si__Wave___spawner_V[this]=-1
 return this
endfunction

//Generated destructor of Wave___spawner
function sc__Wave___spawner_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Wave___spawner_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__Wave___spawner_onDestroy)
    set si__Wave___spawner_V[this]=si__Wave___spawner_F
    set si__Wave___spawner_F=this
endfunction

//Generated method caller for Guardians.addLevel
function sc__Guardians_addLevel takes nothing returns nothing
    call TriggerEvaluate(st__Guardians_addLevel)
endfunction

//Generated allocator of Guardians
function s__Guardians__allocate takes nothing returns integer
 local integer this=si__Guardians_F
    if (this!=0) then
        set si__Guardians_F=si__Guardians_V[this]
    else
        set si__Guardians_I=si__Guardians_I+1
        set this=si__Guardians_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Guardians_V[this]=-1
 return this
endfunction

//Generated destructor of Guardians
function s__Guardians_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Guardians_V[this]!=-1) then
        return
    endif
    set si__Guardians_V[this]=si__Guardians_F
    set si__Guardians_F=this
endfunction

//Generated method caller for Game.defeat
function sc__Game_defeat takes nothing returns nothing
    call TriggerEvaluate(st__Game_defeat)
endfunction

//Generated method caller for Game.addLevel
function sc__Game_addLevel takes nothing returns nothing
    call TriggerEvaluate(st__Game_addLevel)
endfunction

//Generated method caller for Game.endSelect
function sc__Game_endSelect takes nothing returns nothing
    call TriggerEvaluate(st__Game_endSelect)
endfunction

//Generated allocator of Game
function s__Game__allocate takes nothing returns integer
 local integer this=si__Game_F
    if (this!=0) then
        set si__Game_F=si__Game_V[this]
    else
        set si__Game_I=si__Game_I+1
        set this=si__Game_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Game_V[this]=-1
 return this
endfunction

//Generated destructor of Game
function s__Game_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Game_V[this]!=-1) then
        return
    endif
    set si__Game_V[this]=si__Game_F
    set si__Game_F=this
endfunction

//Generated method caller for Movement._get_x
function sc__Movement__get_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Actor__get_x[78])
 return f__result_real
endfunction

//Generated method caller for Movement._get_y
function sc__Movement__get_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Actor__get_y[78])
 return f__result_real
endfunction

//Generated method caller for Movement._get_z
function sc__Movement__get_z takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Movement__get_z)
 return f__result_real
endfunction

//Generated method caller for Movement._get_target
function sc__Movement__get_target takes integer this returns integer
    set f__arg_this=this
    call TriggerEvaluate(st__Movement__get_target[si__Actor_type[this]])
 return f__result_integer
endfunction

//Generated method caller for Movement._set_target
function sc__Movement__set_target takes integer this,integer nt returns nothing
			set s__Movement_target_true[this]=nt
			set s__Movement_flag_target[this]=nt != 0
endfunction

//Generated method caller for Movement._get_curve
function sc__Movement__get_curve takes integer this returns integer
			return s__Movement_curve_true[this]
endfunction

//Generated method caller for Movement._set_curve
function sc__Movement__set_curve takes integer this,integer cv returns nothing
			set s__Movement_curve_true[this]=cv
			set s__Movement_flag_curve[this]=cv > 0
endfunction

//Generated method caller for Movement.setTargetLocation
function sc__Movement_setTargetLocation takes integer this,real x,real y,real z returns nothing
			set s__Movement_flag_target_location[this]=true
			set s__Movement_target_x[this]=x
			set s__Movement_target_y[this]=y
			set s__Movement_target_z[this]=z
endfunction

//Generated method caller for Movement.onSuspend
function sc__Movement_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_onSuspend[si__Actor_type[this]])
endfunction

//Generated method caller for Movement.onComplete
function sc__Movement_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_onComplete[si__Actor_type[this]])
endfunction

//Generated method caller for Movement.onCollision
function sc__Movement_onCollision takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_onCollision[si__Actor_type[this]])
endfunction

//Generated method caller for Movement.moveAction
function sc__Movement_moveAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_moveAction[si__Actor_type[this]])
endfunction

//Generated method caller for Movement.suspendFilter
function sc__Movement_suspendFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_suspendFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Movement.periodicAction
function sc__Movement_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Movement_periodicAction[si__Actor_type[this]])
endfunction

//Generated method caller for Movement.create
function sc__Movement_create takes integer actor,real velo,real angle returns integer
    set f__arg_integer1=actor
    set f__arg_real1=velo
    set f__arg_real2=angle
    call TriggerEvaluate(st__Movement_create)
 return f__result_integer
endfunction

//Generated method caller for Movement.onDestroy
function sc__Movement_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[78])
endfunction

//Generated allocator of Movement
function s__Movement__allocate takes integer actor ,real x ,real y ,real duration returns integer
 local integer this=sc__Actor_create(actor,x,y,duration)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=78
    set kthis=this

   set s__Movement_target_true[this]= 0
   set s__Movement_use_collision[this]= false
   set s__Movement_velo[this]= 0.
   set s__Movement_friction[this]= 0.
   set s__Movement_yaw[this]= 0.
   set s__Movement_z_velo[this]= 0.
   set s__Movement_gravity[this]= 0.
   set s__Movement_next_x[this]= 0.
   set s__Movement_next_y[this]= 0.
   set s__Movement_next_z[this]= 0.
   set s__Movement_target_x[this]= 0.
   set s__Movement_target_y[this]= 0.
   set s__Movement_target_z[this]= 0.
   set s__Movement_curve_true[this]= 0
   set s__Movement_flag_target[this]= false
   set s__Movement_flag_target_attatch[this]= false
   set s__Movement_flag_curve[this]= false
   set s__Movement_flag_target_location[this]= false
   set s__Movement_refresh_facing[this]= false
 return this
endfunction


//Generated method caller for Agent.create
function sc__Agent_create takes agent a returns integer
    set f__arg_agent1=a
    call TriggerEvaluate(st__Agent_create)
 return f__result_integer
endfunction

//Generated method caller for Agent.onDestroy
function sc__Agent_onDestroy takes integer this returns nothing
			call RemoveSavedHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
			call RemoveSavedInteger(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_INSTANCE_ID)
			set s__Agent_origin_agent[this]=null
endfunction

//Generated allocator of Agent
function s__Agent__allocate takes nothing returns integer
 local integer this=s__Object__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=3
    set kthis=this

   set s__Agent_origin_agent[this]= null
 return this
endfunction


//Generated allocator of Chingho
function s__Chingho__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=7
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC003_main.init
function sc__AbilityC003_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[162])
endfunction

//Generated method caller for AbilityC003_main.onDestroy
function sc__AbilityC003_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC003_main
function s__AbilityC003_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=162
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC002_main.init
function sc__AbilityC002_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[161])
endfunction

//Generated method caller for AbilityC002_main.onDestroy
function sc__AbilityC002_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC002_main
function s__AbilityC002_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=161
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC001_main.init
function sc__AbilityC001_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[160])
endfunction

//Generated method caller for AbilityC001_main.onDestroy
function sc__AbilityC001_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC001_main
function s__AbilityC001_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=160
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC000_main.init
function sc__AbilityC000_main_init takes integer this returns nothing
				
endfunction

//Generated method caller for AbilityC000_main.onDestroy
function sc__AbilityC000_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC000_main
function s__AbilityC000_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=159
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0040_main.relativeTooltip
function sc__Ability0040_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[158])
 return f__result_string
endfunction

//Generated method caller for Ability0040_main.execute
function sc__Ability0040_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[158])
endfunction

//Generated method caller for Ability0040_main.init
function sc__Ability0040_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[158])
endfunction

//Generated allocator of Ability0040_main
function s__Ability0040_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=158
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0030_main.relativeTooltip
function sc__Ability0030_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[153])
 return f__result_string
endfunction

//Generated method caller for Ability0030_main.execute
function sc__Ability0030_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[153])
endfunction

//Generated method caller for Ability0030_main.init
function sc__Ability0030_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[153])
endfunction

//Generated allocator of Ability0030_main
function s__Ability0030_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=153
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0021_main.relativeTooltip
function sc__Ability0021_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[148])
 return f__result_string
endfunction

//Generated method caller for Ability0021_main.execute
function sc__Ability0021_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[148])
endfunction

//Generated method caller for Ability0021_main.init
function sc__Ability0021_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[148])
endfunction

//Generated allocator of Ability0021_main
function s__Ability0021_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=148
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0020_main.relativeTooltip
function sc__Ability0020_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[143])
 return f__result_string
endfunction

//Generated method caller for Ability0020_main.execute
function sc__Ability0020_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[143])
endfunction

//Generated method caller for Ability0020_main.init
function sc__Ability0020_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[143])
endfunction

//Generated allocator of Ability0020_main
function s__Ability0020_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=143
    set kthis=this

 return this
endfunction


//Generated method caller for Abilityu011_main.relativeTooltip
function sc__Abilityu011_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[139])
 return f__result_string
endfunction

//Generated method caller for Abilityu011_main.execute
function sc__Abilityu011_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[139])
endfunction

//Generated method caller for Abilityu011_main.init
function sc__Abilityu011_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[139])
endfunction

//Generated method caller for Abilityu011_main.onDestroy
function sc__Abilityu011_main_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onDestroy[139])
endfunction

//Generated allocator of Abilityu011_main
function s__Abilityu011_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=139
    set kthis=this

   set s__Abilityu011_main_ex[this]= 0
   set s__Abilityu011_main_main_trigger[this]= null
   set s__Abilityu011_main_main_cond[this]= null
 return this
endfunction


//Generated method caller for Abilityu010_main.relativeTooltip
function sc__Abilityu010_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[136])
 return f__result_string
endfunction

//Generated method caller for Abilityu010_main.execute
function sc__Abilityu010_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[136])
endfunction

//Generated method caller for Abilityu010_main.init
function sc__Abilityu010_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[136])
endfunction

//Generated allocator of Abilityu010_main
function s__Abilityu010_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=136
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0002_main.relativeTooltip
function sc__Ability0002_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[97])
 return f__result_string
endfunction

//Generated method caller for Ability0002_main.execute
function sc__Ability0002_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[97])
endfunction

//Generated method caller for Ability0002_main.init
function sc__Ability0002_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[97])
endfunction

//Generated allocator of Ability0002_main
function s__Ability0002_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=97
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0016_main.relativeTooltip
function sc__Ability0016_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[134])
 return f__result_string
endfunction

//Generated method caller for Ability0016_main.execute
function sc__Ability0016_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[134])
endfunction

//Generated method caller for Ability0016_main.init
function sc__Ability0016_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[134])
endfunction

//Generated allocator of Ability0016_main
function s__Ability0016_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=134
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0015_main.relativeTooltip
function sc__Ability0015_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[132])
 return f__result_string
endfunction

//Generated method caller for Ability0015_main.beforeRelease
function sc__Ability0015_main_beforeRelease takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_beforeRelease[132])
endfunction

//Generated method caller for Ability0015_main.onRelease
function sc__Ability0015_main_onRelease takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onRelease[132])
endfunction

//Generated method caller for Ability0015_main.onRightClick
function sc__Ability0015_main_onRightClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onRightClick[132])
endfunction

//Generated method caller for Ability0015_main.execute
function sc__Ability0015_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[132])
endfunction

//Generated method caller for Ability0015_main.onPress
function sc__Ability0015_main_onPress takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_onPress[132])
endfunction

//Generated method caller for Ability0015_main.init
function sc__Ability0015_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[132])
endfunction

//Generated allocator of Ability0015_main
function s__Ability0015_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=132
    set kthis=this

   set s__Ability0015_main_range_temp[this]= 0.
 return this
endfunction


//Generated method caller for Ability0003_main.relativeTooltip
function sc__Ability0003_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[101])
 return f__result_string
endfunction

//Generated method caller for Ability0003_main.execute
function sc__Ability0003_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[101])
endfunction

//Generated method caller for Ability0003_main.init
function sc__Ability0003_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[101])
endfunction

//Generated allocator of Ability0003_main
function s__Ability0003_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=101
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0014_main.relativeTooltip
function sc__Ability0014_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[127])
 return f__result_string
endfunction

//Generated method caller for Ability0014_main.basicAttack
function sc__Ability0014_main_basicAttack takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability_prototype_basicAttack[127])
endfunction

//Generated method caller for Ability0014_main.init
function sc__Ability0014_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[127])
endfunction

//Generated allocator of Ability0014_main
function s__Ability0014_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=127
    set kthis=this

 return this
endfunction


//Generated method caller for UnitActor.rightClick
function sc__UnitActor_rightClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_rightClick[si__Actor_type[this]])
endfunction

//Generated method caller for UnitActor.onSuspend
function sc__UnitActor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_onSuspend[si__Actor_type[this]])
endfunction

//Generated method caller for UnitActor.onComplete
function sc__UnitActor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_onComplete[si__Actor_type[this]])
endfunction

//Generated method caller for UnitActor.periodicAction
function sc__UnitActor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_periodicAction[si__Actor_type[this]])
endfunction

//Generated method caller for UnitActor.suspendFilterAdditional
function sc__UnitActor_suspendFilterAdditional takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_suspendFilterAdditional[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitActor.suspendFilter
function sc__UnitActor_suspendFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_suspendFilter[38])
 return f__result_boolean
endfunction

//Generated method caller for UnitActor.create
function sc__UnitActor_create takes integer caster,integer target,real x,real y,integer level,real duration,boolean channeling returns integer
    set f__arg_integer1=caster
    set f__arg_integer2=target
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_integer3=level
    set f__arg_real3=duration
    set f__arg_boolean1=channeling
    call TriggerEvaluate(st__UnitActor_create)
 return f__result_integer
endfunction

//Generated method caller for UnitActor.onDestroy
function sc__UnitActor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[38])
endfunction

//Generated allocator of UnitActor
function s__UnitActor__allocate takes integer actor ,real x ,real y ,real duration returns integer
 local integer this=sc__Actor_create(actor,x,y,duration)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=38
    set kthis=this

   set s__UnitActor_target[this]= 0
   set s__UnitActor_link_ability[this]= 0
   set s__UnitActor_level[this]= 0
   set s__UnitActor_suspend_trigger[this]= null
   set s__UnitActor_suspend_condition[this]= null
   set s__UnitActor_suspend_stun[this]= true
   set s__UnitActor_suspend_ensnare[this]= false
   set s__UnitActor_suspend_silence[this]= true
   set s__UnitActor_suspend_dead[this]= true
   set s__UnitActor_suspend_rclick[this]= false
   set s__UnitActor_suspend_stop[this]= false
   set s__UnitActor_channeling[this]= true
 return this
endfunction


//Generated method caller for Ability0004_main.relativeTooltip
function sc__Ability0004_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[104])
 return f__result_string
endfunction

//Generated method caller for Ability0004_main.execute
function sc__Ability0004_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[104])
endfunction

//Generated method caller for Ability0004_main.init
function sc__Ability0004_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[104])
endfunction

//Generated allocator of Ability0004_main
function s__Ability0004_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=104
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0005_actor.onComplete
function sc__Ability0005_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[105])
endfunction

//Generated method caller for Ability0005_actor.onDestroy
function sc__Ability0005_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[105])
endfunction

//Generated allocator of Ability0005_actor
function s__Ability0005_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=105
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0005_main.relativeTooltip
function sc__Ability0005_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[106])
 return f__result_string
endfunction

//Generated method caller for Ability0005_main.targetFilterAdditional
function sc__Ability0005_main_targetFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability_prototype_targetFilterAdditional[106])
 return f__result_boolean
endfunction

//Generated method caller for Ability0005_main.execute
function sc__Ability0005_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[106])
endfunction

//Generated method caller for Ability0005_main.init
function sc__Ability0005_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[106])
endfunction

//Generated allocator of Ability0005_main
function s__Ability0005_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=106
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0006_main.getMaxCooldown
function sc__Ability0006_main_getMaxCooldown takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_getMaxCooldown[107])
 return f__result_real
endfunction

//Generated method caller for Ability0006_main.relativeTooltip
function sc__Ability0006_main_relativeTooltip takes integer this returns string
				return "선택한 지점으로 순간이동합니다.\n\n|cff999999다른 행동 중에 사용할 수 있습니다.|r"
endfunction

//Generated method caller for Ability0006_main.beforePress
function sc__Ability0006_main_beforePress takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=Ability0006__RANGE_MAX
endfunction

//Generated method caller for Ability0006_main.beforeRelease
function sc__Ability0006_main_beforeRelease takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=- 1.
endfunction

//Generated method caller for Ability0006_main.execute
function sc__Ability0006_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[107])
endfunction

//Generated method caller for Ability0006_main.init
function sc__Ability0006_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[107])
endfunction

//Generated allocator of Ability0006_main
function s__Ability0006_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=107
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0007_main.relativeTooltip
function sc__Ability0007_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[110])
 return f__result_string
endfunction

//Generated method caller for Ability0007_main.beforePress
function sc__Ability0007_main_beforePress takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=Ability0007__RANGE_MAX
endfunction

//Generated method caller for Ability0007_main.beforeRelease
function sc__Ability0007_main_beforeRelease takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=- 1.
endfunction

//Generated method caller for Ability0007_main.execute
function sc__Ability0007_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[110])
endfunction

//Generated method caller for Ability0007_main.init
function sc__Ability0007_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[110])
endfunction

//Generated allocator of Ability0007_main
function s__Ability0007_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=110
    set kthis=this

 return this
endfunction


//Generated allocator of Backswing
function s__Backswing__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=39
    set kthis=this

 return this
endfunction


//Generated method caller for Abilityu000_main.relativeTooltip
function sc__Abilityu000_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[112])
 return f__result_string
endfunction

//Generated method caller for Abilityu000_main.execute
function sc__Abilityu000_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[112])
endfunction

//Generated method caller for Abilityu000_main.init
function sc__Abilityu000_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[112])
endfunction

//Generated allocator of Abilityu000_main
function s__Abilityu000_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=112
    set kthis=this

 return this
endfunction


//Generated method caller for MeleeAttack.onSuspend
function sc__MeleeAttack_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__MeleeAttack_onSuspend[si__Actor_type[this]])
endfunction

//Generated method caller for MeleeAttack.onComplete
function sc__MeleeAttack_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__MeleeAttack_onComplete[si__Actor_type[this]])
endfunction

//Generated method caller for MeleeAttack.create
function sc__MeleeAttack_create takes integer caster,integer target returns integer
    set f__arg_integer1=caster
    set f__arg_integer2=target
    call TriggerEvaluate(st__MeleeAttack_create)
 return f__result_integer
endfunction

//Generated method caller for MeleeAttack.onDestroy
function sc__MeleeAttack_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[40])
endfunction

//Generated allocator of MeleeAttack
function s__MeleeAttack__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=40
    set kthis=this

 return this
endfunction


//Generated method caller for Effect._get_origin_effect
function sc__Effect__get_origin_effect takes integer this returns effect
			return LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
endfunction

//Generated method caller for Effect._get_x
function sc__Effect__get_x takes integer this returns real
			return s__Object_x_true[this]
endfunction

//Generated method caller for Effect._get_offset_x
function sc__Effect__get_offset_x takes integer this returns real
			return s__Object_offset_x_true[this]
endfunction

//Generated method caller for Effect._get_y
function sc__Effect__get_y takes integer this returns real
			return s__Object_y_true[this]
endfunction

//Generated method caller for Effect._get_offset_y
function sc__Effect__get_offset_y takes integer this returns real
			return s__Object_offset_y_true[this]
endfunction

//Generated method caller for Effect._get_z
function sc__Effect__get_z takes integer this returns real
			return s__Object_z_true[this]
endfunction

//Generated method caller for Effect._get_offset_z
function sc__Effect__get_offset_z takes integer this returns real
			return s__Object_offset_z_true[this]
endfunction

//Generated method caller for Effect._get_yaw
function sc__Effect__get_yaw takes integer this returns real
			return s__Object_yaw_true[this]
endfunction

//Generated method caller for Effect._get_offset_yaw
function sc__Effect__get_offset_yaw takes integer this returns real
			return s__Object_offset_yaw_true[this]
endfunction

//Generated method caller for Effect._get_pitch
function sc__Effect__get_pitch takes integer this returns real
			return s__Object_pitch_true[this]
endfunction

//Generated method caller for Effect._get_offset_pitch
function sc__Effect__get_offset_pitch takes integer this returns real
			return s__Object_offset_pitch_true[this]
endfunction

//Generated method caller for Effect._get_roll
function sc__Effect__get_roll takes integer this returns real
			return s__Object_roll_true[this]
endfunction

//Generated method caller for Effect._get_offset_roll
function sc__Effect__get_offset_roll takes integer this returns real
			return s__Object_offset_roll_true[this]
endfunction

//Generated method caller for Effect._set_x
function sc__Effect__set_x takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_x[52])
endfunction

//Generated method caller for Effect._set_offset_x
function sc__Effect__set_offset_x takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_x[52])
endfunction

//Generated method caller for Effect._set_y
function sc__Effect__set_y takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_y[52])
endfunction

//Generated method caller for Effect._set_offset_y
function sc__Effect__set_offset_y takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_y[52])
endfunction

//Generated method caller for Effect._set_z
function sc__Effect__set_z takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_z[52])
endfunction

//Generated method caller for Effect._set_offset_z
function sc__Effect__set_offset_z takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_z[52])
endfunction

//Generated method caller for Effect._set_yaw
function sc__Effect__set_yaw takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_yaw[52])
endfunction

//Generated method caller for Effect._set_offset_yaw
function sc__Effect__set_offset_yaw takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_yaw[52])
endfunction

//Generated method caller for Effect._set_pitch
function sc__Effect__set_pitch takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_pitch[52])
endfunction

//Generated method caller for Effect._set_offset_pitch
function sc__Effect__set_offset_pitch takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_pitch[52])
endfunction

//Generated method caller for Effect._set_roll
function sc__Effect__set_roll takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_roll[52])
endfunction

//Generated method caller for Effect._set_offset_roll
function sc__Effect__set_offset_roll takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Object__set_offset_roll[52])
endfunction

//Generated method caller for Effect.setScale
function sc__Effect_setScale takes integer this,real ns returns integer
    set f__arg_this=this
    set f__arg_real1=ns
    call TriggerEvaluate(st__Effect_setScale)
 return f__result_integer
endfunction

//Generated method caller for Effect.setAlpha
function sc__Effect_setAlpha takes integer this,integer nv returns integer
    set f__arg_this=this
    set f__arg_integer1=nv
    call TriggerEvaluate(st__Effect_setAlpha)
 return f__result_integer
endfunction

//Generated method caller for Effect.setColor
function sc__Effect_setColor takes integer this,integer r,integer g,integer b returns integer
    set f__arg_this=this
    set f__arg_integer1=r
    set f__arg_integer2=g
    set f__arg_integer3=b
    call TriggerEvaluate(st__Effect_setColor)
 return f__result_integer
endfunction

//Generated method caller for Effect.setPosition
function sc__Effect_setPosition takes integer this,real nx,real ny,real nz returns integer
    set f__arg_this=this
    set f__arg_real1=nx
    set f__arg_real2=ny
    set f__arg_real3=nz
    call TriggerEvaluate(st__Effect_setPosition)
 return f__result_integer
endfunction

//Generated method caller for Effect.setDuration
function sc__Effect_setDuration takes integer this,real timeout returns integer
    set f__arg_this=this
    set f__arg_real1=timeout
    call TriggerEvaluate(st__Effect_setDuration)
 return f__result_integer
endfunction

//Generated method caller for Effect.kill
function sc__Effect_kill takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Effect_kill)
endfunction

//Generated method caller for Effect.setAnim
function sc__Effect_setAnim takes integer this,animtype at returns integer
    set f__arg_this=this
    set f__arg_animtype1=at
    call TriggerEvaluate(st__Effect_setAnim)
 return f__result_integer
endfunction

//Generated method caller for Effect.setLocalAlpha
function sc__Effect_setLocalAlpha takes integer this,integer nv returns nothing
    set f__arg_this=this
    set f__arg_integer1=nv
    call TriggerEvaluate(st__Effect_setLocalAlpha)
endfunction

//Generated method caller for Effect.setLocalColor
function sc__Effect_setLocalColor takes integer this,integer r,integer g,integer b returns nothing
    set f__arg_this=this
    set f__arg_integer1=r
    set f__arg_integer2=g
    set f__arg_integer3=b
    call TriggerEvaluate(st__Effect_setLocalColor)
endfunction

//Generated method caller for Effect.create
function sc__Effect_create takes string path,real x,real y,real z,real ya returns integer
    set f__arg_string1=path
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=z
    set f__arg_real4=ya
    call TriggerEvaluate(st__Effect_create)
 return f__result_integer
endfunction

//Generated method caller for Effect.onDestroy
function sc__Effect_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[52])
endfunction

//Generated allocator of Effect
function s__Effect__allocate takes agent a returns integer
 local integer this=sc__Agent_create(a)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=52
    set kthis=this

   set s__Effect_decay_timer[this]= null
   set s__Effect_refresh_position[this]= true
   set s__Effect_refresh_orientation[this]= true
 return this
endfunction


//Generated method caller for Abilityu001_actor.onComplete
function sc__Abilityu001_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[115])
endfunction

//Generated allocator of Abilityu001_actor
function s__Abilityu001_actor__allocate takes integer caster ,integer target returns integer
 local integer this=sc__MeleeAttack_create(caster,target)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=115
    set kthis=this

 return this
endfunction


//Generated method caller for Abilityu001_main.relativeTooltip
function sc__Abilityu001_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[116])
 return f__result_string
endfunction

//Generated method caller for Abilityu001_main.basicAttack
function sc__Abilityu001_main_basicAttack takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability_prototype_basicAttack[116])
endfunction

//Generated method caller for Abilityu001_main.init
function sc__Abilityu001_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[116])
endfunction

//Generated allocator of Abilityu001_main
function s__Abilityu001_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=116
    set kthis=this

 return this
endfunction


//Generated method caller for UnitMovement._get_target
function sc__UnitMovement__get_target takes integer this returns integer
			return s__Movement_target_true[this]
endfunction

//Generated method caller for UnitMovement.explosionFilterAdditional
function sc__UnitMovement_explosionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_explosionFilterAdditional[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.executeExplosion
function sc__UnitMovement_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_executeExplosion[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.damageTarget
function sc__UnitMovement_damageTarget takes integer this,integer target returns real
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_damageTarget)
 return f__result_real
endfunction

//Generated method caller for UnitMovement.rangeFilter
function sc__UnitMovement_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_rangeFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.waveFilterAdditional
function sc__UnitMovement_waveFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_waveFilterAdditional[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.waveRangeFilter
function sc__UnitMovement_waveRangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_waveRangeFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.executeWave
function sc__UnitMovement_executeWave takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_executeWave[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.collisionFilterAdditional
function sc__UnitMovement_collisionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_collisionFilterAdditional[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.targetFilterAdditional
function sc__UnitMovement_targetFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_targetFilterAdditional[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.executeTarget
function sc__UnitMovement_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_executeTarget[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.suspendFilter
function sc__UnitMovement_suspendFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__UnitMovement_suspendFilter[si__Actor_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for UnitMovement.onSuspend
function sc__UnitMovement_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitMovement_onSuspend[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.onComplete
function sc__UnitMovement_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitMovement_onComplete[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.onCollision
function sc__UnitMovement_onCollision takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__UnitMovement_onCollision[si__Actor_type[this]])
endfunction

//Generated method caller for UnitMovement.periodicAction
function sc__UnitMovement_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[41])
endfunction

//Generated method caller for UnitMovement.create
function sc__UnitMovement_create takes integer u,real velo,real angle returns integer
    set f__arg_integer1=u
    set f__arg_real1=velo
    set f__arg_real2=angle
    call TriggerEvaluate(st__UnitMovement_create)
 return f__result_integer
endfunction

//Generated method caller for UnitMovement.onDestroy
function sc__UnitMovement_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[41])
endfunction

//Generated allocator of UnitMovement
function s__UnitMovement__allocate takes integer actor ,real velo ,real angle returns integer
 local integer this=sc__Movement_create(actor,velo,angle)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=41
    set kthis=this

   set s__UnitMovement_suspend_ensnare[this]= true
   set s__UnitMovement_suspend_stun[this]= true
   set s__UnitMovement_suspend_silence[this]= false
   set s__UnitMovement_suspend_dead[this]= true
   set s__UnitMovement_radius_explosion[this]= 0.
   set s__UnitMovement_radius_wave[this]= 0.
   set s__UnitMovement_radius_target[this]= 0.
   set s__UnitMovement_group_wave[this]= null
   set s__UnitMovement_group_collision[this]= null
   set s__UnitMovement_flag_collision[this]= false
   set s__UnitMovement_flag_wave[this]= false
   set s__UnitMovement_level[this]= 0
   set s__UnitMovement_damage_type[this]= DAMAGE_TYPE_PHYSICAL
   set s__UnitMovement_attack_type[this]= ATTACK_TYPE_BASIC
   set s__UnitMovement_is_target[this]= false
   set s__UnitMovement_is_aoe[this]= false
   set s__UnitMovement_interval_type[this]= INTERVAL_TYPE_SINGLE
   set s__UnitMovement_vector_type[this]= VECTOR_TYPE_OUTTER
   set s__UnitMovement_is_onhit[this]= true
   set s__UnitMovement_is_ranged[this]= true
   set s__UnitMovement_weapon_type[this]= WEAPON_TYPE_WHOKNOWS
   set s__UnitMovement_damage_id[this]= 0
   set s__UnitMovement_damage_x[this]= 0.
   set s__UnitMovement_damage_y[this]= 0.
   set s__UnitMovement_use_damage_position[this]= false
   set s__UnitMovement_damage[this]= 0.
   set s__UnitMovement_affect_enemy[this]= true
   set s__UnitMovement_affect_ally[this]= false
   set s__UnitMovement_affect_invincible[this]= false
   set s__UnitMovement_affect_evasion[this]= false
   set s__UnitMovement_affect_self[this]= false
 return this
endfunction


//Generated method caller for Ability0010_make.periodicAction
function sc__Ability0010_make_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[118])
endfunction

//Generated method caller for Ability0010_make.onComplete
function sc__Ability0010_make_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[118])
endfunction

//Generated method caller for Ability0010_make.onSuspend
function sc__Ability0010_make_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[118])
endfunction

//Generated method caller for Ability0010_make.onDestroy
function sc__Ability0010_make_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[118])
endfunction

//Generated allocator of Ability0010_make
function s__Ability0010_make__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=118
    set kthis=this

   set s__Ability0010_make_ef[this]= 0
   set s__Ability0010_make_mp[this]= 0.
   set s__Ability0010_make_potion_index[this]= 0
 return this
endfunction


//Generated method caller for Ability0010_actor.onComplete
function sc__Ability0010_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[119])
endfunction

//Generated method caller for Ability0010_actor.onSuspend
function sc__Ability0010_actor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[119])
endfunction

//Generated method caller for Ability0010_actor.onDestroy
function sc__Ability0010_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[119])
endfunction

//Generated allocator of Ability0010_actor
function s__Ability0010_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=119
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0010_main.iconClick
function sc__Ability0010_main_iconClick takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_iconClick[121])
endfunction

//Generated method caller for Ability0010_main.relativeTooltip
function sc__Ability0010_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[121])
 return f__result_string
endfunction

//Generated method caller for Ability0010_main.useFilterAdditional
function sc__Ability0010_main_useFilterAdditional takes integer this returns boolean
				if LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this]) > 0 then
					return true
				else
					set ERROR_MESSAGE="선택된 종류의 물약을 가지고 있지 않습니다."
					return false
				endif
endfunction

//Generated method caller for Ability0010_main.execute
function sc__Ability0010_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[121])
endfunction

//Generated method caller for Ability0010_main.update
function sc__Ability0010_main_update takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_update[121])
endfunction

//Generated method caller for Ability0010_main.init
function sc__Ability0010_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[121])
endfunction

//Generated method caller for Ability0010_main.deactivate
function sc__Ability0010_main_deactivate takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_deactivate[121])
endfunction

//Generated allocator of Ability0010_main
function s__Ability0010_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=121
    set kthis=this

   set s__Ability0010_main_potion_index[this]= 0
   set s__Ability0010_main_visible_flag[this]= false
   set s__Ability0010_main_container[this]= null
   set s__Ability0010_main_keypress[this]= null
   set s__Ability0010_main_keypress_cond[this]= null
 return this
endfunction


//Generated method caller for Ability0013_actor.periodicAction
function sc__Ability0013_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[123])
endfunction

//Generated method caller for Ability0013_actor.onDestroy
function sc__Ability0013_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[123])
endfunction

//Generated allocator of Ability0013_actor
function s__Ability0013_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=123
    set kthis=this

   set s__Ability0013_actor_mover[this]= 0
   set s__Ability0013_actor_ex[this]= 0
   set s__Ability0013_actor_c[this]= 0
   set s__Ability0013_actor_ef[this]= 0
   set s__Ability0013_actor_anim_progress[this]= 0.
 return this
endfunction


//Generated method caller for Ability0013_main.relativeTooltip
function sc__Ability0013_main_relativeTooltip takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_relativeTooltip[124])
 return f__result_string
endfunction

//Generated method caller for Ability0013_main.execute
function sc__Ability0013_main_execute takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_execute[124])
endfunction

//Generated method caller for Ability0013_main.init
function sc__Ability0013_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[124])
endfunction

//Generated allocator of Ability0013_main
function s__Ability0013_main__allocate takes nothing returns integer
 local integer this=s__Ability__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=124
    set kthis=this

 return this
endfunction


//Generated method caller for Unit_prototype._get_origin_unit
function sc__Unit_prototype__get_origin_unit takes integer this returns unit
			return LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
endfunction

//Generated method caller for Unit_prototype._get_level
function sc__Unit_prototype__get_level takes integer this returns integer
			return s__Unit_prototype_level_true[this]
endfunction

//Generated method caller for Unit_prototype._set_level
function sc__Unit_prototype__set_level takes integer this,integer v returns nothing
    set f__arg_this=this
    set f__arg_integer1=v
    call TriggerEvaluate(st__Unit_prototype__set_level)
endfunction

//Generated method caller for Unit_prototype.getCarculatedStatValue
function sc__Unit_prototype_getCarculatedStatValue takes integer this,integer stattype returns real
    set f__arg_this=this
    set f__arg_integer1=stattype
    call TriggerEvaluate(st__Unit_prototype_getCarculatedStatValue)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype.refreshLevelStatValue
function sc__Unit_prototype_refreshLevelStatValue takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype_refreshLevelStatValue)
endfunction

//Generated method caller for Unit_prototype._get_owner
function sc__Unit_prototype__get_owner takes integer this returns player
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_owner)
 return f__result_player
endfunction

//Generated method caller for Unit_prototype._get_x
function sc__Unit_prototype__get_x takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_x[43])
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_y
function sc__Unit_prototype__get_y takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_y[43])
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_z
function sc__Unit_prototype__get_z takes integer this returns real
			return s__Object_z_true[this]
endfunction

//Generated method caller for Unit_prototype._get_yaw
function sc__Unit_prototype__get_yaw takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Object__get_yaw[43])
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_x
function sc__Unit_prototype__set_x takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Object__set_x[43])
endfunction

//Generated method caller for Unit_prototype._set_y
function sc__Unit_prototype__set_y takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Object__set_y[43])
endfunction

//Generated method caller for Unit_prototype._set_z
function sc__Unit_prototype__set_z takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Object__set_z[43])
endfunction

//Generated method caller for Unit_prototype._set_yaw
function sc__Unit_prototype__set_yaw takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Object__set_yaw[43])
endfunction

//Generated method caller for Unit_prototype._set_offset_z
function sc__Unit_prototype__set_offset_z takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Object__set_offset_z[43])
endfunction

//Generated method caller for Unit_prototype._get_name
function sc__Unit_prototype__get_name takes integer this returns string
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_name)
 return f__result_string
endfunction

//Generated method caller for Unit_prototype._get_hp
function sc__Unit_prototype__get_hp takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_hp)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_hp
function sc__Unit_prototype__set_hp takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Unit_prototype__set_hp)
endfunction

//Generated method caller for Unit_prototype._get_hpregen
function sc__Unit_prototype__get_hpregen takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_hpregen)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype.restoreHP
function sc__Unit_prototype_restoreHP takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Unit_prototype_restoreHP)
endfunction

//Generated method caller for Unit_prototype._get_maxhp
function sc__Unit_prototype__get_maxhp takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_maxhp)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_maxhp
function sc__Unit_prototype__set_maxhp takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Unit_prototype__set_maxhp)
endfunction

//Generated method caller for Unit_prototype._get_mp
function sc__Unit_prototype__get_mp takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_mp)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_mpregen
function sc__Unit_prototype__get_mpregen takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_mpregen)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_maxmp
function sc__Unit_prototype__get_maxmp takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_maxmp)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_maxmp
function sc__Unit_prototype__set_maxmp takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Unit_prototype__set_maxmp)
endfunction

//Generated method caller for Unit_prototype._get_attack
function sc__Unit_prototype__get_attack takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_attack)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_attack_speed
function sc__Unit_prototype__get_attack_speed takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_attack_speed)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_attack_range
function sc__Unit_prototype__get_attack_range takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_attack_range)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_attack_range
function sc__Unit_prototype__set_attack_range takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Unit_prototype__set_attack_range)
endfunction

//Generated method caller for Unit_prototype._get_movement_speed
function sc__Unit_prototype__get_movement_speed takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_movement_speed)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_movement_speed
function sc__Unit_prototype__set_movement_speed takes integer this,real np returns nothing
    set f__arg_this=this
    set f__arg_real1=np
    call TriggerEvaluate(st__Unit_prototype__set_movement_speed)
endfunction

//Generated method caller for Unit_prototype._get_accuracy
function sc__Unit_prototype__get_accuracy takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_accuracy)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._get_evasion
function sc__Unit_prototype__get_evasion takes integer this returns real
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype__get_evasion)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype._set_collision
function sc__Unit_prototype__set_collision takes integer this,boolean b returns nothing
    set f__arg_this=this
    set f__arg_boolean1=b
    call TriggerEvaluate(st__Unit_prototype__set_collision)
endfunction

//Generated method caller for Unit_prototype.damageTarget
function sc__Unit_prototype_damageTarget takes integer this,integer target,real damage,weapontype wt returns real
    set f__arg_this=this
    set f__arg_integer1=target
    set f__arg_real1=damage
    set f__arg_weapontype1=wt
    call TriggerEvaluate(st__Unit_prototype_damageTarget)
 return f__result_real
endfunction

//Generated method caller for Unit_prototype.getAbility
function sc__Unit_prototype_getAbility takes integer this,integer index returns integer
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_ABILITY + index) then
				return LoadInteger(s__Agent_HASH, this, INDEX_ABILITY + index)
			else
				return 0
			endif
endfunction

//Generated method caller for Unit_prototype.getStatus
function sc__Unit_prototype_getStatus takes integer this,integer index returns integer
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_STATUS + index) then
				return LoadInteger(s__Agent_HASH, this, INDEX_STATUS + index)
			else
				return 0
			endif
endfunction

//Generated method caller for Unit_prototype.plusStatus
function sc__Unit_prototype_plusStatus takes integer this,integer index returns nothing
    set f__arg_this=this
    set f__arg_integer1=index
    call TriggerEvaluate(st__Unit_prototype_plusStatus)
endfunction

//Generated method caller for Unit_prototype.minusStatus
function sc__Unit_prototype_minusStatus takes integer this,integer index returns nothing
    set f__arg_this=this
    set f__arg_integer1=index
    call TriggerEvaluate(st__Unit_prototype_minusStatus)
endfunction

//Generated method caller for Unit_prototype.resetAnim
function sc__Unit_prototype_resetAnim takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype_resetAnim)
endfunction

//Generated method caller for Unit_prototype.setAnim
function sc__Unit_prototype_setAnim takes integer this,string anim returns nothing
    set f__arg_this=this
    set f__arg_string1=anim
    call TriggerEvaluate(st__Unit_prototype_setAnim)
endfunction

//Generated method caller for Unit_prototype.queueAnim
function sc__Unit_prototype_queueAnim takes integer this,string anim returns nothing
    set f__arg_this=this
    set f__arg_string1=anim
    call TriggerEvaluate(st__Unit_prototype_queueAnim)
endfunction

//Generated method caller for Unit_prototype.setAnimSpeed
function sc__Unit_prototype_setAnimSpeed takes integer this,real nv returns nothing
    set f__arg_this=this
    set f__arg_real1=nv
    call TriggerEvaluate(st__Unit_prototype_setAnimSpeed)
endfunction

//Generated method caller for Unit_prototype.isMoveable
function sc__Unit_prototype_isMoveable takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Unit_prototype_isMoveable)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.inRange
function sc__Unit_prototype_inRange takes integer this,real x,real y,real radius returns boolean
    set f__arg_this=this
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=radius
    call TriggerEvaluate(st__Unit_prototype_inRange)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.inLine
function sc__Unit_prototype_inLine takes integer this,real x1,real y1,real x2,real y2,real radius returns boolean
    set f__arg_this=this
    set f__arg_real1=x1
    set f__arg_real2=y1
    set f__arg_real3=x2
    set f__arg_real4=y2
    set f__arg_real5=radius
    call TriggerEvaluate(st__Unit_prototype_inLine)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.inSector
function sc__Unit_prototype_inSector takes integer this,real x,real y,real radius,real angle,real width returns boolean
    set f__arg_this=this
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=radius
    set f__arg_real4=angle
    set f__arg_real5=width
    call TriggerEvaluate(st__Unit_prototype_inSector)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.isEnemy
function sc__Unit_prototype_isEnemy takes integer this,player p returns boolean
    set f__arg_this=this
    set f__arg_player1=p
    call TriggerEvaluate(st__Unit_prototype_isEnemy)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.isAlly
function sc__Unit_prototype_isAlly takes integer this,player p returns boolean
    set f__arg_this=this
    set f__arg_player1=p
    call TriggerEvaluate(st__Unit_prototype_isAlly)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.isUnitType
function sc__Unit_prototype_isUnitType takes integer this,unittype ut returns boolean
    set f__arg_this=this
    set f__arg_unittype1=ut
    call TriggerEvaluate(st__Unit_prototype_isUnitType)
 return f__result_boolean
endfunction

//Generated method caller for Unit_prototype.issueTargetOrder
function sc__Unit_prototype_issueTargetOrder takes integer this,string order,widget t returns nothing
    set f__arg_this=this
    set f__arg_string1=order
    set f__arg_widget1=t
    call TriggerEvaluate(st__Unit_prototype_issueTargetOrder)
endfunction

//Generated method caller for Unit_prototype.get
function sc__Unit_prototype_get takes unit u returns integer
			if HaveSavedInteger(s__Agent_HASH, GetHandleId(u), s__Agent_INDEX_INSTANCE_ID) and u != null then
				return LoadInteger(s__Agent_HASH, GetHandleId(u), s__Agent_INDEX_INSTANCE_ID)
			else
				return 0
			endif
endfunction

//Generated method caller for Unit_prototype.create
function sc__Unit_prototype_create takes player p,integer uid,real x,real y,real facing returns integer
    set f__arg_player1=p
    set f__arg_integer1=uid
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=facing
    call TriggerEvaluate(st__Unit_prototype_create)
 return f__result_integer
endfunction

//Generated method caller for Unit_prototype.onDestroy
function sc__Unit_prototype_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[43])
endfunction

//Generated allocator of Unit_prototype
function s__Unit_prototype__allocate takes agent a returns integer
 local integer this=sc__Agent_create(a)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=43
    set kthis=this

   set s__Unit_prototype_main_timer[this]= null
   set s__Unit_prototype_decay_timer[this]= null
   set s__Unit_prototype_facing_circle[this]= 0
   set s__Unit_prototype_class[this]= "Unit_prototype"
   set s__Unit_prototype_origin_name[this]= ""
   set s__Unit_prototype_origin_player[this]= null
   set s__Unit_prototype_level_true[this]= 1
   set s__Unit_prototype_exp[this]= 0
   set s__Unit_prototype_exp_max[this]= 1
   set s__Unit_prototype_is_revive[this]= false
   set s__Unit_prototype_z_velo[this]= 0.
   set s__Unit_prototype_gravity[this]= GRAVITY_DEFAULT
   set s__Unit_prototype_collision_true[this]= 1
   set s__Unit_prototype_avul[this]= 0
   set s__Unit_prototype_weapon_ability[this]= 0
   set s__Unit_prototype_mover_unit[this]= null
 return this
endfunction


//Generated allocator of knockback
function s__knockback__allocate takes integer u ,real velo ,real angle returns integer
 local integer this=sc__UnitMovement_create(u,velo,angle)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=42
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC008_main.init
function sc__AbilityC008_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[167])
endfunction

//Generated method caller for AbilityC008_main.onDestroy
function sc__AbilityC008_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC008_main
function s__AbilityC008_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=167
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC007_main.init
function sc__AbilityC007_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[166])
endfunction

//Generated method caller for AbilityC007_main.onDestroy
function sc__AbilityC007_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC007_main
function s__AbilityC007_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=166
    set kthis=this

 return this
endfunction


//Generated method caller for Missile.explosionFilterAdditional
function sc__Missile_explosionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_explosionFilterAdditional[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.executeExplosion
function sc__Missile_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeExplosion[si__Object_type[this]])
endfunction

//Generated method caller for Missile.damageTarget
function sc__Missile_damageTarget takes integer this,integer target returns real
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_damageTarget)
 return f__result_real
endfunction

//Generated method caller for Missile.rangeFilter
function sc__Missile_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_rangeFilter[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.waveFilterAdditional
function sc__Missile_waveFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_waveFilterAdditional[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.waveRangeFilter
function sc__Missile_waveRangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_waveRangeFilter[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.executeWave
function sc__Missile_executeWave takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeWave[si__Object_type[this]])
endfunction

//Generated method caller for Missile.collisionFilterAdditional
function sc__Missile_collisionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_collisionFilterAdditional[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.targetFilterAdditional
function sc__Missile_targetFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_targetFilterAdditional[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.executeTarget
function sc__Missile_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeTarget[si__Object_type[this]])
endfunction

//Generated method caller for Missile.killFilter
function sc__Missile_killFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_killFilter[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Missile.onBound
function sc__Missile_onBound takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_onBound[si__Object_type[this]])
endfunction

//Generated method caller for Missile.beforeExplosion
function sc__Missile_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_beforeExplosion[si__Object_type[this]])
endfunction

//Generated method caller for Missile.afterExplosion
function sc__Missile_afterExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_afterExplosion[si__Object_type[this]])
endfunction

//Generated method caller for Missile.beforeWave
function sc__Missile_beforeWave takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_beforeWave[si__Object_type[this]])
endfunction

//Generated method caller for Missile.afterWave
function sc__Missile_afterWave takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_afterWave[si__Object_type[this]])
endfunction

//Generated method caller for Missile.periodicAction
function sc__Missile_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_periodicAction[si__Object_type[this]])
endfunction

//Generated method caller for Missile.create
function sc__Missile_create takes integer owner,string path,real x,real y,real z,real yaw returns integer
    set f__arg_integer1=owner
    set f__arg_string1=path
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=z
    set f__arg_real4=yaw
    call TriggerEvaluate(st__Missile_create)
 return f__result_integer
endfunction

//Generated method caller for Missile.onDestroy
function sc__Missile_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[77])
endfunction

//Generated allocator of Missile
function s__Missile__allocate takes string path ,real x ,real y ,real z ,real ya returns integer
 local integer this=sc__Effect_create(path,x,y,z,ya)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=77
    set kthis=this

   set s__Missile_main_timer[this]= null
   set s__Missile_owner[this]= 0
   set s__Missile_target_true[this]= 0
   set s__Missile_want_kill[this]= false
   set s__Missile_want_destroy[this]= false
   set s__Missile_flag_collision[this]= false
   set s__Missile_flag_wave[this]= false
   set s__Missile_flag_explosion[this]= false
   set s__Missile_group_wave[this]= null
   set s__Missile_group_collision[this]= null
   set s__Missile_group_link[this]= 0
   set s__Missile_radius_wave_true[this]= 0.
   set s__Missile_radius_explosion_true[this]= 0.
   set s__Missile_radius_target[this]= 16.
   set s__Missile_wave_timeout[this]= 0.
   set s__Missile_wave_interval[this]= 0.
   set s__Missile_damage_type[this]= DAMAGE_TYPE_PHYSICAL
   set s__Missile_attack_type[this]= ATTACK_TYPE_BASIC
   set s__Missile_is_target[this]= false
   set s__Missile_is_aoe[this]= false
   set s__Missile_interval_type[this]= INTERVAL_TYPE_SINGLE
   set s__Missile_vector_type[this]= VECTOR_TYPE_OUTTER
   set s__Missile_is_onhit[this]= true
   set s__Missile_is_ranged[this]= true
   set s__Missile_weapon_type[this]= WEAPON_TYPE_WHOKNOWS
   set s__Missile_damage_id[this]= 0
   set s__Missile_damage_x[this]= 0.
   set s__Missile_damage_y[this]= 0.
   set s__Missile_use_damage_position[this]= false
   set s__Missile_damage[this]= 0.
   set s__Missile_affect_enemy[this]= true
   set s__Missile_affect_ally[this]= false
   set s__Missile_affect_invincible[this]= false
   set s__Missile_affect_evasion[this]= false
   set s__Missile_affect_self[this]= false
 return this
endfunction


//Generated method caller for Abilityu000_actor.onComplete
function sc__Abilityu000_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[111])
endfunction

//Generated method caller for Abilityu000_actor.onDestroy
function sc__Abilityu000_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[111])
endfunction

//Generated allocator of Abilityu000_actor
function s__Abilityu000_actor__allocate takes integer u ,real velo ,real angle returns integer
 local integer this=sc__UnitMovement_create(u,velo,angle)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=111
    set kthis=this

   set s__Abilityu000_actor_ability_target[this]= 0
 return this
endfunction


//Generated method caller for AbilityC006_main.init
function sc__AbilityC006_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[165])
endfunction

//Generated method caller for AbilityC006_main.onDestroy
function sc__AbilityC006_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC006_main
function s__AbilityC006_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=165
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC005_main.init
function sc__AbilityC005_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[164])
endfunction

//Generated method caller for AbilityC005_main.onDestroy
function sc__AbilityC005_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC005_main
function s__AbilityC005_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=164
    set kthis=this

 return this
endfunction


//Generated method caller for AbilityC004_main.init
function sc__AbilityC004_main_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Ability_prototype_init[163])
endfunction

//Generated method caller for AbilityC004_main.onDestroy
function sc__AbilityC004_main_onDestroy takes integer this returns nothing
				
endfunction

//Generated allocator of AbilityC004_main
function s__AbilityC004_main__allocate takes nothing returns integer
 local integer this=s__Chingho__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Ability_prototype_type[this]=163
    set kthis=this

 return this
endfunction


//Generated method caller for Unit.create
function sc__Unit_create takes player p,integer uid,real x,real y,real yaw returns integer
    set f__arg_player1=p
    set f__arg_integer1=uid
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=yaw
    call TriggerEvaluate(st__Unit_create)
 return f__result_integer
endfunction

//Generated method caller for Unit.onDestroy
function sc__Unit_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[79])
endfunction

//Generated allocator of Unit
function s__Unit__allocate takes player p ,integer uid ,real x ,real y ,real facing returns integer
 local integer this=sc__Unit_prototype_create(p,uid,x,y,facing)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=79
    set kthis=this

   set s__Unit_chingho[this]= 0
 return this
endfunction


//Generated method caller for Undead.isGuardianAlive
function sc__Undead_isGuardianAlive takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_isGuardianAlive[si__Object_type[this]])
 return f__result_boolean
endfunction

//Generated method caller for Undead.getNearestHero
function sc__Undead_getNearestHero takes integer this returns integer
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_getNearestHero[si__Object_type[this]])
 return f__result_integer
endfunction

//Generated method caller for Undead.getNearestGuardian
function sc__Undead_getNearestGuardian takes integer this returns integer
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_getNearestGuardian[si__Object_type[this]])
 return f__result_integer
endfunction

//Generated method caller for Undead.onSetTarget
function sc__Undead_onSetTarget takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_onSetTarget[si__Object_type[this]])
endfunction

//Generated method caller for Undead.onFreeTarget
function sc__Undead_onFreeTarget takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_onFreeTarget[si__Object_type[this]])
endfunction

//Generated method caller for Undead.refreshTarget
function sc__Undead_refreshTarget takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_refreshTarget[si__Object_type[this]])
endfunction

//Generated method caller for Undead.getTarget
function sc__Undead_getTarget takes integer this returns integer
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_getTarget)
 return f__result_integer
endfunction

//Generated method caller for Undead.periodicAction
function sc__Undead_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_periodicAction[si__Object_type[this]])
endfunction

//Generated method caller for Undead.onDamaged
function sc__Undead_onDamaged takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_onDamaged[si__Object_type[this]])
endfunction

//Generated method caller for Undead.encount
function sc__Undead_encount takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_encount)
endfunction

//Generated method caller for Undead.init
function sc__Undead_init takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_init[si__Object_type[this]])
endfunction

//Generated method caller for Undead.create
function sc__Undead_create takes integer uid,real x,real y,real yaw,integer position returns integer
    set f__arg_integer1=uid
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=yaw
    set f__arg_integer2=position
    call TriggerEvaluate(st__Undead_create)
 return f__result_integer
endfunction

//Generated method caller for Undead.onDestroy
function sc__Undead_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[81])
endfunction

//Generated allocator of Undead
function s__Undead__allocate takes player p ,integer uid ,real x ,real y ,real yaw returns integer
 local integer this=sc__Unit_create(p,uid,x,y,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=81
    set kthis=this

   set s__Undead_ai_timer[this]= null
   set s__Undead_main_trigger[this]= null
   set s__Undead_main_cond[this]= null
   set s__Undead_target[this]= 0
   set s__Undead_target_is_different[this]= true
   set s__Undead_position[this]= 0
   set s__Undead_running[this]= false
   set s__Undead_acquire_range[this]= 600.
 return this
endfunction


//Generated method caller for additional.onComplete
function sc__additional_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[125])
endfunction

//Generated allocator of additional
function s__additional__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=125
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0014_actor.onComplete
function sc__Ability0014_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[126])
endfunction

//Generated allocator of Ability0014_actor
function s__Ability0014_actor__allocate takes integer caster ,integer target returns integer
 local integer this=sc__MeleeAttack_create(caster,target)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=126
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0004_actor.onDestroy
function sc__Ability0004_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[103])
endfunction

//Generated allocator of Ability0004_actor
function s__Ability0004_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=103
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0015_actor.periodicAction
function sc__Ability0015_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[129])
endfunction

//Generated method caller for Ability0015_actor.onComplete
function sc__Ability0015_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[129])
endfunction

//Generated method caller for Ability0015_actor.onSuspend
function sc__Ability0015_actor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[129])
endfunction

//Generated method caller for Ability0015_actor.onDestroy
function sc__Ability0015_actor_onDestroy takes integer this returns nothing
				set s__Ability0015_actor_sq[this]=0
endfunction

//Generated allocator of Ability0015_actor
function s__Ability0015_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=129
    set kthis=this

   set s__Ability0015_actor_range[this]= 0.
   set s__Ability0015_actor_angle[this]= 0.
   set s__Ability0015_actor_sq[this]= 0
 return this
endfunction


//Generated method caller for Ability0015_charge.periodicAction
function sc__Ability0015_charge_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[131])
endfunction

//Generated method caller for Ability0015_charge.onDestroy
function sc__Ability0015_charge_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[131])
endfunction

//Generated allocator of Ability0015_charge
function s__Ability0015_charge__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=131
    set kthis=this

   set s__Ability0015_charge_ef[this]= 0
   set s__Ability0015_charge_mv[this]= 0
 return this
endfunction


//Generated method caller for Ability0004__chain.rangeFilter
function sc__Ability0004__chain_rangeFilter takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability0004__chain_rangeFilter)
 return f__result_boolean
endfunction

//Generated method caller for Ability0004__chain.explosionFilterAdditional
function sc__Ability0004__chain_explosionFilterAdditional takes integer this,integer target returns boolean
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Ability0004__chain_explosionFilterAdditional)
 return f__result_boolean
endfunction

//Generated method caller for Ability0004__chain.executeExplosion
function sc__Ability0004__chain_executeExplosion takes integer this,integer target returns nothing
				call DoNothing()
endfunction

//Generated method caller for Ability0004__chain.killFilter
function sc__Ability0004__chain_killFilter takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_killFilter[102])
 return f__result_boolean
endfunction

//Generated method caller for Ability0004__chain.onComplete
function sc__Ability0004__chain_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[102])
endfunction

//Generated method caller for Ability0004__chain.onDestroy
function sc__Ability0004__chain_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[102])
endfunction

//Generated allocator of Ability0004__chain
function s__Ability0004__chain__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=102
    set kthis=this

   set s__Ability0004__chain_target_previous[this]= 0
   set s__Ability0004__chain_count[this]= 0
   set s__Ability0004__chain_radius_explosion[this]= Ability0004__RANGE_SECOND
   set s__Ability0004__chain_group_wave[this]= null
   set s__Ability0004__chain_already[this]= null
   set s__Ability0004__chain_damage_type[this]= DAMAGE_TYPE_PHYSICAL
   set s__Ability0004__chain_attack_type[this]= ATTACK_TYPE_BASIC
   set s__Ability0004__chain_is_target[this]= false
   set s__Ability0004__chain_is_aoe[this]= false
   set s__Ability0004__chain_interval_type[this]= INTERVAL_TYPE_SINGLE
   set s__Ability0004__chain_vector_type[this]= VECTOR_TYPE_OUTTER
   set s__Ability0004__chain_is_onhit[this]= true
   set s__Ability0004__chain_is_ranged[this]= true
   set s__Ability0004__chain_weapon_type[this]= WEAPON_TYPE_WHOKNOWS
   set s__Ability0004__chain_damage_id[this]= 0
   set s__Ability0004__chain_damage_x[this]= 0.
   set s__Ability0004__chain_damage_y[this]= 0.
   set s__Ability0004__chain_use_damage_position[this]= false
   set s__Ability0004__chain_damage[this]= 0.
   set s__Ability0004__chain_affect_enemy[this]= true
   set s__Ability0004__chain_affect_ally[this]= false
   set s__Ability0004__chain_affect_invincible[this]= false
   set s__Ability0004__chain_affect_evasion[this]= false
   set s__Ability0004__chain_affect_self[this]= false
 return this
endfunction


//Generated method caller for Ability0016_actor.killFilter
function sc__Ability0016_actor_killFilter takes integer this returns boolean
				set s__Ability0016_actor_count[this]=s__Ability0016_actor_count[this] - 1
				if s__Ability0016_actor_count[this] > 0 then
					set s__Actor_duration[this]=Ability0016__INTERVAL
					set s__Actor_timeout[this]=0.
					return false
				else
					return true
				endif
endfunction

//Generated method caller for Ability0016_actor.periodicAction
function sc__Ability0016_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[133])
endfunction

//Generated method caller for Ability0016_actor.onComplete
function sc__Ability0016_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[133])
endfunction

//Generated method caller for Ability0016_actor.onSuspend
function sc__Ability0016_actor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[133])
endfunction

//Generated method caller for Ability0016_actor.onDestroy
function sc__Ability0016_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[133])
endfunction

//Generated allocator of Ability0016_actor
function s__Ability0016_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=133
    set kthis=this

   set s__Ability0016_actor_mv[this]= 0
   set s__Ability0016_actor_count[this]= Ability0016__COUNT
 return this
endfunction


//Generated method caller for Ability0003_actor.onComplete
function sc__Ability0003_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[99])
endfunction

//Generated method caller for Ability0003_actor.onDestroy
function sc__Ability0003_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[99])
endfunction

//Generated allocator of Ability0003_actor
function s__Ability0003_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=99
    set kthis=this

   set s__Ability0003_actor_angle[this]= 0.
 return this
endfunction


//Generated method caller for Ability0003__ball.periodicAction
function sc__Ability0003__ball_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_periodicAction[98])
endfunction

//Generated method caller for Ability0003__ball.executeTarget
function sc__Ability0003__ball_executeTarget takes integer this,integer target returns nothing
				call DoNothing()
endfunction

//Generated method caller for Ability0003__ball.afterExplosion
function sc__Ability0003__ball_afterExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_afterExplosion[98])
endfunction

//Generated method caller for Ability0003__ball.onDestroy
function sc__Ability0003__ball_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[98])
endfunction

//Generated allocator of Ability0003__ball
function s__Ability0003__ball__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=98
    set kthis=this

   set s__Ability0003__ball_l[this]= 0
 return this
endfunction


//Generated method caller for Ability0002_actor.suspendFilterAdditional
function sc__Ability0002_actor_suspendFilterAdditional takes integer this returns boolean
    set f__arg_this=this
    call TriggerEvaluate(st__UnitActor_suspendFilterAdditional[96])
 return f__result_boolean
endfunction

//Generated method caller for Ability0002_actor.onSuspend
function sc__Ability0002_actor_onSuspend takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onSuspend[96])
endfunction

//Generated method caller for Ability0002_actor.onComplete
function sc__Ability0002_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[96])
endfunction

//Generated method caller for Ability0002_actor.periodicAction
function sc__Ability0002_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[96])
endfunction

//Generated method caller for Ability0002_actor.onDestroy
function sc__Ability0002_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[96])
endfunction

//Generated allocator of Ability0002_actor
function s__Ability0002_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=96
    set kthis=this

   set s__Ability0002_actor_play[this]= false
   set s__Ability0002_actor_mana[this]= 0.
 return this
endfunction


//Generated method caller for Ability0020___bullet.executeTarget
function sc__Ability0020___bullet_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeTarget[140])
endfunction

//Generated allocator of Ability0020___bullet
function s__Ability0020___bullet__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=140
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0020_actor.onComplete
function sc__Ability0020_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[141])
endfunction

//Generated method caller for Ability0020_actor.periodicAction
function sc__Ability0020_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[141])
endfunction

//Generated method caller for Ability0020_actor.onDestroy
function sc__Ability0020_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[141])
endfunction

//Generated allocator of Ability0020_actor
function s__Ability0020_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=141
    set kthis=this

   set s__Ability0020_actor_count[this]= Ability0020___COUNT
   set s__Ability0020_actor_angle[this]= 0.
   set s__Ability0020_actor_shoot[this]= 0.
   set s__Ability0020_actor_mover[this]= 0
 return this
endfunction


//Generated method caller for Ability0001_actor.onComplete
function sc__Ability0001_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[93])
endfunction

//Generated method caller for Ability0001_actor.onDestroy
function sc__Ability0001_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[93])
endfunction

//Generated allocator of Ability0001_actor
function s__Ability0001_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=93
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0021_actor.onComplete
function sc__Ability0021_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[146])
endfunction

//Generated method caller for Ability0021_actor.onDestroy
function sc__Ability0021_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[146])
endfunction

//Generated allocator of Ability0021_actor
function s__Ability0021_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=146
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0001_a2.onComplete
function sc__Ability0001_a2_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[92])
endfunction

//Generated method caller for Ability0001_a2.periodicAction
function sc__Ability0001_a2_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[92])
endfunction

//Generated method caller for Ability0001_a2.onDestroy
function sc__Ability0001_a2_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[92])
endfunction

//Generated allocator of Ability0001_a2
function s__Ability0001_a2__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=92
    set kthis=this

   set s__Ability0001_a2_effect_1[this]= 0
   set s__Ability0001_a2_effect_2[this]= 0
   set s__Ability0001_a2_sq[this]= 0
   set s__Ability0001_a2_angle[this]= 0.
 return this
endfunction


//Generated method caller for Ability0030___mss.executeTarget
function sc__Ability0030___mss_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeTarget[149])
endfunction

//Generated method caller for Ability0030___mss.onDestroy
function sc__Ability0030___mss_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[149])
endfunction

//Generated allocator of Ability0030___mss
function s__Ability0030___mss__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=149
    set kthis=this

 return this
endfunction


//Generated method caller for Ability0030___ball.periodicAction
function sc__Ability0030___ball_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_periodicAction[150])
endfunction

//Generated method caller for Ability0030___ball.executeWave
function sc__Ability0030___ball_executeWave takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeWave[150])
endfunction

//Generated method caller for Ability0030___ball.beforeWave
function sc__Ability0030___ball_beforeWave takes integer this returns nothing
				call GroupClear(s__Missile_group_wave[this])
endfunction

//Generated method caller for Ability0030___ball.afterWave
function sc__Ability0030___ball_afterWave takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_afterWave[150])
endfunction

//Generated method caller for Ability0030___ball.onDestroy
function sc__Ability0030___ball_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[150])
endfunction

//Generated allocator of Ability0030___ball
function s__Ability0030___ball__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=150
    set kthis=this

   set s__Ability0030___ball_count_true[this]= Ability0030___COUNT
   set s__Ability0030___ball_level[this]= 0
   set s__Ability0030___ball_c[this]= 0
   set s__Ability0030___ball_mg[this]= 0
 return this
endfunction


//Generated method caller for Ability0030_actor.onComplete
function sc__Ability0030_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[151])
endfunction

//Generated method caller for Ability0030_actor.onDestroy
function sc__Ability0030_actor_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[151])
endfunction

//Generated allocator of Ability0030_actor
function s__Ability0030_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=151
    set kthis=this

   set s__Ability0030_actor_angle[this]= 0.
 return this
endfunction


//Generated method caller for Ability0000_actor.periodicAction
function sc__Ability0000_actor_periodicAction takes integer this returns nothing
endfunction

//Generated method caller for Ability0000_actor.onComplete
function sc__Ability0000_actor_onComplete takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onComplete[88])
endfunction

//Generated allocator of Ability0000_actor
function s__Ability0000_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=88
    set kthis=this

   set s__Ability0000_actor_angle[this]= 0.
 return this
endfunction


//Generated method caller for Ability0040_actor.periodicAction
function sc__Ability0040_actor_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_periodicAction[156])
endfunction

//Generated method caller for Ability0040_actor.onDestroy
function sc__Ability0040_actor_onDestroy takes integer this returns nothing
			set s__Ability0040_actor_ef[this]=0
endfunction

//Generated allocator of Ability0040_actor
function s__Ability0040_actor__allocate takes integer caster ,integer target ,real x ,real y ,integer level ,real duration ,boolean channeling returns integer
 local integer this=sc__UnitActor_create(caster,target,x,y,level,duration,channeling)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=156
    set kthis=this

   set s__Ability0040_actor_ef[this]= 0
   set s__Ability0040_actor_b[this]= false
 return this
endfunction


//Generated method caller for Ability0000_mv.executeExplosion
function sc__Ability0000_mv_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_executeExplosion[87])
endfunction

//Generated method caller for Ability0000_mv.executeTarget
function sc__Ability0000_mv_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__UnitMovement_executeTarget[87])
endfunction

//Generated method caller for Ability0000_mv.onDestroy
function sc__Ability0000_mv_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Actor_onDestroy[87])
endfunction

//Generated allocator of Ability0000_mv
function s__Ability0000_mv__allocate takes integer u ,real velo ,real angle returns integer
 local integer this=sc__UnitMovement_create(u,velo,angle)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Actor_type[this]=87
    set kthis=this

 return this
endfunction


//Generated method caller for Circle.onDestroy
function sc__Circle_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[72])
endfunction

//Generated allocator of Circle
function s__Circle__allocate takes string path ,real x ,real y ,real z ,real ya returns integer
 local integer this=sc__Effect_create(path,x,y,z,ya)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=72
    set kthis=this

   set s__Circle_main_timer[this]= null
   set s__Circle_timeout[this]= 0.
   set s__Circle_fadepoint[this]= - 1.
   set s__Circle_fade[this]= 0.
   set s__Circle_alpha[this]= 1.
   set s__Circle_alpha_max[this]= 1.
   set s__Circle_overtime[this]= 0.
 return this
endfunction


//Generated method caller for TargetCircle.create
function sc__TargetCircle_create takes integer target,player owner returns integer
    set f__arg_integer1=target
    set f__arg_player1=owner
    call TriggerEvaluate(st__TargetCircle_create)
 return f__result_integer
endfunction

//Generated method caller for TargetCircle.onDestroy
function sc__TargetCircle_onDestroy takes integer this returns nothing
			set s__TargetCircle_owner[this]=null
endfunction

//Generated allocator of TargetCircle
function s__TargetCircle__allocate takes string path ,real x ,real y ,real z ,real ya returns integer
 local integer this=sc__Effect_create(path,x,y,z,ya)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=73
    set kthis=this

   set s__TargetCircle_owner[this]= null
 return this
endfunction


//Generated method caller for Guardian.onDestroy
function sc__Guardian_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Object_onDestroy[74])
endfunction

//Generated allocator of Guardian
function s__Guardian__allocate takes player p ,integer uid ,real x ,real y ,real yaw returns integer
 local integer this=sc__Unit_create(p,uid,x,y,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=74
    set kthis=this

   set s__Guardian_origin_x[this]= 0.
   set s__Guardian_origin_y[this]= 0.
   set s__Guardian_origin_yaw[this]= 0.
   set s__Guardian_moving[this]= false
   set s__Guardian_attacking[this]= false
   set s__Guardian_position[this]= 0
   set s__Guardian_acquire_range[this]= 600.
   set s__Guardian_target[this]= 0
   set s__Guardian_ai_timer[this]= null
 return this
endfunction


//Generated method caller for Ability0010_potion.executeExplosion
function sc__Ability0010_potion_executeExplosion takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeExplosion[117])
endfunction

//Generated method caller for Ability0010_potion.beforeExplosion
function sc__Ability0010_potion_beforeExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_beforeExplosion[117])
endfunction

//Generated method caller for Ability0010_potion.afterExplosion
function sc__Ability0010_potion_afterExplosion takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Missile_afterExplosion[117])
endfunction

//Generated allocator of Ability0010_potion
function s__Ability0010_potion__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=117
    set kthis=this

   set s__Ability0010_potion_potion_index[this]= 0
   set s__Ability0010_potion_level[this]= 0
   set s__Ability0010_potion_tx[this]= 0.
   set s__Ability0010_potion_ty[this]= 0.
 return this
endfunction


//Generated method caller for UndeadU000.periodicAction
function sc__UndeadU000_periodicAction takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Undead_periodicAction[33])
endfunction

//Generated allocator of UndeadU000
function s__UndeadU000__allocate takes integer uid ,real x ,real y ,real yaw ,integer position returns integer
 local integer this=sc__Undead_create(uid,x,y,yaw,position)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=33
    set kthis=this

 return this
endfunction


//Generated method caller for UndeadU001.init
function sc__UndeadU001_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
endfunction

//Generated allocator of UndeadU001
function s__UndeadU001__allocate takes integer uid ,real x ,real y ,real yaw ,integer position returns integer
 local integer this=sc__Undead_create(uid,x,y,yaw,position)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=34
    set kthis=this

 return this
endfunction


//Generated method caller for UndeadU002.init
function sc__UndeadU002_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
endfunction

//Generated allocator of UndeadU002
function s__UndeadU002__allocate takes integer uid ,real x ,real y ,real yaw ,integer position returns integer
 local integer this=sc__Undead_create(uid,x,y,yaw,position)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=35
    set kthis=this

 return this
endfunction


//Generated method caller for UndeadU003.init
function sc__UndeadU003_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
endfunction

//Generated allocator of UndeadU003
function s__UndeadU003__allocate takes integer uid ,real x ,real y ,real yaw ,integer position returns integer
 local integer this=sc__Undead_create(uid,x,y,yaw,position)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=36
    set kthis=this

 return this
endfunction


//Generated allocator of UndeadU004
function s__UndeadU004__allocate takes integer uid ,real x ,real y ,real yaw ,integer position returns integer
 local integer this=sc__Undead_create(uid,x,y,yaw,position)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=37
    set kthis=this

 return this
endfunction


//Generated method caller for Abilityu001__mss.executeTarget
function sc__Abilityu001__mss_executeTarget takes integer this,integer target returns nothing
    set f__arg_this=this
    set f__arg_integer1=target
    call TriggerEvaluate(st__Missile_executeTarget[114])
endfunction

//Generated allocator of Abilityu001__mss
function s__Abilityu001__mss__allocate takes integer owner ,string path ,real x ,real y ,real z ,real yaw returns integer
 local integer this=sc__Missile_create(owner,path,x,y,z,yaw)
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__Object_type[this]=114
    set kthis=this

 return this
endfunction


//library AbilityIndicator:






  function s__AbilityIndicator_setColor takes integer this,integer r,integer g,integer b returns nothing
			call sc__Effect_setColor(s__AbilityIndicator_circle[this],r , g , b)
  endfunction

  function s__AbilityIndicator_refresh takes integer this returns nothing

  endfunction

  function s__AbilityIndicator_refreshEssencial takes integer this returns nothing
			call sc__Effect_setPosition(s__AbilityIndicator_circle[this],sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , 2.)
			if s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]] > 0. then
				call sc__Effect_setScale(s__AbilityIndicator_circle[this],s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]] / 100.)
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call sc__Effect_setLocalAlpha(s__AbilityIndicator_circle[this],192)
				endif
			endif
			
  endfunction

  function s__AbilityIndicator_show takes integer this,boolean flag returns nothing

  endfunction

  function s__AbilityIndicator_showEssencial takes integer this,boolean flag returns nothing
			if flag then
				if s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]] > 0. then
					call sc__Effect_setScale(s__AbilityIndicator_circle[this],s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]] / 100.)
					if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
						call sc__Effect_setLocalAlpha(s__AbilityIndicator_circle[this],192)
					endif
				endif
				
			else
				call sc__Effect_setLocalAlpha(s__AbilityIndicator_circle[this],0)
				
			endif
  endfunction

  function s__AbilityIndicator_create takes integer abil,player owner returns integer
   local integer this= s__AbilityIndicator__allocate()
			set s__AbilityIndicator_abil[this]=abil
			set s__AbilityIndicator_owner[this]=owner
			set s__AbilityIndicator_circle[this]=sc__Effect_create(s__AbilityIndicator_CIRCLE_PATH , 0. , 0. , 2. , 270.)
			call sc__Effect_setAlpha(s__AbilityIndicator_circle[this],0)
			return this
  endfunction

  function s__AbilityIndicator_onDestroy takes integer this returns nothing
			set s__AbilityIndicator_owner[this]=null
			call sc__Object_deallocate(s__AbilityIndicator_circle[this])
  endfunction

  function s__AbilityIndicator_onInit takes nothing returns nothing
			
  endfunction




  function s__LineIndicator_beforeRefresh takes integer this returns nothing

  endfunction

  function s__LineIndicator_refresh takes integer this returns nothing
			call sc__LineIndicator_beforeRefresh(this)
			call sc__Object__set_yaw(s__LineIndicator_ef[this],s__LineIndicator_yaw[this])
			call sc__Effect_setPosition(s__LineIndicator_ef[this],s__LineIndicator_x[this] , s__LineIndicator_y[this] , 2.)
			call BlzSetSpecialEffectMatrixScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__LineIndicator_ef[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), s__LineIndicator_range[this] / 100., s__LineIndicator_width[this] / 50., 1.) // INLINED!!
  endfunction

  function s__LineIndicator_show takes integer this,boolean flag returns nothing
			if flag then
				call sc__AbilityIndicator_refresh(this)
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],255)
				endif
			else
				call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],0)
			endif
  endfunction

  function s__LineIndicator_create takes integer abil,player owner returns integer
   local integer this= s__LineIndicator__allocate(abil , owner)
			set s__LineIndicator_ef[this]=sc__Effect_create("Effects\\RLine.mdl" , 0. , 0. , 2. , 0.)
			call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],0)
			return this
  endfunction

  function s__LineIndicator_onDestroy takes integer this returns nothing
			call sc__Object_deallocate(s__LineIndicator_ef[this])
  endfunction



//library AbilityIndicator ends
//library Agent:





  function s__Agent_H2U takes integer id returns unit
			if id <= 0 then
				return null
			else
				call RemoveSavedHandle(s__Agent_HASH, 0, 0)
				call SaveFogStateHandle(s__Agent_HASH, 0, 0, ConvertFogState(id))
				return LoadUnitHandle(s__Agent_HASH, 0, 0)
			endif
  endfunction

  function s__Agent_create takes agent a returns integer
   local integer this= s__Agent__allocate()
			set s__Agent_origin_agent[this]=a
			call SaveAgentHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE, s__Agent_origin_agent[this])
			call SaveInteger(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_INSTANCE_ID, this)
			return this
  endfunction

  function s__Agent_onDestroy takes integer this returns nothing
			call RemoveSavedHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
			call RemoveSavedInteger(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_INSTANCE_ID)
			set s__Agent_origin_agent[this]=null
  endfunction



//library Agent ends
//library Base64:


 function Base64__init takes nothing returns nothing
		set Base64__CHARSET[0]="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/"
		set Base64__CHARSET[1]="U/tkOV3Kg8Ge1ErHDYPzn4ZbsyxW6RFcISlmjv5L+ioXfA7a2JNw90MCuTpQhqdB"
		set Base64__CHARSET[2]="1/p5Jviq7obXS0COLTfI6FWcYE9gzQe+8DM3kRPunAatwmjUHx2rsBlVZNdhKy4G"
		set Base64__CHARSET[3]="ei6Z/dV4sgThHC5oIvbwKnaQ1709mWDqNO+YRLFkUzlM3St2xuPAJpycEXjfBrG8"
		set Base64__CHARSET[4]="RPab65j7KwY1cQZOu9Xo0DJBMIdTxmAnELzGtShsf/e2pqU8v+VkrgilHy4WCN3F"
		set Base64__CHARSET[5]="K7sXj3OroSTyVx1gBwk8ZQFefnIPA4/iCvUJ5qbatNlm2cEupGHR9WDMLd0z6Y+h"
		set Base64__CHARSET[6]="xuh0CMeFqkNpn+1aXR8IErVYHB5yDfzPjZGw4d3QUcJ6bSWiLtmTs7O9volKA/2g"
		set Base64__CHARSET[7]="5o0tGseFvwNkH2uVRZXISW9JBY7CLyqrmQAdb3EKUTP4Og+Mzni16cp/alfjhx8D"
		set Base64__CHARSET[8]="Ze7iyux0cwlGsjItXJ5BHKmQph2vSORg6a3nPk9LfDbAN8C/o1EVdq4TFz+UMWrY"
		set Base64__CHARSET[9]="+q9kutnzpvUed5cXYNb6Oi7JEVIRTQGC2BWwS0KA/fhHja18xmrlsMy34LgZoFPD"
		set Base64__CHARSET[10]="9gVnOmQf4wusJ1HFoM/eb06cE8iTrCa2jdRBXkpxvKGY573WNUAPzyZq+LthDSIl"
		set Base64__CHARSET[11]="cJau5Awlf3iCsFX7xSgTI+oZDd/qPWM6KE8eUzVmv9HGpyk2b0jhNOnQ1rRtBY4L"
		set Base64__CHARSET[12]="DtFheBcindQj4+ONl/Eakgqz2XsuY50TR7CMKA3Pfvro1G9UbZpHm68yxIJwWVLS"
		set Base64__CHARSET[13]="ADtT5aPYiUMowf6Kj9J0q48hSZdsO/zp1+mQ3ybnICV2LugXlWre7xvkRGEHcFNB"
		set Base64__CHARSET[14]="24nKYGwmXlfzOBgurVRixdQ5vT0opsFj6Letah7ScN+9EHyI1JkZbMPUqAD3CW8/"
		set Base64__CHARSET[15]="sbo8Jr+FWRfLACUv4j7tkig1/eHOTcGPqdYKmEa6npzNw2SVDMBlhu39XxQy0ZI5"
	endfunction


  function s__Base64_powInt takes integer val,integer pow returns integer
   local integer i= 0
   local integer k= 1
			loop
				exitwhen i >= pow
				set k=k * val
				set i=i + 1
			endloop
			return k
  endfunction

  function s__Base64_findIndex takes integer charset,string s returns integer
   local integer i= 0
			
			if StringLength(s) != 1 then
				return - 1
			endif
			
			if charset >= Base64__CHARSET_MAX or charset < 0 then
				return - 1
			endif
			
			loop
				exitwhen i >= Base64__CHARSET_LENGTH
				if SubString(Base64__CHARSET[charset], i, i + 1) == s then
					return i
				endif
				set i=i + 1
			endloop
			
			return - 1
  endfunction

  function s__Base64_boolToDec takes string bs returns integer
   local integer i= 0
   local integer size= StringLength(bs)
   local integer newval= 0
			loop
				exitwhen i >= size
				if SubString(bs, i, i + 1) == "0" then
				elseif SubString(bs, i, i + 1) == "1" then
					set newval=newval + s__Base64_powInt(2 , i)
				else
					
					return - 1
				endif
				set i=i + 1
			endloop
			return newval
  endfunction

  function s__Base64_decToBool takes integer val returns string
   local integer currentval= val
   local string ns= ""
   local integer i= 0
			loop
					set ns=ns + I2S(ModuloInteger(currentval, 2))
					set i=i + 1
					set currentval=currentval / 2
					exitwhen currentval < 1
			endloop
			return ns
  endfunction

  function s__Base64_decToCode takes integer val returns string
   local string targetcharset= ""
   local string ns= ""
   local integer currentval= val
   local integer charset= GetRandomInt(1, Base64__CHARSET_MAX - 1)
			
			if val < 0 then
				return ""
			endif
			
			set targetcharset=Base64__CHARSET[charset]
			
			loop
				exitwhen currentval < Base64__CHARSET_LENGTH - 1
				set ns=SubString(targetcharset, ModuloInteger(currentval, Base64__CHARSET_LENGTH), ModuloInteger(currentval, Base64__CHARSET_LENGTH) + 1) + ns
				set currentval=currentval / Base64__CHARSET_LENGTH
			endloop
			set ns=SubString(targetcharset, currentval, currentval + 1) + ns
			
			set ns=SubString(Base64__CHARSET[0], charset, charset + 1) + ns
			return ns
  endfunction

  function s__Base64_codeToDec takes string targetstring returns integer
			
   local integer charset= s__Base64_findIndex(0 , SubString(targetstring, 0, 1))
   local integer newval= 0
			
   local integer zarisu= StringLength(targetstring) - 1
   local integer i= 0
   local string s= SubString(targetstring, 1, StringLength(targetstring))
			
			
			if zarisu < 1 or charset == - 1 then
				return - 1
			endif
			loop
				exitwhen i >= zarisu
				
				if s__Base64_findIndex(charset , SubString(s, i, i + 1)) == - 1 then
					return - 1
				endif
				set newval=newval + s__Base64_powInt(Base64__CHARSET_LENGTH , zarisu - i - 1) * s__Base64_findIndex(charset , SubString(s, i, i + 1))
				set i=i + 1
			endloop
			return newval
  endfunction



//library Base64 ends
//library Buff:










  function s__Buff_add takes integer caster,integer target,integer id,real duration returns integer
			set BUFF_LAST_CREATED=0
			set BUFF_CREATE_CASTER=caster
			set BUFF_CREATE_TARGET=target
			set BUFF_CREATE_ID=id
			set BUFF_CREATE_DURATION=duration
			call TriggerEvaluate(BUFF_CREATE_TRIGGER)
			call TriggerEvaluate(BUFF_REFRESH_TRIGGER)
			return BUFF_LAST_CREATED
  endfunction
		
  function s__Buff_getUnitRootBuff takes integer target returns integer
			if HaveSavedInteger(s__Buff_HASH, target, 0) then
				return LoadInteger(s__Buff_HASH, target, 0)
			else
				return 0
			endif
  endfunction

  function s__Buff_getMatchingCasterAndTarget takes integer caster,integer target,integer id returns integer
   local integer b= s__Buff_getUnitRootBuff(target)
			if b > 0 then
				loop
					if s__Buff_id[b] == id and s__Buff_caster[b] == caster then
						return b
					else
						if s__Buff_node_next[b] > 0 then
							set b=s__Buff_node_next[b]
						else
							return 0
						endif
					endif
				endloop
			else
				return 0
			endif
			return 0
  endfunction

  function s__Buff_getUnitBuffById takes integer target,integer id returns integer
   local integer b= s__Buff_getUnitRootBuff(target)
			if b > 0 then
				loop
					if s__Buff_id[b] == id then
						return b
					else
						if s__Buff_node_next[b] > 0 then
							set b=s__Buff_node_next[b]
						else
							return 0
						endif
					endif
				endloop
			else
				return 0
			endif
			return 0
  endfunction

  function s__Buff_unitHasBuff takes integer target,integer id returns boolean
			return s__Buff_getUnitBuffById(target , id) > 0
  endfunction

  function s__Buff_unitDestroyBuffs takes integer target returns nothing
   local integer b= 0
			loop
				set b=s__Buff_getUnitRootBuff(target)
				exitwhen b <= 0
				call sc__Buff_deallocate(b)
			endloop
  endfunction

  function s__Buff_addEffect takes integer this,integer ef returns nothing
			if s__Buff_buff_effect[this] > 0 then
				call sc__Effect_kill(s__Buff_buff_effect[this])
				set s__Buff_buff_effect[this]=0
			endif
			set s__Buff_buff_effect[this]=ef
  endfunction

  function s__Buff_addValue takes integer this,integer level returns nothing

  endfunction

  function s__Buff_init takes integer this returns nothing
		
  endfunction

  function s__Buff_update takes integer this returns nothing

  endfunction

  function s__Buff_intervalAction takes integer this returns nothing

  endfunction

  function s__Buff_periodicAction takes integer this returns nothing

  endfunction

  function s__Buff_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			set s__Buff_duration_true[this]=s__Buff_duration_true[this] - TIMER_TICK
			set s__Buff_timeout[this]=s__Buff_timeout[this] + TIMER_TICK
			call sc__Buff_periodicAction(this)
			if s__Buff_interval[this] > 0. and s__Buff_timeout[this] >= s__Buff_interval[this] then
				loop
					exitwhen s__Buff_timeout[this] < s__Buff_interval[this]
					call sc__Buff_intervalAction(this)
					set s__Buff_timeout[this]=s__Buff_timeout[this] - s__Buff_interval[this]
				endloop
			endif
			if s__Buff_duration_true[this] <= 0. then
				call sc__Buff_deallocate(this)
			endif
  endfunction

  function s__Buff__get_duration takes integer this returns real
			return s__Buff_duration_true[this]
  endfunction

  function s__Buff__set_duration takes integer this,real nv returns nothing
			if nv > 0. then
				if s__Buff_main_timer[this] == null then
					set s__Buff_main_timer[this]=sc__Timer_new(this)
					call TimerStart((s__Buff_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Buff_timerAction)) // INLINED!!
				endif
			elseif nv == 0. then
				if s__Buff_main_timer[this] != null then
					call sc__Timer_release(s__Buff_main_timer[this])
					set s__Buff_main_timer[this]=null
				endif
				set s__Buff_timeout[this]=0.
			else
				call sc__Buff_deallocate(this)
				return
			endif
			set s__Buff_duration_true[this]=nv
  endfunction

  function s__Buff_linkNode takes integer this returns nothing
   local integer b= s__Buff_getUnitRootBuff(s__Buff_target[this])
			if b > 0 then
				loop
					if s__Buff_node_next[b] == - 1 then
						set s__Buff_node_next[b]=this
						set s__Buff_node_prev[this]=b
						exitwhen true
					else
						set b=s__Buff_node_next[b]
					endif
				endloop
			else
				call SaveInteger(s__Buff_HASH, s__Buff_target[this], 0, this)
			endif
  endfunction

  function s__Buff_unlinkNode takes integer this returns nothing
			if this == s__Buff_getUnitRootBuff(s__Buff_target[this]) then
				if s__Buff_node_next[this] > 0 then
					call SaveInteger(s__Buff_HASH, s__Buff_target[this], 0, s__Buff_node_next[this])
					set s__Buff_node_prev[s__Buff_node_next[this]]=- 1
				else
					call RemoveSavedInteger(s__Buff_HASH, s__Buff_target[this], 0)
				endif
			else
				set s__Buff_node_next[s__Buff_node_prev[this]]=s__Buff_node_next[this]
				if s__Buff_node_next[this] > 0 then
					set s__Buff_node_prev[s__Buff_node_next[this]]=s__Buff_node_prev[this]
				endif
			endif
  endfunction

  function s__Buff_relativeTooltip takes integer this returns string
			return "TooltipMissing"
  endfunction

  function s__Buff_create takes integer id,integer caster,integer target,real duration,string name returns integer
   local integer this= s__Buff__allocate()
			set s__Buff_id[this]=id
			set s__Buff_caster[this]=caster
			set s__Buff_target[this]=target
			call s__Buff__set_duration(this,duration)
			set s__Buff_duration_max[this]=duration
			call s__Buff_linkNode(this)
			return this
  endfunction

  function s__Buff_onDestroy takes integer this returns nothing
			if s__Buff_buff_effect[this] > 0 then
				call sc__Effect_kill(s__Buff_buff_effect[this])
				set s__Buff_buff_effect[this]=0
			endif
			call s__Buff_unlinkNode(this)
			if s__Buff_main_timer[this] != null then
				call sc__Timer_release(s__Buff_main_timer[this])
			endif
			set s__Buff_main_timer[this]=null
  endfunction



//library Buff ends
//library Camera:


  function s__Camera_init takes nothing returns nothing
			//call CameraSetupApply(gg_cam_Cam00,true,false)
  endfunction



//library Camera ends
//library Chingho:

		



//library Chingho ends
//library ConstantString:



  function s__ConstantString_statString takes integer index,string s returns string
			return STAT_TYPE_COLOR[index] + s + "|r"
  endfunction

  function s__ConstantString_statStringReal takes integer index,real v,integer jom returns string
			return STAT_TYPE_COLOR[index] + R2SW(v, jom, jom) + "|r"
  endfunction

  function s__ConstantString_statStringPercent takes integer index,real v returns string
			return STAT_TYPE_COLOR[index] + I2S(R2I(v * 100.)) + "%|r"
  endfunction

  function s__ConstantString_statStringInteger takes integer index,integer v returns string
			return STAT_TYPE_COLOR[index] + I2S(v) + "|r"
  endfunction

  function s__ConstantString_onInit takes nothing returns nothing
			set TIER_STRING_COLOR[0]="|cff999999"
			set TIER_STRING_COLOR[1]="|cffffffff"
			set TIER_STRING_COLOR[2]="|cff00ff00"
			set TIER_STRING_COLOR[3]="|cff0099ff"
			set TIER_STRING_COLOR[4]="|cffcc00ff"
			set TIER_STRING_COLOR[5]="|cffff9900"
			set s__STAT_TYPE_NAME[STAT_TYPE_MAXHP]= "체력"
			set s__STAT_TYPE_NAME[STAT_TYPE_MAXMP]= "마나"
			set s__STAT_TYPE_NAME[STAT_TYPE_ATTACK]= "공격력"
			set s__STAT_TYPE_NAME[STAT_TYPE_DEFFENCE]= "방어력"
			set s__STAT_TYPE_NAME[STAT_TYPE_MAGICPOWER]= "주문력"
			set s__STAT_TYPE_NAME[STAT_TYPE_RESISTANCE]= "저항력"
			set s__STAT_TYPE_NAME[STAT_TYPE_ACCURACY]= "정확도"
			set s__STAT_TYPE_NAME[STAT_TYPE_EVASION]= "회피치"
			set s__STAT_TYPE_NAME[STAT_TYPE_ARMOR_PENET]= "방어관통"
			set s__STAT_TYPE_NAME[STAT_TYPE_MAGIC_PENET]= "저항관통"
			set s__STAT_TYPE_NAME[STAT_TYPE_SPELL_BOOST]= "주문가속"
			set s__STAT_TYPE_NAME[STAT_TYPE_HEAL_AMP]= "받는 회복량"
			set s__STAT_TYPE_NAME[STAT_TYPE_MOVEMENT_SPEED]= "이동속도"
			set s__STAT_TYPE_NAME[STAT_TYPE_ATTACK_SPEED]= "공격속도"
			set s__STAT_TYPE_NAME[STAT_TYPE_LUCK]= "행운"
			set s__STAT_TYPE_NAME[STAT_TYPE_ATTACK_RANGE]= "공격 사거리"
			set s__STAT_TYPE_NAME[STAT_TYPE_HPREGEN]= "체력재생"
			set s__STAT_TYPE_NAME[STAT_TYPE_MPREGEN]= "마나재생"
			set STAT_TYPE_COLOR[STAT_TYPE_MAXHP]="|cff00ff00"
			set STAT_TYPE_COLOR[STAT_TYPE_MAXMP]="|cff0099ff"
			set STAT_TYPE_COLOR[STAT_TYPE_ATTACK]="|cffff9900"
			set STAT_TYPE_COLOR[STAT_TYPE_DEFFENCE]="|cff999999"
			set STAT_TYPE_COLOR[STAT_TYPE_MAGICPOWER]="|cff9999ff"
			set STAT_TYPE_COLOR[STAT_TYPE_RESISTANCE]="|cff00ff99"
			set STAT_TYPE_COLOR[STAT_TYPE_ACCURACY]="|cffff00ff"
			set STAT_TYPE_COLOR[STAT_TYPE_EVASION]="|cff99ccff"
			set STAT_TYPE_COLOR[STAT_TYPE_ARMOR_PENET]="|cffff9900"
			set STAT_TYPE_COLOR[STAT_TYPE_MAGIC_PENET]="|cff9999ff"
			set STAT_TYPE_COLOR[STAT_TYPE_SPELL_BOOST]="|cffff99ff"
			set STAT_TYPE_COLOR[STAT_TYPE_HEAL_AMP]="|cffff3333"
			set STAT_TYPE_COLOR[STAT_TYPE_MOVEMENT_SPEED]="|cffffff99"
			set STAT_TYPE_COLOR[STAT_TYPE_ATTACK_SPEED]="|cffffff99"
			set STAT_TYPE_COLOR[STAT_TYPE_LUCK]="|cff00cc00"
			set STAT_TYPE_COLOR[STAT_TYPE_ATTACK_RANGE]="|cff00ffff"
			set STAT_TYPE_COLOR[STAT_TYPE_HPREGEN]="|cff00ff00"
			set STAT_TYPE_COLOR[STAT_TYPE_MPREGEN]="|cff0099ff"
			set STAT_TYPE_ICON[STAT_TYPE_MAXHP]="ui\\widgets\\tooltips\\human\\tooltiphpicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_MAXMP]="ui\\widgets\\tooltips\\human\\tooltipmanaicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_ATTACK]="ui\\widgets\\tooltips\\human\\tooltipattackicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_DEFFENCE]="ui\\widgets\\tooltips\\human\\tooltipdeffenceicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_MAGICPOWER]="ui\\widgets\\tooltips\\human\\tooltipmagicpowericon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_RESISTANCE]="ui\\widgets\\tooltips\\human\\tooltipresistanceicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_ACCURACY]="ui\\widgets\\tooltips\\human\\tooltipaccuracyicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_EVASION]="ui\\widgets\\tooltips\\human\\tooltipevasionicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_ARMOR_PENET]="ui\\widgets\\tooltips\\human\\tooltiparmorpeneticon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_MAGIC_PENET]="ui\\widgets\\tooltips\\human\\tooltipmagicpeneticon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_SPELL_BOOST]="ui\\widgets\\tooltips\\human\\tooltipspellboosticon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_HEAL_AMP]="ui\\widgets\\tooltips\\human\\tooltiphealampicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_MOVEMENT_SPEED]="ui\\widgets\\tooltips\\human\\tooltipmovementspeedicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_ATTACK_SPEED]="ui\\widgets\\tooltips\\human\\tooltipattackspeedicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_LUCK]="ui\\widgets\\tooltips\\human\\tooltipluckicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_ATTACK_RANGE]="ui\\widgets\\tooltips\\human\\tooltipattackrangeicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_HPREGEN]="ui\\widgets\\tooltips\\human\\tooltiphpregenicon.blp"
			set STAT_TYPE_ICON[STAT_TYPE_MPREGEN]="ui\\widgets\\tooltips\\human\\tooltipmpregenicon.blp"
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MAXHP]=""
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MAXMP]=""
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_ATTACK]="일부 무기와 기술의 피해량을 상승시킵니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_DEFFENCE]="해당 수치가 높을수록 받는 물리피해가 감소합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MAGICPOWER]="일부 무기와 기술의 피해량을 상승시킵니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_RESISTANCE]="해당 수치가 높을수록 받는 마법피해가 감소합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_ACCURACY]="해당 수치에 비례해 적에게 가할 수 있는\n최소 피해량이 증가합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_EVASION]="해당 수치에 비례해 적에게 받을 수 있는\n최소 피해량이 감소합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_ARMOR_PENET]="물리피해를 가할 때 해당 수치만큼\n대상의 방어력을 무시합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MAGIC_PENET]="마법피해를 가할 때 해당 수치만큼\n대상의 저항력을 무시합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_SPELL_BOOST]="해당 수치에 비례해 기술의 재사용 대기시간이 감소합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_HEAL_AMP]="현재 받는 회복량을 나타냅니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MOVEMENT_SPEED]="초당 이동거리를 나타내며 실 적용 수치는 최대 522입니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_ATTACK_SPEED]="해당 수치가 높을 수록 공격 주기가 빨라집니다.\n일부 무기는 공격 주기가 해당 수치로 결정되지 않습니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_LUCK]="무슨 좋은 일이 일어날까요?"
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_ATTACK_RANGE]="현재 무기의 공격사거리를 나타냅니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_HPREGEN]="매 초 해당 수치만큼 체력을 회복합니다."
			set STAT_TYPE_DESCRIPTION[STAT_TYPE_MPREGEN]="매 초 해당 수치만큼 마나를 회복합니다."
  endfunction



//library ConstantString ends
//library Damage:



  function s__Damage_triggerRegisterDamageEvent takes trigger t,real de returns nothing
			call TriggerRegisterVariableEvent(t, "udg_EVENT_VALUE", EQUAL, de)
  endfunction

  function s__Damage_setFlag takes integer damage,integer attack,boolean target,boolean aoe,integer interval,integer vector,boolean onhit,boolean ranged returns nothing
			set DAMAGE_TYPE=damage
			set ATTACK_TYPE=attack
			set IS_TARGET=target
			set IS_AOE=aoe
			set INTERVAL_TYPE=interval
			set VECTOR_TYPE=vector
			set IS_ONHIT=onhit
			set IS_RANGED=ranged
  endfunction

  function s__Damage_flagTempleteMeleeAttack takes nothing returns nothing
			call s__Damage_setFlag(DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false)
  endfunction

  function s__Damage_flagTempleteRangedAttack takes nothing returns nothing
			call s__Damage_setFlag(DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Damage_flagTempleteMagicalExplosion takes nothing returns nothing
			call s__Damage_setFlag(DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Damage_flagTempletePhysicalExplosion takes nothing returns nothing
			call s__Damage_setFlag(DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Damage_flagTempleteDOT takes nothing returns nothing
			call s__Damage_setFlag(DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_ETC , false , false , INTERVAL_TYPE_PERIODIC , VECTOR_TYPE_INNER , false , true)
  endfunction
		
  function s__Damage_clearFlag takes nothing returns nothing
			set ATTACK_TYPE=0
			set DAMAGE_TYPE=0
			set IS_TARGET=true
			set IS_AOE=false
			set INTERVAL_TYPE=0
			set VECTOR_TYPE=0
			set IS_ONHIT=false
			set USE_DAMAGE_POSITION=false
			
			set DAMAGE_ATTACKER=0
			set DAMAGE_TARGET=0
			set DAMAGE_LAST=0.
			set DAMAGE_AMOUNT=0.
			set DAMAGE_AMOUNT_ORIGIN=0.
			set DAMAGE_ID=0
  endfunction

  function s__Damage_unitDamageTarget takes integer attacker,integer target,real damage,weapontype wt returns real
   local real armor= 0.
			set DAMAGE_HP_REDUCED=0.
			set DAMAGE_AMOUNT_ORIGIN=damage
			set DAMAGE_AMOUNT=damage
			set DAMAGE_ATTACKER=attacker
			set DAMAGE_TARGET=target
			set DAMAGE_LOWBOUND=( 100 + sc__Unit_prototype__get_accuracy(attacker) ) / ( 100 + sc__Unit_prototype__get_evasion(target) )
			
			if sc__Unit_prototype_getStatus(target,STATUS_DEAD) > 0 or attacker <= 0 or target <= 0 then
				return 0.
			endif
			
			if USE_DAMAGE_POSITION then
				
			else
				
				set DAMAGE_X=sc__Object__get_x(attacker)
				set DAMAGE_Y=sc__Object__get_y(attacker)
			endif
			if DAMAGE_LOWBOUND > 1. then
				set DAMAGE_LOWBOUND=GetRandomReal(1.0, DAMAGE_LOWBOUND)
			else
				set DAMAGE_LOWBOUND=GetRandomReal(DAMAGE_LOWBOUND, 1.0)
			endif
			if DAMAGE_ID == 0 then
				call BJDebugMsg("데미지 ID가 정의되지 않았습니다.")
			endif
			if ATTACK_TYPE == ATTACK_TYPE_BASIC then
				if sc__Unit_prototype_getStatus(attacker,STATUS_BLIND) > 0 or sc__Unit_prototype_getStatus(target,STATUS_EVASION) > 0 then
					call s__Damage_clearFlag()
					return 0.
				endif
			endif
			
			set udg_EVENT_VALUE=0.
			set udg_EVENT_VALUE=DAMAGE_EVENT_MODIFY_STAT
			if DAMAGE_TYPE == DAMAGE_TYPE_TRUE then
			else
				if DAMAGE_TYPE == DAMAGE_TYPE_PHYSICAL then
					set armor=sc__Unit_prototype_getCarculatedStatValue(target,STAT_TYPE_DEFFENCE) - sc__Unit_prototype_getCarculatedStatValue(attacker,STAT_TYPE_ARMOR_PENET)
				elseif DAMAGE_TYPE == DAMAGE_TYPE_MAGICAL then
					set armor=sc__Unit_prototype_getCarculatedStatValue(target,STAT_TYPE_RESISTANCE) - sc__Unit_prototype_getCarculatedStatValue(attacker,STAT_TYPE_MAGIC_PENET)
				endif
				
				if armor >= 0. then
					set DAMAGE_AMOUNT=DAMAGE_AMOUNT * 100. / ( 100. + armor )
				else
					set DAMAGE_AMOUNT=DAMAGE_AMOUNT * 1. - ( armor * 0.01 )
				endif
				
				set DAMAGE_AMOUNT=DAMAGE_AMOUNT * DAMAGE_LOWBOUND
			endif
			
			set udg_EVENT_VALUE=DAMAGE_EVENT_MODIFY_DAMAGE
			
			call UnitDamageTarget((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(attacker)]), s__Agent_INDEX_ORIGIN_HANDLE)), (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0., false, true, ATTACK_TYPE_HERO, DAMAGE_TYPE_MAGIC, wt) // INLINED!!
			
			set udg_EVENT_VALUE=DAMAGE_EVENT_BEFORE_HPREDUCE
			
			if DAMAGE_AMOUNT >= sc__Unit_prototype__get_hp(target) - 0.405 then
				set DAMAGE_HP_REDUCED=sc__Unit_prototype__get_hp(target)
				call sc__Unit_prototype__set_hp(target,1.)
				set DEATH_KILLER=attacker
				call sc__Unit_prototype_plusStatus(target,STATUS_DEAD)
			else
				set DAMAGE_HP_REDUCED=DAMAGE_AMOUNT
				call sc__Unit_prototype__set_hp(target,sc__Unit_prototype__get_hp(target) - DAMAGE_AMOUNT)
			endif
			set DAMAGE_LAST=DAMAGE_HP_REDUCED
			if DAMAGE_TYPE == DAMAGE_TYPE_PHYSICAL then
				call sc__InstantText_setColor(255 , 153 , 0)
			elseif DAMAGE_TYPE == DAMAGE_TYPE_MAGICAL then
				call sc__InstantText_setColor(0 , 153 , 255)
			endif
			set s__InstantText_SIZE=10.
			call sc__InstantText_createForBothPlayer(sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + 75 , I2S(R2I(DAMAGE_AMOUNT)) , sc__Unit_prototype__get_owner(attacker) , sc__Unit_prototype__get_owner(target))
			
			set udg_EVENT_VALUE=DAMAGE_EVENT_AFTER_HPREDUCE
			
			call s__Damage_clearFlag()
			return DAMAGE_HP_REDUCED
  endfunction

  function s__Damage_damageTarget takes integer target,real amount returns real
   local real reduced= 0.
			call s__Damage_clearFlag()
			set DAMAGE_AMOUNT=amount
			
			if DAMAGE_AMOUNT >= sc__Unit_prototype__get_hp(target) - 0.405 then
				set reduced=sc__Unit_prototype__get_hp(target)
				call sc__Unit_prototype__set_hp(target,1.)
				set DEATH_KILLER=0
				call sc__Unit_prototype_plusStatus(target,STATUS_DEAD)
			else
				call sc__Unit_prototype__set_hp(target,sc__Unit_prototype__get_hp(target) - DAMAGE_AMOUNT)
				set reduced=DAMAGE_AMOUNT
			endif
			call s__Damage_clearFlag()
			return reduced
  endfunction




//library Damage ends
//library Event:



  function s__Event_reset takes nothing returns nothing
			set udg_EVENT_VALUE=0.
  endfunction

  function s__Event_activate takes real v returns nothing
			set udg_EVENT_VALUE=v
  endfunction



//library Event ends
//library Explosion:








//Implemented from module ExplosionModule:


		


  function s__Explosion_setDamagePosition takes integer this,real x,real y returns nothing
			set s__Explosion_damage_x[this]=x
			set s__Explosion_damage_y[this]=y
  endfunction

  function s__Explosion_applyDamageFlag takes integer this returns nothing
			call s__Damage_setFlag(s__Explosion_damage_type[this] , s__Explosion_attack_type[this] , s__Explosion_is_target[this] , s__Explosion_is_aoe[this] , s__Explosion_interval_type[this] , s__Explosion_vector_type[this] , s__Explosion_is_onhit[this] , s__Explosion_is_ranged[this])
			set DAMAGE_ID=s__Explosion_damage_id[this]
			set USE_DAMAGE_POSITION=s__Explosion_use_damage_position[this]
			if s__Explosion_use_damage_position[this] then
				set DAMAGE_X=s__Explosion_damage_x[this]
				set DAMAGE_Y=s__Explosion_damage_y[this]
			endif
  endfunction

  function s__Explosion_damageTarget takes integer this,integer target returns real
			call s__Explosion_applyDamageFlag(this)
			return sc__Unit_prototype_damageTarget(s__Explosion_owner[this],target , s__Explosion_damage[this] , s__Explosion_weapon_type[this])
  endfunction

  function s__Explosion_setDamageFlag takes integer this,integer damage,integer attack,boolean target,boolean aoe,integer interval,integer vector,boolean onhit,boolean ranged returns nothing
			set s__Explosion_damage_type[this]=damage
			set s__Explosion_attack_type[this]=attack
			set s__Explosion_is_target[this]=target
			set s__Explosion_is_aoe[this]=aoe
			set s__Explosion_interval_type[this]=interval
			set s__Explosion_vector_type[this]=vector
			set s__Explosion_is_onhit[this]=onhit
			set s__Explosion_is_ranged[this]=ranged
  endfunction

  function s__Explosion_damageFlagTemplateMeleeAttack takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false)
  endfunction

  function s__Explosion_damageFlagTemplateRangedAttack takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Explosion_damageFlagTemplateMagicalExplosion takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Explosion_damageFlagTemplatePhysicalExplosion takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Explosion_damageFlagTemplateTargetMagic takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Explosion_damageFlagTemplateDOT takes integer this returns nothing
			call s__Explosion_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_ETC , false , false , INTERVAL_TYPE_PERIODIC , VECTOR_TYPE_INNER , false , true)
  endfunction



  function s__Explosion_affectFilter takes integer this,integer target returns boolean
			if ( not s__Explosion_affect_enemy[this] and sc__Unit_prototype_isEnemy(target,sc__Unit_prototype__get_owner(s__Explosion_owner[this])) ) then
				return false
			elseif ( not s__Explosion_affect_ally[this] and sc__Unit_prototype_isAlly(target,sc__Unit_prototype__get_owner(s__Explosion_owner[this])) ) then
				return false
			elseif ( not s__Explosion_affect_invincible[this] and sc__Unit_prototype_getStatus(target,STATUS_INVINCIBLE) > 0 ) then
				return false
			elseif ( not s__Explosion_affect_evasion[this] and sc__Unit_prototype_getStatus(target,STATUS_EVASION) > 0 ) then
				return false
			elseif ( not s__Explosion_affect_self[this] and target == s__Explosion_owner[this] ) then
				return false
			elseif sc__Unit_prototype_isUnitType(target,UNIT_TYPE_DEAD) then
				return false
			else
				return true
			endif
  endfunction


  function s__Explosion_rangeFilter takes integer this,integer target returns boolean
			return sc__Unit_prototype_inRange(target,s__Explosion_x[this] , s__Explosion_y[this] , s__Explosion_radius_explosion[this])
  endfunction


		

  function s__Explosion_explosionFilter takes integer this,integer target returns boolean
			if not s__Explosion_affectFilter(this,target) then
				return false
			elseif not sc__Explosion_rangeFilter(this,target) then
				return false
			elseif not sc__Explosion_explosionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Explosion_explosionAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__Explosion_explosionFilter(this,sc__Unit_prototype_get(u)) then
					call sc__Explosion_executeExplosion(this,sc__Unit_prototype_get(u))
					call GroupAddUnit(s__Explosion_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction


  function s__Explosion_clearDistanceValue takes integer this returns nothing
			set s__Explosion_max_distance[this]=- 1.
			set s__Explosion_min_distance[this]=- 1.
			set s__Explosion_nearest[this]=0
			set s__Explosion_furthest[this]=0
  endfunction

  function s__Explosion_adjustNearest takes integer this,integer target,integer except returns nothing
			if target == except then
				return
			endif
			
			if s__Explosion_min_distance[this] < 0. then
				set s__Explosion_min_distance[this]=sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target))
				set s__Explosion_nearest[this]=target
			
			elseif s__Explosion_min_distance[this] > sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target)) then
				set s__Explosion_min_distance[this]=sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target))
				set s__Explosion_nearest[this]=target
			endif
  endfunction

  function s__Explosion_adjustFurthest takes integer this,integer target,integer except returns nothing
			if target == except then
				return
			endif
			
			if s__Explosion_max_distance[this] < 0. then
				set s__Explosion_max_distance[this]=sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target))
				set s__Explosion_furthest[this]=target
			
			elseif s__Explosion_max_distance[this] < sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target)) then
				set s__Explosion_max_distance[this]=sc__Math_distancePoints(s__Explosion_x[this] , s__Explosion_y[this] , sc__Object__get_x(target) , sc__Object__get_y(target))
				set s__Explosion_furthest[this]=target
			endif
  endfunction

  function s__Explosion_beforeExplosion takes integer this returns nothing

  endfunction

  function s__Explosion_afterExplosion takes integer this returns nothing

  endfunction

  function s__Explosion_explosionFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Explosion_executeExplosion takes integer this,integer target returns nothing
			call s__Explosion_damageTarget(this,target)
  endfunction

  function s__Explosion_execute takes integer this returns nothing
			call s__Explosion_setDamagePosition(this,s__Explosion_x[this] , s__Explosion_y[this])
			call sc__Explosion_beforeExplosion(this)
			call s__Explosion_explosionAction(this)
			call sc__Explosion_afterExplosion(this)
			if s__Explosion_count[this] > 0 then
				set s__Explosion_count[this]=s__Explosion_count[this] - 1
				if s__Explosion_count[this] == 0 then
					call sc__Explosion_deallocate(this)
				endif
			endif
  endfunction

  function s__Explosion_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call s__Explosion_execute(this)
  endfunction

  function s__Explosion_activate takes integer this returns nothing
			if s__Explosion_interval[this] > 0. then
				call TimerStart((s__Explosion_main_timer[this] ), (( s__Explosion_interval[this] )*1.0), ( true ), ( function s__Explosion_timerAction)) // INLINED!!
			endif
			if s__Explosion_activate_initial[this] then
				call s__Explosion_execute(this)
			endif
  endfunction

  function s__Explosion_create takes integer owner,real x,real y,real radius returns integer
   local integer this= s__Explosion__allocate()
			set s__Explosion_owner[this]=owner
			set s__Explosion_x[this]=x
			set s__Explosion_y[this]=y
			set s__Explosion_radius_explosion[this]=radius
			set s__Explosion_main_timer[this]=sc__Timer_new(this)
			set s__Explosion_group_wave[this]=sc__Group_new()
			call s__Explosion_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
			return this
  endfunction

  function s__Explosion_onDestroy takes integer this returns nothing
			call sc__Timer_release(s__Explosion_main_timer[this])
			set s__Explosion_main_timer[this]=null
			call sc__Group_release(s__Explosion_group_wave[this])
			set s__Explosion_group_wave[this]=null
  endfunction




  function s__LineExplosion_rangeFilter takes integer this,integer target returns boolean
			return sc__Unit_prototype_inLine(target,s__Explosion_x[this] , s__Explosion_y[this] , s__LineExplosion_x2[this] , s__LineExplosion_y2[this] , s__Explosion_radius_explosion[this])
  endfunction

  function s__LineExplosion_create takes integer owner,real x,real y,real x2,real y2,real radius returns integer
   local integer this= s__LineExplosion__allocate(owner , x , y , radius)
			set s__LineExplosion_x2[this]=x2
			set s__LineExplosion_y2[this]=y2
			return this
  endfunction




  function s__SectorExplosion_rangeFilter takes integer this,integer target returns boolean
			return sc__Unit_prototype_inSector(target,s__Explosion_x[this] , s__Explosion_y[this] , s__Explosion_radius_explosion[this] , s__SectorExplosion_angle[this] , s__SectorExplosion_width[this])
  endfunction

  function s__SectorExplosion_create takes integer owner,real x,real y,real radius,real angle,real width returns integer
   local integer this= s__SectorExplosion__allocate(owner , x , y , radius)
			set s__SectorExplosion_angle[this]=angle
			set s__SectorExplosion_width[this]=width
			return this
  endfunction



//library Explosion ends
//library FixCam:
	//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	// FixCam By 동동주
	// 2021.02.15
	// 
	// 시야나 카메라를 설정하고 나서, 플레이어가 마우스휠을 굴리거나, Insert/Delete 키를 누르면
	// 카메라 설정이 풀려 되돌아가는 현상. 짜증나셨죠?
	//
	// 픽스캠 라이브러리는 사용자가 무슨 난리를 쳐도, 제작자가 설정한 카메라 옵션을 변경하지 못하도록
	// '고정'할 수 있습니다.
	//··············································································
	//
	// [카메라 고정 액션]
	// 픽스캠 - (플레이어)의 카메라를 (카메라 개체)에 고정합니다. [화면 이동 (가능/불가능)]
	//      call FixCamSetup( 플레이어, 카메라 개체, 화면 이동 )
	//      call FixCamSetupEx( 플레이어, 카메라 개체, 화면 이동, 전환시간 )
	// 픽스캠 - (플레이어)의 (카메라 필드)를 (값)으로 고정합니다.
	//      call FixCamSetField( 플레이어, 카메라 필드, 값 )
	//      call FixCamSetFieldEx( 플레이어, 카메라 필드, 값, 전환시간 )
	// 픽스캠 - (플레이어)의 카메라 좌표를 (X), (Y)로 고정합니다.
	//      call FixCamSetField( 플레이어, X, Y )
	//      call FixCamSetFieldEx( 플레이어, X, Y, 전환시간 )
	//
	// [고정 해제 액션]
	// 픽스캠 - (플레이어)의 카메라 고정 설정을 모두 해제합니다.
	//      call FixCamReset( 플레이어 )
	// 픽스캠 - (플레이어)의 카메라 고정 설정 중 (필드)만 해제합니다.
	//      call FixCamResetField( 플레이어, 필드 )
	// 픽스캠 - (플레이어)의 카메라 좌표 고정을 해제합니다.
	//      call FixCamResetPosition( 플레이어 )
	//
	// [기타]
	// 픽스캠 - (플레이어)의 카메라 부드러움 (전환시간)을 설정합니다.
	//      call FixCamSetEase( 플레이어, 전환시간 )
	//
	//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	//··············································································
	//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 function FixCamReset takes player p returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__FIX[id + 0]=false
		set FixCam__FIX[id + 1]=false
		set FixCam__FIX[id + 2]=false
		set FixCam__FIX[id + 3]=false
		set FixCam__FIX[id + 4]=false
		set FixCam__FIX[id + 5]=false
		set FixCam__FIX[id + 6]=false
		set FixCam__FIX[id + 10]=false
		set FixCam__FIX[id + 11]=false
		set FixCam__EASE[id + 0]=0.0
		set FixCam__EASE[id + 1]=0.0
		set FixCam__EASE[id + 2]=0.0
		set FixCam__EASE[id + 3]=0.0
		set FixCam__EASE[id + 4]=0.0
		set FixCam__EASE[id + 5]=0.0
		set FixCam__EASE[id + 6]=0.0
		set FixCam__EASE[id + 10]=0.0
		//set EASE[id+11] = 0.0 /*CAMERA_Y*/
	endfunction
 function FixCamResetField takes player p,camerafield field returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET + GetHandleId(field)
		set FixCam__FIX[id]=false
		set FixCam__EASE[id]=0.0
	endfunction
 function FixCamResetPosition takes player p returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__FIX[id + 10]=false
		//set FIX[id+11] = false
		set FixCam__EASE[id + 10]=0.0
		//set EASE[id+11] = 0.0
	endfunction
	//··············································································
 function FixCamSetEase takes player p,real ease returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__EASE[id + 0]=ease
		set FixCam__EASE[id + 1]=ease
		set FixCam__EASE[id + 2]=ease
		set FixCam__EASE[id + 3]=ease
		set FixCam__EASE[id + 4]=ease
		set FixCam__EASE[id + 5]=ease
		set FixCam__EASE[id + 6]=ease
		set FixCam__EASE[id + 10]=ease
		//set EASE[id+11] = ease /*CAMERA_Y*/
	endfunction
	//··············································································
 function FixCamSetup takes player p,camerasetup cam,boolean pan returns nothing
  local integer id
		
		if p == null then
			return
		endif
		if cam == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__EASE[id + 0]=0.0
		set FixCam__EASE[id + 1]=0.0
		set FixCam__EASE[id + 2]=0.0
		set FixCam__EASE[id + 3]=0.0
		set FixCam__EASE[id + 4]=0.0
		set FixCam__EASE[id + 5]=0.0
		set FixCam__EASE[id + 6]=0.0
		set FixCam__VALUE[id + 0]=CameraSetupGetField(cam, CAMERA_FIELD_TARGET_DISTANCE)
		set FixCam__VALUE[id + 1]=CameraSetupGetField(cam, CAMERA_FIELD_FARZ)
		set FixCam__VALUE[id + 2]=CameraSetupGetField(cam, CAMERA_FIELD_ANGLE_OF_ATTACK)
		set FixCam__VALUE[id + 3]=CameraSetupGetField(cam, CAMERA_FIELD_FIELD_OF_VIEW)
		set FixCam__VALUE[id + 4]=CameraSetupGetField(cam, CAMERA_FIELD_ROLL)
		set FixCam__VALUE[id + 5]=CameraSetupGetField(cam, CAMERA_FIELD_ROTATION)
		set FixCam__VALUE[id + 6]=CameraSetupGetField(cam, CAMERA_FIELD_ZOFFSET)
		set FixCam__FIX[id + 0]=true
		set FixCam__FIX[id + 1]=true
		set FixCam__FIX[id + 2]=true
		set FixCam__FIX[id + 3]=true
		set FixCam__FIX[id + 4]=true
		set FixCam__FIX[id + 5]=true
		set FixCam__FIX[id + 6]=true
		if pan then
			set FixCam__EASE[id + 10]=0.0
			//set EASE[id+11] = 0.0 /*CAMERA_Y*/
			set FixCam__VALUE[id + 10]=CameraSetupGetDestPositionX(cam)
			set FixCam__VALUE[id + 11]=CameraSetupGetDestPositionY(cam)
			set FixCam__FIX[id + 10]=true
			//set FIX[id+11] = true /*CAMERA_Y*/
		endif
	endfunction
 function FixCamSetupEx takes player p,camerasetup cam,boolean pan,real ease returns nothing
  local integer id
		
		if p == null then
			return
		endif
		if cam == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__EASE[id + 0]=ease
		set FixCam__EASE[id + 1]=ease
		set FixCam__EASE[id + 2]=ease
		set FixCam__EASE[id + 3]=ease
		set FixCam__EASE[id + 4]=ease
		set FixCam__EASE[id + 5]=ease
		set FixCam__EASE[id + 6]=ease
		set FixCam__VALUE[id + 0]=CameraSetupGetField(cam, CAMERA_FIELD_TARGET_DISTANCE)
		set FixCam__VALUE[id + 1]=CameraSetupGetField(cam, CAMERA_FIELD_FARZ)
		set FixCam__VALUE[id + 2]=CameraSetupGetField(cam, CAMERA_FIELD_ANGLE_OF_ATTACK)
		set FixCam__VALUE[id + 3]=CameraSetupGetField(cam, CAMERA_FIELD_FIELD_OF_VIEW)
		set FixCam__VALUE[id + 4]=CameraSetupGetField(cam, CAMERA_FIELD_ROLL)
		set FixCam__VALUE[id + 5]=CameraSetupGetField(cam, CAMERA_FIELD_ROTATION)
		set FixCam__VALUE[id + 6]=CameraSetupGetField(cam, CAMERA_FIELD_ZOFFSET)
		set FixCam__FIX[id + 0]=true
		set FixCam__FIX[id + 1]=true
		set FixCam__FIX[id + 2]=true
		set FixCam__FIX[id + 3]=true
		set FixCam__FIX[id + 4]=true
		set FixCam__FIX[id + 5]=true
		set FixCam__FIX[id + 6]=true
		if pan then
			set FixCam__EASE[id + 10]=ease
			//set EASE[id+11] = ease /*CAMERA_Y*/
			set FixCam__VALUE[id + 10]=CameraSetupGetDestPositionX(cam)
			set FixCam__VALUE[id + 11]=CameraSetupGetDestPositionY(cam)
			set FixCam__FIX[id + 10]=true
			//set FIX[id+11] = true /*CAMERA_Y*/
		endif
	endfunction
	//··············································································
 function FixCamSetField takes player p,camerafield field,real value returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET + GetHandleId(field)
		set FixCam__VALUE[id]=value
		set FixCam__EASE[id]=0.0
		set FixCam__FIX[id]=true
	endfunction
 function FixCamSetFieldEx takes player p,camerafield field,real value,real ease returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET + GetHandleId(field)
		set FixCam__VALUE[id]=value
		set FixCam__EASE[id]=ease
		set FixCam__FIX[id]=true
	endfunction
	//··············································································
 function FixCamSetPosition takes player p,real x,real y returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__VALUE[id + 10]=x
		set FixCam__VALUE[id + 11]=y
		set FixCam__EASE[id + 10]=0.0
		//set EASE[id+11] = 0.0
		set FixCam__FIX[id + 10]=true
		//set FIX[id+11] = true
	endfunction
 function FixCamSetPositionEx takes player p,real x,real y,real ease returns nothing
  local integer id
		
		if p == null then
			return
		endif
		
		set id=GetPlayerId(p) * FixCam__OFFSET
		set FixCam__VALUE[id + 10]=x
		set FixCam__VALUE[id + 11]=y
		set FixCam__EASE[id + 10]=ease
		//set EASE[id+11] = ease
		set FixCam__FIX[id + 10]=true
		//set FIX[id+11] = true
	endfunction
	//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 function FixCam__AtEnterFrame takes nothing returns nothing
  local integer id= GetPlayerId(GetLocalPlayer()) * FixCam__OFFSET
		if FixCam__FIX[id + 0] then
			call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, FixCam__VALUE[id + 0], FixCam__EASE[id + 0])
		endif
		if FixCam__FIX[id + 1] then
			call SetCameraField(CAMERA_FIELD_FARZ, FixCam__VALUE[id + 1], FixCam__EASE[id + 1])
		endif
		if FixCam__FIX[id + 2] then
			call SetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK, FixCam__VALUE[id + 2], FixCam__EASE[id + 2])
		endif
		if FixCam__FIX[id + 3] then
			call SetCameraField(CAMERA_FIELD_FIELD_OF_VIEW, FixCam__VALUE[id + 3], FixCam__EASE[id + 3])
		endif
		if FixCam__FIX[id + 4] then
			call SetCameraField(CAMERA_FIELD_ROLL, FixCam__VALUE[id + 4], FixCam__EASE[id + 4])
		endif
		if FixCam__FIX[id + 5] then
			call SetCameraField(CAMERA_FIELD_ROTATION, FixCam__VALUE[id + 5], FixCam__EASE[id + 5])
		endif
		if FixCam__FIX[id + 6] then
			call SetCameraField(CAMERA_FIELD_ZOFFSET, FixCam__VALUE[id + 6], FixCam__EASE[id + 6])
		endif
		if FixCam__FIX[id + 10] then
			call PanCameraToTimed(FixCam__VALUE[id + 10], FixCam__VALUE[id + 11], FixCam__EASE[id + 10])
		endif
	endfunction
	//··············································································
 function FixCam__main takes nothing returns nothing
  local trigger t= CreateTrigger()
		call TriggerAddAction(t, function FixCam__AtEnterFrame)
		call TriggerRegisterTimerEvent(t, FixCam__SYSTEM_TIMEOUT, true)
		set t=null
	endfunction
	//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

//library FixCam ends
//library Frame:

function BlzFrameSetPointPixel takes framehandle frame,framepointtype point,framehandle relative,framepointtype pointrelative,real x,real y returns nothing
	call BlzFrameSetPoint(frame, point, relative, pointrelative, x / 1800., y / 1800.)
endfunction

function BlzFrameSetSizePixel takes framehandle frame,real x,real y returns nothing
	call BlzFrameSetSize(frame, x / 1800., y / 1800.)
endfunction

function BlzFrameSetAbsPointPixel takes framehandle frame,framepointtype point,real x,real y returns nothing
	call BlzFrameSetAbsPoint(frame, point, x, y)
endfunction


//library Frame ends
//library ItemPrototype:




//library ItemPrototype ends
//library LocationEx:
	


  function s__LocationEx__get_x takes nothing returns real
			return GetLocationX(LocationEx__LOC)
  endfunction

  function s__LocationEx__get_y takes nothing returns real
			return GetLocationY(LocationEx__LOC)
  endfunction

  function s__LocationEx__get_z takes nothing returns real
			return GetLocationZ(LocationEx__LOC)
  endfunction

  function s__LocationEx_move takes real x,real y returns nothing
			call MoveLocation(LocationEx__LOC, x, y)
  endfunction

  function s__LocationEx__set_x takes real nx returns nothing
			call MoveLocation(LocationEx__LOC, ((nx )*1.0), (( (GetLocationY(LocationEx__LOC)))*1.0)) // INLINED!!
  endfunction

  function s__LocationEx__set_y takes real ny returns nothing
			call MoveLocation(LocationEx__LOC, (((GetLocationX(LocationEx__LOC)) )*1.0), (( ny)*1.0)) // INLINED!!
  endfunction

  function s__LocationEx_getX takes nothing returns real
			return (GetLocationX(LocationEx__LOC)) // INLINED!!
  endfunction

  function s__LocationEx_getY takes nothing returns real
			return (GetLocationY(LocationEx__LOC)) // INLINED!!
  endfunction

  function s__LocationEx_getZ takes nothing returns real
			return (GetLocationZ(LocationEx__LOC)) // INLINED!!
  endfunction

  function s__LocationEx_getLocalZ takes real x,real y returns real
			call MoveLocation(LocationEx__LOC, ((x )*1.0), (( y)*1.0)) // INLINED!!
			return (GetLocationZ(LocationEx__LOC)) // INLINED!!
  endfunction

  function s__LocationEx_polarProjection takes real distance,real angle returns nothing
			call MoveLocation(LocationEx__LOC, (((GetLocationX(LocationEx__LOC)) + distance * Cos(angle * bj_DEGTORAD) )*1.0), (( (GetLocationY(LocationEx__LOC)) + distance * Sin(angle * bj_DEGTORAD))*1.0)) // INLINED!!
  endfunction

  function s__LocationEx_collisionProjection takes real x,real y returns real
   local item it= CreateItem('gcel', x, y)
   local real ix= GetItemX(it)
   local real iy= GetItemY(it)
			call MoveLocation(LocationEx__LOC, ((ix )*1.0), (( iy)*1.0)) // INLINED!!
			call RemoveItem(it)
			set it=null
			set ix=x - ix
			set iy=y - iy
			return SquareRoot(ix * ix + iy * iy)
  endfunction


 function GetLocalZ takes real x,real y returns real
		call MoveLocation(LocationEx__LOC, x, y)
		return GetLocationZ(LocationEx__LOC)
	endfunction
	

//library LocationEx ends
//library Math:

	
  function s__Math_distancePoints takes real x1,real y1,real x2,real y2 returns real
   local real dx= x2 - x1
   local real dy= y2 - y1
			return SquareRoot(dx * dx + dy * dy)
  endfunction
	
  function s__Math_distancePoints3D takes real x1,real y1,real z1,real x2,real y2,real z2 returns real
   local real dx= x2 - x1
   local real dy= y2 - y1
   local real dz= z2 - z1
			return SquareRoot(dx * dx + dy * dy + dz * dz)
  endfunction
	
  function s__Math_pPX takes real x,real dist,real angle returns real
		return x + dist * Cos(angle * bj_DEGTORAD)
  endfunction
	
  function s__Math_pPY takes real y,real dist,real angle returns real
		return y + dist * Sin(angle * bj_DEGTORAD)
  endfunction
	
  function s__Math_anglePoints takes real x1,real y1,real x2,real y2 returns real
		return bj_RADTODEG * Atan2(y2 - y1, x2 - x1)
  endfunction
	
  function s__Math_anglePoints2 takes real x1,real y1,real z1,real x2,real y2,real z2 returns real
		return bj_RADTODEG * Atan2(z2 - z1, s__Math_distancePoints(x1 , y1 , x2 , y2)) * - 1
  endfunction
		
  function s__Math_inBox takes real x1,real y1,real x2,real y2,real width,real height returns boolean
			return x1 >= x2 and x1 <= x2 + width and y1 <= y2 and y1 >= y2 - height
  endfunction
	
  function s__Math_sign takes real v returns integer
			if v > 0 then
				return 1
			elseif v < 0 then
				return - 1
			else
				return 0
			endif
  endfunction
	
  function s__Math_reduceRate takes real v returns real
			if v >= 0. then
				return 1 - ( 1 / ( 1 + v * 0.01 ) )
			else
				return ( v * 0.01 )
			endif
  endfunction
	
  function s__Math_distanceLP takes real lx1,real ly1,real lx2,real ly2,real tx,real ty returns real
   local real rad= Atan2(ly2 - ly1, lx2 - lx1)
   local real ltx= ( ( lx2 - lx1 ) * Cos(- rad) ) - ( ( ly2 - ly1 ) * Sin(- rad) )
   local real lty= ( ( lx2 - lx1 ) * Sin(- rad) ) + ( ( ly2 - ly1 ) * Cos(- rad) )
   local real ttx= ( ( tx - lx1 ) * Cos(- rad) ) - ( ( ty - ly1 ) * Sin(- rad) )
   local real tty= ( ( tx - lx1 ) * Sin(- rad) ) + ( ( ty - ly1 ) * Cos(- rad) )
			if ttx <= 0 then
				return s__Math_distancePoints(ttx , tty , 0 , 0)
			elseif ttx >= ltx then
				return s__Math_distancePoints(ttx , tty , ltx , lty)
			else
				return RAbsBJ(lty - tty)
			endif
  endfunction
	
  function s__Math_px2Size takes real px returns real
			return px / 1800.
  endfunction

	
	
	
	
	
// scope Math_CollisionFunc begins
	
  function IsUnitInLine takes unit u,real lx1,real ly1,real lx2,real ly2,real size returns boolean
			return s__Math_distanceLP(lx1 , ly1 , lx2 , ly2 , GetUnitX(u) , GetUnitY(u)) <= BlzGetUnitCollisionSize(u) + size
		endfunction
	
  function IsUnitInSector takes unit u,real ox,real oy,real dist,real dir,real width returns boolean
			if IsUnitInRangeXY(u, ox, oy, dist) and Cos(Deg2Rad(s__Math_anglePoints(ox , oy , GetUnitX(u) , GetUnitY(u)) - dir)) >= Cos(Deg2Rad(width / 2)) then
				return true
			elseif IsUnitInLine(u , ox , oy , (((ox )*1.0) + (( dist )*1.0) * Cos((( dir + ( width / 2 ))*1.0) * bj_DEGTORAD)) , (((oy )*1.0) + (( dist )*1.0) * Sin((( dir + ( width / 2 ))*1.0) * bj_DEGTORAD)) , 0) then // INLINED!!
				return true
			elseif IsUnitInLine(u , ox , oy , (((ox )*1.0) + (( dist )*1.0) * Cos((( dir - ( width / 2 ))*1.0) * bj_DEGTORAD)) , (((oy )*1.0) + (( dist )*1.0) * Sin((( dir - ( width / 2 ))*1.0) * bj_DEGTORAD)) , 0) then // INLINED!!
				return true
			else
				return false
			endif
		endfunction
	
// scope Math_CollisionFunc ends


//library Math ends
//library MissileGroup:



  function s__MissileGroup_decay takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call sc__MissileGroup_deallocate(this)
  endfunction

  function s__MissileGroup_setDuration takes integer this,real nv returns nothing
			if nv < 0. then
				return
			endif
			if s__MissileGroup_main_timer[this] == null then
				set s__MissileGroup_main_timer[this]=sc__Timer_new(this)
			endif
			call TimerStart((s__MissileGroup_main_timer[this] ), (( nv )*1.0), ( false ), ( function s__MissileGroup_decay)) // INLINED!!
  endfunction

  function s__MissileGroup_pull takes integer this,integer index returns nothing
   local integer i= index
			loop
				exitwhen not HaveSavedInteger(s__MissileGroup_HASH, this, i + 1)
				call SaveInteger(s__MissileGroup_HASH, this, i, LoadInteger(s__MissileGroup_HASH, this, i + 1))
				call RemoveSavedInteger(s__MissileGroup_HASH, this, i + 1)
				set i=i + 1
			endloop
  endfunction

  function s__MissileGroup_remove takes integer this,integer target returns nothing
   local integer i= 0
			loop
				exitwhen not HaveSavedInteger(s__MissileGroup_HASH, this, i)
				if LoadInteger(s__MissileGroup_HASH, this, i) == target then
					set s__Missile_group_wave[target]=null
					call RemoveSavedInteger(s__MissileGroup_HASH, this, i)
					call s__MissileGroup_pull(this,i)
					exitwhen true
				endif
				set i=i + 1
			endloop
			if not HaveSavedInteger(s__MissileGroup_HASH, this, 0) and s__MissileGroup_main_timer[this] == null then
				call sc__MissileGroup_deallocate(this)
			endif
  endfunction

  function s__MissileGroup_add takes integer this,integer target returns nothing
   local integer i= 0
			loop
				if not HaveSavedInteger(s__MissileGroup_HASH, this, i) then
					call SaveInteger(s__MissileGroup_HASH, this, i, target)
					call sc__Group_release(s__Missile_group_wave[target])
					set s__Missile_group_wave[target]=s__MissileGroup_group_wave[this]
					set s__Missile_group_link[target]=this
					return
				endif
				set i=i + 1
			endloop
  endfunction

  function s__MissileGroup_create takes nothing returns integer
   local integer this= s__MissileGroup__allocate()
			set s__MissileGroup_group_wave[this]=sc__Group_new()
			return this
  endfunction

  function s__MissileGroup_onDestroy takes integer this returns nothing
			call sc__Group_release(s__MissileGroup_group_wave[this])
			set s__MissileGroup_group_wave[this]=null
			if s__MissileGroup_main_timer[this] != null then
				call sc__Timer_release(s__MissileGroup_main_timer[this])
			endif
			set s__MissileGroup_main_timer[this]=null
  endfunction

//Generated destructor of MissileGroup
function s__MissileGroup_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__MissileGroup_V[this]!=-1) then
        return
    endif
    call s__MissileGroup_onDestroy(this)
    set si__MissileGroup_V[this]=si__MissileGroup_F
    set si__MissileGroup_F=this
endfunction



//library MissileGroup ends
//library Mover:





  function s__Mover_stop takes integer this returns nothing
			call IssueImmediateOrder(s__Mover_dummy[this], "stop")
  endfunction

  function s__Mover_move takes integer this,real nx,real ny returns nothing
			call IssuePointOrder(s__Mover_dummy[this], "move", nx, ny)
  endfunction

  function s__Mover_follow takes integer this,widget w returns nothing
			call IssueTargetOrder(s__Mover_dummy[this], "channel", w)
  endfunction

  function s__Mover_getUnitMover takes integer u returns integer
			if HaveSavedInteger(s__Mover_HASH, u, 0) then
				return LoadInteger(s__Mover_HASH, u, 0)
			else
				return 0
			endif
  endfunction

  function s__Mover_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
   local real nx= 0.
   local real ny= 0.
			call SetUnitMoveSpeed(s__Mover_dummy[this], sc__Unit_prototype__get_movement_speed(s__Mover_owner[this]) * s__Mover_velo[this])
			if sc__Unit_prototype_isMoveable(s__Mover_owner[this]) then
				if s__Mover_refresh_facing[this] then
					call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), GetUnitFacing(s__Mover_dummy[this])) // INLINED!!
				endif
				set nx=GetUnitX(s__Mover_dummy[this])
				set ny=GetUnitY(s__Mover_dummy[this])
				call SetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), nx) // INLINED!!
				call SetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), ny) // INLINED!!
				call SetUnitX(s__Mover_dummy[this], nx)
				call SetUnitY(s__Mover_dummy[this], ny)
			else
				call SetUnitX(s__Mover_dummy[this], sc__Object__get_x(s__Mover_owner[this]))
				call SetUnitY(s__Mover_dummy[this], sc__Object__get_y(s__Mover_owner[this]))
			endif
  endfunction

  function s__Mover_triggerAction takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_RIGHT then
				call IssuePointOrder(s__Mover_dummy[(this)], "move", ((BlzGetTriggerPlayerMouseX() )*1.0), (( BlzGetTriggerPlayerMouseY())*1.0)) // INLINED!!
			elseif BlzGetTriggerPlayerKey() == OSKEY_S or BlzGetTriggerPlayerKey() == OSKEY_H then
				call IssueImmediateOrder(s__Mover_dummy[(this)], "stop") // INLINED!!
			endif
  endfunction

  function s__Mover_create takes integer owner returns integer
   local integer this= 0
			if s__Mover_getUnitMover(owner) > 0 then
				call sc__Mover_deallocate(s__Mover_getUnitMover(owner))
			endif
			set this=s__Mover__allocate()
			set s__Mover_owner[this]=owner
			set s__Mover_dummy[this]=s__Unit_prototype_mover_unit[s__Mover_owner[this]]
			call SetUnitX(s__Mover_dummy[this], sc__Object__get_x(s__Mover_owner[this]))
			call SetUnitY(s__Mover_dummy[this], sc__Object__get_y(s__Mover_owner[this]))
			set s__Mover_main_timer[this]=sc__Timer_new(this)
			set s__Mover_main_trigger[this]=sc__Trigger_new(this)
			set s__Mover_main_cond[this]=TriggerAddCondition(s__Mover_main_trigger[this], Condition(function s__Mover_triggerAction))
			call TriggerRegisterPlayerEvent(s__Mover_main_trigger[this], sc__Unit_prototype__get_owner(s__Mover_owner[this]), EVENT_PLAYER_MOUSE_DOWN)
			call BlzTriggerRegisterPlayerKeyEvent(s__Mover_main_trigger[this], sc__Unit_prototype__get_owner(s__Mover_owner[this]), OSKEY_S, 0, true)
			call BlzTriggerRegisterPlayerKeyEvent(s__Mover_main_trigger[this], sc__Unit_prototype__get_owner(s__Mover_owner[this]), OSKEY_H, 0, true)
			call TimerStart((s__Mover_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Mover_timerAction)) // INLINED!!
			call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			call SetUnitMoveSpeed(s__Mover_dummy[this], sc__Unit_prototype__get_movement_speed(s__Mover_owner[this]) * s__Mover_velo[this])
			call SaveInteger(s__Mover_HASH, s__Mover_owner[this], 0, this)
			return this
  endfunction

  function s__Mover_onDestroy takes integer this returns nothing
			call s__LocationEx_collisionProjection(sc__Object__get_x(s__Mover_owner[this]) , sc__Object__get_y(s__Mover_owner[this]))
			call SetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocationX(LocationEx__LOC))) // INLINED!!
			call SetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocationY(LocationEx__LOC))) // INLINED!!
			call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
			call sc__Timer_release(s__Mover_main_timer[this])
			call TriggerRemoveCondition(s__Mover_main_trigger[this], s__Mover_main_cond[this])
			call sc__Trigger_remove(s__Mover_main_trigger[this])
			set s__Mover_main_trigger[this]=null
			set s__Mover_main_cond[this]=null
			set s__Mover_main_timer[this]=null
			call SetUnitMoveSpeed(s__Mover_dummy[this], 10.)
			//call ShowUnit(.dummy,false)
			set s__Mover_dummy[this]=null
			call RemoveSavedInteger(s__Mover_HASH, s__Mover_owner[this], 0)
  endfunction

//Generated destructor of Mover
function s__Mover_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Mover_V[this]!=-1) then
        return
    endif
    call s__Mover_onDestroy(this)
    set si__Mover_V[this]=si__Mover_F
    set si__Mover_F=this
endfunction



//library Mover ends
//library Object:




  function s__Object__get_x takes integer this returns real
			return s__Object_x_true[this]
  endfunction

  function s__Object__get_y takes integer this returns real
			return s__Object_y_true[this]
  endfunction

  function s__Object__get_z takes integer this returns real
			return s__Object_z_true[this]
  endfunction

  function s__Object__get_yaw takes integer this returns real
			return s__Object_yaw_true[this]
  endfunction

  function s__Object__get_pitch takes integer this returns real
			return s__Object_pitch_true[this]
  endfunction

  function s__Object__get_roll takes integer this returns real
			return s__Object_roll_true[this]
  endfunction

  function s__Object__set_x takes integer this,real nv returns nothing
			set s__Object_x_true[this]=nv
  endfunction

  function s__Object__set_y takes integer this,real nv returns nothing
			set s__Object_y_true[this]=nv
  endfunction

  function s__Object__set_z takes integer this,real nv returns nothing
			set s__Object_z_true[this]=nv
  endfunction

  function s__Object__set_yaw takes integer this,real nv returns nothing
			set s__Object_yaw_true[this]=nv
  endfunction

  function s__Object__set_pitch takes integer this,real nv returns nothing
			set s__Object_pitch_true[this]=nv
  endfunction

  function s__Object__set_roll takes integer this,real nv returns nothing
			set s__Object_roll_true[this]=nv
  endfunction

  function s__Object__get_offset_x takes integer this returns real
			return s__Object_offset_x_true[this]
  endfunction

  function s__Object__get_offset_y takes integer this returns real
			return s__Object_offset_y_true[this]
  endfunction

  function s__Object__get_offset_z takes integer this returns real
			return s__Object_offset_z_true[this]
  endfunction

  function s__Object__get_offset_yaw takes integer this returns real
			return s__Object_offset_yaw_true[this]
  endfunction

  function s__Object__get_offset_pitch takes integer this returns real
			return s__Object_offset_pitch_true[this]
  endfunction

  function s__Object__get_offset_roll takes integer this returns real
			return s__Object_offset_roll_true[this]
  endfunction

  function s__Object__set_offset_x takes integer this,real nv returns nothing
			set s__Object_offset_x_true[this]=nv
  endfunction

  function s__Object__set_offset_y takes integer this,real nv returns nothing
			set s__Object_offset_y_true[this]=nv
  endfunction

  function s__Object__set_offset_z takes integer this,real nv returns nothing
			set s__Object_offset_z_true[this]=nv
  endfunction

  function s__Object__set_offset_yaw takes integer this,real nv returns nothing
			set s__Object_offset_yaw_true[this]=nv
  endfunction

  function s__Object__set_offset_pitch takes integer this,real nv returns nothing
			set s__Object_offset_pitch_true[this]=nv
  endfunction

  function s__Object__set_offset_roll takes integer this,real nv returns nothing
			set s__Object_offset_roll_true[this]=nv
  endfunction

  function s__Object_setOrientation takes integer this,real yaw,real pitch,real roll returns nothing
			call sc__Object__set_yaw(this,yaw)
			call sc__Object__set_pitch(this,pitch)
			call sc__Object__set_roll(this,roll)
  endfunction

  function s__Object_move takes integer this,real x,real y,real z returns nothing
			call sc__Object__set_x(this,x)
			call sc__Object__set_y(this,y)
			call sc__Object__set_z(this,z)
  endfunction

  function s__Object_setDirection3D takes integer this,real x1,real y1,real z1,real x2,real y2,real z2 returns integer
			call sc__Object__set_yaw(this,s__Math_anglePoints(x1 , y1 , x2 , y2))
			call sc__Object__set_pitch(this,s__Math_anglePoints(0 , 0 , s__Math_distancePoints(x1 , y1 , x2 , y2) , z2 - z1) * - 1)
			return this
  endfunction
	
  function s__Object_move3DFromOrigin takes integer this,real ox,real oy,real oz,real dist,real ny,real nv returns nothing
			call sc__Object_move(this,(((ox )*1.0) + (( dist * Cos(Deg2Rad(nv)) )*1.0) * Cos((( ny)*1.0) * bj_DEGTORAD)) , (((oy )*1.0) + (( dist * Cos(Deg2Rad(nv)) )*1.0) * Sin((( ny)*1.0) * bj_DEGTORAD)) , oz - Sin(Deg2Rad(nv)) * dist) // INLINED!!
  endfunction
	
  function s__Object_move3D takes integer this,real dist,real ny,real nv returns nothing
			call sc__Object_move(this,(((sc__Object__get_x(this) )*1.0) + (( dist * Cos(Deg2Rad(nv)) )*1.0) * Cos((( ny)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(this) )*1.0) + (( dist * Cos(Deg2Rad(nv)) )*1.0) * Sin((( ny)*1.0) * bj_DEGTORAD)) , sc__Object__get_z(this) - Sin(Deg2Rad(nv)) * dist) // INLINED!!
  endfunction

  function s__Object_onDestroy takes integer this returns nothing
			if s__Object_movement[this] != 0 then
				call sc__Actor_deallocate(s__Object_movement[this])
			endif
  endfunction

	






//library Object ends
//library ProgressBar:




  function s__ProgressBar__get_value takes integer this returns real
			return s__ProgressBar_value_true[this]
  endfunction

  function s__ProgressBar__set_value takes integer this,real nv returns nothing
   local real v= nv
			set s__ProgressBar_value_true[this]=v
			if s__ProgressBar_reverse[this] then
				set v=1. - v
			endif
			call BlzFrameSetVisible(s__ProgressBar_fill[this], v > 0.05 and v <= 1.)
			call BlzFrameClearAllPoints(s__ProgressBar_fill[this])
			call BlzFrameSetPoint(s__ProgressBar_fill[this], FRAMEPOINT_BOTTOMLEFT, s__ProgressBar_backdrop[this], FRAMEPOINT_BOTTOMLEFT, 0.005, 0.005)
			call BlzFrameSetPoint(s__ProgressBar_fill[this], FRAMEPOINT_TOPRIGHT, s__ProgressBar_backdrop[this], FRAMEPOINT_BOTTOMLEFT, ( (((s__ProgressBar_WIDTH)*1.0) / 1800.) - 0.01 ) * v, (((s__ProgressBar_HEIGHT)*1.0) / 1800.) - 0.005) // INLINED!!
  endfunction

  function s__ProgressBar_create takes string name,player forplayer returns integer
   local integer this= s__ProgressBar__allocate()
   local framehandle origin= BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0)
			set s__ProgressBar_backdrop[this]=BlzCreateFrame("MyTextBox", origin, 0, this)
			call BlzFrameSetPoint(s__ProgressBar_backdrop[this], FRAMEPOINT_BOTTOM, origin, FRAMEPOINT_BOTTOM, 0., (((s__ProgressBar_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(s__ProgressBar_backdrop[this], (((s__ProgressBar_WIDTH)*1.0) / 1800.), (((s__ProgressBar_HEIGHT)*1.0) / 1800.)) // INLINED!!
			set s__ProgressBar_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__ProgressBar_backdrop[this], "", this)
			call BlzFrameSetPoint(s__ProgressBar_fill[this], FRAMEPOINT_BOTTOMLEFT, s__ProgressBar_backdrop[this], FRAMEPOINT_BOTTOMLEFT, 0.005, 0.005)
			call BlzFrameSetPoint(s__ProgressBar_fill[this], FRAMEPOINT_TOPRIGHT, s__ProgressBar_backdrop[this], FRAMEPOINT_TOPRIGHT, - 0.005, - 0.005)
			call BlzFrameSetTexture(s__ProgressBar_fill[this], "ReplaceableTextures\\teamcolor\\teamcolor10.blp", 0, true)
			call BlzFrameSetVisible(s__ProgressBar_fill[this], false)
			set s__ProgressBar_text[this]=BlzCreateFrame("MyText", s__ProgressBar_backdrop[this], 0, 0)
			call BlzFrameSetAllPoints(s__ProgressBar_text[this], s__ProgressBar_backdrop[this])
			call BlzFrameSetTextAlignment(s__ProgressBar_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__ProgressBar_text[this], name)
			call BlzFrameSetVisible(s__ProgressBar_backdrop[this], GetLocalPlayer() == forplayer)
			set origin=null
			return this
  endfunction

  function s__ProgressBar_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".backdrop")
	call BlzDestroyFrame(s__ProgressBar_backdrop[this])
	set s__ProgressBar_backdrop[this]=null
//end of: destroyFrame(".backdrop")
//textmacro instance: destroyFrame(".fill")
	call BlzDestroyFrame(s__ProgressBar_fill[this])
	set s__ProgressBar_fill[this]=null
//end of: destroyFrame(".fill")
//textmacro instance: destroyFrame(".text")
	call BlzDestroyFrame(s__ProgressBar_text[this])
	set s__ProgressBar_text[this]=null
//end of: destroyFrame(".text")
  endfunction

//Generated destructor of ProgressBar
function s__ProgressBar_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ProgressBar_V[this]!=-1) then
        return
    endif
    call s__ProgressBar_onDestroy(this)
    set si__ProgressBar_V[this]=si__ProgressBar_F
    set si__ProgressBar_F=this
endfunction



//library ProgressBar ends
//library Round:





  function s__Round_refreshFrame takes nothing returns nothing
   local integer time= ROUND_TIME_REMAIN
   local string minitue= I2S(R2I(time / 60.))
   local string second= I2S(ModuloInteger(R2I(time), 60))
			if StringLength(minitue) < 2 then
				set minitue="0" + minitue
			endif
			if StringLength(second) < 2 then
				set second="0" + second
			endif
			call BlzFrameSetText(s__Round_TEXT, " |r|cffffcc00" + minitue + ":" + second + "|r")
			call BlzFrameSetText(s__Round_ROUND_TEXT, I2S(s__Round_ROUND))
  endfunction

  function s__Round_timerAction takes nothing returns nothing
			set ROUND_TIME_REMAIN=ROUND_TIME_REMAIN - 1
			if ROUND_TIME_REMAIN <= 0 then
				call TriggerEvaluate(st__Wave_spawn) // INLINED!!
				if s__Round_ROUND > 0 then
					call TriggerEvaluate(st__Game_addLevel) // INLINED!!
					call TriggerEvaluate(st__Guardians_addLevel) // INLINED!!
					call TriggerEvaluate(st__TreeOfLife_addLevel) // INLINED!!
					call TriggerEvaluate(st__SkillShop_addLevel) // INLINED!!
				endif
				set s__Round_ROUND=s__Round_ROUND + 1
				set ROUND_TIME_REMAIN=ROUND_TIME
			endif
			call s__Round_refreshFrame()
  endfunction

  function s__Round_init takes nothing returns nothing
			set s__Round_TIMER=sc__Timer_new(0)
			set ROUND_TIME_REMAIN=ROUND_TIME_INITIAL
			call TimerStart((s__Round_TIMER ), (( 1. )*1.0), ( true ), ( function s__Round_timerAction)) // INLINED!!
			
			set s__Round_BACKDROP=BlzCreateFrame("MyTextBox", FRAME_ORIGIN, 0, 0)
			set s__Round_TEXT=BlzCreateFrame("MyText", FRAME_ORIGIN, 0, 0)
			call BlzFrameSetPoint((s__Round_TEXT ), ( FRAMEPOINT_BOTTOMRIGHT ), ( FRAME_PORTRAIT_BACKDROP ), ( FRAMEPOINT_TOPLEFT ), (( - 12 )*1.0) / 1800., (( 16)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetText(s__Round_TEXT, "|cffffcc0000:" + I2S(ROUND_TIME_REMAIN) + "|r")
			call BlzFrameSetPoint((s__Round_BACKDROP ), ( FRAMEPOINT_TOPLEFT ), ( s__Round_TEXT ), ( FRAMEPOINT_TOPLEFT ), (( - 8 )*1.0) / 1800., (( 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetPoint((s__Round_BACKDROP ), ( FRAMEPOINT_BOTTOMRIGHT ), ( s__Round_TEXT ), ( FRAMEPOINT_BOTTOMRIGHT ), (( 8 )*1.0) / 1800., (( - 8)*1.0) / 1800.) // INLINED!!
			set s__Round_ICON=BlzCreateFrameByType("BACKDROP", "", FRAME_ORIGIN, "", 0)
			call BlzFrameSetPoint(s__Round_ICON, FRAMEPOINT_BOTTOMRIGHT, s__Round_BACKDROP, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize((s__Round_ICON ), (( 32 )*1.0) / 1800., (( 32)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__Round_ICON, "ReplaceableTextures\\Commandbuttons\\BTNGhoul.blp", 0, true)
			set s__Round_ROUND_BACKDROP=BlzCreateFrameByType("BACKDROP", "", FRAME_ORIGIN, "", 0)
			call BlzFrameSetPoint(s__Round_ROUND_BACKDROP, FRAMEPOINT_BOTTOMRIGHT, s__Round_ICON, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize((s__Round_ROUND_BACKDROP ), (( 32 )*1.0) / 1800., (( 32)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__Round_ROUND_BACKDROP, "ui\\console\\human\\human-transport-slot.blp", 0, true)
			set s__Round_ROUND_TEXT=BlzCreateFrame("MyText", FRAME_ORIGIN, 0, 0)
			call BlzFrameSetPoint(s__Round_ROUND_TEXT, FRAMEPOINT_CENTER, s__Round_ROUND_BACKDROP, FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetTextAlignment(s__Round_ROUND_TEXT, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__Round_ROUND_TEXT, "0")
  endfunction



//library Round ends
//library TimerUtils:
//*********************************************************************
//* TimerUtils (Purple flavor for 1.23b or later)
//* ----------
//*
//*  To implement it , create a custom text trigger called TimerUtils
//* and paste the contents of this script there.
//*
//*  To copy from a map to another, copy the trigger holding this
//* library to your map.
//*
//* (requires vJass)   More scripts: http://www.wc3c.net/
//*
//* For your timer needs:
//*  * Attaching
//*  * Recycling (with double-free protection)
//*
//* set t=NewTimer()      : Get a timer (alternative to CreateTimer)
//* ReleaseTimer(t)       : Relese a timer (alt to DestroyTimer)
//* SetTimerData(t,2)     : Attach value 2 to timer
//* GetTimerData(t)       : Get the timer's value.
//*                         You can assume a timer's value is 0
//*                         after NewTimer.
//*
//* Purple Flavor: Slower than the red flavor by a multiplication and a
//*             division, and as such faster than the blue flavor. Has
//*             a theoretical limit of timers, which is HASH_SIZE, but
//*             you should keep your timer count below 3/4 of that to
//*             insure good performance of the NewTimer function.
//*
//* Credits:  * Hash algorithm by Cohadar (used in an early version
//*             of his ABCT timer system)
//*
//*           * TimerUtils "interface" by Vexorian.
//*
//*           * This library by Iron_Doors.
//*
//********************************************************************

//================================================================

    //==================================================================================================
    
    function SetTimerData takes timer t,integer value returns nothing
        call sg__TimerUtils__Data_set(GetHandleId(t) * HASH_UP / HASH_DOWN + HASH_BIAS,value)
    endfunction

    function GetTimerData takes timer t returns integer
        return sg__TimerUtils__Data_get(GetHandleId(t) * HASH_UP / HASH_DOWN + HASH_BIAS)
    endfunction

    //==========================================================================================

    //==========================================================================================
    function NewTimer takes nothing returns timer
     local timer t
        if ( TimerUtils__tN == 0 ) then
            loop
                set t=CreateTimer()
                set TimerUtils__tH[0]=GetHandleId(t) * HASH_UP / HASH_DOWN + HASH_BIAS
                exitwhen sg__TimerUtils__Timer_get(TimerUtils__tH[0]) == null
            endloop
            call sg__TimerUtils__Timer_set(TimerUtils__tH[0],t)
        else
            set TimerUtils__tN=TimerUtils__tN - 1
        endif
        call sg__TimerUtils__Data_set(TimerUtils__tH[TimerUtils__tN],0)
	set t=null
     return sg__TimerUtils__Timer_get(TimerUtils__tH[TimerUtils__tN])
    endfunction

    //==========================================================================================
    function ReleaseTimer takes timer t returns nothing
        if ( t == null ) then
            return
        endif
        call PauseTimer(t)
        set TimerUtils__tH[TimerUtils__tN]=GetHandleId(t) * HASH_UP / HASH_DOWN + HASH_BIAS
        if ( sg__TimerUtils__Data_get(TimerUtils__tH[TimerUtils__tN]) == TimerUtils__HELD ) then
            return
        endif
        call sg__TimerUtils__Data_set(TimerUtils__tH[TimerUtils__tN],TimerUtils__HELD)
        set TimerUtils__tN=TimerUtils__tN + 1
    endfunction
	//===========================================================================================
 function NewGroup takes nothing returns group
  local group g
		   if ( TimerUtils__gN == 0 ) then
			   loop
				   set g=CreateGroup()
				   set TimerUtils__gH[0]=GetHandleId(g) * HASH_UP / HASH_DOWN + HASH_BIAS
				   exitwhen sg__TimerUtils__Group_get(TimerUtils__gH[0]) == null
			   endloop
			   call sg__TimerUtils__Group_set(TimerUtils__gH[0],g)
		   else
			   set TimerUtils__gN=TimerUtils__gN - 1
		   endif
	   	set g=null
		return sg__TimerUtils__Group_get(TimerUtils__gH[TimerUtils__gN])
	   endfunction
   
	//==========================================================================================
 function ReleaseGroup takes group g returns nothing
		if ( g == null ) then
			return
		endif
		call GroupClear(g)
		set TimerUtils__gH[TimerUtils__gN]=GetHandleId(g) * HASH_UP / HASH_DOWN + HASH_BIAS
		set TimerUtils__gN=TimerUtils__gN + 1
	endfunction
	//==========================================================================================
    function TimerUtils__init takes nothing returns nothing
	call ReleaseTimer(NewTimer())
	call ReleaseGroup(NewGroup())
    endfunction


//library TimerUtils ends
//library Tip:



  function s__Tip_act takes nothing returns nothing
			call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 10., "\n|cffffcc00정보 : |r" + s__Tip_TIPS[GetRandomInt(0, s__Tip_TIP_MAX)])
			call PlaySoundBJ(gg_snd_Hint)
  endfunction

  function s__Tip_init takes nothing returns nothing
			call TriggerRegisterTimerEvent(s__Tip_TRIGGER, s__Tip_TIP_INTERVAL, true)
			call TriggerAddCondition(s__Tip_TRIGGER, Condition(function s__Tip_act))
			set s__Tip_TIPS[0]="|cffffcc00스킬 아이콘을 우클릭하여 빠른 시전 설정을 할 수 있습니다.|r\n|cff999999사용 안함|r |cffffcc00-> 사거리 표시 ->|r |cff00ffff즉시 사용|r |cffffcc00순으로 변경됩니다.|r"
			set s__Tip_TIPS[1]="|cff00ffff스킬 아이콘 클릭|r |cffffcc00액션은|r|cff00ffff Shift + 스킬 단축키 입력|r|cffffcc00으로도 발동시킬 수 있습니다.|r"
			set s__Tip_TIPS[2]=ABILITY_STRING_WEAPON + "|cffffcc00 능력은 한 종류만 사용 가능하며 여러 |r" + ABILITY_STRING_WEAPON + " |cffffcc00능력을 배웠을 경우|r\n|cff00ffff스킬 아이콘 클릭|r|cffffcc00으로 사용할 능력을 설정할 수 있습니다.|r"
			set s__Tip_TIPS[3]="|cffffcc00능력마다 최소 재사용 대기시간이 존재하며 해당 시간보다 재사용 시간을 적게 줄일 수 없습니다.|r"
			set s__Tip_TIPS[4]="|cffffcc00캐릭터가 최초로 보유한 능력은 캐릭터의 레벨이 올라갈 때 마다 같이 레벨이 상승합니다."
			set s__Tip_TIP_MAX=4
  endfunction



//library Tip ends
//library Tombstone:




  function s__Tombstone_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
   local real val= 0.
			if s__Tombstone_GAME_OVER then
				call sc__Unit_prototype__set_hp(s__Tombstone_owner[this],1.)
				call BlzFrameSetText(s__Tombstone_text[this], "|cffff0000∞|r")
				call BlzFrameSetScale(s__Tombstone_text[this], 2.0)
			else
				call sc__Unit_prototype_restoreHP(s__Tombstone_owner[this],sc__Unit_prototype__get_maxhp(s__Tombstone_owner[this]) * s__Tombstone_HEAL_PER_SEC * s__Tombstone_TICK)
				set val=( sc__Unit_prototype__get_maxhp(s__Tombstone_owner[this]) - sc__Unit_prototype__get_hp(s__Tombstone_owner[this]) ) / ( ( sc__Unit_prototype__get_maxhp(s__Tombstone_owner[this]) * s__Tombstone_HEAL_PER_SEC + sc__Unit_prototype__get_hpregen(s__Tombstone_owner[this]) ) * sc__Unit_prototype_getCarculatedStatValue(s__Tombstone_owner[this],STAT_TYPE_HEAL_AMP) )
				call BlzFrameSetText(s__Tombstone_text[this], "|cffff0000" + I2S(R2I(val) + 1) + "|r")
			endif
  endfunction

  function s__Tombstone_create takes integer u returns integer
   local integer this= 0
			if not s__Unit_prototype_is_revive[u] then
				return 0
			endif
			set this=s__Tombstone__allocate()
			set s__Tombstone_owner[this]=u
			set s__Tombstone_ef[this]=sc__Effect_create(s__Tombstone_EFFECT_PATH1 , sc__Object__get_x(s__Tombstone_owner[this]) , sc__Object__get_y(s__Tombstone_owner[this]) , 0. , 270.)
			set s__Tombstone_main_timer[this]=sc__Timer_new(this)
			call TimerStart((s__Tombstone_main_timer[this] ), (( s__Tombstone_TICK )*1.0), ( true ), ( function s__Tombstone_timerAction)) // INLINED!!
			set s__Tombstone_text[this]=BlzCreateFrame("MyTextLarge", FRAME_GAME_UI, 0, 0)
			call BlzFrameSetPoint(s__Tombstone_text[this], FRAMEPOINT_CENTER, FRAME_PORTRAIT_BACKDROP, FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetVisible(s__Tombstone_text[this], GetLocalPlayer() == sc__Unit_prototype__get_owner(s__Tombstone_owner[this]))
			set s__Tombstone_THIS[s__Tombstone_owner[this]]=this
			return this
  endfunction

  function s__Tombstone_onDestroy takes integer this returns nothing
   local integer eff= sc__Effect_setDuration(sc__Effect_setAnim(sc__Effect_create(s__Tombstone_EFFECT_PATH2 , sc__Object__get_x(s__Tombstone_owner[this]) , sc__Object__get_y(s__Tombstone_owner[this]) , 0. , 270.),ANIM_TYPE_DEATH),3.33)
			set s__Effect_want_remove[eff]=true
			call sc__Timer_release(s__Tombstone_main_timer[this])
			set s__Tombstone_main_timer[this]=null
			set s__Effect_want_remove[s__Tombstone_ef[this]]=true
			call sc__Object_deallocate(s__Tombstone_ef[this])
			set s__Tombstone_ef[this]=0
//textmacro instance: destroyFrame(".text")
	call BlzDestroyFrame(s__Tombstone_text[this])
	set s__Tombstone_text[this]=null
//end of: destroyFrame(".text")
			
			set s__Tombstone_THIS[s__Tombstone_owner[this]]=0
  endfunction

//Generated destructor of Tombstone
function s__Tombstone_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Tombstone_V[this]!=-1) then
        return
    endif
    call s__Tombstone_onDestroy(this)
    set si__Tombstone_V[this]=si__Tombstone_F
    set si__Tombstone_F=this
endfunction

  function s__Tombstone_death takes nothing returns nothing
			if DEATH_UNIT <= 0 then
				return
			endif
			if s__Tombstone_THIS[DEATH_UNIT] <= 0 then
				call s__Tombstone_create(DEATH_UNIT)
			endif
  endfunction

  function s__Tombstone_revive takes nothing returns nothing
			if REVIVE_UNIT <= 0 then
				return
			endif
			if s__Tombstone_THIS[REVIVE_UNIT] > 0 then
				call s__Tombstone_deallocate(s__Tombstone_THIS[REVIVE_UNIT])
			endif
  endfunction

  function s__Tombstone_onInit takes nothing returns nothing
			call TriggerAddCondition(DEATH_TRIGGER, Condition(function s__Tombstone_death))
			call TriggerAddCondition(REVIVE_TRIGGER, Condition(function s__Tombstone_revive))
  endfunction



//library Tombstone ends
//library TreeOfLife:
	



  function s__TreeOfLife__get_X takes nothing returns real
			return GetRectCenterX(gg_rct_spawn)
  endfunction

  function s__TreeOfLife__get_Y takes nothing returns real
			return GetRectCenterY(gg_rct_spawn)
  endfunction

  function s__TreeOfLife_refreshFrame takes nothing returns nothing
   local real v= sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT) / sc__Unit_prototype__get_maxhp(s__TreeOfLife_UNIT)
			call BlzFrameSetVisible(s__TreeOfLife_DEATH_OVERLAY, sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT) <= 0.)
			call BlzFrameSetVisible(s__TreeOfLife_GAUGE_FILL, v > 0.025)
			call BlzFrameSetSize((s__TreeOfLife_GAUGE_FILL ), (( ( s__TreeOfLife_WIDTH - s__TreeOfLife_ICON_SIZE ) * v )*1.0) / 1800., (( s__TreeOfLife_HEIGHT)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetText(s__TreeOfLife_HP_TEXT, I2S(R2I(sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT))) + " / " + I2S(R2I(sc__Unit_prototype__get_maxhp(s__TreeOfLife_UNIT))))
  endfunction

  function s__TreeOfLife__set_HP takes real nv returns nothing
			call sc__Unit_prototype__set_hp(s__TreeOfLife_UNIT,nv)
			call s__TreeOfLife_refreshFrame()
  endfunction

  function s__TreeOfLife__get_HP takes nothing returns real
			return sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT)
  endfunction

  function s__TreeOfLife__get_MAXHP takes nothing returns real
			return sc__Unit_prototype__get_maxhp(s__TreeOfLife_UNIT)
  endfunction

  function s__TreeOfLife_addLevel takes nothing returns nothing
			call sc__Unit_prototype__set_level(s__TreeOfLife_UNIT,(s__Unit_prototype_level_true[(s__TreeOfLife_UNIT)]) + 1) // INLINED!!
  endfunction

  function s__TreeOfLife_timerAction takes nothing returns nothing
   local integer i= GetRandomInt(0, 2)
   local unit u= null
   local integer ud= 0
   local real r= 0.
   local integer ef= 0
   local string s
			
			set i=0
			loop
				set u=BlzGroupUnitAt(Undead_GROUP, i)
				//exitwhen i >= BlzGroupGetSize(Undead_GROUP)
				exitwhen u == null
				set ud=sc__Unit_prototype_get(u)
				if sc__Unit_prototype_inRange(ud,(GetRectCenterX(gg_rct_spawn)) , (GetRectCenterY(gg_rct_spawn)) , s__TreeOfLife_RANGE) and not sc__Unit_prototype_isUnitType(ud,UNIT_TYPE_DEAD) then // INLINED!!
					set r=s__Damage_damageTarget(ud , sc__Unit_prototype__get_maxhp(ud) * 0.1)
					call s__TreeOfLife__set_HP((sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT)) - r) // INLINED!!
					set ef=sc__Effect_create(s__TreeOfLife_EFFECT_PATH2 , sc__Object__get_x(ud) , sc__Object__get_y(ud) , 0. , 270.)
					call sc__Effect_setScale(ef,0.75)
					call sc__Effect_setDuration(ef,2.)
				endif
				set i=i + 1
				set u=null
			endloop
			call s__TreeOfLife_refreshFrame()
			if (sc__Unit_prototype__get_hp(s__TreeOfLife_UNIT)) <= 0.405 then // INLINED!!
				call TriggerEvaluate(st__TreeOfLife_end) // INLINED!!
			endif
			set u=null
  endfunction

  function s__TreeOfLife_cond takes nothing returns nothing
			if GetTriggerPlayer() == GetLocalPlayer() then
				call BlzFrameSetEnable(s__TreeOfLife_BUTTON, false)
				call BlzFrameSetEnable(s__TreeOfLife_BUTTON, true)
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_ENTER then
					set s__TreeOfLife_IN=true
				elseif BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_LEAVE then
					set s__TreeOfLife_IN=false
				elseif BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_LEFT then
					if s__TreeOfLife_IN then
						call PanCameraToTimed((GetRectCenterX(gg_rct_spawn)), (GetRectCenterY(gg_rct_spawn)), 0.) // INLINED!!
					endif
				endif
			endif
  endfunction

  function s__TreeOfLife_init takes nothing returns nothing
   local integer i= 0
			set s__TreeOfLife_MAIN_TRIGGER=sc__Trigger_new(0)
			set s__TreeOfLife_MAIN_COND=TriggerAddCondition(s__TreeOfLife_MAIN_TRIGGER, Condition(function s__TreeOfLife_cond))
			set s__TreeOfLife_UNIT=sc__Unit_create(PLAYER_GUARDIANS , 'G001' , (GetRectCenterX(gg_rct_spawn)) , (GetRectCenterY(gg_rct_spawn)) , 270.) // INLINED!!
			call sc__Unit_prototype_setAnim(s__TreeOfLife_UNIT,"stand alternate upgrade first second")
			call sc__Unit_prototype_plusStatus(s__TreeOfLife_UNIT,STATUS_CAST)
			call sc__Unit_prototype_plusStatus(s__TreeOfLife_UNIT,STATUS_INVINCIBLE)
			call sc__Effect_setScale(s__Unit_prototype_facing_circle[s__TreeOfLife_UNIT],128. / 100.)
			call sc__Object__set_x(s__TreeOfLife_UNIT,(GetRectCenterX(gg_rct_spawn))) // INLINED!!
			call sc__Object__set_y(s__TreeOfLife_UNIT,(GetRectCenterY(gg_rct_spawn))) // INLINED!!
			set s__TreeOfLife_MAIN_TIMER=sc__Timer_new(0)
			call TimerStart((s__TreeOfLife_MAIN_TIMER ), (( s__TreeOfLife_TICK )*1.0), ( true ), ( function s__TreeOfLife_timerAction)) // INLINED!!
			set s__TreeOfLife_ICON=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint((s__TreeOfLife_ICON ), ( FRAMEPOINT_BOTTOMLEFT ), ( FRAME_MINIMAP_BACKDROP ), ( FRAMEPOINT_TOPLEFT ), (( 0 )*1.0) / 1800., (( 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__TreeOfLife_ICON ), (( s__TreeOfLife_ICON_SIZE )*1.0) / 1800., (( s__TreeOfLife_ICON_SIZE)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__TreeOfLife_ICON, "ReplaceableTextures\\CommandButtons\\BTNTreeOfLife.blp", 0, true)
			set s__TreeOfLife_DEATH_OVERLAY=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetAllPoints(s__TreeOfLife_DEATH_OVERLAY, s__TreeOfLife_ICON)
			call BlzFrameSetTexture(s__TreeOfLife_DEATH_OVERLAY, "ReplaceableTextures\\teamcolor\\teamcolor00.blp", 0, true)
			call BlzFrameSetAlpha(s__TreeOfLife_DEATH_OVERLAY, 128)
			call BlzFrameSetVisible(s__TreeOfLife_DEATH_OVERLAY, false)
			set s__TreeOfLife_BUTTON=BlzCreateFrameByType("BUTTON", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetAllPoints(s__TreeOfLife_BUTTON, s__TreeOfLife_ICON)
			call BlzTriggerRegisterFrameEvent(s__TreeOfLife_MAIN_TRIGGER, s__TreeOfLife_BUTTON, FRAMEEVENT_MOUSE_LEAVE)
			call BlzTriggerRegisterFrameEvent(s__TreeOfLife_MAIN_TRIGGER, s__TreeOfLife_BUTTON, FRAMEEVENT_MOUSE_ENTER)
			loop
				exitwhen i >= PLAYER_MAX
				call TriggerRegisterPlayerEvent(s__TreeOfLife_MAIN_TRIGGER, Player(i), EVENT_PLAYER_MOUSE_DOWN)
				set i=i + 1
			endloop
			set s__TreeOfLife_GAUGE_BACKDROP=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(s__TreeOfLife_GAUGE_BACKDROP, FRAMEPOINT_BOTTOMLEFT, s__TreeOfLife_ICON, FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
			call BlzFrameSetSize((s__TreeOfLife_GAUGE_BACKDROP ), (( s__TreeOfLife_WIDTH - s__TreeOfLife_ICON_SIZE )*1.0) / 1800., (( s__TreeOfLife_HEIGHT)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__TreeOfLife_GAUGE_BACKDROP, "ReplaceableTextures\\teamcolor\\teamcolor00.blp", 0, true)
			call BlzFrameSetAlpha(s__TreeOfLife_GAUGE_BACKDROP, 128)
			set s__TreeOfLife_GAUGE_FILL=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(s__TreeOfLife_GAUGE_FILL, FRAMEPOINT_BOTTOMLEFT, s__TreeOfLife_ICON, FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
			call BlzFrameSetTexture(s__TreeOfLife_GAUGE_FILL, "ReplaceableTextures\\teamcolor\\teamcolor06.blp", 0, true)
			call BlzFrameSetVisible(s__TreeOfLife_GAUGE_FILL, false)
			set s__TreeOfLife_HP_TEXT=BlzCreateFrame("MyText", FRAME_GAME_UI, 0, 0)
			call BlzFrameSetPoint(s__TreeOfLife_HP_TEXT, FRAMEPOINT_CENTER, s__TreeOfLife_GAUGE_BACKDROP, FRAMEPOINT_CENTER, 0., 0.)
			call s__TreeOfLife_refreshFrame()
  endfunction

  function s__TreeOfLife_end takes nothing returns nothing
			call sc__Unit_prototype_plusStatus(s__TreeOfLife_UNIT,STATUS_DEAD)
			call PauseTimer((s__TreeOfLife_MAIN_TIMER)) // INLINED!!
			call s__TreeOfLife__set_HP(0.)
			call TriggerEvaluate(st__Game_defeat) // INLINED!!
  endfunction



//library TreeOfLife ends
//library Trigger:



	
	
  function s__Trigger_setData takes trigger t,integer data returns nothing
			call SaveInteger(s__Trigger_HASH, GetHandleId(t), 0, data)
  endfunction
	
  function s__Trigger_getData takes trigger t returns integer
			return LoadInteger(s__Trigger_HASH, GetHandleId(t), 0)
  endfunction
	
  function s__Trigger_getDataEx takes nothing returns integer
			return (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
  endfunction
		
  function s__Trigger_new takes integer data returns trigger
			set Trigger__GENERIC=null
			set Trigger__GENERIC=CreateTrigger()
			call SaveInteger(s__Trigger_HASH, GetHandleId((Trigger__GENERIC )), 0, ( data)) // INLINED!!
			return Trigger__GENERIC
  endfunction
	
  function s__Trigger_removeData takes trigger t returns nothing
			call RemoveSavedInteger(s__Trigger_HASH, GetHandleId(t), 0)
  endfunction
	
  function s__Trigger_remove takes trigger t returns nothing
			call RemoveSavedInteger(s__Trigger_HASH, GetHandleId((t)), 0) // INLINED!!
			call DestroyTrigger(t)
  endfunction
	
	

//library Trigger ends
//library UI:





  function s__ChinghoFrame_setTarget takes integer this,integer cid returns nothing
			set s__ChinghoFrame_id[this]=cid
			if cid > 0 then
				call BlzFrameSetTexture(s__ChinghoFrame_icon1[this], "ReplaceableTextures\\CommandButtons\\" + (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				call BlzFrameSetTexture(s__ChinghoFrame_icon2[this], "ReplaceableTextures\\CommandButtons\\" + (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				call BlzFrameSetText(s__ChinghoFrame_name[this], (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_NAME))) // INLINED!!
			elseif cid < 0 then
				call BlzFrameSetTexture(s__ChinghoFrame_icon1[this], "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
				call BlzFrameSetTexture(s__ChinghoFrame_icon2[this], "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
				call BlzFrameSetText(s__ChinghoFrame_name[this], "???")
			else
				call BlzFrameSetTexture(s__ChinghoFrame_icon1[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetTexture(s__ChinghoFrame_icon2[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetText(s__ChinghoFrame_name[this], "")
			endif
  endfunction

  function s__ChinghoFrame_create takes framehandle parent,framehandle pivot returns integer
   local integer this= s__ChinghoFrame__allocate()
			set s__ChinghoFrame_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", parent, "", 0)
			call BlzFrameSetPoint(s__ChinghoFrame_backdrop[this], FRAMEPOINT_TOPLEFT, pivot, FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__ChinghoFrame_backdrop[this], (((UI___STAT1_WIDTH)*1.0) / 1800.), (((UI___CHINGHO_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__ChinghoFrame_backdrop[this], "textures\\black32.blp", 0, true)
			set s__ChinghoFrame_icon1[this]=BlzCreateFrameByType("BACKDROP", "", s__ChinghoFrame_backdrop[this], "", 0)
			call BlzFrameSetPoint(s__ChinghoFrame_icon1[this], FRAMEPOINT_TOPLEFT, s__ChinghoFrame_backdrop[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__ChinghoFrame_icon1[this], (((UI___CHINGHO_HEIGHT)*1.0) / 1800.), (((UI___CHINGHO_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__ChinghoFrame_icon1[this], "textures\\black32.blp", 0, true)
			set s__ChinghoFrame_icon2[this]=BlzCreateFrameByType("BACKDROP", "", s__ChinghoFrame_backdrop[this], "", 0)
			call BlzFrameSetPoint(s__ChinghoFrame_icon2[this], FRAMEPOINT_TOPRIGHT, s__ChinghoFrame_backdrop[this], FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetSize(s__ChinghoFrame_icon2[this], (((UI___CHINGHO_HEIGHT)*1.0) / 1800.), (((UI___CHINGHO_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__ChinghoFrame_icon2[this], "textures\\black32.blp", 0, true)
			set s__ChinghoFrame_name[this]=BlzCreateFrame("MyTextSmall", s__ChinghoFrame_backdrop[this], 0, 0)
			call BlzFrameSetAllPoints(s__ChinghoFrame_name[this], s__ChinghoFrame_backdrop[this])
			call BlzFrameSetTextAlignment(s__ChinghoFrame_name[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call s__ChinghoFrame_setTarget(this,0)
			return this
  endfunction

  function s__ChinghoFrame_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".backdrop")
	call BlzDestroyFrame(s__ChinghoFrame_backdrop[this])
	set s__ChinghoFrame_backdrop[this]=null
//end of: destroyFrame(".backdrop")
//textmacro instance: destroyFrame(".icon1")
	call BlzDestroyFrame(s__ChinghoFrame_icon1[this])
	set s__ChinghoFrame_icon1[this]=null
//end of: destroyFrame(".icon1")
//textmacro instance: destroyFrame(".icon2")
	call BlzDestroyFrame(s__ChinghoFrame_icon2[this])
	set s__ChinghoFrame_icon2[this]=null
//end of: destroyFrame(".icon2")
//textmacro instance: destroyFrame(".name")
	call BlzDestroyFrame(s__ChinghoFrame_name[this])
	set s__ChinghoFrame_name[this]=null
//end of: destroyFrame(".name")
  endfunction

//Generated destructor of ChinghoFrame
function s__ChinghoFrame_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChinghoFrame_V[this]!=-1) then
        return
    endif
    call s__ChinghoFrame_onDestroy(this)
    set si__ChinghoFrame_V[this]=si__ChinghoFrame_F
    set si__ChinghoFrame_F=this
endfunction












  function s__AbilityIcon_refresh takes integer this returns nothing
			if s__AbilityIcon_target[this] > 0 then
				call BlzFrameSetVisible(s__AbilityIcon_cooldown_text[this], s__Ability_prototype_cooldown_remaining[s__AbilityIcon_target[this]] > 0. and s__Ability_prototype_count[s__AbilityIcon_target[this]] == 0)
				call BlzFrameSetVisible(s__AbilityIcon_cooldown_text_backdrop[this], s__Ability_prototype_cooldown_remaining[s__AbilityIcon_target[this]] > 0. and s__Ability_prototype_count[s__AbilityIcon_target[this]] == 0)
				call BlzFrameSetVisible(s__AbilityIcon_cooldown_backdrop[this], s__Ability_prototype_cooldown_remaining[s__AbilityIcon_target[this]] > 0. and s__Ability_prototype_count[s__AbilityIcon_target[this]] == 0 and sc__Ability_prototype_getCarculatedMaxCooldown(s__AbilityIcon_target[this]) > 0.)
				call BlzFrameSetText(s__AbilityIcon_cooldown_text[this], R2SW(s__Ability_prototype_cooldown_remaining[s__AbilityIcon_target[this]], 1, 1))
				if sc__Ability_prototype_getCarculatedMaxCooldown(s__AbilityIcon_target[this]) > 0. then
					call BlzFrameSetPoint(s__AbilityIcon_cooldown_backdrop[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_icon_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, 0., (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.) * ( s__Ability_prototype_cooldown_remaining[s__AbilityIcon_target[this]] / sc__Ability_prototype_getCarculatedMaxCooldown(s__AbilityIcon_target[this]) )) // INLINED!!
				endif
				call BlzFrameSetVisible(s__AbilityIcon_nem_backdrop[this], sc__Unit_prototype__get_mp(s__Ability_prototype_owner[s__AbilityIcon_target[this]]) < (I2R(s__Ability_prototype_manacost[(s__AbilityIcon_target[this])]))) // INLINED!!
				call BlzFrameSetVisible(s__AbilityIcon_extra_backdrop[this], s__Ability_prototype_count_max[s__AbilityIcon_target[this]] > 1)
				call BlzFrameSetVisible(s__AbilityIcon_extra_text[this], s__Ability_prototype_count_max[s__AbilityIcon_target[this]] > 1)
				call BlzFrameSetText(s__AbilityIcon_extra_text[this], I2S(s__Ability_prototype_count[s__AbilityIcon_target[this]]))
				call BlzFrameSetVisible(s__AbilityIcon_gauge_backdrop[this], s__Ability_prototype_gauge[s__AbilityIcon_target[this]] > 0.)
				call BlzFrameSetPoint(s__AbilityIcon_gauge_fill[this], FRAMEPOINT_BOTTOMRIGHT, s__AbilityIcon_gauge_backdrop[this], FRAMEPOINT_BOTTOMLEFT, (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.) * s__Ability_prototype_gauge[s__AbilityIcon_target[this]], 0) // INLINED!!
				
				call BlzFrameSetText(s__AbilityIcon_tooltip_text[this], sc__Ability_prototype_relativeTooltip(s__AbilityIcon_target[this]) + "\n\n|cff00ffff능력치 보너스 : |r")
				
				call BlzFrameSetText(s__AbilityIcon_tooltip_manacost_text[this], "|cff0099ff" + I2S(R2I((I2R(s__Ability_prototype_manacost[(s__AbilityIcon_target[this])])))) + "|r") // INLINED!!
				call BlzFrameSetText(s__AbilityIcon_tooltip_cooldown_text[this], "|cffffff99" + R2SW(sc__Ability_prototype_getCarculatedMaxCooldown(s__AbilityIcon_target[this]), 2, 2) + "|r")
				
				call BlzFrameSetText(s__AbilityIcon_tooltip_stat_bonus_text1[this], s__STAT_TYPE_NAME[(LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 0)))] + " +" + s__ConstantString_statStringReal((LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 0))) , s__Ability_stat_bonus1[s__AbilityIcon_target[this]] , 1)) // INLINED!!
				call BlzFrameSetText(s__AbilityIcon_tooltip_stat_bonus_text2[this], s__STAT_TYPE_NAME[(LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 1)))] + " +" + s__ConstantString_statStringReal((LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 1))) , s__Ability_stat_bonus2[s__AbilityIcon_target[this]] , 1)) // INLINED!!
			endif
  endfunction

  function s__AbilityIcon_setTarget takes integer this,integer na returns nothing
   local integer i= 1
   local string s= ""
			set s__AbilityIcon_target[this]=na
			call BlzFrameSetVisible(s__AbilityIcon_icon_container[this], s__AbilityIcon_target[this] > 0)
			if s__AbilityIcon_target[this] > 0 then
				
				if s__Ability_prototype_is_active[s__AbilityIcon_target[this]] then
					call BlzFrameSetTexture(s__AbilityIcon_icon_backdrop[this], "ReplaceableTextures\\CommandButtons\\" + s__Ability_prototype_icon[s__AbilityIcon_target[this]] + ".blp", 0, true)
				else
					call BlzFrameSetTexture(s__AbilityIcon_icon_backdrop[this], "ReplaceableTextures\\PassiveButtons\\PAS" + s__Ability_prototype_icon[s__AbilityIcon_target[this]] + ".blp", 0, true)
				endif
				call BlzFrameSetTexture(s__AbilityIcon_tooltip_icon[this], "ReplaceableTextures\\CommandButtons\\" + s__Ability_prototype_icon[s__AbilityIcon_target[this]] + ".blp", 0, true)
				
				call BlzFrameSetText(s__AbilityIcon_tooltip_name[this], TIER_STRING_COLOR[(LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]]), s__Ability_INDEX_TIER))] + "Lv." + I2S(s__Ability_prototype_level[s__AbilityIcon_target[this]]) + " " + s__Ability_prototype_name[s__AbilityIcon_target[this]] + "|r") // INLINED!!
				
				if s__Ability_prototype_smart[s__AbilityIcon_target[this]] == 0 then
					call BlzFrameSetText(s__AbilityIcon_hotkey_text[this], "|cff999999" + (s__User_OSKEY_INDEX_TO_STRING[(s__AbilityIcon_index[this])]) + "|r") // INLINED!!
				elseif s__Ability_prototype_smart[s__AbilityIcon_target[this]] == 1 then
					call BlzFrameSetText(s__AbilityIcon_hotkey_text[this], "|cffffcc00" + (s__User_OSKEY_INDEX_TO_STRING[(s__AbilityIcon_index[this])]) + "|r") // INLINED!!
				elseif s__Ability_prototype_smart[s__AbilityIcon_target[this]] == 2 then
					call BlzFrameSetText(s__AbilityIcon_hotkey_text[this], "|cff00ffff" + (s__User_OSKEY_INDEX_TO_STRING[(s__AbilityIcon_index[this])]) + "|r") // INLINED!!
				endif
				
				call BlzFrameSetText(s__AbilityIcon_tooltip_casttype[this], sc__Ability_getTypeTag(s__Ability_prototype_id[s__AbilityIcon_target[this]] , 0))
				
				call BlzFrameSetVisible(s__AbilityIcon_weapon_particle[this], s__AbilityIcon_target[this] == s__Unit_prototype_weapon_ability[s__Ability_prototype_owner[s__AbilityIcon_target[this]]])
				
				loop
					exitwhen sc__Ability_getTypeTag(s__Ability_prototype_id[s__AbilityIcon_target[this]] , i) == ""
					if i > 1 then
						set s=s + ", " + sc__Ability_getTypeTag(s__Ability_prototype_id[s__AbilityIcon_target[this]] , i)
					else
						set s=s + sc__Ability_getTypeTag(s__Ability_prototype_id[s__AbilityIcon_target[this]] , i)
					endif
					set i=i + 1
				endloop
				set s=s
				call BlzFrameSetText(s__AbilityIcon_tooltip_tag[this], s)
				
				call BlzFrameSetTexture(s__AbilityIcon_tooltip_stat_bonus_icon1[this], STAT_TYPE_ICON[(LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 0)))], 0, true) // INLINED!!
				call BlzFrameSetTexture(s__AbilityIcon_tooltip_stat_bonus_icon2[this], STAT_TYPE_ICON[(LoadInteger(Ability__HASH, (s__Ability_prototype_id[s__AbilityIcon_target[this]] ), s__Ability_INDEX_BONUS_STAT + ( 1)))], 0, true) // INLINED!!
				
				call BlzFrameSetVisible(s__AbilityIcon_unique[this], s__Ability_signiture[s__AbilityIcon_target[this]])
				
				call s__AbilityIcon_refresh(this)
			endif
  endfunction

  function s__AbilityIcon_click takes nothing returns nothing
   local integer this= 0
			call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
			call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
			if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
				set this=(LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
				if s__AbilityIcon_target[this] > 0 then
					call sc__Ability_prototype_iconClick(s__AbilityIcon_target[this])
					if GetLocalPlayer() == GetTriggerPlayer() then
						call PlaySoundBJ(gg_snd_BigButtonClick)
					endif
					call s__AbilityIcon_setTarget(this,s__AbilityIcon_target[this])
				endif
				return
			elseif BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_RIGHT then
				set this=(LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
				if s__AbilityIcon_mouse_in[this] and s__AbilityIcon_target[this] > 0 then
					set s__Ability_prototype_smart[s__AbilityIcon_target[this]]=s__Ability_prototype_smart[s__AbilityIcon_target[this]] + 1
					if s__Ability_prototype_smart[s__AbilityIcon_target[this]] > 2 then
						set s__Ability_prototype_smart[s__AbilityIcon_target[this]]=0
					endif
					call s__AbilityIcon_setTarget(this,s__AbilityIcon_target[this])
				endif
			elseif BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_ENTER then
				set this=(LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
				set s__AbilityIcon_mouse_in[this]=true
			elseif BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_LEAVE then
				set this=(LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
				set s__AbilityIcon_mouse_in[this]=false
			endif
  endfunction

  function s__AbilityIcon_create takes integer index,framehandle parent,player owner returns integer
   local integer this= s__AbilityIcon__allocate()
   local framehandle pivot= s__FRAME_ABILITY_ICON[index]
			set s__AbilityIcon_index[this]=index
			
			set s__AbilityIcon_btn_trigger[this]=s__Trigger_new(this)
			set s__AbilityIcon_btn_cond[this]=TriggerAddCondition(s__AbilityIcon_btn_trigger[this], Condition(function s__AbilityIcon_click))
			
			set s__AbilityIcon_icon_container[this]=BlzCreateFrameByType("FRAME", "", parent, "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_icon_container[this], FRAMEPOINT_BOTTOMLEFT, pivot, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			set s__AbilityIcon_icon_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetAllPoints(s__AbilityIcon_icon_backdrop[this], pivot)
			call BlzFrameSetTexture(s__AbilityIcon_icon_backdrop[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
			set s__AbilityIcon_nem_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetAllPoints(s__AbilityIcon_nem_backdrop[this], pivot)
			call BlzFrameSetTexture(s__AbilityIcon_nem_backdrop[this], "ReplaceableTextures\\teamcolor\\teamcolor14.blp", 0, true)
			call BlzFrameSetAlpha(s__AbilityIcon_nem_backdrop[this], 168)
			call BlzFrameSetVisible(s__AbilityIcon_nem_backdrop[this], false)
			set s__AbilityIcon_cooldown_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_cooldown_backdrop[this], FRAMEPOINT_BOTTOMLEFT, pivot, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetPoint(s__AbilityIcon_cooldown_backdrop[this], FRAMEPOINT_TOPRIGHT, pivot, FRAMEPOINT_BOTTOMLEFT, (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.), (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.) / 2) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_cooldown_backdrop[this], "Textures\\Black32.blp", 0, true)
			call BlzFrameSetAlpha(s__AbilityIcon_cooldown_backdrop[this], 128)
			set s__AbilityIcon_cooldown_text_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetTexture(s__AbilityIcon_cooldown_text_backdrop[this], "Textures\\Black32.blp", 0, true)
			call BlzFrameSetAlpha(s__AbilityIcon_cooldown_text_backdrop[this], 128)
			set s__AbilityIcon_cooldown_text[this]=BlzCreateFrame("MyText", s__AbilityIcon_icon_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_cooldown_text[this], FRAMEPOINT_CENTER, s__AbilityIcon_icon_backdrop[this], FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetTextAlignment(s__AbilityIcon_cooldown_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__AbilityIcon_cooldown_text[this], "0.00")
			call BlzFrameSetAllPoints(s__AbilityIcon_cooldown_text_backdrop[this], s__AbilityIcon_cooldown_text[this])
			set s__AbilityIcon_hotkey_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_hotkey_backdrop[this], FRAMEPOINT_TOPLEFT, pivot, FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_hotkey_backdrop[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_hotkey_backdrop[this], "ui\\console\\human\\human-transport-slot.blp", 0, true)
			call BlzFrameSetAlpha(s__AbilityIcon_hotkey_backdrop[this], 200)
			set s__AbilityIcon_hotkey_text[this]=BlzCreateFrame("MyText", s__AbilityIcon_icon_container[this], 0, 0)
			call BlzFrameSetAllPoints(s__AbilityIcon_hotkey_text[this], s__AbilityIcon_hotkey_backdrop[this])
			call BlzFrameSetTextAlignment(s__AbilityIcon_hotkey_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__AbilityIcon_hotkey_text[this], "|cffffcc00" + (s__User_OSKEY_INDEX_TO_STRING[(s__AbilityIcon_index[this])]) + "|r") // INLINED!!
			set s__AbilityIcon_gauge_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_gauge_backdrop[this], FRAMEPOINT_TOPLEFT, pivot, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_gauge_backdrop[this], (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.), (((8)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_gauge_backdrop[this], "ui\\feedback\\buildprogressbar\\min-hud-human-buildprogressbar-border.blp", 0, true)
			set s__AbilityIcon_gauge_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_gauge_backdrop[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_gauge_fill[this], FRAMEPOINT_TOPLEFT, s__AbilityIcon_gauge_backdrop[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_gauge_fill[this], (((UI___ABILITY_ICON_SIZE / 2)*1.0) / 1800.), (((8)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_gauge_fill[this], "ui\\feedback\\buildprogressbar\\min-hud-human-buildprogressbar-fill.blp", 0, true)
			set s__AbilityIcon_extra_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_extra_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, pivot, FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_extra_backdrop[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_extra_backdrop[this], "Textures\\black32.blp", 0, true)
			call BlzFrameSetAlpha(s__AbilityIcon_extra_backdrop[this], 200)
			set s__AbilityIcon_extra_text[this]=BlzCreateFrame("MyText", s__AbilityIcon_icon_container[this], 0, 0)
			call BlzFrameSetAllPoints(s__AbilityIcon_extra_text[this], s__AbilityIcon_extra_backdrop[this])
			call BlzFrameSetTextAlignment(s__AbilityIcon_extra_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__AbilityIcon_extra_text[this], "Ex")
			
			set s__AbilityIcon_weapon_particle[this]=BlzCreateFrameByType("SPRITE", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_weapon_particle[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_icon_backdrop[this], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetModel(s__AbilityIcon_weapon_particle[this], "UI\\Feedback\\ui-weaponabilityparticle.mdl", 0)
			call BlzFrameSetSize(s__AbilityIcon_weapon_particle[this], (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.), (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetVisible(s__AbilityIcon_weapon_particle[this], false)
			
			set s__AbilityIcon_tooltip_mouseover[this]=BlzCreateFrameByType("BUTTON", "", s__AbilityIcon_icon_container[this], "", 0)
			call BlzFrameSetAllPoints(s__AbilityIcon_tooltip_mouseover[this], pivot)
			call BlzTriggerRegisterFrameEvent(s__AbilityIcon_btn_trigger[this], s__AbilityIcon_tooltip_mouseover[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__AbilityIcon_btn_trigger[this], s__AbilityIcon_tooltip_mouseover[this], FRAMEEVENT_MOUSE_ENTER)
			call BlzTriggerRegisterFrameEvent(s__AbilityIcon_btn_trigger[this], s__AbilityIcon_tooltip_mouseover[this], FRAMEEVENT_MOUSE_LEAVE)
			call TriggerRegisterPlayerEvent(s__AbilityIcon_btn_trigger[this], owner, EVENT_PLAYER_MOUSE_DOWN)
			set s__AbilityIcon_tooltip_container[this]=BlzCreateFrameByType("FRAME", "", s__AbilityIcon_tooltip_mouseover[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_container[this], FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			set s__AbilityIcon_tooltip_outline[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetTexture(s__AbilityIcon_tooltip_outline[this], "replaceabletextures\\teamcolor\\teamcolor16.blp", 0, true)
			set s__AbilityIcon_tooltip_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetTexture(s__AbilityIcon_tooltip_backdrop[this], "replaceabletextures\\teamcolor\\teamcolor24.blp", 0, true)
			set s__AbilityIcon_tooltip_text[this]=BlzCreateFrame("MyAbilTooltip", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_text[this], TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_LEFT)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_text[this], FRAMEPOINT_BOTTOM, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, 0., (((UI___ABILITY_TOOLTIP_OFFSET_Y + s__AbilityIcon_TOOLTIP_STAT_BONUS_HEIGHT)*1.0) / 1800.) + 0.005) // INLINED!!
			set s__AbilityIcon_tooltip_header[this]=BlzCreateFrameByType("FRAME", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_header[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_header[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_TOPRIGHT, 0., (((s__AbilityIcon_TOOLTIP_HEADER_HEIGHT)*1.0) / 1800.)) // INLINED!!
			set s__AbilityIcon_tooltip_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_icon[this], FRAMEPOINT_TOPLEFT, s__AbilityIcon_tooltip_header[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_tooltip_icon[this], (((s__AbilityIcon_TOOLTIP_ICON_SIZE)*1.0) / 1800.), (((s__AbilityIcon_TOOLTIP_ICON_SIZE)*1.0) / 1800.)) // INLINED!!
			set s__AbilityIcon_tooltip_name[this]=BlzCreateFrame("MyTextLarge", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_name[this], FRAMEPOINT_LEFT, s__AbilityIcon_tooltip_icon[this], FRAMEPOINT_RIGHT, 0.01, 0.)
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_name[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT)
			set s__AbilityIcon_tooltip_tag[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_tag[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_tooltip_name[this], FRAMEPOINT_BOTTOMRIGHT, 0.01, 0)
			set s__AbilityIcon_tooltip_casttype[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_casttype[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_tooltip_header[this], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_casttype[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_icon[this], FRAMEPOINT_BOTTOMRIGHT, 0.5, 0)
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_casttype[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT)
			set s__AbilityIcon_tooltip_manacost_text[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_manacost_text[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_header[this], FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_tooltip_manacost_text[this], (((s__AbilityIcon_TOOLTIP_SUB_WIDTH)*1.0) / 1800.), (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_manacost_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_RIGHT)
			set s__AbilityIcon_tooltip_manacost_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_manacost_backdrop[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_manacost_text[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_tooltip_manacost_backdrop[this], (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.), (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_tooltip_manacost_backdrop[this], "ui\\widgets\\tooltips\\human\\tooltipmanaicon.blp", 0, true)
			set s__AbilityIcon_tooltip_cooldown_text[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_cooldown_text[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_manacost_text[this], FRAMEPOINT_BOTTOMRIGHT, 0., - 0.005)
			call BlzFrameSetSize(s__AbilityIcon_tooltip_cooldown_text[this], (((s__AbilityIcon_TOOLTIP_SUB_WIDTH)*1.0) / 1800.), (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_cooldown_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_RIGHT)
			set s__AbilityIcon_tooltip_cooldown_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_cooldown_backdrop[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_cooldown_text[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize(s__AbilityIcon_tooltip_cooldown_backdrop[this], (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.), (((s__AbilityIcon_TOOLTIP_SUB_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__AbilityIcon_tooltip_cooldown_backdrop[this], "ui\\widgets\\tooltips\\human\\tooltipcooldownicon.blp", 0, true)
			set s__AbilityIcon_tooltip_stat_bonus_icon1[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_stat_bonus_icon1[this], FRAMEPOINT_TOPLEFT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, (((0)*1.0) / 1800.), (((- 8)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(s__AbilityIcon_tooltip_stat_bonus_icon1[this], (((32)*1.0) / 1800.), (((32)*1.0) / 1800.)) // INLINED!!
			set s__AbilityIcon_tooltip_stat_bonus_icon2[this]=BlzCreateFrameByType("BACKDROP", "", s__AbilityIcon_tooltip_container[this], "", 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_stat_bonus_icon2[this], FRAMEPOINT_TOPLEFT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, (((0 + 192)*1.0) / 1800.), (((- 8)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(s__AbilityIcon_tooltip_stat_bonus_icon2[this], (((32)*1.0) / 1800.), (((32)*1.0) / 1800.)) // INLINED!!
			set s__AbilityIcon_tooltip_stat_bonus_text1[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_stat_bonus_text1[this], FRAMEPOINT_LEFT, s__AbilityIcon_tooltip_stat_bonus_icon1[this], FRAMEPOINT_RIGHT, (((8)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_stat_bonus_text1[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT)
			set s__AbilityIcon_tooltip_stat_bonus_text2[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_stat_bonus_text2[this], FRAMEPOINT_LEFT, s__AbilityIcon_tooltip_stat_bonus_icon2[this], FRAMEPOINT_RIGHT, (((8)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTextAlignment(s__AbilityIcon_tooltip_stat_bonus_text2[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT)
			set s__AbilityIcon_unique[this]=BlzCreateFrame("MyText", s__AbilityIcon_tooltip_container[this], 0, 0)
			call BlzFrameSetText(s__AbilityIcon_unique[this], "|cffffcc00고유능력|r")
			call BlzFrameSetVisible(s__AbilityIcon_unique[this], false)
			
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_outline[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, - .005, - .005 - (((s__AbilityIcon_TOOLTIP_STAT_BONUS_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_outline[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_header[this], FRAMEPOINT_TOPRIGHT, .005, .005)
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_backdrop[this], FRAMEPOINT_BOTTOMLEFT, s__AbilityIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, - .004, - .004 - (((s__AbilityIcon_TOOLTIP_STAT_BONUS_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetPoint(s__AbilityIcon_tooltip_backdrop[this], FRAMEPOINT_TOPRIGHT, s__AbilityIcon_tooltip_header[this], FRAMEPOINT_TOPRIGHT, .004, .004)
			call BlzFrameSetPoint(s__AbilityIcon_unique[this], FRAMEPOINT_BOTTOMRIGHT, s__AbilityIcon_tooltip_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, - 0.004, 0.004)
			
			call BlzFrameSetTooltip(s__AbilityIcon_tooltip_mouseover[this], s__AbilityIcon_tooltip_container[this])
			
			set pivot=null
			return this
  endfunction

  function s__AbilityIcon_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".icon_container")
	call BlzDestroyFrame(s__AbilityIcon_icon_container[this])
	set s__AbilityIcon_icon_container[this]=null
//end of: destroyFrame(".icon_container")
//textmacro instance: destroyFrame(".icon_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_icon_backdrop[this])
	set s__AbilityIcon_icon_backdrop[this]=null
//end of: destroyFrame(".icon_backdrop")
//textmacro instance: destroyFrame(".nem_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_nem_backdrop[this])
	set s__AbilityIcon_nem_backdrop[this]=null
//end of: destroyFrame(".nem_backdrop")
//textmacro instance: destroyFrame(".cooldown_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_cooldown_backdrop[this])
	set s__AbilityIcon_cooldown_backdrop[this]=null
//end of: destroyFrame(".cooldown_backdrop")
//textmacro instance: destroyFrame(".cooldown_text_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_cooldown_text_backdrop[this])
	set s__AbilityIcon_cooldown_text_backdrop[this]=null
//end of: destroyFrame(".cooldown_text_backdrop")
//textmacro instance: destroyFrame(".cooldown_text")
	call BlzDestroyFrame(s__AbilityIcon_cooldown_text[this])
	set s__AbilityIcon_cooldown_text[this]=null
//end of: destroyFrame(".cooldown_text")
//textmacro instance: destroyFrame(".hotkey_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_hotkey_backdrop[this])
	set s__AbilityIcon_hotkey_backdrop[this]=null
//end of: destroyFrame(".hotkey_backdrop")
//textmacro instance: destroyFrame(".hotkey_text")
	call BlzDestroyFrame(s__AbilityIcon_hotkey_text[this])
	set s__AbilityIcon_hotkey_text[this]=null
//end of: destroyFrame(".hotkey_text")
//textmacro instance: destroyFrame(".gauge_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_gauge_backdrop[this])
	set s__AbilityIcon_gauge_backdrop[this]=null
//end of: destroyFrame(".gauge_backdrop")
//textmacro instance: destroyFrame(".gauge_fill")
	call BlzDestroyFrame(s__AbilityIcon_gauge_fill[this])
	set s__AbilityIcon_gauge_fill[this]=null
//end of: destroyFrame(".gauge_fill")
//textmacro instance: destroyFrame(".extra_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_extra_backdrop[this])
	set s__AbilityIcon_extra_backdrop[this]=null
//end of: destroyFrame(".extra_backdrop")
//textmacro instance: destroyFrame(".extra_text")
	call BlzDestroyFrame(s__AbilityIcon_extra_text[this])
	set s__AbilityIcon_extra_text[this]=null
//end of: destroyFrame(".extra_text")
//textmacro instance: destroyFrame(".weapon_particle")
	call BlzDestroyFrame(s__AbilityIcon_weapon_particle[this])
	set s__AbilityIcon_weapon_particle[this]=null
//end of: destroyFrame(".weapon_particle")
//textmacro instance: destroyFrame(".tooltip_container")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_container[this])
	set s__AbilityIcon_tooltip_container[this]=null
//end of: destroyFrame(".tooltip_container")
//textmacro instance: destroyFrame(".tooltip_outline")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_outline[this])
	set s__AbilityIcon_tooltip_outline[this]=null
//end of: destroyFrame(".tooltip_outline")
//textmacro instance: destroyFrame(".tooltip_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_backdrop[this])
	set s__AbilityIcon_tooltip_backdrop[this]=null
//end of: destroyFrame(".tooltip_backdrop")
//textmacro instance: destroyFrame(".tooltip_header")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_header[this])
	set s__AbilityIcon_tooltip_header[this]=null
//end of: destroyFrame(".tooltip_header")
//textmacro instance: destroyFrame(".tooltip_text")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_text[this])
	set s__AbilityIcon_tooltip_text[this]=null
//end of: destroyFrame(".tooltip_text")
//textmacro instance: destroyFrame(".tooltip_icon")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_icon[this])
	set s__AbilityIcon_tooltip_icon[this]=null
//end of: destroyFrame(".tooltip_icon")
//textmacro instance: destroyFrame(".tooltip_name")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_name[this])
	set s__AbilityIcon_tooltip_name[this]=null
//end of: destroyFrame(".tooltip_name")
//textmacro instance: destroyFrame(".tooltip_tag")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_tag[this])
	set s__AbilityIcon_tooltip_tag[this]=null
//end of: destroyFrame(".tooltip_tag")
//textmacro instance: destroyFrame(".tooltip_casttype")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_casttype[this])
	set s__AbilityIcon_tooltip_casttype[this]=null
//end of: destroyFrame(".tooltip_casttype")
//textmacro instance: destroyFrame(".tooltip_manacost_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_manacost_backdrop[this])
	set s__AbilityIcon_tooltip_manacost_backdrop[this]=null
//end of: destroyFrame(".tooltip_manacost_backdrop")
//textmacro instance: destroyFrame(".tooltip_manacost_text")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_manacost_text[this])
	set s__AbilityIcon_tooltip_manacost_text[this]=null
//end of: destroyFrame(".tooltip_manacost_text")
//textmacro instance: destroyFrame(".tooltip_cooldown_backdrop")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_cooldown_backdrop[this])
	set s__AbilityIcon_tooltip_cooldown_backdrop[this]=null
//end of: destroyFrame(".tooltip_cooldown_backdrop")
//textmacro instance: destroyFrame(".tooltip_cooldown_text")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_cooldown_text[this])
	set s__AbilityIcon_tooltip_cooldown_text[this]=null
//end of: destroyFrame(".tooltip_cooldown_text")
//textmacro instance: destroyFrame(".tooltip_stat_bonus_icon1")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_icon1[this])
	set s__AbilityIcon_tooltip_stat_bonus_icon1[this]=null
//end of: destroyFrame(".tooltip_stat_bonus_icon1")
//textmacro instance: destroyFrame(".tooltip_stat_bonus_icon2")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_icon2[this])
	set s__AbilityIcon_tooltip_stat_bonus_icon2[this]=null
//end of: destroyFrame(".tooltip_stat_bonus_icon2")
//textmacro instance: destroyFrame(".tooltip_stat_bonus_text1")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_text1[this])
	set s__AbilityIcon_tooltip_stat_bonus_text1[this]=null
//end of: destroyFrame(".tooltip_stat_bonus_text1")
//textmacro instance: destroyFrame(".tooltip_stat_bonus_text2")
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_text2[this])
	set s__AbilityIcon_tooltip_stat_bonus_text2[this]=null
//end of: destroyFrame(".tooltip_stat_bonus_text2")
//textmacro instance: destroyFrame(".unique")
	call BlzDestroyFrame(s__AbilityIcon_unique[this])
	set s__AbilityIcon_unique[this]=null
//end of: destroyFrame(".unique")
			call TriggerRemoveCondition(s__AbilityIcon_btn_trigger[this], s__AbilityIcon_btn_cond[this])
			call s__Trigger_remove(s__AbilityIcon_btn_trigger[this])
			set s__AbilityIcon_btn_trigger[this]=null
			set s__AbilityIcon_btn_cond[this]=null
  endfunction






   function s__StatIcon_refresh takes integer this returns nothing
				if s__StatIcon_format[this] == 0 then
					call BlzFrameSetText(s__StatIcon_text[this], (STAT_TYPE_COLOR[(s__StatIcon_stat_index[this] )] + I2S(( R2I(sc__Unit_prototype_getCarculatedStatValue(s__StatIcon_target[this],s__StatIcon_stat_index[this])))) + "|r")) // INLINED!!
				elseif s__StatIcon_format[this] == 1 then
					call BlzFrameSetText(s__StatIcon_text[this], s__ConstantString_statStringReal(s__StatIcon_stat_index[this] , sc__Unit_prototype_getCarculatedStatValue(s__StatIcon_target[this],s__StatIcon_stat_index[this]) , 1))
				elseif s__StatIcon_format[this] == 2 then
					call BlzFrameSetText(s__StatIcon_text[this], (STAT_TYPE_COLOR[(s__StatIcon_stat_index[this] )] + I2S(R2I((( sc__Unit_prototype_getCarculatedStatValue(s__StatIcon_target[this],s__StatIcon_stat_index[this]))*1.0) * 100.)) + "%|r")) // INLINED!!
				endif
   endfunction

   function s__StatIcon_setTarget takes integer this,integer nt returns nothing
				set s__StatIcon_target[this]=nt
   endfunction

   function s__StatIcon_create takes framehandle parent,integer index,integer statindex returns integer
    local integer this= s__StatIcon__allocate()
				set s__StatIcon_stat_index[this]=statindex
				
				if s__StatIcon_stat_index[this] == STAT_TYPE_ATTACK_SPEED or s__StatIcon_stat_index[this] == STAT_TYPE_HEAL_AMP then
					set s__StatIcon_format[this]=2
				elseif s__StatIcon_stat_index[this] == STAT_TYPE_HPREGEN or s__StatIcon_stat_index[this] == STAT_TYPE_MPREGEN or s__StatIcon_stat_index[this] == STAT_TYPE_ARMOR_PENET or s__StatIcon_stat_index[this] == STAT_TYPE_MAGIC_PENET then
					set s__StatIcon_format[this]=1
				endif
				
				set s__StatIcon_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", parent, "", 0)
				call BlzFrameSetPoint(s__StatIcon_backdrop[this], FRAMEPOINT_TOPLEFT, FRAME_STAT2, FRAMEPOINT_TOPLEFT, (((s__StatIcon_WIDTH)*1.0) / 1800.) * ( index / s__StatIcon_PER_COL ) + (((2)*1.0) / 1800.), - (((s__StatIcon_HEIGHT)*1.0) / 1800.) * ModuloInteger(index, s__StatIcon_PER_COL) - (((2)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetTexture(s__StatIcon_backdrop[this], STAT_TYPE_ICON[statindex], 0, true)
				call BlzFrameSetSize(s__StatIcon_backdrop[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
				set s__StatIcon_text[this]=BlzCreateFrame("MyTextSmall", parent, 0, 0)
				call BlzFrameSetPoint(s__StatIcon_text[this], FRAMEPOINT_BOTTOMLEFT, s__StatIcon_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, 0.005, 0.)
				call BlzFrameSetSize(s__StatIcon_text[this], (((s__StatIcon_WIDTH / 2)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetTextAlignment(s__StatIcon_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_LEFT)
				set s__StatIcon_mouseover[this]=BlzCreateFrameByType("FRAME", "", s__StatIcon_backdrop[this], "", 0)
				call BlzFrameSetPoint(s__StatIcon_mouseover[this], FRAMEPOINT_BOTTOMRIGHT, s__StatIcon_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
				call BlzFrameSetSize(s__StatIcon_mouseover[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
				set s__StatIcon_tooltip_container[this]=BlzCreateFrameByType("BACKDROP", "", s__StatIcon_mouseover[this], "", 0)
				call BlzFrameSetPoint(s__StatIcon_tooltip_container[this], FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, 0.0, 0.0)
				call BlzFrameSetTooltip(s__StatIcon_mouseover[this], s__StatIcon_tooltip_container[this])
				set s__StatIcon_tooltip_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__StatIcon_tooltip_container[this], "", 0)
				call BlzFrameSetTexture(s__StatIcon_tooltip_backdrop[this], "replaceabletextures\\teamcolor\\teamcolor27.blp", 0, true)
				call BlzFrameSetAlpha(s__StatIcon_tooltip_backdrop[this], 200)
				set s__StatIcon_tooltip_text[this]=BlzCreateFrame("MyText", s__StatIcon_tooltip_container[this], 0, 0)
				call BlzFrameSetText(s__StatIcon_tooltip_text[this], STAT_TYPE_COLOR[statindex] + s__STAT_TYPE_NAME[statindex] + "|r\n\n" + STAT_TYPE_DESCRIPTION[statindex])
				call BlzFrameSetTextAlignment(s__StatIcon_tooltip_text[this], TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_LEFT)
				call BlzFrameSetPoint(s__StatIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, s__StatIcon_mouseover[this], FRAMEPOINT_BOTTOMRIGHT, 0.005, 0.005)
				call BlzFrameSetPoint(s__StatIcon_tooltip_backdrop[this], FRAMEPOINT_BOTTOMLEFT, s__StatIcon_tooltip_text[this], FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
				call BlzFrameSetPoint(s__StatIcon_tooltip_backdrop[this], FRAMEPOINT_TOPRIGHT, s__StatIcon_tooltip_text[this], FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
				return this
   endfunction

   function s__StatIcon_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".backdrop")
	call BlzDestroyFrame(s__StatIcon_backdrop[this])
	set s__StatIcon_backdrop[this]=null
//end of: destroyFrame(".backdrop")
//textmacro instance: destroyFrame(".mouseover")
	call BlzDestroyFrame(s__StatIcon_mouseover[this])
	set s__StatIcon_mouseover[this]=null
//end of: destroyFrame(".mouseover")
//textmacro instance: destroyFrame(".text")
	call BlzDestroyFrame(s__StatIcon_text[this])
	set s__StatIcon_text[this]=null
//end of: destroyFrame(".text")
//textmacro instance: destroyFrame(".tooltip_container")
	call BlzDestroyFrame(s__StatIcon_tooltip_container[this])
	set s__StatIcon_tooltip_container[this]=null
//end of: destroyFrame(".tooltip_container")
//textmacro instance: destroyFrame(".tooltip_backdrop")
	call BlzDestroyFrame(s__StatIcon_tooltip_backdrop[this])
	set s__StatIcon_tooltip_backdrop[this]=null
//end of: destroyFrame(".tooltip_backdrop")
//textmacro instance: destroyFrame(".tooltip_text")
	call BlzDestroyFrame(s__StatIcon_tooltip_text[this])
	set s__StatIcon_tooltip_text[this]=null
//end of: destroyFrame(".tooltip_text")
   endfunction



  function s__Closeable_close takes integer this returns boolean
			return true
  endfunction





		
		
		
		


//Implemented from module ThisUI:


		
		

  function s__UI_getObject takes integer instance,integer index returns integer
			return LoadInteger(s__UI_HASH, instance, index)
  endfunction

  function s__UI_setObject takes integer instance,integer index,integer new returns nothing
			call SaveInteger(s__UI_HASH, instance, index, new)
  endfunction

  function s__UI_abilityError takes integer this returns nothing
			call BlzFrameSetText(s__UI_ability_error[this], ERROR_MESSAGE)
			set s__UI_ability_error_lifespan[this]=2.0
  endfunction

  function s__UI_abilityErrorCondition takes nothing returns nothing
   local integer A= s__UI_THIS[GetPlayerId(ERROR_MESSAGE_PLAYER)]
			if A != 0 then
				call s__UI_abilityError(A)
			endif
  endfunction

  function s__UI_refreshName takes integer this returns nothing
			call BlzFrameSetVisible(s__UI_name[this], s__UI_target[this] > 0)
			call BlzFrameSetText(s__UI_name[this], sc__Unit_prototype__get_name(s__UI_target[this]))
  endfunction

  function s__UI_refreshStatIconsTarget takes integer this returns nothing
   local integer i= 0
   local integer sa= 0
			loop
				exitwhen i >= 16
				set sa=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + i))) // INLINED!!
				set s__StatIcon_target[(sa)]=(s__UI_target[this]) // INLINED!!
				set i=i + 1
			endloop
  endfunction

  function s__UI_refreshStatIcons takes integer this returns nothing
   local integer i= 0
   local integer sa= 0
			loop
				exitwhen i >= 16
				set sa=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + i))) // INLINED!!
				call s__StatIcon_refresh(sa)
				set i=i + 1
			endloop
  endfunction

  function s__UI_refreshAbilityIconsTarget takes integer this returns nothing
   local integer i= 0
   local integer ia= 0
			loop
				exitwhen i >= 10
				set ia=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_ABILITY_ICON + i))) // INLINED!!
				call s__AbilityIcon_setTarget(ia,sc__Unit_prototype_getAbility(s__UI_target[this],i))
				set i=i + 1
			endloop
  endfunction

  function s__UI_refreshAbilityIcons takes integer this returns nothing
   local integer ia= 0
   local integer i= 0
			loop
				exitwhen i >= 10
				set ia=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_ABILITY_ICON + i))) // INLINED!!
				call s__AbilityIcon_refresh(ia)
				set i=i + 1
			endloop
  endfunction

  function s__UI_refreshPeriodic takes integer this returns nothing
			
			call BlzFrameSetVisible(s__UI_hp_fill[this], sc__Unit_prototype__get_maxhp(s__UI_target[this]) > 0.)
			call BlzFrameSetPoint(s__UI_hp_fill[this], FRAMEPOINT_TOPRIGHT, FRAME_HP_BAR, FRAMEPOINT_TOPLEFT, (((UI___BAR_WIDTH)*1.0) / 1800.) * ( sc__Unit_prototype__get_hp(s__UI_target[this]) / sc__Unit_prototype__get_maxhp(s__UI_target[this]) ), 0.) // INLINED!!
			call BlzFrameSetVisible(s__UI_mp_fill[this], sc__Unit_prototype__get_maxmp(s__UI_target[this]) > 0.)
			if sc__Unit_prototype__get_maxmp(s__UI_target[this]) > 0. then
				call BlzFrameSetPoint(s__UI_mp_fill[this], FRAMEPOINT_TOPRIGHT, FRAME_MP_BAR, FRAMEPOINT_TOPLEFT, (((UI___BAR_WIDTH)*1.0) / 1800.) * ( sc__Unit_prototype__get_mp(s__UI_target[this]) / sc__Unit_prototype__get_maxmp(s__UI_target[this]) ), 0.) // INLINED!!
			endif
			call BlzFrameSetText(s__UI_hp_text[this], I2S(R2I(sc__Unit_prototype__get_hp(s__UI_target[this]))) + " / " + I2S(R2I(sc__Unit_prototype__get_maxhp(s__UI_target[this]))) + " (+" + R2SW(sc__Unit_prototype__get_hpregen(s__UI_target[this]), 1, 1) + ")")
			call BlzFrameSetVisible(s__UI_mp_text[this], sc__Unit_prototype__get_maxmp(s__UI_target[this]) > 0.)
			call BlzFrameSetText(s__UI_mp_text[this], I2S(R2I(sc__Unit_prototype__get_mp(s__UI_target[this]))) + " / " + I2S(R2I(sc__Unit_prototype__get_maxmp(s__UI_target[this]))) + " (+" + R2SW(sc__Unit_prototype__get_mpregen(s__UI_target[this]), 1, 1) + ")")
			
			call BlzFrameSetText(s__UI_level_text[this], " Lv." + I2S((s__Unit_prototype_level_true[(s__UI_target[this])])) + " ") // INLINED!!
			
			call BlzFrameSetVisible(s__UI_exp_fill[this], s__Unit_prototype_exp[s__UI_target[this]] > 0.)
			call BlzFrameSetPoint(s__UI_exp_fill[this], FRAMEPOINT_TOPRIGHT, FRAME_EXP_BAR, FRAMEPOINT_TOPLEFT, (((UI___STAT1_WIDTH)*1.0) / 1800.) * ( I2R(s__Unit_prototype_exp[s__UI_target[this]]) / I2R(s__Unit_prototype_exp_max[s__UI_target[this]]) ), 0.) // INLINED!!
			call BlzFrameSetText(s__UI_exp_text[this], R2SW(I2R(s__Unit_prototype_exp[s__UI_target[this]]) / I2R(s__Unit_prototype_exp_max[s__UI_target[this]]), 1, 1) + "%")
			
			call s__UI_refreshAbilityIcons(this)
			
			call s__UI_refreshStatIcons(this)
			
			if s__UI_ability_error_lifespan[this] > 0. then
				set s__UI_ability_error_lifespan[this]=s__UI_ability_error_lifespan[this] - 0.1
				if s__UI_ability_error_lifespan[this] < 0. then
					set s__UI_ability_error_lifespan[this]=0.
					call BlzFrameSetText(s__UI_ability_error[this], "")
				endif
			endif
  endfunction

  function s__UI_setTarget takes integer this,integer nt returns nothing
			set s__UI_target[this]=nt
			call s__UI_refreshAbilityIconsTarget(this)
			call s__UI_refreshStatIconsTarget(this)
			call s__UI_refreshName(this)
			call s__ChinghoFrame_setTarget(s__UI_chingho[this],s__Ability_prototype_id[s__Unit_chingho[s__UI_target[this]]])
			call s__UI_refreshPeriodic(this)
  endfunction

  function s__UI_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call s__UI_refreshPeriodic(this)
  endfunction

  function s__UI_onLevel takes nothing returns nothing
   local integer u= LEVEL_UNIT
   local integer this= 0
			if LEVEL_UNIT <= 0 then
				return
			endif
			set this=s__UI_THIS[GetPlayerId(sc__Unit_prototype__get_owner(u))]
			call s__UI_setTarget(this,s__UI_target[this])
  endfunction

  function s__UI_create takes player p returns integer
   local integer this= s__UI__allocate()
   local integer i= 0
   local integer ia= 0
   local integer sa= 0
			set s__UI_main_timer[this]=sc__Timer_new(this)
			
			set s__UI_container[this]=BlzCreateFrameByType("FRAME", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(s__UI_container[this], FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			
			set s__UI_hp_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetPoint(s__UI_hp_fill[this], FRAMEPOINT_BOTTOMLEFT, FRAME_HP_BAR, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__UI_hp_fill[this], "replaceabletextures\\teamcolor\\teamcolor06.blp", 0, true)
			set s__UI_hp_text[this]=BlzCreateFrame("MyText", s__UI_container[this], 0, 0)
			call BlzFrameSetAllPoints(s__UI_hp_text[this], FRAME_HP_BAR)
			call BlzFrameSetTextAlignment(s__UI_hp_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			set s__UI_hp_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetPoint(s__UI_hp_icon[this], FRAMEPOINT_TOPLEFT, s__UI_hp_text[this], FRAMEPOINT_TOPLEFT, (((UI___BAR_HEIGHT - 20)*1.0) / 1800.) / 2, - (((UI___BAR_HEIGHT - 20)*1.0) / 1800.) / 2) // INLINED!!
			call BlzFrameSetSize(s__UI_hp_icon[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__UI_hp_icon[this], "ui\\widgets\\tooltips\\human\\tooltiphpicon.blp", 0, true)
			set s__UI_mp_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetPoint(s__UI_mp_fill[this], FRAMEPOINT_BOTTOMLEFT, FRAME_MP_BAR, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__UI_mp_fill[this], "replaceabletextures\\teamcolor\\teamcolor01.blp", 0, true)
			set s__UI_mp_text[this]=BlzCreateFrame("MyText", s__UI_container[this], 0, 0)
			call BlzFrameSetAllPoints(s__UI_mp_text[this], FRAME_MP_BAR)
			call BlzFrameSetTextAlignment(s__UI_mp_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			set s__UI_mp_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetPoint(s__UI_mp_icon[this], FRAMEPOINT_TOPLEFT, s__UI_mp_text[this], FRAMEPOINT_TOPLEFT, (((UI___BAR_HEIGHT - 20)*1.0) / 1800.) / 2, - (((UI___BAR_HEIGHT - 20)*1.0) / 1800.) / 2) // INLINED!!
			call BlzFrameSetSize(s__UI_mp_icon[this], (((20)*1.0) / 1800.), (((20)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(s__UI_mp_icon[this], "ui\\widgets\\tooltips\\human\\tooltipmanaicon.blp", 0, true)
			
			set s__UI_chingho[this]=s__ChinghoFrame_create(s__UI_container[this] , FRAME_STAT1)
			
			set s__UI_level_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetTexture(s__UI_level_backdrop[this], "ui\\console\\human\\human-transport-slot.blp", 0, true)
			set s__UI_level_text[this]=BlzCreateFrame("MyText", s__UI_container[this], 0, 0)
			call BlzFrameSetPoint(s__UI_level_text[this], FRAMEPOINT_BOTTOMRIGHT, FRAME_EXP_BAR, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetAllPoints(s__UI_level_backdrop[this], s__UI_level_text[this])
			call BlzFrameSetTextAlignment(s__UI_level_text[this], TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_RIGHT)
			
			set s__UI_exp_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__UI_container[this], "", 0)
			call BlzFrameSetPoint(s__UI_exp_fill[this], FRAMEPOINT_BOTTOMLEFT, FRAME_EXP_BAR, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__UI_exp_fill[this], "replaceabletextures\\teamcolor\\teamcolor15.blp", 0, true)
			call BlzFrameSetPoint(s__UI_exp_fill[this], FRAMEPOINT_TOPRIGHT, FRAME_EXP_BAR, FRAMEPOINT_TOPLEFT, (((UI___STAT1_WIDTH)*1.0) / 1800.) * 0.5, 0.) // INLINED!!
			set s__UI_exp_text[this]=BlzCreateFrame("MyTextSmall", s__UI_container[this], 0, 0)
			call BlzFrameSetPoint(s__UI_exp_text[this], FRAMEPOINT_BOTTOM, FRAME_EXP_BAR, FRAMEPOINT_BOTTOM, 0., 0.)
			call BlzFrameSetTextAlignment(s__UI_exp_text[this], TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__UI_exp_text[this], "0%")
			
			set s__UI_name[this]=BlzCreateFrame("MyTextLarge", s__UI_container[this], 0, 0)
			call BlzFrameSetPoint(s__UI_name[this], FRAMEPOINT_TOPLEFT, s__ChinghoFrame_backdrop[s__UI_chingho[this]], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetPoint(s__UI_name[this], FRAMEPOINT_BOTTOMRIGHT, FRAME_EXP_BAR, FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetTextAlignment(s__UI_name[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			
			set sa=s__StatIcon_create(s__UI_container[this] , 0 , STAT_TYPE_ATTACK)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 0 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 1 , STAT_TYPE_MAGICPOWER)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 1 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 2 , STAT_TYPE_ACCURACY)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 2 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 3 , STAT_TYPE_LUCK)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 3 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 4 , STAT_TYPE_DEFFENCE)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 4 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 5 , STAT_TYPE_RESISTANCE)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 5 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 6 , STAT_TYPE_EVASION)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 6 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 7 , STAT_TYPE_ATTACK_SPEED)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 7 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 8 , STAT_TYPE_HPREGEN)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 8 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 9 , STAT_TYPE_ARMOR_PENET)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 9 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 10 , STAT_TYPE_SPELL_BOOST)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 10 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 11 , STAT_TYPE_ATTACK_RANGE)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 11 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 12 , STAT_TYPE_MPREGEN)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 12 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 13 , STAT_TYPE_MAGIC_PENET)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 13 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 14 , STAT_TYPE_HEAL_AMP)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 14 ), ( sa)) // INLINED!!
			set sa=s__StatIcon_create(s__UI_container[this] , 15 , STAT_TYPE_MOVEMENT_SPEED)
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + 15 ), ( sa)) // INLINED!!
			
			loop
				exitwhen i >= 10
				set ia=s__AbilityIcon_create(i , s__UI_container[this] , p)
				call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_ABILITY_ICON + i ), ( ia)) // INLINED!!
				//call ia.setTarget(target.getAbility(i))
				set i=i + 1
			endloop
			
			set s__UI_ability_error[this]=BlzCreateFrame("MyText", s__UI_container[this], 0, 0)
			call BlzFrameSetPoint(s__UI_ability_error[this], FRAMEPOINT_BOTTOM, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, 0., (((UI___ABILITY_ERROR_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTextAlignment(s__UI_ability_error[this], TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
			
			call s__UI_setTarget(this,(s__User_FOCUSUNIT[GetPlayerId((p))])) // INLINED!!
			
			call BlzFrameSetVisible(s__UI_container[this], GetLocalPlayer() == p)
			
			call TimerStart((s__UI_main_timer[this] ), (( 0.1 )*1.0), ( true ), ( function s__UI_timerAction)) // INLINED!!
			
			set s__UI_THIS[GetPlayerId(p)]=this
			return this
  endfunction

  function s__UI_onDestroy takes integer this returns nothing
   local integer i= 0
   local integer ii= 0
			loop
				exitwhen i >= 10
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_ABILITY_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_ABILITY_ICON + i)
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= 16
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_STAT_ICON + i)
				set i=i + 1
			endloop
			if s__UI_chingho[this] > 0 then
				call s__ChinghoFrame_deallocate(s__UI_chingho[this])
			endif
			set i=0
			loop
				exitwhen i >= 8
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_BUFF_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_BUFF_ICON + i)
				set i=i + 1
			endloop
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__UI_container[this])
	set s__UI_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".hp_fill")
	call BlzDestroyFrame(s__UI_hp_fill[this])
	set s__UI_hp_fill[this]=null
//end of: destroyFrame(".hp_fill")
//textmacro instance: destroyFrame(".hp_text")
	call BlzDestroyFrame(s__UI_hp_text[this])
	set s__UI_hp_text[this]=null
//end of: destroyFrame(".hp_text")
//textmacro instance: destroyFrame(".hp_icon")
	call BlzDestroyFrame(s__UI_hp_icon[this])
	set s__UI_hp_icon[this]=null
//end of: destroyFrame(".hp_icon")
//textmacro instance: destroyFrame(".mp_fill")
	call BlzDestroyFrame(s__UI_mp_fill[this])
	set s__UI_mp_fill[this]=null
//end of: destroyFrame(".mp_fill")
//textmacro instance: destroyFrame(".mp_text")
	call BlzDestroyFrame(s__UI_mp_text[this])
	set s__UI_mp_text[this]=null
//end of: destroyFrame(".mp_text")
//textmacro instance: destroyFrame(".mp_icon")
	call BlzDestroyFrame(s__UI_mp_icon[this])
	set s__UI_mp_icon[this]=null
//end of: destroyFrame(".mp_icon")
//textmacro instance: destroyFrame(".level_backdrop")
	call BlzDestroyFrame(s__UI_level_backdrop[this])
	set s__UI_level_backdrop[this]=null
//end of: destroyFrame(".level_backdrop")
//textmacro instance: destroyFrame(".level_text")
	call BlzDestroyFrame(s__UI_level_text[this])
	set s__UI_level_text[this]=null
//end of: destroyFrame(".level_text")
//textmacro instance: destroyFrame(".exp_fill")
	call BlzDestroyFrame(s__UI_exp_fill[this])
	set s__UI_exp_fill[this]=null
//end of: destroyFrame(".exp_fill")
//textmacro instance: destroyFrame(".exp_text")
	call BlzDestroyFrame(s__UI_exp_text[this])
	set s__UI_exp_text[this]=null
//end of: destroyFrame(".exp_text")
//textmacro instance: destroyFrame(".name")
	call BlzDestroyFrame(s__UI_name[this])
	set s__UI_name[this]=null
//end of: destroyFrame(".name")
//textmacro instance: destroyFrame(".ability_error")
	call BlzDestroyFrame(s__UI_ability_error[this])
	set s__UI_ability_error[this]=null
//end of: destroyFrame(".ability_error")
			call sc__Timer_release(s__UI_main_timer[this])
			set s__UI_main_timer[this]=null
  endfunction

//Generated destructor of UI
function s__UI_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__UI_V[this]!=-1) then
        return
    endif
    call s__UI_onDestroy(this)
    set si__UI_V[this]=si__UI_F
    set si__UI_F=this
endfunction

  function s__UI_init takes nothing returns nothing
   local framehandle f= null
   local framehandle bf= null
   local integer i= 0
   local real c_inset= (((UI___ABILITY_CONTAINER_HEIGHT - UI___ABILITY_ICON_SIZE)*1.0) / 1800.) / 2. // INLINED!!
   local real c_width= (((UI___ABILITY_CONTAINER_WIDTH)*1.0) / 1800.) - ( c_inset * 2 ) // INLINED!!
   local real c_cell= c_width / 10.
   local real c_padding= c_cell - (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.) // INLINED!!
   local trigger t= null
			set FRAME_ORIGIN=BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0)
			set FRAME_GAME_UI=BlzCreateFrameByType("FRAME", "", FRAME_ORIGIN, "", 0)
			
			call BlzFrameSetPoint(FRAME_GAME_UI, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			
			set FRAME_MINIMAP=BlzGetOriginFrame(ORIGIN_FRAME_MINIMAP, 0)
			call BlzFrameSetVisible(FRAME_MINIMAP, true)
			call BlzFrameClearAllPoints(FRAME_MINIMAP)
			call BlzFrameSetPoint(FRAME_MINIMAP, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, (((UI___MINIMAP_OFFSET_X + UI___MINIMAP_BORDER)*1.0) / 1800.), (((UI___MINIMAP_OFFSET_Y + UI___MINIMAP_BORDER)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetPoint(FRAME_MINIMAP, FRAMEPOINT_TOPRIGHT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, (((UI___MINIMAP_OFFSET_X + UI___MINIMAP_BORDER + UI___MINIMAP_SIZE)*1.0) / 1800.), (((UI___MINIMAP_OFFSET_Y + UI___MINIMAP_BORDER + UI___MINIMAP_SIZE)*1.0) / 1800.)) // INLINED!!
			set FRAME_MINIMAP_BACKDROP=BlzCreateFrameByType("BACKDROP", "", BlzGetOriginFrame(ORIGIN_FRAME_WORLD_FRAME, 0), "", 0)
			call BlzFrameSetPoint(FRAME_MINIMAP_BACKDROP, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOMLEFT, (((UI___MINIMAP_OFFSET_X)*1.0) / 1800.), (((UI___MINIMAP_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_MINIMAP_BACKDROP, (((UI___MINIMAP_SIZE + UI___MINIMAP_BORDER * 2)*1.0) / 1800.), (((UI___MINIMAP_SIZE + UI___MINIMAP_BORDER * 2)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_MINIMAP_BACKDROP, "ReplaceableTextures\\teamcolor\\teamcolor27.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_MINIMAP_BACKDROP, 128)
			
			set FRAME_PORTRAIT_BACKDROP=BlzCreateFrameByType("BACKDROP", "", BlzGetOriginFrame(ORIGIN_FRAME_WORLD_FRAME, 0), "", 0)
			call BlzFrameSetPoint(FRAME_PORTRAIT_BACKDROP, FRAMEPOINT_TOPLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, (((UI___PORTRAIT_OFFSET_X)*1.0) / 1800.), (((UI___PORTRAIT_OFFSET_Y + UI___PORTRAIT_BORDER + UI___PORTRAIT_SIZE)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_PORTRAIT_BACKDROP, (((UI___PORTRAIT_SIZE)*1.0) / 1800.), (((UI___PORTRAIT_SIZE)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_PORTRAIT_BACKDROP, "ReplaceableTextures\\teamcolor\\teamcolor27.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_PORTRAIT_BACKDROP, 128)
			set FRAME_PORTRAIT=BlzGetOriginFrame(ORIGIN_FRAME_PORTRAIT, 0)
			call BlzFrameSetVisible(FRAME_PORTRAIT, true)
			call BlzFrameClearAllPoints(FRAME_PORTRAIT)
			call BlzFrameSetAbsPoint(FRAME_PORTRAIT, FRAMEPOINT_TOPLEFT, (((( 1920 / 2 ) + UI___PORTRAIT_OFFSET_X)*1.0) / 1800.) * 0.75, (((UI___PORTRAIT_OFFSET_Y + UI___PORTRAIT_BORDER + UI___PORTRAIT_SIZE)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetAbsPoint(FRAME_PORTRAIT, FRAMEPOINT_BOTTOMRIGHT, (((( 1920 / 2 ) + UI___PORTRAIT_SIZE + UI___PORTRAIT_OFFSET_X)*1.0) / 1800.) * 0.75, (((UI___PORTRAIT_OFFSET_Y + UI___PORTRAIT_BORDER)*1.0) / 1800.)) // INLINED!!
			
			set FRAME_HP_BAR=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_HP_BAR, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, (((- UI___BAR_WIDTH / 2)*1.0) / 1800.), (((UI___HP_BAR_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_HP_BAR, (((UI___BAR_WIDTH)*1.0) / 1800.), (((UI___BAR_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_HP_BAR, "ReplaceableTextures\\teamcolor\\teamcolor10.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_HP_BAR, 96)
			set FRAME_MP_BAR=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_MP_BAR, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, (((- UI___BAR_WIDTH / 2)*1.0) / 1800.), (((UI___MP_BAR_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_MP_BAR, (((UI___BAR_WIDTH)*1.0) / 1800.), (((UI___BAR_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_MP_BAR, "ReplaceableTextures\\teamcolor\\teamcolor13.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_MP_BAR, 96)
			
			set FRAME_ABILITY_CONTAINER=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_ABILITY_CONTAINER, FRAMEPOINT_BOTTOMLEFT, FRAME_ORIGIN, FRAMEPOINT_BOTTOM, (((- UI___ABILITY_CONTAINER_WIDTH / 2)*1.0) / 1800.), (((UI___ABILITY_CONTAINER_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_ABILITY_CONTAINER, (((UI___ABILITY_CONTAINER_WIDTH)*1.0) / 1800.), (((UI___ABILITY_CONTAINER_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_ABILITY_CONTAINER, "Textures\\Black32.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_ABILITY_CONTAINER, 128)
			
			loop
				exitwhen i >= 10
				set s__FRAME_ABILITY_ICON[i]= BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
				call BlzFrameSetPoint(s__FRAME_ABILITY_ICON[i], FRAMEPOINT_TOPLEFT, FRAME_ABILITY_CONTAINER, FRAMEPOINT_TOPLEFT, c_inset + ( c_padding / 2. ) + ( i * c_cell ), (((- ( UI___ABILITY_CONTAINER_HEIGHT - UI___ABILITY_ICON_SIZE ) / 2)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetSize(s__FRAME_ABILITY_ICON[i], (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.), (((UI___ABILITY_ICON_SIZE)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetTexture(s__FRAME_ABILITY_ICON[i], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				set i=i + 1
			endloop
			
			set FRAME_STAT1=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_STAT1, FRAMEPOINT_TOPLEFT, FRAME_PORTRAIT_BACKDROP, FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetPoint(FRAME_STAT1, FRAMEPOINT_BOTTOMRIGHT, FRAME_PORTRAIT_BACKDROP, FRAMEPOINT_BOTTOMRIGHT, (((UI___STAT1_WIDTH)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTexture(FRAME_STAT1, "replaceabletextures\\teamcolor\\teamcolor27.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_STAT1, 200)
			set FRAME_STAT2=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_STAT2, FRAMEPOINT_TOPLEFT, FRAME_STAT1, FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetPoint(FRAME_STAT2, FRAMEPOINT_BOTTOMRIGHT, FRAME_HP_BAR, FRAMEPOINT_TOPRIGHT, 0., 0.)
			call BlzFrameSetTexture(FRAME_STAT2, "Textures\\Black32.blp", 0, true)
			call BlzFrameSetAlpha(FRAME_STAT2, 128)
			
			set FRAME_EXP_BAR=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_EXP_BAR, FRAMEPOINT_BOTTOMLEFT, FRAME_STAT1, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetPoint(FRAME_EXP_BAR, FRAMEPOINT_TOPRIGHT, FRAME_STAT1, FRAMEPOINT_BOTTOMRIGHT, 0., (((UI___EXP_BAR_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetTexture(FRAME_EXP_BAR, "replaceabletextures\\teamcolor\\teamcolor03.blp", 0, true)
			
			set FRAME_MAKE_POTION=BlzCreateFrameByType("FRAME", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_MAKE_POTION, FRAMEPOINT_TOPLEFT, FRAME_ORIGIN, FRAMEPOINT_TOPLEFT, 0, 0)
			
			set FRAME_SKILL_SHOP_BACKDROP=BlzCreateFrame("EMEdge", FRAME_GAME_UI, 0, 0)
			call BlzFrameSetPoint(FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_TOP, FRAME_ORIGIN, FRAMEPOINT_TOP, 0., (((UI___SKILL_SHOP_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_SKILL_SHOP_BACKDROP, (((UI___SKILL_SHOP_WIDTH)*1.0) / 1800.), (((UI___SKILL_SHOP_HEIGHT)*1.0) / 1800.)) // INLINED!!
			set f=BlzCreateFrame("MyTextBox", FRAME_SKILL_SHOP_BACKDROP, 0, 0)
			set bf=f
			set f=BlzCreateFrame("MyTextLarge", FRAME_SKILL_SHOP_BACKDROP, 0, 0)
			call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_TOP, 0., - 0.0125)
			call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(f, "능력 상점")
			call BlzFrameSetPoint(bf, FRAMEPOINT_BOTTOMLEFT, f, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
			call BlzFrameSetPoint(bf, FRAMEPOINT_TOPRIGHT, f, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			set FRAME_SKILL_SHOP=BlzCreateFrameByType("BACKDROP", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint(FRAME_SKILL_SHOP, FRAMEPOINT_TOP, FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_TOP, 0., - (((UI___SKILL_SHOP_INSET)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_SKILL_SHOP, (((UI___SKILL_SHOP_WIDTH - UI___SKILL_SHOP_INSET * 2)*1.0) / 1800.), (((UI___SKILL_SHOP_HEIGHT - UI___SKILL_SHOP_INSET * 2)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetAlpha(FRAME_SKILL_SHOP, 0)
			call BlzFrameSetVisible(FRAME_SKILL_SHOP_BACKDROP, false)
			
			set FRAME_SLOT_CHANGER=BlzCreateFrame("MBEdge", FRAME_GAME_UI, 0, 0)
			call BlzFrameSetPoint(FRAME_SLOT_CHANGER, FRAMEPOINT_CENTER, FRAME_ORIGIN, FRAMEPOINT_CENTER, 0., (((UI___SLOT_CHANGER_OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(FRAME_SLOT_CHANGER, (((UI___SLOT_CHANGER_WIDTH)*1.0) / 1800.), (((UI___SLOT_CHANGER_HEIGHT)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetVisible(FRAME_SLOT_CHANGER, false)
			set f=BlzCreateFrame("MyTextBox", FRAME_SLOT_CHANGER, 0, 0)
			set bf=f
			set f=BlzCreateFrame("MyText", FRAME_SLOT_CHANGER, 0, 0)
			call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, FRAME_SLOT_CHANGER, FRAMEPOINT_TOP, 0., 0.)
			call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(f, "능력 위치 변경")
			call BlzFrameSetPoint(bf, FRAMEPOINT_BOTTOMLEFT, f, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
			call BlzFrameSetPoint(bf, FRAMEPOINT_TOPRIGHT, f, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			
			set bf=null
			set f=null
			set t=null
  endfunction

  function s__UI_onInit takes nothing returns nothing
			set s__UI_INDEX_ABILITY_ICON=0
			set s__UI_INDEX_STAT_ICON=s__UI_INDEX_ABILITY_ICON + 10
			set s__UI_INDEX_BUFF_ICON=s__UI_INDEX_STAT_ICON + 16
			set s__UI_INDEX_SKILL_SHOP_WIDGET=s__UI_INDEX_BUFF_ICON + 8
			set s__UI_INDEX_SLOT_CHANGER_WIDGET=s__UI_INDEX_SKILL_SHOP_WIDGET + 5
			set s__UI_INDEX_SLOT_CHANGER_BUTTON=s__UI_INDEX_SLOT_CHANGER_WIDGET + 10
			set s__UI_INDEX_SLOT_CHANGER_ICON=s__UI_INDEX_SLOT_CHANGER_BUTTON + 10
			set s__UI_INDEX_SLOT_CHANGER_INDEX=s__UI_INDEX_SLOT_CHANGER_ICON + 10
			set s__UI_INDEX_SLOT_CHANGER_HOTKEY=s__UI_INDEX_SLOT_CHANGER_INDEX + 10
			call TriggerAddCondition(ERROR_MESSAGE_TRIGGER, Condition(function s__UI_abilityErrorCondition))
  endfunction



//library UI ends
//library UndeadData:

	 
//textmacro instance: undeadHeader("U000")

//end of: undeadHeader("U000")
  function s__UndeadU000_periodicAction takes integer this returns nothing
   local integer a= 0
   local real dist= 0.
			if sc__Undead_getTarget(this) > 0 then
				set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(s__Undead_target[this]) , sc__Object__get_y(s__Undead_target[this]))
				set a=sc__Unit_prototype_getAbility(this,0)
				if s__Ability_prototype_count[a] > 0 and dist <= s__Ability_prototype_cast_range[a] and dist > 100. then
					set s__Ability_prototype_ai_target[a]=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
					if sc__Ability_prototype_pressRequest(a) then
						return
					endif
				endif
				set a=sc__Unit_prototype_getAbility(this,1)
				if s__Ability_prototype_count[a] > 0 and dist <= sc__Unit_prototype__get_attack_range(this) + 100. then
					if sc__Ability_prototype_pressRequest(a) then
						return
					endif
				endif
				set a=sc__Unit_prototype_getAbility(this,0)
				if s__Ability_prototype_count[a] > 0 and dist <= s__Ability_prototype_cast_range[a] then
					set s__Ability_prototype_ai_target[a]=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
					if sc__Ability_prototype_pressRequest(a) then
						return
					endif
				endif
			endif
  endfunction
//textmacro instance: undeadEnd()

 function s__UndeadU000_create takes real x,real y,integer position returns integer
  local integer this= s__UndeadU000__allocate(s__UndeadU000_ID , x , y , s__Math_anglePoints(x , y , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) , position)
		return this
 endfunction

 function s__UndeadU000_request takes nothing returns nothing
		if Undead_CREATE_ID == s__UndeadU000_ID then
			set Undead_LAST_CREATED=s__UndeadU000_create(Undead_CREATE_X , Undead_CREATE_Y , Undead_CREATE_POSITION)
			call sc__Undead_init((Undead_LAST_CREATED))
		endif
 endfunction

 function s__UndeadU000_onInit takes nothing returns nothing
		call TriggerAddCondition(Undead_CREATE_REQUEST, Condition(function s__UndeadU000_request))
 endfunction

//end of: undeadEnd()

	 
//textmacro instance: undeadHeader("U001")

//end of: undeadHeader("U001")
  function s__UndeadU001_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
  endfunction
//textmacro instance: undeadEnd()

 function s__UndeadU001_create takes real x,real y,integer position returns integer
  local integer this= s__UndeadU001__allocate(s__UndeadU001_ID , x , y , s__Math_anglePoints(x , y , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) , position)
		return this
 endfunction

 function s__UndeadU001_request takes nothing returns nothing
		if Undead_CREATE_ID == s__UndeadU001_ID then
			set Undead_LAST_CREATED=s__UndeadU001_create(Undead_CREATE_X , Undead_CREATE_Y , Undead_CREATE_POSITION)
			set s__Undead_acquire_range[((Undead_LAST_CREATED))]=750. // INLINED!!
		endif
 endfunction

 function s__UndeadU001_onInit takes nothing returns nothing
		call TriggerAddCondition(Undead_CREATE_REQUEST, Condition(function s__UndeadU001_request))
 endfunction

//end of: undeadEnd()

	 
//textmacro instance: undeadHeader("U002")

//end of: undeadHeader("U002")
  function s__UndeadU002_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
  endfunction
//textmacro instance: undeadEnd()

 function s__UndeadU002_create takes real x,real y,integer position returns integer
  local integer this= s__UndeadU002__allocate(s__UndeadU002_ID , x , y , s__Math_anglePoints(x , y , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) , position)
		return this
 endfunction

 function s__UndeadU002_request takes nothing returns nothing
		if Undead_CREATE_ID == s__UndeadU002_ID then
			set Undead_LAST_CREATED=s__UndeadU002_create(Undead_CREATE_X , Undead_CREATE_Y , Undead_CREATE_POSITION)
			set s__Undead_acquire_range[((Undead_LAST_CREATED))]=750. // INLINED!!
		endif
 endfunction

 function s__UndeadU002_onInit takes nothing returns nothing
		call TriggerAddCondition(Undead_CREATE_REQUEST, Condition(function s__UndeadU002_request))
 endfunction

//end of: undeadEnd()

	 
//textmacro instance: undeadHeader("U003")

//end of: undeadHeader("U003")
  function s__UndeadU003_init takes integer this returns nothing
			set s__Undead_acquire_range[this]=750.
  endfunction
//textmacro instance: undeadEnd()

 function s__UndeadU003_create takes real x,real y,integer position returns integer
  local integer this= s__UndeadU003__allocate(s__UndeadU003_ID , x , y , s__Math_anglePoints(x , y , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) , position)
		return this
 endfunction

 function s__UndeadU003_request takes nothing returns nothing
		if Undead_CREATE_ID == s__UndeadU003_ID then
			set Undead_LAST_CREATED=s__UndeadU003_create(Undead_CREATE_X , Undead_CREATE_Y , Undead_CREATE_POSITION)
			set s__Undead_acquire_range[((Undead_LAST_CREATED))]=750. // INLINED!!
		endif
 endfunction

 function s__UndeadU003_onInit takes nothing returns nothing
		call TriggerAddCondition(Undead_CREATE_REQUEST, Condition(function s__UndeadU003_request))
 endfunction

//end of: undeadEnd()

	 
//textmacro instance: undeadHeader("U004")

//end of: undeadHeader("U004")

//textmacro instance: undeadEnd()

 function s__UndeadU004_create takes real x,real y,integer position returns integer
  local integer this= s__UndeadU004__allocate(s__UndeadU004_ID , x , y , s__Math_anglePoints(x , y , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) , position)
		return this
 endfunction

 function s__UndeadU004_request takes nothing returns nothing
		if Undead_CREATE_ID == s__UndeadU004_ID then
			set Undead_LAST_CREATED=s__UndeadU004_create(Undead_CREATE_X , Undead_CREATE_Y , Undead_CREATE_POSITION)
			call sc__Undead_init((Undead_LAST_CREATED))
		endif
 endfunction

 function s__UndeadU004_onInit takes nothing returns nothing
		call TriggerAddCondition(Undead_CREATE_REQUEST, Condition(function s__UndeadU004_request))
 endfunction

//end of: undeadEnd()


//library UndeadData ends
//library UnitActor:

		




		
  function s__UnitActor_suspendFree takes integer this returns nothing
			set s__UnitActor_suspend_stun[this]=false
			set s__UnitActor_suspend_ensnare[this]=false
			set s__UnitActor_suspend_silence[this]=false
			set s__UnitActor_suspend_dead[this]=false
			set s__UnitActor_suspend_rclick[this]=false
			set s__UnitActor_suspend_stop[this]=false
  endfunction

  function s__UnitActor__get_caster takes integer this returns integer
			return s__Actor_actor[this]
  endfunction

  function s__UnitActor__set_caster takes integer this,integer u returns nothing
			set s__Actor_actor[this]=u
  endfunction

  function s__UnitActor__get_owner takes integer this returns integer
			return (s__Actor_actor[(this)]) // INLINED!!
  endfunction

  function s__UnitActor__set_owner takes integer this,integer u returns nothing
			set s__Actor_actor[(this)]=(u) // INLINED!!
  endfunction

  function s__UnitActor_rightClick takes integer this returns nothing

  endfunction

  function s__UnitActor_onSuspend takes integer this returns nothing

  endfunction

  function s__UnitActor_onComplete takes integer this returns nothing

  endfunction

  function s__UnitActor_periodicAction takes integer this returns nothing

  endfunction

  function s__UnitActor_resetChanneling takes integer this returns nothing
			if s__UnitActor_channeling[this] then
				call sc__Unit_prototype_minusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			endif
			set s__UnitActor_channeling[this]=false
  endfunction

  function s__UnitActor_unlinkAbility takes integer this returns nothing
			if s__UnitActor_link_ability[this] > 0 then
				call sc__Ability_prototype_onUnlink(s__UnitActor_link_ability[this])
				set s__Ability_prototype_link_actor[s__UnitActor_link_ability[this]]=0
			endif
			set s__UnitActor_link_ability[this]=0
  endfunction

  function s__UnitActor_suspendFilterAdditional takes integer this returns boolean
			return false
  endfunction

  function s__UnitActor_suspendFilter takes integer this returns boolean
			return ( s__UnitActor_suspend_stun[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_STUN) > 0 ) or ( s__UnitActor_suspend_ensnare[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_ENSNARE) > 0 ) or ( s__UnitActor_suspend_silence[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_SILENCE) > 0 ) or ( s__UnitActor_suspend_dead[this] and sc__Unit_prototype_isUnitType((s__Actor_actor[(this)]),UNIT_TYPE_DEAD) ) or sc__UnitActor_suspendFilterAdditional(this) // INLINED!!
  endfunction

  function s__UnitActor_suspendAction takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if ( BlzGetTriggerPlayerKey() == OSKEY_S and s__UnitActor_suspend_stop[this] ) then
				call sc__Actor_onSuspend(this)
				call sc__Actor_deallocate(this)
				return
			endif
			if RIGHT_CLICK_PLAYER == sc__Unit_prototype__get_owner((s__Actor_actor[(this)])) and RIGHT_CLICK_UNIT == null then // INLINED!!
				if s__UnitActor_suspend_rclick[this] then
					call sc__Actor_onSuspend(this)
					call sc__Actor_deallocate(this)
					return
				else
					call sc__UnitActor_rightClick(this)
				endif
			endif
  endfunction

  function s__UnitActor_create takes integer caster,integer target,real x,real y,integer level,real duration,boolean channeling returns integer
   local integer this= s__UnitActor__allocate(caster , x , y , duration)
			set s__UnitActor_target[this]=target
			set s__UnitActor_level[this]=level
			set s__UnitActor_suspend_trigger[this]=s__Trigger_new(this)
			set s__UnitActor_suspend_condition[this]=TriggerAddCondition(s__UnitActor_suspend_trigger[this], Condition(function s__UnitActor_suspendAction))
			call BlzTriggerRegisterPlayerKeyEvent(s__UnitActor_suspend_trigger[this], sc__Unit_prototype__get_owner((s__Actor_actor[(this)])), OSKEY_S, 0, true) // INLINED!!
			call TriggerRegisterVariableEvent((s__UnitActor_suspend_trigger[this]), "udg_EVENT_VALUE", EQUAL, RIGHT_CLICK_EVENT) // INLINED!!
			set s__UnitActor_channeling[this]=channeling
			if s__UnitActor_channeling[this] then
				call sc__Unit_prototype_plusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			endif
			return this
  endfunction

  function s__UnitActor_onDestroy takes integer this returns nothing
			call s__UnitActor_resetChanneling(this)
			call TriggerRemoveCondition(s__UnitActor_suspend_trigger[this], s__UnitActor_suspend_condition[this])
			call s__Trigger_remove(s__UnitActor_suspend_trigger[this])
			set s__UnitActor_suspend_trigger[this]=null
			set s__UnitActor_suspend_condition[this]=null
			call s__UnitActor_unlinkAbility(this)
  endfunction




  function s__Backswing_create takes integer caster returns integer
   local integer this= s__Backswing__allocate(caster , 0 , 0 , 0 , 0 , s__Backswing_BACKSWING_DEFAULT / sc__Unit_prototype__get_attack_speed(caster) , true)
			set s__UnitActor_suspend_rclick[this]=true
			set s__UnitActor_suspend_stop[this]=true
			return this
  endfunction




  function s__MeleeAttack_onSuspend takes integer this returns nothing
			call sc__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0) // INLINED!!
  endfunction

  function s__MeleeAttack_onComplete takes integer this returns nothing
   local integer ef= 0
			call s__Damage_setFlag(DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false) // INLINED!!
			set DAMAGE_ID='Aatk'
			call sc__Unit_prototype_damageTarget((s__Actor_actor[(this)]),s__UnitActor_target[this] , sc__Unit_prototype__get_attack((s__Actor_actor[(this)])) , WEAPON_TYPE_METAL_MEDIUM_BASH) // INLINED!!
			call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
  endfunction

  function s__MeleeAttack_create takes integer caster,integer target returns integer
   local integer this= s__MeleeAttack__allocate(caster , target , 0 , 0 , 0 , s__MeleeAttack_DAMAGE_POINT_DEFAULT / sc__Unit_prototype__get_attack_speed(caster) , true)
			set s__UnitActor_suspend_rclick[this]=true
			set s__UnitActor_suspend_stop[this]=true
			call sc__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
			call sc__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0 * sc__Unit_prototype__get_attack_speed((s__Actor_actor[(this)]))) // INLINED!!
			call sc__Unit_prototype_issueTargetOrder((s__Actor_actor[(this)]),"attack" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			return this
  endfunction

  function s__MeleeAttack_onDestroy takes integer this returns nothing
			call sc__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0) // INLINED!!
  endfunction



//library UnitActor ends
//library UnitMovement:






  function s__UnitMovement__get_caster takes integer this returns integer
			return s__Actor_actor[this]
  endfunction

  function s__UnitMovement__set_caster takes integer this,integer u returns nothing
			set s__Actor_actor[this]=u
  endfunction

  function s__UnitMovement__get_owner takes integer this returns integer
			return s__Actor_actor[this]
  endfunction

  function s__UnitMovement__get_target takes integer this returns integer
			return s__Movement_target_true[this]
  endfunction

  function s__UnitMovement_explosionFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__UnitMovement_executeExplosion takes integer this,integer target returns nothing
			call sc__UnitMovement_damageTarget(this,target)
  endfunction

//Implemented from module WaveModule:


		


  function s__UnitMovement_setDamagePosition takes integer this,real x,real y returns nothing
			set s__UnitMovement_damage_x[this]=x
			set s__UnitMovement_damage_y[this]=y
  endfunction

  function s__UnitMovement_applyDamageFlag takes integer this returns nothing
			call s__Damage_setFlag(s__UnitMovement_damage_type[this] , s__UnitMovement_attack_type[this] , s__UnitMovement_is_target[this] , s__UnitMovement_is_aoe[this] , s__UnitMovement_interval_type[this] , s__UnitMovement_vector_type[this] , s__UnitMovement_is_onhit[this] , s__UnitMovement_is_ranged[this])
			set DAMAGE_ID=s__UnitMovement_damage_id[this]
			set USE_DAMAGE_POSITION=s__UnitMovement_use_damage_position[this]
			if s__UnitMovement_use_damage_position[this] then
				set DAMAGE_X=s__UnitMovement_damage_x[this]
				set DAMAGE_Y=s__UnitMovement_damage_y[this]
			endif
  endfunction

  function s__UnitMovement_damageTarget takes integer this,integer target returns real
			call s__UnitMovement_applyDamageFlag(this)
			return sc__Unit_prototype_damageTarget((s__Actor_actor[(this)]),target , s__UnitMovement_damage[this] , s__UnitMovement_weapon_type[this]) // INLINED!!
  endfunction

  function s__UnitMovement_setDamageFlag takes integer this,integer damage,integer attack,boolean target,boolean aoe,integer interval,integer vector,boolean onhit,boolean ranged returns nothing
			set s__UnitMovement_damage_type[this]=damage
			set s__UnitMovement_attack_type[this]=attack
			set s__UnitMovement_is_target[this]=target
			set s__UnitMovement_is_aoe[this]=aoe
			set s__UnitMovement_interval_type[this]=interval
			set s__UnitMovement_vector_type[this]=vector
			set s__UnitMovement_is_onhit[this]=onhit
			set s__UnitMovement_is_ranged[this]=ranged
  endfunction

  function s__UnitMovement_damageFlagTemplateMeleeAttack takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false)
  endfunction

  function s__UnitMovement_damageFlagTemplateRangedAttack takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__UnitMovement_damageFlagTemplateMagicalExplosion takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__UnitMovement_damageFlagTemplatePhysicalExplosion takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__UnitMovement_damageFlagTemplateTargetMagic takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__UnitMovement_damageFlagTemplateDOT takes integer this returns nothing
			call s__UnitMovement_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_ETC , false , false , INTERVAL_TYPE_PERIODIC , VECTOR_TYPE_INNER , false , true)
  endfunction



  function s__UnitMovement_affectFilter takes integer this,integer target returns boolean
			if ( not s__UnitMovement_affect_enemy[this] and sc__Unit_prototype_isEnemy(target,sc__Unit_prototype__get_owner((s__Actor_actor[(this)]))) ) then // INLINED!!
				return false
			elseif ( not s__UnitMovement_affect_ally[this] and sc__Unit_prototype_isAlly(target,sc__Unit_prototype__get_owner((s__Actor_actor[(this)]))) ) then // INLINED!!
				return false
			elseif ( not s__UnitMovement_affect_invincible[this] and sc__Unit_prototype_getStatus(target,STATUS_INVINCIBLE) > 0 ) then
				return false
			elseif ( not s__UnitMovement_affect_evasion[this] and sc__Unit_prototype_getStatus(target,STATUS_EVASION) > 0 ) then
				return false
			elseif ( not s__UnitMovement_affect_self[this] and target == (s__Actor_actor[(this)]) ) then // INLINED!!
				return false
			elseif sc__Unit_prototype_isUnitType(target,UNIT_TYPE_DEAD) then
				return false
			else
				return true
			endif
  endfunction


  function s__UnitMovement_rangeFilter takes integer this,integer target returns boolean
			return sc__Unit_prototype_inRange(target,sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitMovement_radius_explosion[this])
  endfunction


  function s__UnitMovement_waveFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__UnitMovement_waveRangeFilter takes integer this,integer target returns boolean
			return sc__Unit_prototype_inRange(target,sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitMovement_radius_wave[this])
  endfunction

  function s__UnitMovement_waveFilter takes integer this,integer target returns boolean
			if not s__UnitMovement_affectFilter(this,target) then
				return false
			elseif not sc__UnitMovement_waveRangeFilter(this,target) then
				return false
			elseif not sc__UnitMovement_waveFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__UnitMovement_executeWave takes integer this,integer target returns nothing
			call s__UnitMovement_damageTarget(this,target)
  endfunction

  function s__UnitMovement_waveAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__UnitMovement_waveFilter(this,sc__Unit_prototype_get(u)) and not IsUnitInGroup(u, s__UnitMovement_group_wave[this]) then
					call sc__UnitMovement_executeWave(this,sc__Unit_prototype_get(u))
					call GroupAddUnit(s__UnitMovement_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

//Implemented from module ExplosionModule:


		

  function s__UnitMovement_explosionFilter takes integer this,integer target returns boolean
			if not s__UnitMovement_affectFilter(this,target) then
				return false
			elseif not sc__UnitMovement_rangeFilter(this,target) then
				return false
			elseif not sc__UnitMovement_explosionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__UnitMovement_explosionAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__UnitMovement_explosionFilter(this,sc__Unit_prototype_get(u)) then
					call sc__UnitMovement_executeExplosion(this,sc__Unit_prototype_get(u))
					call GroupAddUnit(s__UnitMovement_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

//Implemented from module TargetModule:


  function s__UnitMovement_collisionFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__UnitMovement_collisionFilter takes integer this,integer target returns boolean
			if not s__UnitMovement_affectFilter(this,target) then
				return false
			elseif not sc__UnitMovement_collisionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__UnitMovement_targetFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__UnitMovement_targetFilter takes integer this,integer target returns boolean
			if not s__UnitMovement_affectFilter(this,target) then
				return false
			elseif not sc__UnitMovement_targetFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__UnitMovement_executeTarget takes integer this,integer target returns nothing
			call s__UnitMovement_damageTarget(this,target)
  endfunction

  function s__UnitMovement_collisionAction takes integer this returns boolean
   local integer i= 0
   local unit u= null
   local integer uu= 0
   local boolean b= false
			call GroupClear((s__UnitMovement_group_collision[this])) // INLINED!!
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				set uu=sc__Unit_prototype_get(u)
				if s__UnitMovement_collisionFilter(this,uu) and s__Math_distancePoints(sc__Actor__get_x(this) , sc__Actor__get_y(this) , sc__Object__get_x(uu) + s__Object_pivot_x[uu] , sc__Object__get_y(uu) + s__Object_pivot_y[uu]) <= s__UnitMovement_radius_target[this] + BlzGetUnitCollisionSize(u) then
					call GroupAddUnit(s__UnitMovement_group_collision[this], u)
				endif
				set i=i + 1
			endloop
			set u=sc__Group_getNearest(s__UnitMovement_group_collision[this] , sc__Actor__get_x(this) , sc__Actor__get_y(this) , null)
			if u != null then
				if s__UnitMovement_targetFilter(this,sc__Unit_prototype_get(u)) then
					call sc__UnitMovement_executeTarget(this,sc__Unit_prototype_get(u))
				endif
				call GroupAddUnit(s__UnitMovement_group_wave[this], u)
				set b=true
			endif
			set u=null
			return b
  endfunction

  function s__UnitMovement_targetLocationAction takes integer this returns boolean
   local boolean b= false
			if s__Math_distancePoints3D(sc__Actor__get_x(this) , sc__Actor__get_y(this) , sc__Movement__get_z(this) , s__Movement_target_x[this] , s__Movement_target_y[this] , s__Movement_target_z[this]) <= s__Movement_velo[this] * TIMER_TICK * 0.5 then
				set b=true
			endif
			return b
  endfunction

  function s__UnitMovement_targetAction takes integer this returns boolean
   local boolean b= false
			if s__Math_distancePoints3D(sc__Actor__get_x(this) , sc__Actor__get_y(this) , sc__Movement__get_z(this) , sc__Object__get_x(sc__Movement__get_target(this)) + s__Object_pivot_x[sc__Movement__get_target(this)] , sc__Object__get_y(sc__Movement__get_target(this)) + s__Object_pivot_y[sc__Movement__get_target(this)] , sc__Object__get_z(sc__Movement__get_target(this)) + s__Object_pivot_z[sc__Movement__get_target(this)]) <= s__UnitMovement_radius_target[this] then
				if s__UnitMovement_targetFilter(this,sc__Movement__get_target(this)) then
					call sc__UnitMovement_executeTarget(this,sc__Movement__get_target(this))
					call GroupAddUnit(s__UnitMovement_group_wave[this], (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(sc__Movement__get_target(this))]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
				endif
				set b=true
			endif
			return b
  endfunction


  function s__UnitMovement_suspendFilter takes integer this returns boolean
			return ( s__UnitMovement_suspend_stun[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_STUN) > 0 ) or ( s__UnitMovement_suspend_ensnare[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_ENSNARE) > 0 ) or ( s__UnitMovement_suspend_silence[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_SILENCE) > 0 ) or ( s__UnitMovement_suspend_dead[this] and sc__Unit_prototype_isUnitType((s__Actor_actor[(this)]),UNIT_TYPE_DEAD) ) // INLINED!!
  endfunction

  function s__UnitMovement_onSuspend takes integer this returns nothing

  endfunction

  function s__UnitMovement_onComplete takes integer this returns nothing

  endfunction

  function s__UnitMovement_onCollision takes integer this returns nothing

  endfunction

  function s__UnitMovement_periodicAction takes integer this returns nothing
			call sc__Movement_moveAction(this)
			if s__Movement_friction[this] > 0. then
				set s__Movement_velo[this]=s__Movement_velo[this] - ( s__Movement_friction[this] * TIMER_TICK )
				if s__Movement_velo[this] <= 0. then
					set s__Actor_duration[this]=0.
				endif
			endif
			if s__UnitMovement_flag_collision[this] and not s__Actor_want_destroy[this] then
				call s__UnitMovement_collisionAction(this)
			endif
			if s__UnitMovement_flag_wave[this] and not s__Actor_want_destroy[this] then
				call s__UnitMovement_waveAction(this)
			endif
  endfunction

  function s__UnitMovement_create takes integer u,real velo,real angle returns integer
   local integer this= s__UnitMovement__allocate(u , velo , angle)
			call sc__Unit_prototype_plusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			if s__Object_movement[(s__Actor_actor[(this)])] != 0 then // INLINED!!
				call sc__Actor_onSuspend(s__Object_movement[(s__Actor_actor[(this)])]) // INLINED!!
				call sc__Actor_deallocate(s__Object_movement[(s__Actor_actor[(this)])]) // INLINED!!
			endif
			call sc__Unit_prototype__set_collision((s__Actor_actor[(this)]),true) // INLINED!!
			set s__Object_movement[(s__Actor_actor[(this)])]=this // INLINED!!
			set s__UnitMovement_group_wave[this]=sc__Group_new()
			set s__UnitMovement_group_collision[this]=sc__Group_new()
			return this
  endfunction

  function s__UnitMovement_onDestroy takes integer this returns nothing
			call sc__Unit_prototype_minusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			if not s__Movement_use_collision[this] then
				call s__LocationEx_collisionProjection(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)]))) // INLINED!!
				call sc__Object_move((s__Actor_actor[(this)]),(GetLocationX(LocationEx__LOC)) , (GetLocationY(LocationEx__LOC)) , sc__Object__get_z((s__Actor_actor[(this)]))) // INLINED!!
			endif
			set s__Unit_prototype_gravity[(s__Actor_actor[(this)])]=GRAVITY_DEFAULT // INLINED!!
			call sc__Unit_prototype__set_collision((s__Actor_actor[(this)]),false) // INLINED!!
			set s__Object_movement[(s__Actor_actor[(this)])]=0 // INLINED!!
			call sc__Group_release(s__UnitMovement_group_wave[this])
			call sc__Group_release(s__UnitMovement_group_collision[this])
			set s__UnitMovement_group_wave[this]=null
			set s__UnitMovement_group_collision[this]=null
  endfunction



  function s__knockback_create takes integer u,real velo,real angle returns integer
   local integer this= s__knockback__allocate(u , velo , angle)
			set s__UnitMovement_suspend_stun[this]=false
			return this
  endfunction



//library UnitMovement ends
//library UnitPrototype:







  function s__Unit_prototype__get_origin_unit takes integer this returns unit
			return LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
  endfunction


  function s__Unit_prototype__get_level takes integer this returns integer
			return s__Unit_prototype_level_true[this]
  endfunction

  function s__Unit_prototype__set_level takes integer this,integer v returns nothing
   local integer diff= 0
			if v <= s__Unit_prototype_level_true[this] then
				return
			endif
			set diff=v - s__Unit_prototype_level_true[this]
			set s__Unit_prototype_level_true[this]=v
			if IsUnitType((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_TYPE_HERO) then // INLINED!!
				call SetHeroLevel((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), v, false) // INLINED!!
			endif
			call sc__Unit_prototype_refreshLevelStatValue(this)
			set LEVEL_UNIT=this
			set LEVEL_LEVEL=diff
			call TriggerEvaluate(LEVEL_TRIGGER)
			set LEVEL_UNIT=0
			set LEVEL_LEVEL=0
  endfunction

  function s__Unit_prototype_refreshAttackSpeed takes integer this,real v returns nothing
   local integer i= R2I(v / 0.05)
			if i <= 0 then
				set i=1
			endif
			if i > 100 then
				set i=100
			endif
			call SetUnitAbilityLevel((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Axx0', i) // INLINED!!
  endfunction

  function s__Unit_prototype_refreshAttackSpeedRequest takes integer this,real v returns nothing
			if s__Unit_prototype_weapon_ability[this] > 0 then
				call s__Unit_prototype_refreshAttackSpeed(this,sc__Ability_prototype_getAttackSpeedValue(s__Unit_prototype_weapon_ability[this],v))
			else
				call s__Unit_prototype_refreshAttackSpeed(this,v)
			endif
  endfunction

  function s__Unit_prototype_getStatValue takes integer this,integer stattype,integer statindex returns real
			return LoadReal(s__Agent_HASH, this, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + statindex)
  endfunction

  function s__Unit_prototype_getCarculatedStatValue takes integer this,integer stattype returns real
   local real nv= ( ( ( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE))) + (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_LEVEL))) * ( (s__Unit_prototype_level_true[(this)]) - 1 ) + (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_PLUS))) ) * (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MULTIPLY))) ) / (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_DIVIDE))) ) - (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MINUS))) // INLINED!!
			if s__STAT_TYPE_CLAMP[stattype] then
				if nv <= 0. then
					if stattype != STAT_TYPE_MAXHP then
						return 0.
					else
						return 0.01
					endif
				else
					return nv
				endif
			else
				return nv
			endif
  endfunction

  function s__Unit_prototype_refreshStatValue takes integer this,integer stattype returns nothing
			
			if stattype == STAT_TYPE_ATTACK_RANGE then
				call sc__Unit_prototype__set_attack_range(this,s__Unit_prototype_getCarculatedStatValue(this,stattype))
			elseif stattype == STAT_TYPE_MAXHP then
				call sc__Unit_prototype__set_maxhp(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MAXHP))
			elseif stattype == STAT_TYPE_MAXMP then
				call sc__Unit_prototype__set_maxmp(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MAXMP))
			elseif stattype == STAT_TYPE_MOVEMENT_SPEED then
				if sc__Unit_prototype_getStatus(this,STATUS_ENSNARE) > 0 then
					call sc__Unit_prototype__set_movement_speed(this,1.)
				else
					call sc__Unit_prototype__set_movement_speed(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MOVEMENT_SPEED))
				endif
			elseif stattype == STAT_TYPE_ATTACK_SPEED then
				call s__Unit_prototype_refreshAttackSpeedRequest(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_SPEED))
			endif
  endfunction

  function s__Unit_prototype_refreshLevelStatValue takes integer this returns nothing
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MAXHP)
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MAXMP)
  endfunction

  function s__Unit_prototype_setStatValue takes integer this,integer stattype,integer statindex,real newval returns nothing
			
			call SaveReal(s__Agent_HASH, this, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + statindex, newval)
  endfunction

  function s__Unit_prototype_plusStatValue takes integer this,integer stattype,real val returns nothing
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_PLUS ), (( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_PLUS))) + val)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,stattype)
  endfunction

  function s__Unit_prototype_minusStatValue takes integer this,integer stattype,real val returns nothing
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MINUS ), (( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MINUS))) + val)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,stattype)
  endfunction

  function s__Unit_prototype_multiplyStatValue takes integer this,integer stattype,real val returns nothing
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MULTIPLY ), (( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MULTIPLY))) + val)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,stattype)
  endfunction

  function s__Unit_prototype_divideStatValue takes integer this,integer stattype,real val returns nothing
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_DIVIDE ), (( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_DIVIDE))) + val)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,stattype)
  endfunction

  function s__Unit_prototype_initStatValue takes integer this returns nothing
   local integer i= 0
   local integer j= 0
			loop
				exitwhen i >= STAT_TYPE_SIZE
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_DIVIDE ), (( 1.)*1.0)) // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MULTIPLY ), (( 1.)*1.0)) // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 0.)*1.0)) // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_LEVEL ), (( 0.)*1.0)) // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_PLUS ), (( 0.)*1.0)) // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (i ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MINUS ), (( 0.)*1.0)) // INLINED!!
				set i=i + 1
			endloop
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_MAXHP ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 1.)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MAXHP)
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_MOVEMENT_SPEED ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 300.)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_ATTACK_SPEED ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 1.)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_ATTACK_SPEED)
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_ATTACK_RANGE ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 100.)*1.0)) // INLINED!!
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_ATTACK_RANGE)
			call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_HEAL_AMP ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 1.)*1.0)) // INLINED!!
  endfunction

  function s__Unit_prototype__get_owner takes integer this returns player
			return GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__get_id takes integer this returns integer
			return GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__get_x takes integer this returns real
			return GetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__get_y takes integer this returns real
			return GetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__get_z takes integer this returns real
			return s__Object_z_true[this]
  endfunction

  function s__Unit_prototype__get_yaw takes integer this returns real
			return GetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__set_x takes integer this,real np returns nothing
			call SetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np) // INLINED!!
			call SetUnitX(s__Unit_prototype_mover_unit[this], np)
  endfunction

  function s__Unit_prototype__set_y takes integer this,real np returns nothing
			call SetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np) // INLINED!!
			call SetUnitY(s__Unit_prototype_mover_unit[this], np)
  endfunction

  function s__Unit_prototype__set_z takes integer this,real np returns nothing
			set s__Object_z_true[this]=np
			call SetUnitFlyHeight((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), sc__Object__get_z(this) + sc__Object__get_offset_z(this), 0.) // INLINED!!
  endfunction

  function s__Unit_prototype__set_yaw takes integer this,real np returns nothing
			call BlzSetUnitFacingEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np + sc__Object__get_offset_yaw(this)) // INLINED!!
  endfunction

  function s__Unit_prototype__set_offset_z takes integer this,real np returns nothing
			set s__Object_offset_z_true[this]=np
			call SetUnitFlyHeight((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), sc__Object__get_z(this) + sc__Object__get_offset_z(this), 0.) // INLINED!!
  endfunction

  function s__Unit_prototype__get_name takes integer this returns string
			return GetUnitName((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype__get_hp takes integer this returns real
			return GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE) // INLINED!!
  endfunction

  function s__Unit_prototype__set_hp takes integer this,real np returns nothing
			if np >= 0. then
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE, np) // INLINED!!
				if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) == sc__Unit_prototype__get_maxhp(this) then // INLINED!!
					if sc__Unit_prototype_getStatus(this,STATUS_DEAD) > 0 and s__Unit_prototype_is_revive[this] then
						call sc__Unit_prototype_minusStatus(this,STATUS_DEAD)
					endif
				endif
			else
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE, np) // INLINED!!
				//call KillUnit(.origin_unit)
			endif
  endfunction

  function s__Unit_prototype__get_hpregen takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_HPREGEN)
  endfunction

  function s__Unit_prototype_restoreHP takes integer this,real nv returns nothing
			call s__Unit_prototype__set_hp(this,(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) + ( nv * s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_HEAL_AMP) )) // INLINED!!
  endfunction

  function s__Unit_prototype__get_maxhp takes integer this returns real
			return GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE) // INLINED!!
  endfunction

  function s__Unit_prototype__set_maxhp takes integer this,real np returns nothing
   local real v= (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) / (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) // INLINED!!
			if np <= 1. then
				call BlzSetUnitMaxHP((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(1.)) // INLINED!!
			else
				call BlzSetUnitMaxHP((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(np)) // INLINED!!
			endif
			call s__Unit_prototype__set_hp(this,(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * v) // INLINED!!
  endfunction

  function s__Unit_prototype__get_mp takes integer this returns real
			return GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA) // INLINED!!
  endfunction

  function s__Unit_prototype__set_mp takes integer this,real np returns nothing
			call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, np) // INLINED!!
  endfunction

  function s__Unit_prototype__get_mpregen takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MPREGEN)
  endfunction

  function s__Unit_prototype_restoreMP takes integer this,real nv returns nothing
			call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) + nv)*1.0)) // INLINED!!
  endfunction

  function s__Unit_prototype__get_maxmp takes integer this returns real
			return GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA) // INLINED!!
  endfunction

  function s__Unit_prototype__set_maxmp takes integer this,real np returns nothing
   local real v= 0.
			if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) > 0. then // INLINED!!
				set v=(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) / (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) // INLINED!!
			endif
			call BlzSetUnitMaxMana((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(np)) // INLINED!!
			call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) * v)*1.0)) // INLINED!!
  endfunction

  function s__Unit_prototype__get_attack takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK)
  endfunction

  function s__Unit_prototype__get_attack_speed takes integer this returns real
   local real v= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_SPEED)
			if v >= 5. then
				return 5.
			else
				return v
			endif
  endfunction

  function s__Unit_prototype__get_attack_delay takes integer this returns real
			return BlzGetUnitAttackCooldown((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0) // INLINED!!
  endfunction

  function s__Unit_prototype__set_attack_delay takes integer this,real np returns nothing
			call BlzSetUnitAttackCooldown((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np, 0) // INLINED!!
  endfunction

  function s__Unit_prototype__get_attack_range takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_RANGE)
  endfunction

  function s__Unit_prototype__set_attack_range takes integer this,real np returns nothing
   local real a= BlzGetUnitWeaponRealField((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 1) // INLINED!!
   local real r= BlzGetUnitWeaponRealField((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 0) // INLINED!!
			call BlzSetUnitWeaponRealFieldBJ((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 1, np - r + a) // INLINED!!
  endfunction

  function s__Unit_prototype__get_magic_power takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MAGICPOWER)
  endfunction

  function s__Unit_prototype__get_movement_speed takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
  endfunction

  function s__Unit_prototype__set_movement_speed takes integer this,real np returns nothing
   local real nv= 0.
			if np > 1000. then
				set nv=1000.
			elseif np <= 1. then
				set nv=1.
			else
				set nv=np
			endif
			call SetUnitMoveSpeed((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
  endfunction

  function s__Unit_prototype__get_accuracy takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ACCURACY)
  endfunction

  function s__Unit_prototype__get_evasion takes integer this returns real
			return s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_EVASION)
  endfunction

  function s__Unit_prototype__set_collision takes integer this,boolean b returns nothing
			if b then
				set s__Unit_prototype_collision_true[this]=s__Unit_prototype_collision_true[this] + 1
			else
				set s__Unit_prototype_collision_true[this]=s__Unit_prototype_collision_true[this] - 1
			endif
			call SetUnitPathing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Unit_prototype_collision_true[this] > 0) // INLINED!!
  endfunction

  function s__Unit_prototype_damageTarget takes integer this,integer target,real damage,weapontype wt returns real
			return s__Damage_unitDamageTarget(this , target , damage , wt)
  endfunction

  function s__Unit_prototype_decay takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call sc__Object_deallocate(this)
  endfunction

  function s__Unit_prototype_setWeaponAbility takes integer this,integer wa returns nothing
			if wa > 0 then
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_ATTACK_RANGE ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( s__Ability_prototype_weapon_range[wa])*1.0)) // INLINED!!
				call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_ATTACK_RANGE)
				call BlzSetUnitAttackCooldown((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((s__Ability_prototype_weapon_delay[wa])*1.0), 0) // INLINED!!
			else
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (STAT_TYPE_ATTACK_RANGE ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( 100.)*1.0)) // INLINED!!
				call BlzSetUnitAttackCooldown((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.5)*1.0), 0) // INLINED!!
			endif
			call s__Unit_prototype_refreshAttackSpeedRequest(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_SPEED))
			set s__Unit_prototype_weapon_ability[this]=wa
  endfunction

  function s__Unit_prototype_getAbility takes integer this,integer index returns integer
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_ABILITY + index) then
				return LoadInteger(s__Agent_HASH, this, INDEX_ABILITY + index)
			else
				return 0
			endif
  endfunction

  function s__Unit_prototype_getAbilityById takes integer this,integer id returns integer
   local integer ta= 0
   local integer i= 0
   local boolean space_exist= false
			loop
				exitwhen i >= ABILITY_SIZE
				set ta=s__Unit_prototype_getAbility(this,i)
				if ta != 0 and s__Ability_prototype_id[ta] == id then
					return ta
				elseif ta == 0 then
					set space_exist=true
				endif
				set i=i + 1
			endloop
			if space_exist then
				return 0
			else
				return - 1
			endif
  endfunction

  function s__Unit_prototype_setAbility takes integer this,integer index,integer na returns nothing
			call SaveInteger(s__Agent_HASH, this, INDEX_ABILITY + index, na)
  endfunction

  function s__Unit_prototype_killAbility takes integer this,integer index returns nothing
   local integer ta= s__Unit_prototype_getAbility(this,index)
			call SaveInteger(s__Agent_HASH, (this), INDEX_ABILITY + (index ), ( 0)) // INLINED!!
			if ta > 0 then
				if ta == s__Unit_prototype_weapon_ability[this] then
					call s__Unit_prototype_setWeaponAbility(this,0)
				endif
				call sc__Ability_prototype_kill(ta)
			endif
  endfunction

  function s__Unit_prototype_addAbility takes integer this,integer aid returns integer
   local integer i= 0
   local integer na= s__Unit_prototype_getAbilityById(this,aid)
			if na == 0 then
				
				set na=sc__Ability_prototype_new(aid)
				if na > 0 then
					loop
						exitwhen i >= ABILITY_SIZE
						if s__Unit_prototype_getAbility(this,i) == 0 then
							call SaveInteger(s__Agent_HASH, (this), INDEX_ABILITY + (i ), ( na)) // INLINED!!
							set s__Ability_prototype_owner[na]=this
							call sc__Ability_prototype_essentialInit(na)
							call sc__Ability_prototype_init(na)
							return na
						endif
						set i=i + 1
					endloop
				endif
			elseif na == - 1 then
				

			else
				
				call sc__Ability_prototype_addLevel(na,1)
				call sc__Ability_prototype_update(na)
			endif
			return na
  endfunction

  function s__Unit_prototype_clearAbility takes integer this returns nothing
   local integer i= 0
   local integer a= 0
			loop
				exitwhen i >= ABILITY_SIZE
				set a=s__Unit_prototype_getAbility(this,i)
				if a != 0 then
					call sc__Ability_prototype_kill(a)
				endif
				call RemoveSavedInteger(s__Agent_HASH, this, INDEX_ABILITY + i)
				set i=i + 1
			endloop
  endfunction

  function s__Unit_prototype_cancleAbilityReservation takes integer this returns nothing
   local integer i= 0
   local integer a=0
			loop
				exitwhen i >= ABILITY_SIZE
				set a=s__Unit_prototype_getAbility(this,i)
				if a != 0 then
					call sc__Ability_prototype_cancleReservation(a)
				endif
				set i=i + 1
			endloop
  endfunction

  function s__Unit_prototype_cancleAbilityFollow takes integer this returns nothing
   local integer i= 0
   local integer a=0
			loop
				exitwhen i >= ABILITY_SIZE
				set a=s__Unit_prototype_getAbility(this,i)
				if a != 0 then
					call sc__Ability_prototype_cancleFollow(a)
				endif
				set i=i + 1
			endloop
  endfunction

  function s__Unit_prototype_getItem takes integer this,integer index returns integer
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_ITEM + index) then
				return LoadInteger(s__Agent_HASH, this, INDEX_ITEM + index)
			else
				return 0
			endif
  endfunction
		
  function s__Unit_prototype_setItem takes integer this,integer index,integer na returns nothing
			call SaveInteger(s__Agent_HASH, this, INDEX_ITEM + index, na)
  endfunction
		
  function s__Unit_prototype_clearItem takes integer this returns nothing
   local integer i= 0
   local integer it= 0
			loop
				exitwhen i >= ITEM_SIZE
				set it=s__Unit_prototype_getItem(this,i)
				if it != 0 then
					call s__Item_prototype_deallocate(it)
				endif
				call RemoveSavedInteger(s__Agent_HASH, this, INDEX_ITEM + i)
				set i=i + 1
			endloop
  endfunction

  function s__Unit_prototype_getStatus takes integer this,integer index returns integer
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_STATUS + index) then
				return LoadInteger(s__Agent_HASH, this, INDEX_STATUS + index)
			else
				return 0
			endif
  endfunction

  function s__Unit_prototype_plusAvul takes integer this returns nothing
			set s__Unit_prototype_avul[this]=s__Unit_prototype_avul[this] + 1
			if s__Unit_prototype_avul[this] == 1 then
				call UnitAddAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Avul') // INLINED!!
			endif
  endfunction

  function s__Unit_prototype_minusAvul takes integer this returns nothing
			set s__Unit_prototype_avul[this]=s__Unit_prototype_avul[this] - 1
			if s__Unit_prototype_avul[this] == 0 then
				call UnitRemoveAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Avul') // INLINED!!
			endif
  endfunction
		
  function s__Unit_prototype_setStatus takes integer this,integer index,integer nv returns nothing
			call SaveInteger(s__Agent_HASH, this, INDEX_STATUS + index, nv)
  endfunction
		
  function s__Unit_prototype_plusStatus takes integer this,integer index returns nothing
			call SaveInteger(s__Agent_HASH, (this), INDEX_STATUS + (index ), ( s__Unit_prototype_getStatus(this,index) + 1)) // INLINED!!
			if index == STATUS_STUN then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_CAST then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_GRABBED then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_INVINCIBLE then
				call s__Unit_prototype_plusAvul(this)
			elseif index == STATUS_DEAD then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
				if s__Unit_prototype_getStatus(this,index) == 1 then
					call sc__Effect_setAlpha(s__Unit_prototype_facing_circle[this],0)
					if s__Unit_prototype_is_revive[this] then
						call s__Unit_prototype_plusAvul(this)
						call SetUnitVertexColor((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0, 0, 0, 255) // INLINED!!
					else
						
						call s__Unit_prototype__set_hp(this,- 1)
						if s__Unit_prototype_decay_timer[this] == null then
							set s__Unit_prototype_decay_timer[this]=sc__Timer_new(this)
						endif
						call TimerStart((s__Unit_prototype_decay_timer[this] ), (( 10. )*1.0), ( false ), ( function s__Unit_prototype_decay)) // INLINED!!
					endif
					
					set DEATH_UNIT=this
					call TriggerEvaluate(DEATH_TRIGGER)
					set DEATH_UNIT=0
					set DEATH_KILLER=0
				endif
				call sc__Unit_prototype_resetAnim(this)
				call sc__Unit_prototype_setAnim(this,"death")
			elseif index == STATUS_ENSNARE then
				call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
			endif
  endfunction
		
  function s__Unit_prototype_minusStatus takes integer this,integer index returns nothing
			if s__Unit_prototype_getStatus(this,index) > 0 then
				call SaveInteger(s__Agent_HASH, (this), INDEX_STATUS + (index ), ( s__Unit_prototype_getStatus(this,index) - 1)) // INLINED!!
				if index == STATUS_STUN then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_CAST then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_GRABBED then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_INVINCIBLE then
					call s__Unit_prototype_minusAvul(this)
				elseif index == STATUS_DEAD then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
					if s__Unit_prototype_getStatus(this,index) == 0 then
						call sc__Unit_prototype_setAnim(this,"stand")
						call sc__Unit_prototype_queueAnim(this,"stand")
						call sc__Effect_setAlpha(s__Unit_prototype_facing_circle[this],255)
						call s__Unit_prototype_minusAvul(this)
						call SetUnitVertexColor((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 255, 255, 255, 255) // INLINED!!
						set REVIVE_UNIT=this
						call TriggerEvaluate(REVIVE_TRIGGER)
						set REVIVE_UNIT=0
					endif
				elseif index == STATUS_ENSNARE then
					call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
				endif
			endif
  endfunction
		
  function s__Unit_prototype_clearStatus takes integer this returns nothing
   local integer i= 0
			loop
				exitwhen i >= STATUS_SIZE
				call RemoveSavedInteger(s__Agent_HASH, this, INDEX_STATUS + i)
				set i=i + 1
			endloop
  endfunction

  function s__Unit_prototype_kill takes integer this returns nothing
			if s__Unit_prototype_getStatus(this,STATUS_DEAD) <= 0 then
				call s__Unit_prototype_plusStatus(this,STATUS_DEAD)
			endif
  endfunction

  function s__Unit_prototype_syncMoverImmediate takes nothing returns nothing
   local integer this= sc__Unit_prototype_get(GetTriggerUnit())
			if this > 0 then
				call SetUnitX(s__Unit_prototype_mover_unit[this], sc__Object__get_x(this))
				call SetUnitY(s__Unit_prototype_mover_unit[this], sc__Object__get_y(this))
				call IssueImmediateOrder(s__Unit_prototype_mover_unit[this], "stop")
			endif
  endfunction

  function s__Unit_prototype_syncMoverPoint takes nothing returns nothing
   local integer this= sc__Unit_prototype_get(GetTriggerUnit())
			if this > 0 and ( GetIssuedOrderIdBJ() == String2OrderIdBJ("smart") or GetIssuedOrderIdBJ() == String2OrderIdBJ("attack") ) then
				call SetUnitX(s__Unit_prototype_mover_unit[this], sc__Object__get_x(this))
				call SetUnitY(s__Unit_prototype_mover_unit[this], sc__Object__get_y(this))
				call IssuePointOrder(s__Unit_prototype_mover_unit[this], "move", GetOrderPointX(), GetOrderPointY())
			endif
  endfunction

  function s__Unit_prototype_syncMoverTarget takes nothing returns nothing
   local integer this= sc__Unit_prototype_get(GetTriggerUnit())
			if this > 0 then
				call SetUnitX(s__Unit_prototype_mover_unit[this], sc__Object__get_x(this))
				call SetUnitY(s__Unit_prototype_mover_unit[this], sc__Object__get_y(this))
				call IssueImmediateOrder(s__Unit_prototype_mover_unit[this], "stop")
				//call IssueTargetOrder(.mover_unit,"smart",GetOrderTarget())
			endif
  endfunction

  function s__Unit_prototype_basicAttack takes nothing returns nothing
   local integer attacker= 0
   local integer target= 0
   local integer i= ABILITY_SIZE - 1
   local integer a= 0
			if BlzGetEventIsAttack() then
				call BlzSetEventDamage(0.)
				set attacker=sc__Unit_prototype_get(GetEventDamageSource())
				set target=sc__Unit_prototype_get(GetTriggerUnit())
				if attacker > 0 and target > 0 then
					if s__Unit_prototype_weapon_ability[attacker] > 0 then
						call sc__Ability_prototype_basicAttack(s__Unit_prototype_weapon_ability[attacker],target)
					else
						call s__MeleeAttack_create(attacker , target)
					endif
				endif
			endif
  endfunction

  function s__Unit_prototype_gravityAction takes integer this returns nothing
			if s__Object_movement[this] == 0 then
				if sc__Object__get_z(this) <= 0. and s__Unit_prototype_z_velo[this] <= 0. then
					call sc__Object__set_z(this,0.)
					set s__Unit_prototype_z_velo[this]=0.
				else
					call sc__Object__set_z(this,sc__Object__get_z(this) + s__Unit_prototype_z_velo[this] * TIMER_TICK)
					set s__Unit_prototype_z_velo[this]=s__Unit_prototype_z_velo[this] - s__Unit_prototype_gravity[this] * TIMER_TICK
				endif
			else
				set s__Unit_prototype_z_velo[this]=0.
			endif
  endfunction

  function s__Unit_prototype_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call sc__Effect_setPosition(s__Unit_prototype_facing_circle[this],sc__Object__get_x(this) , sc__Object__get_y(this) , 0.)
			call sc__Object__set_yaw(s__Unit_prototype_facing_circle[this],sc__Object__get_yaw(this))
			call s__Unit_prototype_gravityAction(this)
			call s__Unit_prototype_restoreHP(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_HPREGEN) * TIMER_TICK)
			call s__Unit_prototype_restoreMP(this,s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MPREGEN) * TIMER_TICK)
  endfunction

  function s__Unit_prototype_resetAnim takes integer this returns nothing
			call ResetUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype_setAnim takes integer this,string anim returns nothing
			if s__Unit_prototype_getStatus(this,STATUS_DEAD) <= 0 or anim == "death" then
				call SetUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), anim) // INLINED!!
			endif
  endfunction

  function s__Unit_prototype_queueAnim takes integer this,string anim returns nothing
			if s__Unit_prototype_getStatus(this,STATUS_DEAD) <= 0 or anim == "death" then
				call QueueUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), anim) // INLINED!!
			endif
  endfunction

  function s__Unit_prototype_setAnimSpeed takes integer this,real nv returns nothing
			call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
  endfunction

  function s__Unit_prototype_isMoveable takes integer this returns boolean
			return s__Unit_prototype_getStatus(this,STATUS_STUN) <= 0 and s__Unit_prototype_getStatus(this,STATUS_ENSNARE) <= 0 and s__Unit_prototype_getStatus(this,STATUS_GRABBED) <= 0
  endfunction

  function s__Unit_prototype_inRange takes integer this,real x,real y,real radius returns boolean
			return IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), x, y, radius) // INLINED!!
  endfunction

  function s__Unit_prototype_inLine takes integer this,real x1,real y1,real x2,real y2,real radius returns boolean
			return IsUnitInLine((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) , x1 , y1 , x2 , y2 , radius) // INLINED!!
  endfunction

  function s__Unit_prototype_inSector takes integer this,real x,real y,real radius,real angle,real width returns boolean
			return IsUnitInSector((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) , x , y , radius , angle , width) // INLINED!!
  endfunction

  function s__Unit_prototype_isVisible takes integer this,player p returns boolean
			return IsUnitVisible((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
  endfunction

  function s__Unit_prototype_isEnemy takes integer this,player p returns boolean
			return IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
  endfunction

  function s__Unit_prototype_isAlly takes integer this,player p returns boolean
			return IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
  endfunction

  function s__Unit_prototype_isUnitType takes integer this,unittype ut returns boolean
			if ut == UNIT_TYPE_DEAD then
				return s__Unit_prototype_getStatus(this,STATUS_DEAD) > 0 or IsUnitType((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_TYPE_DEAD) // INLINED!!
			else
				return IsUnitType((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), ut) // INLINED!!
			endif
  endfunction

  function s__Unit_prototype_issueTargetOrder takes integer this,string order,widget t returns nothing
			call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), order, t) // INLINED!!
  endfunction

  function s__Unit_prototype_issuePointOrder takes integer this,string order,real x,real y returns nothing
			call IssuePointOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), order, x, y) // INLINED!!
  endfunction

  function s__Unit_prototype_issueImmediateOrder takes integer this,string order returns nothing
			call IssueImmediateOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), order) // INLINED!!
  endfunction

  function s__Unit_prototype_get takes unit u returns integer
			if HaveSavedInteger(s__Agent_HASH, GetHandleId(u), s__Agent_INDEX_INSTANCE_ID) and u != null then
				return LoadInteger(s__Agent_HASH, GetHandleId(u), s__Agent_INDEX_INSTANCE_ID)
			else
				return 0
			endif
  endfunction

  function s__Unit_prototype_essentialInit takes integer this returns nothing
			set s__Unit_prototype_origin_name[this]=GetUnitName((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			call UnitAddAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Arav') // INLINED!!
			call UnitRemoveAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Arav') // INLINED!!
			call UnitAddAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Axx0') // INLINED!!
			call UnitAddAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Axx1') // INLINED!!
			call UnitAddAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Axx2') // INLINED!!
			call SetUnitAbilityLevel((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Axx0', 20) // INLINED!!
			call BlzUnitHideAbility((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 'Apat', true) // INLINED!!
			call BlzSetUnitWeaponRealFieldBJ((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT, 0, 0.01) // INLINED!!
    		call BlzSetUnitWeaponRealFieldBJ((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT, 0, 0.01) // INLINED!!
			call BlzSetUnitWeaponIntegerFieldBJ((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND, 0, 0) // INLINED!!
			call BlzSetUnitAttackCooldown((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.5)*1.0), 0) // INLINED!!
			call sc__Object__set_offset_z(this,GetUnitFlyHeight((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
  endfunction

  function s__Unit_prototype_create takes player p,integer uid,real x,real y,real facing returns integer
   local integer this= s__Unit_prototype__allocate(CreateUnit(p, uid, x, y, facing))
			set s__Unit_prototype_origin_player[this]=p
			set s__Unit_prototype_main_timer[this]=sc__Timer_new(this)
			call GroupAddUnit(UnitPrototype_GROUP, (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			call s__Unit_prototype_essentialInit(this)
			call s__Unit_prototype_initStatValue(this)
			call TimerStart((s__Unit_prototype_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Unit_prototype_timerAction)) // INLINED!!
			
			set s__Unit_prototype_mover_unit[this]=CreateUnit(p, 'dumm', x, y, facing)
			if not UnitAddAbility(s__Unit_prototype_mover_unit[this], 'Axx3') then
				call BJDebugMsg("|cffff0000어빌리티 'Axx3'(윈드워크) 이/가 정의되지 않았습니다.")
			endif
			call IssueImmediateOrder(s__Unit_prototype_mover_unit[this], "windwalk")
			call UnitAddAbility(s__Unit_prototype_mover_unit[this], 'Axx1')
			call ShowUnit(s__Unit_prototype_mover_unit[this], false)
			call SetUnitMoveSpeed(s__Unit_prototype_mover_unit[this], 10.)
			
			set s__Unit_prototype_facing_circle[this]=sc__Effect_create("Effects\\FacingCircle.mdl" , x , y , 0. , facing)
			call sc__Effect_setScale(s__Unit_prototype_facing_circle[this],BlzGetUnitCollisionSize((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) / 100.) // INLINED!!
			if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
				
			elseif (IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],255 , 0 , 0)
			elseif (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],0 , 255 , 0)
			else
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],255 , 255 , 0)
			endif
			set s__Effect_want_remove[s__Unit_prototype_facing_circle[this]]=true
			
			return this
  endfunction

  function s__Unit_prototype_onDestroy takes integer this returns nothing
			//if .is_revive then
				set UNREGISTER_GROUP_UNIT=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
				call TriggerEvaluate(UNREGISTER_GROUP)
				set UNREGISTER_GROUP_UNIT=null
			//endif
			call s__Unit_prototype_clearAbility(this)
			call s__Unit_prototype_clearItem(this)
			call s__Unit_prototype_clearStatus(this)
			call s__Buff_unitDestroyBuffs(this)
			call sc__Object_deallocate(s__Unit_prototype_facing_circle[this])
			if s__Mover_getUnitMover(this) > 0 then
				call s__Mover_deallocate(s__Mover_getUnitMover(this))
			endif
			if s__Object_movement[this] != 0 then
				call sc__Actor_deallocate(s__Object_movement[this])
			endif
			if s__Unit_prototype_main_timer[this] != null then
				call sc__Timer_release(s__Unit_prototype_main_timer[this])
			endif
			if s__Unit_prototype_decay_timer[this] != null then
				call sc__Timer_release(s__Unit_prototype_decay_timer[this])
			endif
			set s__Unit_prototype_main_timer[this]=null
			set s__Unit_prototype_decay_timer[this]=null
			set s__Unit_prototype_origin_player[this]=null
			call RemoveUnit(s__Unit_prototype_mover_unit[this])
			set s__Unit_prototype_mover_unit[this]=null
			call RemoveUnit((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
  endfunction

  function s__Unit_prototype_unregister takes nothing returns nothing
			if UNREGISTER_GROUP_UNIT == null then
				return
			else
				call GroupRemoveUnit(UnitPrototype_GROUP, UNREGISTER_GROUP_UNIT)
			endif
  endfunction

  function s__Unit_prototype_initLabel takes nothing returns nothing
			set INDEX_STAT=0
			set INDEX_ABILITY=INDEX_STAT + STAT_TYPE_SIZE * STAT_INDEX_SIZE
			set INDEX_ITEM=INDEX_ABILITY + ABILITY_SIZE
			set INDEX_STATUS=INDEX_ITEM + ITEM_SIZE
			set INDEX_LAST=INDEX_STATUS + STATUS_SIZE
  endfunction

  function s__Unit_prototype_initTrigger takes nothing returns nothing
			call TriggerRegisterAnyUnitEventBJ(s__Unit_prototype_TRIGGER_DAMAGE, EVENT_PLAYER_UNIT_DAMAGING)
			call TriggerAddCondition(s__Unit_prototype_TRIGGER_DAMAGE, Condition(function s__Unit_prototype_basicAttack))
			//
			call TriggerRegisterAnyUnitEventBJ(s__Unit_prototype_TRIGGER_ORDER_IMMEDIATE, EVENT_PLAYER_UNIT_ISSUED_ORDER)
			call TriggerAddCondition(s__Unit_prototype_TRIGGER_ORDER_IMMEDIATE, Condition(function s__Unit_prototype_syncMoverImmediate))
			//
			call TriggerRegisterAnyUnitEventBJ(s__Unit_prototype_TRIGGER_ORDER_POINT, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
			call TriggerAddCondition(s__Unit_prototype_TRIGGER_ORDER_POINT, Condition(function s__Unit_prototype_syncMoverPoint))
			//
			call TriggerRegisterAnyUnitEventBJ(s__Unit_prototype_TRIGGER_ORDER_TARGET, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
			call TriggerAddCondition(s__Unit_prototype_TRIGGER_ORDER_TARGET, Condition(function s__Unit_prototype_syncMoverTarget))
			//
			call TriggerAddCondition(UNREGISTER_GROUP, Condition(function s__Unit_prototype_unregister))
  endfunction

  function s__Unit_prototype_onInit takes nothing returns nothing
   local integer i= 0
			set UnitPrototype_GROUP=sc__Group_new()
			loop
				exitwhen i >= STAT_TYPE_SIZE
				set s__STAT_TYPE_CLAMP[i]= false
				set s__STAT_NORMAL_VALUE[i]= 1.
				set i=i + 1
			endloop
			set s__STAT_TYPE_CLAMP[STAT_TYPE_MAXHP]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_MAXMP]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_ATTACK]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_MAGICPOWER]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_ACCURACY]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_EVASION]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_MOVEMENT_SPEED]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_ATTACK_RANGE]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_ARMOR_PENET]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_MAGIC_PENET]= true
			set s__STAT_TYPE_CLAMP[STAT_TYPE_HPREGEN]= true
			
			set s__STAT_NORMAL_VALUE[STAT_TYPE_MAXHP]= 20.
			set s__STAT_NORMAL_VALUE[STAT_TYPE_MAXMP]= 10.
			set s__STAT_NORMAL_VALUE[STAT_TYPE_ARMOR_PENET]= 0.5
			set s__STAT_NORMAL_VALUE[STAT_TYPE_MAGIC_PENET]= 0.5
			set s__STAT_NORMAL_VALUE[STAT_TYPE_HPREGEN]= 0.2
			set s__STAT_NORMAL_VALUE[STAT_TYPE_MPREGEN]= 0.1
			
			call s__Unit_prototype_initLabel()
			
			call s__Unit_prototype_initTrigger()
  endfunction



//library UnitPrototype ends
//library YouCantAttackAlly:


 function YouCantAttackAlly__act takes nothing returns nothing
		if IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetAttacker())) then
			call IssueImmediateOrder(GetAttacker(), "stop")
			//call BlzUnitInterruptAttack(GetAttacker())
		endif
	endfunction
	

 function YouCantAttackAlly__init takes nothing returns nothing
		call TriggerRegisterAnyUnitEventBJ(YouCantAttackAlly__TRIG, EVENT_PLAYER_UNIT_ATTACKED)
		call TriggerAddCondition(YouCantAttackAlly__TRIG, Condition(function YouCantAttackAlly__act))
	endfunction


//library YouCantAttackAlly ends
//library AbilityPrototype:











  function s__Ability_prototype_addValue takes integer this,integer v returns nothing
			set s__Ability_prototype_value[this]=s__Ability_prototype_value[this] + v
  endfunction

  function s__Ability_prototype_addLevel takes integer this,integer v returns nothing
			set s__Ability_prototype_level[this]=s__Ability_prototype_level[this] + v
  endfunction

  function s__Ability_prototype_addCount takes integer this returns nothing
			set s__Ability_prototype_count[this]=s__Ability_prototype_count[this] + 1
  endfunction

  function s__Ability_prototype_useCount takes integer this returns nothing
			set s__Ability_prototype_count[this]=s__Ability_prototype_count[this] - 1
  endfunction

  function s__Ability_prototype_getCarculatedCastDelayByAttackSpeed takes integer this returns real
			if s__Ability_prototype_cast_delay[this] / s__Unit_prototype_getCarculatedStatValue(s__Ability_prototype_owner[this],STAT_TYPE_ATTACK_SPEED) > s__Ability_prototype_cast_delay[this] then
				return s__Ability_prototype_cast_delay[this]
			else
				return s__Ability_prototype_cast_delay[this] / s__Unit_prototype_getCarculatedStatValue(s__Ability_prototype_owner[this],STAT_TYPE_ATTACK_SPEED)
			endif
  endfunction

  function s__Ability_prototype_getCarculatedManacost takes integer this returns real
			return I2R(s__Ability_prototype_manacost[this])
  endfunction

  function s__Ability_prototype_getMaxCooldownBySpellBoost takes integer this returns real
			return s__Ability_prototype_cooldown_max[this] / ( 1 + 0.01 * s__Unit_prototype_getCarculatedStatValue(s__Ability_prototype_owner[this],STAT_TYPE_SPELL_BOOST) )
  endfunction

  function s__Ability_prototype_getMaxCooldownValueByAttackSpeed takes integer this returns real
   local real v= s__Unit_prototype_getCarculatedStatValue(s__Ability_prototype_owner[this],STAT_TYPE_ATTACK_SPEED)
			if v < 1. then
				return 1.
			else
				return 1. / v
			endif
  endfunction

  function s__Ability_prototype_getMaxCooldown takes integer this returns real
			return s__Ability_prototype_getMaxCooldownBySpellBoost(this)
  endfunction

  function s__Ability_prototype_getCarculatedMaxCooldown takes integer this returns real
   local real v= sc__Ability_prototype_getMaxCooldown(this)
			if v < s__Ability_prototype_cooldown_min[this] then
				return s__Ability_prototype_cooldown_min[this]
			else
				return v
			endif
  endfunction

  function s__Ability_prototype_iconClick takes integer this returns nothing
			
  endfunction

  function s__Ability_prototype_relativeTooltip takes integer this returns string
			return "MissingTooltip"
  endfunction

  function s__Ability_prototype_endCooldown takes integer this returns nothing
			if s__Ability_prototype_count[this] <= 0 then
				set s__Ability_prototype_count[this]=1
			endif
			set s__Ability_prototype_cooldown_remaining[this]=0.
			call PauseTimer((s__Ability_prototype_cooldown_timer[this])) // INLINED!!
  endfunction

  function s__Ability_prototype_runCooldown takes integer this,real v returns nothing
			set s__Ability_prototype_cooldown_remaining[this]=s__Ability_prototype_cooldown_remaining[this] - v
			loop
				if s__Ability_prototype_cooldown_remaining[this] <= 0. then
					call sc__Ability_prototype_addCount(this)
					if s__Ability_prototype_count[this] >= s__Ability_prototype_count_max[this] then
						call s__Ability_prototype_endCooldown(this)
						exitwhen true
					else
						set s__Ability_prototype_cooldown_remaining[this]=s__Ability_prototype_cooldown_remaining[this] + s__Ability_prototype_getCarculatedMaxCooldown(this)
					endif
				else
					exitwhen true
				endif
			endloop
  endfunction

  function s__Ability_prototype_cooldownTimer takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call s__Ability_prototype_runCooldown(this,TIMER_TICK)
  endfunction

  function s__Ability_prototype_startCooldown takes integer this,real v returns nothing
			if v > 0. and s__Ability_prototype_cooldown_remaining[this] <= 0. then
				set s__Ability_prototype_cooldown_remaining[this]=v
				call TimerStart((s__Ability_prototype_cooldown_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Ability_prototype_cooldownTimer)) // INLINED!!
			endif
  endfunction

  function s__Ability_prototype_onUnlink takes integer this returns nothing
			call sc__Ability_prototype_setPressState(this,false)
  endfunction

  function s__Ability_prototype_linkActor takes integer this,integer na returns nothing
			set s__Ability_prototype_link_actor[this]=na
			set s__UnitActor_link_ability[na]=this
  endfunction

  function s__Ability_prototype_basicAttack takes integer this,integer target returns nothing

  endfunction

  function s__Ability_prototype_execute takes integer this returns nothing

  endfunction

  function s__Ability_prototype_reservationTimer takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call sc__Ability_prototype_useRequest(this,s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_command_target[this] , false)
  endfunction

  function s__Ability_prototype_followTimer takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			
			call sc__Ability_prototype_useRequest(this,s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_command_target[this] , false)
  endfunction

  function s__Ability_prototype_cancleFollow takes integer this returns nothing
			set s__Ability_prototype_is_following[this]=false
			call PauseTimer((s__Ability_prototype_command_timer[this])) // INLINED!!
  endfunction

  function s__Ability_prototype_cancleReservation takes integer this returns nothing
			set s__Ability_prototype_is_reserving[this]=false
			call PauseTimer((s__Ability_prototype_command_timer[this])) // INLINED!!
  endfunction

  function s__Ability_prototype_follow takes integer this returns nothing
			if not s__Ability_prototype_is_following[this] then
				if s__Ability_prototype_is_target[this] then
					call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("channel" ), ( s__Ability_prototype_command_target[this])) // INLINED!!
					if s__Mover_getUnitMover(s__Ability_prototype_owner[this]) > 0 then
						call IssueTargetOrder(s__Mover_dummy[(s__Mover_getUnitMover(s__Ability_prototype_owner[this]))], "channel", (s__Ability_prototype_command_target[this])) // INLINED!!
					endif
				else
					call IssuePointOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("channel" ), (( s__Ability_prototype_command_x[this] )*1.0), (( s__Ability_prototype_command_y[this])*1.0)) // INLINED!!
					if s__Mover_getUnitMover(s__Ability_prototype_owner[this]) > 0 then
						call IssuePointOrder(s__Mover_dummy[(s__Mover_getUnitMover(s__Ability_prototype_owner[this]))], "move", ((s__Ability_prototype_command_x[this] )*1.0), (( s__Ability_prototype_command_y[this])*1.0)) // INLINED!!
					endif
				endif
			endif
			set s__Ability_prototype_is_following[this]=true
			call TimerStart((s__Ability_prototype_command_timer[this] ), (( AbilityPrototype__COMMAND_TIMER_TICK )*1.0), ( true ), ( function s__Ability_prototype_followTimer)) // INLINED!!
  endfunction

  function s__Ability_prototype_reserve takes integer this returns nothing
			set s__Ability_prototype_is_reserving[this]=true
			call TimerStart((s__Ability_prototype_command_timer[this] ), (( AbilityPrototype__COMMAND_TIMER_TICK )*1.0), ( true ), ( function s__Ability_prototype_reservationTimer)) // INLINED!!
  endfunction

  function s__Ability_prototype_checkDistance takes integer this,real x,real y,unit target returns boolean
			if s__Ability_prototype_cast_range[this] < 0. then
				return true
			else
				if s__Ability_prototype_is_target[this] then
					return IsUnitInRangeXY(target, sc__Object__get_x(s__Ability_prototype_owner[this]), sc__Object__get_y(s__Ability_prototype_owner[this]), s__Ability_prototype_cast_range[this])
				else
					return s__Ability_prototype_cast_range[this] >= s__Math_distancePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , x , y)
				endif
			endif
  endfunction

  function s__Ability_prototype_targetFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Ability_prototype_targetFilter takes integer this,unit target returns boolean
   local integer u= s__Unit_prototype_get(target)
			if s__Ability_prototype_is_target[this] and not s__Ability_prototype_is_freetarget[this] then
				if u == 0 then
					set ERROR_MESSAGE="대상이 없습니다."
					return false
				else
					if not ( s__Ability_prototype_target_useable_invincible[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_INVINCIBLE) <= 0 ) then
						set ERROR_MESSAGE="대상에게 사용할 수 없습니다."
						return false
					elseif not ( s__Ability_prototype_target_useable_enemy[this] or not (IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
						set ERROR_MESSAGE="적에게 사용할 수 없습니다."
						return false
					elseif not ( s__Ability_prototype_target_useable_self[this] or s__Ability_prototype_owner[this] != u ) then
						set ERROR_MESSAGE="자신에게 사용할 수 없습니다."
						return false
					elseif not ( s__Ability_prototype_target_useable_ally[this] or not (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
						set ERROR_MESSAGE="아군에게 사용할 수 없습니다."
						return false
					elseif not ( s__Ability_prototype_target_useable_grabbed[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_GRABBED) <= 0 ) then
						set ERROR_MESSAGE="붙잡힌 대상에게 사용할 수 없습니다."
						return false
					elseif s__Unit_prototype_isUnitType(u,UNIT_TYPE_DEAD) then
						return false
					elseif not (IsUnitVisible((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) then // INLINED!!
						return false
					else
						return sc__Ability_prototype_targetFilterAdditional(this,u)
					endif
				endif
			else
				return true
			endif
  endfunction

  function s__Ability_prototype_enableFilter takes integer this returns boolean
			if not ( s__Ability_prototype_useable_stun[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_STUN) <= 0 ) then
				set ERROR_MESSAGE="기절 상태에서 사용할 수 없습니다."
				return false
			elseif not ( s__Ability_prototype_useable_ensnare[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_ENSNARE) <= 0 ) then
				set ERROR_MESSAGE="이동불가 상태에서 사용할 수 없습니다."
				return false
			elseif not ( s__Ability_prototype_useable_silence[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_SILENCE) <= 0 ) then
				set ERROR_MESSAGE="지금 사용할 수 없습니다."
				return false
			elseif not ( s__Ability_prototype_useable_grabbed[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_GRABBED) <= 0 ) then
				set ERROR_MESSAGE="붙잡힌 상태에서 사용할 수 없습니다."
				return false
			elseif s__Unit_prototype_isUnitType(s__Ability_prototype_owner[this],UNIT_TYPE_DEAD) then
				set ERROR_MESSAGE="죽은 상태에서 사용할 수 없습니다."
				return false
			else
				return true
			endif
  endfunction

  function s__Ability_prototype_costFilter takes integer this returns boolean
			if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) < (I2R(s__Ability_prototype_manacost[(this)])) then // INLINED!!
				set ERROR_MESSAGE="마나가 부족합니다."
				return false
			elseif s__Ability_prototype_count[this] <= 0 and s__Ability_prototype_getCarculatedMaxCooldown(this) > 0. then
				set ERROR_MESSAGE="아직 사용할 수 없습니다."
				return false
			else
				return true
			endif
  endfunction

  function s__Ability_prototype_useFilterAdditional takes integer this returns boolean
			return true
  endfunction

  function s__Ability_prototype_useFilter takes integer this returns boolean
			return s__Ability_prototype_costFilter(this) and s__Ability_prototype_enableFilter(this) and sc__Ability_prototype_useFilterAdditional(this)
  endfunction

  function s__Ability_prototype_castFilter takes integer this returns boolean
			return ( s__Ability_prototype_useable_cast[this] or s__Unit_prototype_getStatus(s__Ability_prototype_owner[this],STATUS_CAST) <= 0 )
  endfunction

  function s__Ability_prototype_sendError takes integer this returns nothing
			if ERROR_MESSAGE != "" then
				set ERROR_MESSAGE_PLAYER=(GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
				call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
				if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
					call PlaySoundBJ(gg_snd_Error)
				endif
			endif
  endfunction

  function s__Ability_prototype_confirmEffect takes integer this returns nothing
   local integer ef= 0
			if s__Ability_prototype_is_target[this] and not s__Ability_prototype_is_freetarget[this] then
				set ef=sc__TargetCircle_create(s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				if IsUnitEnemy(s__Ability_prototype_command_target[this], (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) then // INLINED!!
					call sc__Effect_setLocalColor(ef,255 , 0 , 0)
				elseif GetOwningPlayer(s__Ability_prototype_command_target[this]) == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
					call sc__Effect_setLocalColor(ef,0 , 255 , 0)
				else
					call sc__Effect_setLocalColor(ef,255 , 255 , 0)
				endif
			else
				set ef=sc__Effect_create("UI\\Feedback\\Confirmation\\Confirmation.mdl" , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , 0. , 0.)
				call sc__Effect_setLocalColor(ef,0 , 255 , 0)
			endif
			if GetLocalPlayer() != (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
				call sc__Effect_setLocalAlpha(ef,0)
			endif
			call sc__Effect_setDuration(ef,1.5)
  endfunction

  function s__Ability_prototype_pressSound takes integer this returns nothing
			if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
				call PlaySoundBJ(gg_snd_MouseClick1)
			endif
  endfunction

  function s__Ability_prototype_useRequest takes integer this,real x,real y,unit target,boolean onpress returns boolean
			set ERROR_MESSAGE=""
			set ERROR_MESSAGE_PLAYER=null
			set s__Ability_prototype_command_x[this]=x
			set s__Ability_prototype_command_y[this]=y
			set s__Ability_prototype_command_target[this]=target
			
			if s__Ability_prototype_enableFilter(this) and s__Ability_prototype_costFilter(this) and sc__Ability_prototype_useFilterAdditional(this) then
				
				if onpress and not s__Ability_prototype_is_target[this] then
					call s__Ability_prototype_confirmEffect(this)
				endif
				
				if s__Ability_prototype_targetFilter(this,target) then
					if onpress and s__Ability_prototype_is_target[this] then
						call s__Ability_prototype_confirmEffect(this)
					endif
					
					if s__Ability_prototype_castFilter(this) then
						
						if s__Ability_prototype_checkDistance(this,x , y , target) then
							call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) - (I2R(s__Ability_prototype_manacost[(this)])))*1.0)) // INLINED!!
							call s__Ability_prototype_startCooldown(this,s__Ability_prototype_getCarculatedMaxCooldown(this))
							call sc__Ability_prototype_execute(this)
							call sc__Ability_prototype_useCount(this)
							call s__Ability_prototype_cancleFollow(this)
							call s__Ability_prototype_cancleReservation(this)
							if not s__Ability_prototype_preserve_order[this] then
								call IssueImmediateOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("stop")) // INLINED!!
							endif
							return true
						
						else
							call s__Ability_prototype_follow(this)
							return false
						endif
					
					else
						if s__Ability_prototype_reserve_order[this] then
							call s__Ability_prototype_reserve(this)
						endif
						return false
					endif
				
				else
					call s__Ability_prototype_cancleFollow(this)
					return false
				endif
			
			else
				return false
			endif
  endfunction

  function s__Ability_prototype_init takes integer this returns nothing

  endfunction

  function s__Ability_prototype_update takes integer this returns nothing

  endfunction

  function s__Ability_prototype_pressRequest takes integer this returns boolean
   local real mx= 0.
   local real my= 0.
			if not s__Ability_prototype_is_target[this] and not s__Ability_prototype_is_freetarget[this] then
				call s__Unit_prototype_cancleAbilityReservation(s__Ability_prototype_owner[this])
				call s__Unit_prototype_cancleAbilityFollow(s__Ability_prototype_owner[this])
				if s__Ability_prototype_drag_to_use[this] then
					set mx=s__Ability_prototype_command_x[this]
					set my=s__Ability_prototype_command_y[this]
				else
					if s__Ability_prototype_is_ai[this] then
						set mx=s__Ability_prototype_ai_mouse_x[this]
						set my=s__Ability_prototype_ai_mouse_y[this]
					else
						set mx=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
						set my=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					endif
				endif
				if not s__Ability_prototype_useRequest(this,mx , my , null , true) then
					call s__Ability_prototype_sendError(this)
					return false
				else
					return true
				endif
			else
				if s__Ability_prototype_is_ai[this] then
					if s__Ability_prototype_ai_target[this] != null then
						return s__Ability_prototype_useRequest(this,s__Ability_prototype_ai_mouse_x[this] , s__Ability_prototype_ai_mouse_y[this] , s__Ability_prototype_ai_target[this] , true)
					else
						return false
					endif
				else
					call sc__Ability_prototype_sendSyncTarget(this)
					return true
				endif
			endif
  endfunction

  function s__Ability_prototype_refreshIndicatorTimer takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			if s__Ability_prototype_indicator[this] > 0 then
				call sc__AbilityIndicator_refresh(s__Ability_prototype_indicator[this])
				call s__AbilityIndicator_refreshEssencial(s__Ability_prototype_indicator[this])
			endif
  endfunction

  function s__Ability_prototype_setPressState takes integer this,boolean flag returns nothing
			if s__Ability_prototype_indicator[this] > 0 then
				call sc__AbilityIndicator_show(s__Ability_prototype_indicator[this],flag)
				call s__AbilityIndicator_showEssencial(s__Ability_prototype_indicator[this],flag)
				if flag then
					call sc__AbilityIndicator_refresh(s__Ability_prototype_indicator[this])
					call s__AbilityIndicator_refreshEssencial(s__Ability_prototype_indicator[this])
					call TimerStart((s__Ability_prototype_indicator_timer[this] ), (( 0.025 )*1.0), ( true ), ( function s__Ability_prototype_refreshIndicatorTimer)) // INLINED!!
				else
					call PauseTimer((s__Ability_prototype_indicator_timer[this])) // INLINED!!
				endif
			endif
			set s__Ability_prototype_pressing[this]=flag
  endfunction

  function s__Ability_prototype_onRelease takes integer this returns nothing

  endfunction

  function s__Ability_prototype_beforeRelease takes integer this returns nothing

  endfunction

  function s__Ability_prototype_release takes integer this returns nothing
			set s__Ability_prototype_command_x[this]=s__Ability_prototype_command_x_temp[this]
			set s__Ability_prototype_command_y[this]=s__Ability_prototype_command_y_temp[this]
			if s__Ability_prototype_drag_to_use[this] then
				if s__Ability_prototype_is_ai[this] then
					set s__Ability_prototype_command_x2[this]=s__Ability_prototype_ai_mouse_x[this]
					set s__Ability_prototype_command_y2[this]=s__Ability_prototype_ai_mouse_y[this]
				else
					set s__Ability_prototype_command_x2[this]=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability_prototype_command_y2[this]=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
				endif
			endif
			call sc__Ability_prototype_beforeRelease(this)
			if s__Ability_prototype_is_active[this] and s__Ability_prototype_pressing[this] then
				call s__Ability_prototype_pressRequest(this)
			endif
			call s__Ability_prototype_setPressState(this,false)
			call sc__Ability_prototype_onRelease(this)
  endfunction

  function s__Ability_prototype_onKeyboard takes integer this returns nothing

  endfunction

  function s__Ability_prototype_onPress takes integer this returns nothing

  endfunction

  function s__Ability_prototype_beforePress takes integer this returns nothing

  endfunction

  function s__Ability_prototype_press takes integer this returns nothing
			call s__Ability_prototype_pressSound(this)
			call sc__Ability_prototype_beforePress(this)
			if s__Ability_prototype_useFilter(this) and ( not s__Ability_prototype_check_cast[this] or s__Ability_prototype_castFilter(this) ) then
				if s__Ability_prototype_is_ai[this] then
					set s__Ability_prototype_command_x_temp[this]=s__Ability_prototype_ai_mouse_x[this]
					set s__Ability_prototype_command_y_temp[this]=s__Ability_prototype_ai_mouse_y[this]
				else
					set s__Ability_prototype_command_x_temp[this]=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability_prototype_command_y_temp[this]=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
				endif
				call s__Ability_prototype_setPressState(this,true)
				if ( s__Ability_prototype_is_immediate[this] or s__Ability_prototype_smart[this] == 2 ) and not s__Ability_prototype_drag_to_use[this] then
					call s__Ability_prototype_release(this)
				endif
			else
				call s__Ability_prototype_sendError(this)
			endif
			call sc__Ability_prototype_onPress(this)
  endfunction

  function s__Ability_prototype_getAttackSpeedValue takes integer this,real v returns real
			return v
  endfunction

  function s__Ability_prototype_leftClick takes integer this returns nothing
			call s__Ability_prototype_release(this)
  endfunction

  function s__Ability_prototype_onRightClick takes integer this returns nothing

  endfunction

  function s__Ability_prototype_onStop takes integer this returns nothing

  endfunction

  function s__Ability_prototype_rightClick takes integer this returns nothing
			call s__Ability_prototype_cancleFollow(this)
			call s__Ability_prototype_cancleReservation(this)
			if s__Ability_prototype_cancle_rightclick[this] then
				call s__Ability_prototype_setPressState(this,false)
			endif
			call sc__Ability_prototype_onRightClick(this)
  endfunction

  function s__Ability_prototype_stopButton takes integer this returns nothing
			call s__Ability_prototype_cancleFollow(this)
			call s__Ability_prototype_cancleReservation(this)
			call sc__Ability_prototype_onStop(this)
  endfunction

  function s__Ability_prototype_commandAction takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_RIGHT then
				call s__Ability_prototype_rightClick(this)
			elseif BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_LEFT then
				call sc__Ability_prototype_leftClick(this)
			elseif BlzGetTriggerPlayerKey() == OSKEY_S then
				call sc__Ability_prototype_stopButton(this)
			endif
  endfunction

		
  function s__Ability_prototype_essentialInit takes integer this returns nothing
			set s__Ability_prototype_cooldown_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_command_trigger[this]=s__Trigger_new(this)
			set s__Ability_prototype_command_condition[this]=TriggerAddCondition(s__Ability_prototype_command_trigger[this], Condition(function s__Ability_prototype_commandAction))
			set s__Ability_prototype_command_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_decay_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_indicator_timer[this]=sc__Timer_new(this)
			call BlzTriggerRegisterPlayerKeyEvent(s__Ability_prototype_command_trigger[this], (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))), OSKEY_S, 0, true) // INLINED!!
			call TriggerRegisterPlayerEvent(s__Ability_prototype_command_trigger[this], (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))), EVENT_PLAYER_MOUSE_DOWN) // INLINED!!
  endfunction

  function s__Ability_prototype_create takes nothing returns integer
   local integer this= s__Ability_prototype__allocate()
			return this
  endfunction

  function s__Ability_prototype_onDeath takes integer this returns nothing

  endfunction

  function s__Ability_prototype_decay takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call sc__Ability_prototype_deallocate(this)
  endfunction

  function s__Ability_prototype_kill takes integer this returns nothing
			if not s__Ability_prototype_dead[this] then
				
				if s__Unit_prototype_weapon_ability[s__Ability_prototype_owner[this]] == this then
					call s__Unit_prototype_setWeaponAbility(s__Ability_prototype_owner[this],0)
				endif
				
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
				endif
				set s__Ability_prototype_link_actor[this]=0
				
				call sc__Ability_prototype_onDeath(this)
				
				call sc__Timer_release(s__Ability_prototype_cooldown_timer[this])
				set s__Ability_prototype_cooldown_timer[this]=null
				call TriggerRemoveCondition(s__Ability_prototype_command_trigger[this], s__Ability_prototype_command_condition[this])
				call s__Trigger_remove(s__Ability_prototype_command_trigger[this])
				set s__Ability_prototype_command_trigger[this]=null
				set s__Ability_prototype_command_condition[this]=null
				call sc__Timer_release(s__Ability_prototype_command_timer[this])
				set s__Ability_prototype_command_timer[this]=null
				set s__Ability_prototype_command_target[this]=null
				call sc__Timer_release(s__Ability_prototype_indicator_timer[this])
				set s__Ability_prototype_indicator_timer[this]=null
				set s__Ability_prototype_ai_target[this]=null
				
				if s__Ability_prototype_indicator[this] > 0 then
					call sc__AbilityIndicator_deallocate(s__Ability_prototype_indicator[this])
					set s__Ability_prototype_indicator[this]=0
				endif
				
				call TimerStart((s__Ability_prototype_decay_timer[this] ), (( 1.25 )*1.0), ( false ), ( function s__Ability_prototype_decay)) // INLINED!!
			endif
			set s__Ability_prototype_dead[this]=true
  endfunction

  function s__Ability_prototype_onDestroy takes integer this returns nothing
			call sc__Timer_release(s__Ability_prototype_decay_timer[this])
			set s__Ability_prototype_decay_timer[this]=null
  endfunction

  function s__Ability_prototype_new takes integer aid returns integer
			set ABILITY_LAST_CREATED=- 1
			set ABILITY_CREATE_ID=aid
			call TriggerEvaluate(ABILITY_CREATE_TRIGGER)
			return ABILITY_LAST_CREATED
  endfunction

  function s__Ability_prototype_sendSyncTarget takes integer this returns nothing
			if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
				call BlzSendSyncData("SA", I2S(this) + "#" + I2S(GetHandleId(BlzGetMouseFocusUnit())))
			endif
  endfunction

  function s__Ability_prototype_syncTarget takes nothing returns nothing
   local string source= BlzGetTriggerSyncData()
   local unit u= null
   local integer i= 0
   local integer l= StringLength(source)
   local integer this= 0
			
			loop
				exitwhen SubString(source, i, i + 1) == "#"
				set i=i + 1
			endloop
			//call BJDebugMsg(source+", "+instance+", "+unithandle)
			set u=s__Agent_H2U(S2I(SubString(source, i + 1, l)))
			
			set this=S2I(SubString(source, 0, i))
			if this > 0 and not s__Ability_prototype_dead[this] then
				call s__Unit_prototype_cancleAbilityReservation(s__Ability_prototype_owner[this])
				call s__Unit_prototype_cancleAbilityFollow(s__Ability_prototype_owner[this])
				call s__Ability_prototype_pressSound(this)
				if not s__Ability_prototype_useRequest(this,s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , u , true) then
					call s__Ability_prototype_sendError(this)
				endif
			endif
			set u=null
  endfunction

  function s__Ability_prototype_onInit takes nothing returns nothing
   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				call BlzTriggerRegisterPlayerSyncEvent(ABILITY_SYNC_TARGET_TRIGGER, Player(i), "SA", false)
				set i=i + 1
			endloop
			call TriggerAddAction(ABILITY_SYNC_TARGET_TRIGGER, function s__Ability_prototype_syncTarget)
  endfunction



//library AbilityPrototype ends
//library Actor:






  function s__Actor__get_x takes integer this returns real
			return s__Actor_x_true[this]
  endfunction

  function s__Actor__set_x takes integer this,real nv returns nothing
			set s__Actor_x_true[this]=nv
  endfunction

  function s__Actor__get_y takes integer this returns real
			return s__Actor_y_true[this]
  endfunction

  function s__Actor__set_y takes integer this,real nv returns nothing
			set s__Actor_y_true[this]=nv
  endfunction

  function s__Actor_onSuspend takes integer this returns nothing

  endfunction

  function s__Actor_onComplete takes integer this returns nothing

  endfunction

  function s__Actor_periodicAction takes integer this returns nothing

  endfunction

  function s__Actor_suspendFilter takes integer this returns boolean
			return false
  endfunction

  function s__Actor_killFilter takes integer this returns boolean
			return true
  endfunction

  function s__Actor_stageNext takes integer this returns nothing
			set s__Actor_stage[this]=s__Actor_stage[this] + 1
			set s__Actor_timeout[this]=0.
  endfunction

  function s__Actor_timerAction takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			set s__Actor_timeout[this]=s__Actor_timeout[this] + TIMER_TICK
			if not sc__Actor_suspendFilter(this) then
				call sc__Actor_periodicAction(this)
				if s__Actor_duration[this] > 0. then
					set s__Actor_duration[this]=s__Actor_duration[this] - TIMER_TICK
					if s__Actor_duration[this] <= 0. then
						call sc__Actor_onComplete(this)
						if sc__Actor_killFilter(this) then
							set s__Actor_want_destroy[this]=true
						endif
					endif
				endif
			else
				call sc__Actor_onSuspend(this)
				set s__Actor_want_destroy[this]=true
			endif
			if s__Actor_progress_bar[this] != 0 then
				if s__Actor_duration_max[this] > 0. then
					call s__ProgressBar__set_value(s__Actor_progress_bar[this],s__Actor_timeout[this] / s__Actor_duration_max[this])
				else
					call s__ProgressBar__set_value(s__Actor_progress_bar[this],0.)
				endif
			endif
			if s__Actor_want_destroy[this] then
				call sc__Actor_deallocate(this)
			endif
  endfunction

  function s__Actor_create takes integer actor,real x,real y,real duration returns integer
   local integer this= s__Actor__allocate()
			set s__Actor_actor[this]=actor
			call sc__Actor__set_x(this,x)
			call sc__Actor__set_y(this,y)
			set s__Actor_duration[this]=duration
			set s__Actor_duration_max[this]=duration
			set s__Actor_main_timer[this]=sc__Timer_new(this)
			call TimerStart((s__Actor_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Actor_timerAction)) // INLINED!!
			return this
  endfunction

  function s__Actor_onDestroy takes integer this returns nothing
			call sc__Timer_release(s__Actor_main_timer[this])
			set s__Actor_main_timer[this]=null
			if s__Actor_progress_bar[this] != 0 then
				call s__ProgressBar_deallocate(s__Actor_progress_bar[this])
			endif
  endfunction



//library Actor ends
//library CloseUI:




  function s__CloseUI_act takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if s__SlotChanger_THIS[GetPlayerId(s__CloseUI_owner[this])] > 0 and sc__SlotChanger_close(s__SlotChanger_THIS[GetPlayerId(s__CloseUI_owner[this])]) then
				return
			endif
			if s__SkillShop_THIS[GetPlayerId(s__CloseUI_owner[this])] > 0 and sc__SkillShop_close(s__SkillShop_THIS[GetPlayerId(s__CloseUI_owner[this])]) then
				return
			endif
  endfunction

  function s__CloseUI_create takes player p returns integer
   local integer this= s__CloseUI__allocate()
			set s__CloseUI_owner[this]=p
			set s__CloseUI_esc_trigger[this]=s__Trigger_new(this)
			set s__CloseUI_esc_cond[this]=TriggerAddCondition(s__CloseUI_esc_trigger[this], Condition(function s__CloseUI_act))
			call BlzTriggerRegisterPlayerKeyEvent(s__CloseUI_esc_trigger[this], s__CloseUI_owner[this], OSKEY_ESCAPE, 0, true)
			return this
  endfunction

  function s__CloseUI_onDestroy takes integer this returns nothing
			call TriggerRemoveCondition(s__CloseUI_esc_trigger[this], s__CloseUI_esc_cond[this])
			call s__Trigger_remove(s__CloseUI_esc_trigger[this])
			set s__CloseUI_esc_trigger[this]=null
			set s__CloseUI_esc_cond[this]=null
			set s__CloseUI_owner[this]=null
  endfunction

//Generated destructor of CloseUI
function s__CloseUI_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CloseUI_V[this]!=-1) then
        return
    endif
    call s__CloseUI_onDestroy(this)
    set si__CloseUI_V[this]=si__CloseUI_F
    set si__CloseUI_F=this
endfunction



//library CloseUI ends
//library Curve:




  function s__Curve_getCarculatedX takes integer this,real v returns real
			return s__Object_x_true[this]
  endfunction

  function s__Curve_getCarculatedY takes integer this,real v returns real
			return s__Object_y_true[this]
  endfunction

  function s__Curve_getCarculatedZ takes integer this,real v returns real
			return s__Object_z_true[this]
  endfunction

  function s__Curve__get_x takes integer this returns real
			return sc__Curve_getCarculatedX(this,s__Curve_value[this])
  endfunction

  function s__Curve__get_y takes integer this returns real
			return sc__Curve_getCarculatedY(this,s__Curve_value[this])
  endfunction
		
  function s__Curve__get_z takes integer this returns real
			return sc__Curve_getCarculatedZ(this,s__Curve_value[this])
  endfunction

  function s__Curve_setX takes integer this,integer index,real nv returns nothing
			if index > s__Curve_index_max[this] then
				set s__Curve_index_max[this]=index
			endif
			call SaveReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_X, nv)
  endfunction

  function s__Curve_setY takes integer this,integer index,real nv returns nothing
			if index > s__Curve_index_max[this] then
				set s__Curve_index_max[this]=index
			endif
			call SaveReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Y, nv)
  endfunction

  function s__Curve_setZ takes integer this,integer index,real nv returns nothing
			if index > s__Curve_index_max[this] then
				set s__Curve_index_max[this]=index
			endif
			call SaveReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Z, nv)
  endfunction

  function s__Curve_getX takes integer this,integer index returns real
			if HaveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_X) then
				return LoadReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_X)
			else
				return 0.
			endif
  endfunction

  function s__Curve_getY takes integer this,integer index returns real
			if HaveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Y) then
				return LoadReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Y)
			else
				return 0.
			endif
  endfunction

  function s__Curve_getZ takes integer this,integer index returns real
			if HaveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Z) then
				return LoadReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * index ) + INDEX_POSITION_Z)
			else
				return 0.
			endif
  endfunction

  function s__Curve_create takes real x,real y,real z returns integer
   local integer this= s__Curve__allocate()
			call s__Curve_setX(this,0 , x)
			call s__Curve_setY(this,0 , y)
			call s__Curve_setZ(this,0 , z)
			return this
  endfunction

  function s__Curve_onDestroy takes integer this returns nothing
   local integer i= 0
			loop
				exitwhen i > s__Curve_index_max[this]
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_X)
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_Y)
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_Z)
				set i=i + 1
			endloop
  endfunction



  function s__Bezier_setProjectedControlPoint takes integer this,integer index,real dist,real radius,real ta returns nothing
   local real angle= ta - 90
   local real yaw= bj_RADTODEG * Atan2(s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_ORIGIN), s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_ORIGIN))
   local real pitch= bj_RADTODEG * Atan2(s__Curve_getZ(this,INDEX_POINT_LAST) - s__Curve_getZ(this,INDEX_POINT_ORIGIN), SquareRoot(( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) * ( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) + ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_ORIGIN) ) * ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_ORIGIN) )))
			call s__Curve_setX(this,INDEX_POINT_MIDDLE + index , s__Curve_getX(this,INDEX_POINT_ORIGIN) + dist * Cos(Deg2Rad(yaw)) * Cos(Deg2Rad(pitch)) + radius * Cos(Deg2Rad(angle)) * Cos(Deg2Rad(pitch + 90)) * Cos(Deg2Rad(yaw)) - radius * Sin(Deg2Rad(angle)) * Sin(Deg2Rad(yaw)))
			call s__Curve_setY(this,INDEX_POINT_MIDDLE + index , s__Curve_getY(this,INDEX_POINT_ORIGIN) + dist * Sin(Deg2Rad(yaw)) * Cos(Deg2Rad(pitch)) + radius * Cos(Deg2Rad(angle)) * Cos(Deg2Rad(pitch + 90)) * Sin(Deg2Rad(yaw)) + radius * Sin(Deg2Rad(angle)) * Cos(Deg2Rad(yaw)))
			call s__Curve_setZ(this,INDEX_POINT_MIDDLE + index , s__Curve_getZ(this,INDEX_POINT_ORIGIN) + dist * Sin(Deg2Rad(pitch)) + radius * Cos(Deg2Rad(pitch)) * Cos(Deg2Rad(- angle)))
  endfunction

  function s__Bezier_create takes real x1,real y1,real z1,real x2,real y2,real z2 returns integer
   local integer this= s__Bezier__allocate(x1 , y1 , z1)
			call s__Curve_setX(this,INDEX_POINT_LAST , x2)
			call s__Curve_setY(this,INDEX_POINT_LAST , y2)
			call s__Curve_setZ(this,INDEX_POINT_LAST , z2)
			return this
  endfunction


	
  function s__Bezier2_getCarculatedX takes integer this,real v returns real
   local real x1= s__Curve_getX(this,INDEX_POINT_ORIGIN) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) * v
   local real x2= s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) ) * v
			return x1 + ( x2 - x1 ) * v + sc__Object__get_offset_x(this)
  endfunction
	
  function s__Bezier2_getCarculatedY takes integer this,real v returns real
   local real y1= s__Curve_getY(this,INDEX_POINT_ORIGIN) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getY(this,INDEX_POINT_ORIGIN) ) * v
   local real y2= s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) ) * v
			return y1 + ( y2 - y1 ) * v + sc__Object__get_offset_y(this)
  endfunction
	
  function s__Bezier2_getCarculatedZ takes integer this,real v returns real
   local real z1= s__Curve_getZ(this,INDEX_POINT_ORIGIN) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getZ(this,INDEX_POINT_ORIGIN) ) * v
   local real z2= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getZ(this,INDEX_POINT_LAST) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) ) * v
			return z1 + ( z2 - z1 ) * v + sc__Object__get_offset_z(this)
  endfunction
	

	
  function s__Bezier3_getCarculatedX takes integer this,real v returns real
   local real hx1= s__Curve_getX(this,INDEX_POINT_ORIGIN) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) * v
   local real hx2= s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hx3= s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real x1= hx1 + ( hx2 - hx1 ) * v
   local real x2= hx2 + ( hx3 - hx2 ) * v
			return x1 + ( x2 - x1 ) * v + sc__Object__get_offset_x(this)
  endfunction
	
  function s__Bezier3_getCarculatedY takes integer this,real v returns real
   local real hy1= s__Curve_getY(this,INDEX_POINT_ORIGIN) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getY(this,INDEX_POINT_ORIGIN) ) * v
   local real hy2= s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hy3= s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real y1= hy1 + ( hy2 - hy1 ) * v
   local real y2= hy2 + ( hy3 - hy2 ) * v
			return y1 + ( y2 - y1 ) * v + sc__Object__get_offset_y(this)
  endfunction
	
  function s__Bezier3_getCarculatedZ takes integer this,real v returns real
   local real hz1= s__Curve_getZ(this,INDEX_POINT_ORIGIN) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getZ(this,INDEX_POINT_ORIGIN) ) * v
   local real hz2= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hz3= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getZ(this,INDEX_POINT_LAST) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real z1= hz1 + ( hz2 - hz1 ) * v
   local real z2= hz2 + ( hz3 - hz2 ) * v
			return z1 + ( z2 - z1 ) * v + sc__Object__get_offset_z(this)
  endfunction
	


//library Curve ends
//library Effect:


	
	
  function s__EffectDecay_decay takes nothing returns nothing
   local integer this= sc__Timer_getData(GetExpiredTimer())
			call DestroyEffect(s__EffectDecay_origin_effect[this])
			call ReleaseTimer(s__EffectDecay_t[this])
			set s__EffectDecay_origin_effect[this]=null
			set s__EffectDecay_t[this]=null
			call s__EffectDecay_deallocate(this)
  endfunction
	
  function s__EffectDecay_create takes effect ef returns integer
   local integer this= s__EffectDecay__allocate()
			set s__EffectDecay_origin_effect[this]=ef
			set s__EffectDecay_t[this]=sc__Timer_new(this)
			call BlzPlaySpecialEffect(s__EffectDecay_origin_effect[this], ANIM_TYPE_DEATH)
			call TimerStart((s__EffectDecay_t[this] ), (( 1.0 )*1.0), ( false ), ( function s__EffectDecay_decay)) // INLINED!!
			return this
  endfunction	
	
	
	
		

  function s__Effect__get_origin_effect takes integer this returns effect
			return LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
  endfunction
	
  function s__Effect_initializeOffset takes integer this returns nothing
			call sc__Object__set_offset_x(this,0)
			call sc__Object__set_offset_y(this,0)
			call sc__Object__set_offset_z(this,0)
			call sc__Object__set_offset_yaw(this,0)
			call sc__Object__set_offset_pitch(this,0)
			call sc__Object__set_offset_roll(this,0)
  endfunction
		
  function s__Effect_refreshZ takes integer this returns nothing
			if s__Effect_refresh_position[this] then
				call BlzSetSpecialEffectZ((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Object_z_true[this] + s__Object_offset_z_true[this]) // INLINED!!
			endif
  endfunction
	
  function s__Effect_refreshX takes integer this returns nothing
			if s__Effect_refresh_position[this] then
				call BlzSetSpecialEffectX((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Object_x_true[this] + s__Object_offset_x_true[this]) // INLINED!!
				call s__Effect_refreshZ(this)
			endif
  endfunction
	
  function s__Effect_refreshY takes integer this returns nothing
			if s__Effect_refresh_position[this] then
				call BlzSetSpecialEffectY((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Object_y_true[this] + s__Object_offset_y_true[this]) // INLINED!!
				call s__Effect_refreshZ(this)
			endif
  endfunction
	
  function s__Effect_refreshYaw takes integer this returns nothing
			if s__Effect_refresh_orientation[this] then
				call BlzSetSpecialEffectYaw((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_yaw_true[this] + s__Object_offset_yaw_true[this])) // INLINED!!
			endif
  endfunction	
	
  function s__Effect_refreshRoll takes integer this returns nothing
			if s__Effect_refresh_orientation[this] then
				call BlzSetSpecialEffectRoll((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_roll_true[this] + s__Object_offset_roll_true[this])) // INLINED!!
			endif
  endfunction	
	
  function s__Effect_refreshPitch takes integer this returns nothing
			if Cos(Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) < 0. then
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) // INLINED!!
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) // INLINED!!
			else
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) // INLINED!!
			endif
  endfunction

//textmacro instance: effectGetter("X","x")
	
  function s__Effect__get_x takes integer this returns real
			return s__Object_x_true[this]
  endfunction
	
  function s__Effect__get_offset_x takes integer this returns real
			return s__Object_offset_x_true[this]
  endfunction
	
  function s__Effect_getCarculatedX takes integer this returns real
			return s__Object_x_true[this] + s__Object_offset_x_true[this]
  endfunction

  function s__Effect_getX takes integer this returns real
			return sc__Object__get_x(this)
  endfunction

  function s__Effect_getOffsetX takes integer this returns real
			return sc__Object__get_offset_x(this)
  endfunction
	
//end of: effectGetter("X","x")
//textmacro instance: effectGetter("Y","y")
	
  function s__Effect__get_y takes integer this returns real
			return s__Object_y_true[this]
  endfunction
	
  function s__Effect__get_offset_y takes integer this returns real
			return s__Object_offset_y_true[this]
  endfunction
	
  function s__Effect_getCarculatedY takes integer this returns real
			return s__Object_y_true[this] + s__Object_offset_y_true[this]
  endfunction

  function s__Effect_getY takes integer this returns real
			return sc__Object__get_y(this)
  endfunction

  function s__Effect_getOffsetY takes integer this returns real
			return sc__Object__get_offset_y(this)
  endfunction
	
//end of: effectGetter("Y","y")
//textmacro instance: effectGetter("Z","z")
	
  function s__Effect__get_z takes integer this returns real
			return s__Object_z_true[this]
  endfunction
	
  function s__Effect__get_offset_z takes integer this returns real
			return s__Object_offset_z_true[this]
  endfunction
	
  function s__Effect_getCarculatedZ takes integer this returns real
			return s__Object_z_true[this] + s__Object_offset_z_true[this]
  endfunction

  function s__Effect_getZ takes integer this returns real
			return sc__Object__get_z(this)
  endfunction

  function s__Effect_getOffsetZ takes integer this returns real
			return sc__Object__get_offset_z(this)
  endfunction
	
//end of: effectGetter("Z","z")
//textmacro instance: effectGetter("Yaw","yaw")
	
  function s__Effect__get_yaw takes integer this returns real
			return s__Object_yaw_true[this]
  endfunction
	
  function s__Effect__get_offset_yaw takes integer this returns real
			return s__Object_offset_yaw_true[this]
  endfunction
	
  function s__Effect_getCarculatedYaw takes integer this returns real
			return s__Object_yaw_true[this] + s__Object_offset_yaw_true[this]
  endfunction

  function s__Effect_getYaw takes integer this returns real
			return sc__Object__get_yaw(this)
  endfunction

  function s__Effect_getOffsetYaw takes integer this returns real
			return sc__Object__get_offset_yaw(this)
  endfunction
	
//end of: effectGetter("Yaw","yaw")
//textmacro instance: effectGetter("Pitch","pitch")
	
  function s__Effect__get_pitch takes integer this returns real
			return s__Object_pitch_true[this]
  endfunction
	
  function s__Effect__get_offset_pitch takes integer this returns real
			return s__Object_offset_pitch_true[this]
  endfunction
	
  function s__Effect_getCarculatedPitch takes integer this returns real
			return s__Object_pitch_true[this] + s__Object_offset_pitch_true[this]
  endfunction

  function s__Effect_getPitch takes integer this returns real
			return sc__Object__get_pitch(this)
  endfunction

  function s__Effect_getOffsetPitch takes integer this returns real
			return sc__Object__get_offset_pitch(this)
  endfunction
	
//end of: effectGetter("Pitch","pitch")
//textmacro instance: effectGetter("Roll","roll")
	
  function s__Effect__get_roll takes integer this returns real
			return s__Object_roll_true[this]
  endfunction
	
  function s__Effect__get_offset_roll takes integer this returns real
			return s__Object_offset_roll_true[this]
  endfunction
	
  function s__Effect_getCarculatedRoll takes integer this returns real
			return s__Object_roll_true[this] + s__Object_offset_roll_true[this]
  endfunction

  function s__Effect_getRoll takes integer this returns real
			return sc__Object__get_roll(this)
  endfunction

  function s__Effect_getOffsetRoll takes integer this returns real
			return sc__Object__get_offset_roll(this)
  endfunction
	
//end of: effectGetter("Roll","roll")
//textmacro instance: effectSetter("X","x")
	
  function s__Effect__set_x takes integer this,real nv returns nothing
			set s__Object_x_true[this]=nv
			call s__Effect_refreshX(this)
  endfunction
	
  function s__Effect__set_offset_x takes integer this,real nv returns nothing
			set s__Object_offset_x_true[this]=nv
			call s__Effect_refreshX(this)
  endfunction

  function s__Effect_setX takes integer this,real nv returns integer
			call sc__Object__set_x(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetX takes integer this,real nv returns integer
			call sc__Object__set_offset_x(this,nv)
			return this
  endfunction
	
//end of: effectSetter("X","x")
//textmacro instance: effectSetter("Y","y")
	
  function s__Effect__set_y takes integer this,real nv returns nothing
			set s__Object_y_true[this]=nv
			call s__Effect_refreshY(this)
  endfunction
	
  function s__Effect__set_offset_y takes integer this,real nv returns nothing
			set s__Object_offset_y_true[this]=nv
			call s__Effect_refreshY(this)
  endfunction

  function s__Effect_setY takes integer this,real nv returns integer
			call sc__Object__set_y(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetY takes integer this,real nv returns integer
			call sc__Object__set_offset_y(this,nv)
			return this
  endfunction
	
//end of: effectSetter("Y","y")
//textmacro instance: effectSetter("Z","z")
	
  function s__Effect__set_z takes integer this,real nv returns nothing
			set s__Object_z_true[this]=nv
			call s__Effect_refreshZ(this)
  endfunction
	
  function s__Effect__set_offset_z takes integer this,real nv returns nothing
			set s__Object_offset_z_true[this]=nv
			call s__Effect_refreshZ(this)
  endfunction

  function s__Effect_setZ takes integer this,real nv returns integer
			call sc__Object__set_z(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetZ takes integer this,real nv returns integer
			call sc__Object__set_offset_z(this,nv)
			return this
  endfunction
	
//end of: effectSetter("Z","z")
//textmacro instance: effectSetter("Yaw","yaw")
	
  function s__Effect__set_yaw takes integer this,real nv returns nothing
			set s__Object_yaw_true[this]=nv
			call s__Effect_refreshYaw(this)
  endfunction
	
  function s__Effect__set_offset_yaw takes integer this,real nv returns nothing
			set s__Object_offset_yaw_true[this]=nv
			call s__Effect_refreshYaw(this)
  endfunction

  function s__Effect_setYaw takes integer this,real nv returns integer
			call sc__Object__set_yaw(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetYaw takes integer this,real nv returns integer
			call sc__Object__set_offset_yaw(this,nv)
			return this
  endfunction
	
//end of: effectSetter("Yaw","yaw")
		
  function s__Effect__set_pitch takes integer this,real nv returns nothing
			if Cos(Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) < 0. then
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
			else
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
			endif
			set s__Object_pitch_true[this]=nv
  endfunction
	
  function s__Effect__set_offset_pitch takes integer this,real nv returns nothing
			if Cos(Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) < 0. then
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
			else
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
			endif
			set s__Object_offset_pitch_true[this]=nv
  endfunction

  function s__Effect_setPitch takes integer this,real nv returns integer
			call sc__Object__set_pitch(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetPitch takes integer this,real nv returns integer
			call sc__Object__set_offset_pitch(this,nv)
			return this
  endfunction
//textmacro instance: effectSetter("Roll","roll")
	
  function s__Effect__set_roll takes integer this,real nv returns nothing
			set s__Object_roll_true[this]=nv
			call s__Effect_refreshRoll(this)
  endfunction
	
  function s__Effect__set_offset_roll takes integer this,real nv returns nothing
			set s__Object_offset_roll_true[this]=nv
			call s__Effect_refreshRoll(this)
  endfunction

  function s__Effect_setRoll takes integer this,real nv returns integer
			call sc__Object__set_roll(this,nv)
			return this
  endfunction

  function s__Effect_setOffsetRoll takes integer this,real nv returns integer
			call sc__Object__set_offset_roll(this,nv)
			return this
  endfunction
	
//end of: effectSetter("Roll","roll")
	
  function s__Effect_getScale takes integer this returns real
			return s__Effect_scale_true[this]
  endfunction
	
  function s__Effect_getR takes integer this returns integer
			return s__Effect_r_true[this]
  endfunction
	
  function s__Effect_getG takes integer this returns integer
			return s__Effect_g_true[this]
  endfunction
	
  function s__Effect_getB takes integer this returns integer
			return s__Effect_b_true[this]
  endfunction
	
  function s__Effect_getAlpha takes integer this returns integer
			return s__Effect_a_true[this]
  endfunction
	
  function s__Effect_setScale takes integer this,real ns returns integer
			set s__Effect_scale_true[this]=ns
			if ns < 0 then
				call BlzSetSpecialEffectScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0) // INLINED!!
			else
				call BlzSetSpecialEffectScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), ns) // INLINED!!
			endif
			return this
  endfunction

  function s__Effect_setMatrixScale takes integer this,real nx,real ny,real nz returns integer
			call BlzSetSpecialEffectMatrixScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nx, ny, nz) // INLINED!!
			return this
  endfunction
	
  function s__Effect_colorRefresh takes integer this returns nothing
   local integer array color
   local integer i= 0
			set color[0]=s__Effect_r_true[this]
			set color[1]=s__Effect_g_true[this]
			set color[2]=s__Effect_b_true[this]
			loop
				if color[i] > 255 then
					set color[i]=255
				elseif color[i] < 0 then
					set color[i]=0
				endif
				set i=i + 1
				exitwhen i == 3
			endloop
			call BlzSetSpecialEffectColor((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), color[0], color[1], color[2]) // INLINED!!
  endfunction
	
  function s__Effect_setR takes integer this,integer nv returns integer
			set s__Effect_r_true[this]=nv
			call s__Effect_colorRefresh(this)
			return this
  endfunction
	
  function s__Effect_setG takes integer this,integer nv returns integer
			set s__Effect_g_true[this]=nv
			call s__Effect_colorRefresh(this)
			return this
  endfunction
	
  function s__Effect_setB takes integer this,integer nv returns integer
			set s__Effect_b_true[this]=nv
			call s__Effect_colorRefresh(this)
			return this
  endfunction
	
  function s__Effect_setAlpha takes integer this,integer nv returns integer
			set s__Effect_a_true[this]=nv
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
			return this
  endfunction
	
  function s__Effect_setColor takes integer this,integer r,integer g,integer b returns integer
			set s__Effect_r_true[this]=r
			set s__Effect_g_true[this]=g
			set s__Effect_b_true[this]=b
			call s__Effect_colorRefresh(this)
			return this
  endfunction
	
  function s__Effect_setPosition takes integer this,real nx,real ny,real nz returns integer
			call sc__Object__set_x(this,nx)
			call sc__Object__set_y(this,ny)
			call sc__Object__set_z(this,nz)
			return this
  endfunction

  function s__Effect_timeout takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId((GetExpiredTimer())) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			call sc__Object_deallocate(this)
  endfunction
	
  function s__Effect__set_duration takes integer this,real timeout returns nothing
			if s__Effect_decay_timer[this] == null then
				set s__Effect_decay_timer[this]=sc__Timer_new(this)
			endif
			call TimerStart(s__Effect_decay_timer[this], timeout, false, function s__Effect_timeout)
  endfunction

  function s__Effect_setDuration takes integer this,real timeout returns integer
			call s__Effect__set_duration(this,timeout)
			return this
  endfunction
	
  function s__Effect_kill takes integer this returns nothing
			if not s__Effect_permanant[this] then
				set s__Effect_want_remove[this]=false
				call sc__Object_deallocate(this)
			endif
  endfunction
	
  function s__Effect_remove takes integer this returns nothing
			if not s__Effect_permanant[this] then
				set s__Effect_want_remove[this]=true
				call sc__Object_deallocate(this)
			endif
  endfunction
	
  function s__Effect_setAnim takes integer this,animtype at returns integer
			call BlzPlaySpecialEffect((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), at) // INLINED!!
			return this
  endfunction
	
  function s__Effect_setSubAnim takes integer this,subanimtype at returns integer
			call BlzSpecialEffectAddSubAnimation((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), at) // INLINED!!
			return this
  endfunction

  function s__Effect_clearSubAnim takes integer this returns integer
			call BlzSpecialEffectClearSubAnimations((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			return this
  endfunction
	
  function s__Effect_setAnimSpeed takes integer this,real sp returns integer
			call BlzSetSpecialEffectTimeScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), sp) // INLINED!!
			return this
  endfunction
	
  function s__Effect_setTeamColor takes integer this,player p returns integer
			call BlzSetSpecialEffectColorByPlayer((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
			return this
  endfunction 
	
  function s__Effect_clear takes integer this returns integer
			call BlzSpecialEffectClearSubAnimations((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			return this
  endfunction

  function s__Effect_setLocalScale takes integer this,real ns returns nothing
			call BlzSetSpecialEffectScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), ns) // INLINED!!
  endfunction

  function s__Effect_setLocalAlpha takes integer this,integer nv returns nothing
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
  endfunction
	
  function s__Effect_setLocalColor takes integer this,integer r,integer g,integer b returns nothing
			call BlzSetSpecialEffectColor((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), r, g, b) // INLINED!!
  endfunction
	
  function s__Effect_setLocalPosition takes integer this,real nx,real ny,real nz returns nothing
			call BlzSetSpecialEffectPosition((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nx, ny, nz) // INLINED!!
  endfunction

  function s__Effect_create takes string path,real x,real y,real z,real ya returns integer
   local integer this= s__Effect__allocate(AddSpecialEffect(path, x, y))
			set s__Effect_decay_timer[this]=null
			call s__Effect_initializeOffset(this)
			call sc__Object__set_x(this,x)
			call sc__Object__set_y(this,y)
			call sc__Object__set_z(this,z)
			call s__Effect_setScale(this,1.)
			call s__Effect_setYaw(this,ya)
			call s__Effect_setPitch(this,0)
			call s__Effect_setRoll(this,0)
			call s__Effect_setR(this,255)
			call s__Effect_setG(this,255)
			call s__Effect_setB(this,255)
			call s__Effect_setAlpha(this,255)
			set s__Effect_want_remove[this]=false
			set s__Effect_permanant[this]=false
			return this
  endfunction
	
  function s__Effect_createAttatched takes string path,widget target,string attatch returns integer
   local integer this= s__Effect__allocate(AddSpecialEffectTarget(path, target, attatch))
			call s__Effect_setR(this,255)
			call s__Effect_setG(this,255)
			call s__Effect_setB(this,255)
			call s__Effect_setAlpha(this,255)
			set s__Effect_decay_timer[this]=null
			set s__Effect_want_remove[this]=false
			set s__Effect_permanant[this]=false
			return this
  endfunction
	
  function s__Effect_onDestroy takes integer this returns nothing
			if s__Effect_decay_timer[this] != null then
				call ReleaseTimer(s__Effect_decay_timer[this])
			endif
			if s__Effect_want_remove[this] then
				call DestroyEffect((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			else
				call s__EffectDecay_create((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			endif
			set s__Effect_decay_timer[this]=null
  endfunction
	
	

//library Effect ends
//library Group:




  function s__Group_new takes nothing returns group
			set Group__RETURNGROUP=null
			//set RETURNGROUP = CreateGroup()
			set Group__RETURNGROUP=NewGroup()
			return Group__RETURNGROUP
  endfunction

  function s__Group_release takes group g returns nothing
			//call DestroyGroup(g)
			call ReleaseGroup(g)
  endfunction

  function s__Group_clear takes group g returns nothing
			call GroupClear(g)
  endfunction

		

  function s__Group_copy takes group source returns group
			set Group__RETURNGROUP=CreateGroup()
			call BlzGroupAddGroupFast(source, Group__RETURNGROUP)
			return Group__RETURNGROUP
  endfunction

  function s__Group_getFurthest takes group g,real x,real y,unit except returns unit
   local real d
   local unit u
			set Group__LOOP_INDEX=0
			set Group__TARGET_X=x
			set Group__TARGET_Y=y
			set Group__CURRENT_UNIT=null
			set Group__CURRENT_DIST=0
			loop
				set u=BlzGroupUnitAt(g, Group__LOOP_INDEX)
				exitwhen u == null
				if u != except then
					set d=s__Math_distancePoints(GetUnitX(u) , GetUnitY(u) , Group__TARGET_X , Group__TARGET_Y)
					if Group__LOOP_INDEX == 0 then
						set Group__CURRENT_UNIT=u
						set Group__CURRENT_DIST=d
					else
						if d > Group__CURRENT_DIST then
							set Group__CURRENT_UNIT=u
							set Group__CURRENT_DIST=d
						endif
					endif
				endif
				set Group__LOOP_INDEX=Group__LOOP_INDEX + 1
			endloop
			set u=null
			return Group__CURRENT_UNIT
  endfunction

  function s__Group_getRandomUnit takes group g returns unit
			return BlzGroupUnitAt(g, GetRandomInt(0, BlzGroupGetSize(g) - 1))
  endfunction

  function s__Group_getNearest takes group g,real x,real y,unit except returns unit
   local real d
   local unit u
			set Group__LOOP_INDEX=0
			set Group__TARGET_X=x
			set Group__TARGET_Y=y
			set Group__CURRENT_UNIT=null
			set Group__CURRENT_DIST=0
			loop
				set u=BlzGroupUnitAt(g, Group__LOOP_INDEX)
				exitwhen u == null
				if u != except then
					set d=s__Math_distancePoints(GetUnitX(u) , GetUnitY(u) , Group__TARGET_X , Group__TARGET_Y)
					if Group__LOOP_INDEX == 0 then
						set Group__CURRENT_UNIT=u
						set Group__CURRENT_DIST=d
					else
						if d < Group__CURRENT_DIST then
							set Group__CURRENT_UNIT=u
							set Group__CURRENT_DIST=d
						endif
					endif
				endif
				set Group__LOOP_INDEX=Group__LOOP_INDEX + 1
			endloop
			set u=null
			return Group__CURRENT_UNIT
  endfunction



//library Group ends
//library Lightning:

	
	
  function s__Lightning_getX takes integer this returns real
			return s__Lightning_x1[this]
  endfunction
  function s__Lightning_getY takes integer this returns real
			return s__Lightning_y1[this]
  endfunction
  function s__Lightning_getZ takes integer this returns real
			return s__Lightning_z1[this]
  endfunction
  function s__Lightning_getYaw takes integer this returns real
			return s__Math_anglePoints(s__Lightning_x1[this] , s__Lightning_y1[this] , s__Lightning_x2[this] , s__Lightning_y2[this])
  endfunction
  function s__Lightning_getPitch takes integer this returns real
			return s__Math_anglePoints(0 , s__Lightning_z1[this] , s__Math_distancePoints(s__Lightning_x1[this] , s__Lightning_y1[this] , s__Lightning_x2[this] , s__Lightning_y2[this]) , s__Lightning_z2[this]) * - 1
  endfunction
  function s__Lightning_getRoll takes integer this returns real
			return 0.
  endfunction
  function s__Lightning_setPosition takes integer this,real x,real y,real z returns nothing
			set s__Lightning_x1[this]=x
			set s__Lightning_y1[this]=y
			set s__Lightning_z1[this]=z
  endfunction
  function s__Lightning_setPosition2 takes integer this,real x,real y,real z returns nothing
			set s__Lightning_x2[this]=x
			set s__Lightning_y2[this]=y
			set s__Lightning_z2[this]=z
  endfunction
  function s__Lightning_refreshPosition takes integer this returns nothing
   local real tx1
   local real ty1
   local real tz1
   local real tx2
   local real ty2
   local real tz2
			if s__Lightning_t1[this] == 0 then
				set tx1=s__Lightning_x1[this] + s__Lightning_ox1[this]
				set ty1=s__Lightning_y1[this] + s__Lightning_oy1[this]
				set tz1=s__Lightning_z1[this] + s__Lightning_oz1[this]
			else
				set s__Lightning_x1[this]=sc__Object__get_x(s__Lightning_t1[this])
				set s__Lightning_y1[this]=sc__Object__get_y(s__Lightning_t1[this])
				set s__Lightning_z1[this]=sc__Object__get_z(s__Lightning_t1[this])
				set tx1=s__Lightning_x1[this] + s__Lightning_ox1[this]
				set ty1=s__Lightning_y1[this] + s__Lightning_oy1[this]
				set tz1=s__Lightning_z1[this] + s__Lightning_oz1[this]
			endif
			if s__Lightning_t2[this] == 0 then
				set tx2=s__Lightning_x2[this] + s__Lightning_ox2[this]
				set ty2=s__Lightning_y2[this] + s__Lightning_oy2[this]
				set tz2=s__Lightning_z2[this] + s__Lightning_oz2[this]
			else
				set s__Lightning_x2[this]=sc__Object__get_x(s__Lightning_t2[this])
				set s__Lightning_y2[this]=sc__Object__get_y(s__Lightning_t2[this])
				set s__Lightning_z2[this]=sc__Object__get_z(s__Lightning_t2[this])
				set tx2=s__Lightning_x2[this] + s__Lightning_ox2[this]
				set ty2=s__Lightning_y2[this] + s__Lightning_oy2[this]
				set tz2=s__Lightning_z2[this] + s__Lightning_oz2[this]
			endif
			call MoveLightningEx(s__Lightning_l[this], true, tx1, ty1, tz1, tx2, ty2, tz2)
  endfunction
	
  function s__Lightning_setTarget1 takes integer this,integer nt returns nothing
			set s__Lightning_t1[this]=nt
			call s__Lightning_refreshPosition(this)
  endfunction
	
  function s__Lightning_setTarget2 takes integer this,integer nt returns nothing
			set s__Lightning_t2[this]=nt
			call s__Lightning_refreshPosition(this)
  endfunction
	
  function s__Lightning_timeraction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId((GetExpiredTimer())) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			call s__Lightning_refreshPosition(this)
			if s__Lightning_alpha[this] - s__Lightning_fade[this] * TIMER_TICK > 0 then
				set s__Lightning_alpha[this]=s__Lightning_alpha[this] - s__Lightning_fade[this] * TIMER_TICK
			else
				set s__Lightning_alpha[this]=0
			endif
			call SetLightningColor(s__Lightning_l[this], s__Lightning_r[this], s__Lightning_g[this], s__Lightning_b[this], s__Lightning_alpha[this])
			if s__Lightning_duration[this] > 0. then
				set s__Lightning_duration[this]=s__Lightning_duration[this] - TIMER_TICK
				if s__Lightning_duration[this] <= 0. then
					call sc__Object_deallocate(this)
				endif
			endif
  endfunction
	
  function s__Lightning_create takes string s,real ax,real ay,real az,real bx,real by,real bz returns integer
   local integer this= s__Lightning__allocate()
			set s__Lightning_type[this]=s
			set s__Lightning_t[this]=sc__Timer_new(this)
			set s__Lightning_duration[this]=0.
			set s__Lightning_l[this]=AddLightningEx(s, true, ax, ay, GetLocalZ(ax , ay) + az, bx, by, GetLocalZ(bx , by) + bz)
			set s__Lightning_x1[this]=ax
			set s__Lightning_y1[this]=ay
			set s__Lightning_z1[this]=az
			set s__Lightning_x2[this]=bx
			set s__Lightning_y2[this]=by
			set s__Lightning_z2[this]=bz
			set s__Lightning_ox1[this]=0
			set s__Lightning_oy1[this]=0
			set s__Lightning_oz1[this]=0
			set s__Lightning_ox2[this]=0
			set s__Lightning_oy2[this]=0
			set s__Lightning_oz2[this]=0
			set s__Lightning_fade[this]=0
			call TimerStart((s__Lightning_t[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Lightning_timeraction)) // INLINED!!
			call s__Lightning_refreshPosition(this)
			return this
  endfunction
			
  function s__Lightning_createOO takes string s,integer o1,integer o2 returns integer
   local integer this= s__Lightning_create(s , sc__Object__get_x(o1) , sc__Object__get_y(o1) , sc__Object__get_z(o1) , sc__Object__get_x(o2) , sc__Object__get_y(o2) , sc__Object__get_z(o2))
			set s__Lightning_x1[this]=0
			set s__Lightning_y1[this]=0
			set s__Lightning_z1[this]=0
			set s__Lightning_x2[this]=0
			set s__Lightning_y2[this]=0
			set s__Lightning_z2[this]=0
			set s__Lightning_ox1[this]=0
			set s__Lightning_oy1[this]=0
			set s__Lightning_oz1[this]=0
			set s__Lightning_ox2[this]=0
			set s__Lightning_oy2[this]=0
			set s__Lightning_oz2[this]=0
			set s__Lightning_t1[this]=o1
			set s__Lightning_t2[this]=o2
			call s__Lightning_refreshPosition(this)
			return this
  endfunction 
	
  function s__Lightning_setDuration takes integer this,real time returns integer
			set s__Lightning_duration[this]=time
			return this
  endfunction
		
  function s__Lightning_setFade takes integer this,real v returns integer
			set s__Lightning_fade[this]=v
			return this
  endfunction
	
  function s__Lightning_onDestroy takes integer this returns nothing
			call ReleaseTimer(s__Lightning_t[this])
			call DestroyLightning(s__Lightning_l[this])
			set s__Lightning_t[this]=null
			set s__Lightning_l[this]=null
  endfunction
	
	

//library Lightning ends
//library Line:

	

 function s__Line__Line_getLightning takes integer this,integer index returns lightning
		return LoadLightningHandle(Line__HASH, this, index)
 endfunction

 function s__Line__Line_setLightning takes integer this,integer index,lightning nl returns nothing
		call SaveLightningHandle(Line__HASH, this, index, nl)
 endfunction

 function s__Line__Line_setColor takes integer this,real r,real g,real b,real a returns integer
		return this
 endfunction

 function s__Line__Line_setLocalColor takes integer this,real r,real g,real b,real a returns nothing

 endfunction

 function s__Line__Line_refreshPosition takes integer this returns nothing

 endfunction

 function s__Line__Line_setPositionGeneral takes integer this,real x,real y,real z,real length,real angle,real width returns nothing
		set s__Line__Line_x[this]=x
		set s__Line__Line_y[this]=y
		set s__Line__Line_z[this]=z
		set s__Line__Line_length[this]=length
		set s__Line__Line_angle[this]=angle
		set s__Line__Line_width[this]=width
		call sc__Line__Line_refreshPosition(this)
 endfunction

 function s__Line__Line_setPosition takes integer this,real x,real y,real z returns nothing
		set s__Line__Line_x[this]=x
		set s__Line__Line_y[this]=y
		set s__Line__Line_z[this]=z
		call sc__Line__Line_refreshPosition(this)
 endfunction

 function s__Line__Line_setAngle takes integer this,real nv returns nothing
		set s__Line__Line_angle[this]=nv
		call sc__Line__Line_refreshPosition(this)
 endfunction

 function s__Line__Line_setLength takes integer this,real nv returns nothing
		set s__Line__Line_length[this]=nv
		call sc__Line__Line_refreshPosition(this)
 endfunction

 function s__Line__Line_setWidth takes integer this,real nv returns nothing
		set s__Line__Line_width[this]=nv
		call sc__Line__Line_refreshPosition(this)
 endfunction

 function s__Line__Line_setVelo takes integer this,real nv returns nothing
		set s__Line__Line_velo[this]=nv
 endfunction

 function s__Line__Line_setDirection takes integer this,real nv returns nothing
		set s__Line__Line_dir[this]=nv
 endfunction

 function s__Line__Line_setWidthAxis takes integer this,real nv returns nothing
		set s__Line__Line_widthaxis[this]=nv
 endfunction

 function s__Line__Line_setLengthAxis takes integer this,real nv returns nothing
		set s__Line__Line_lengthaxis[this]=nv
 endfunction

 function s__Line__Line_setAngleAxis takes integer this,real nv returns nothing
		set s__Line__Line_angleaxis[this]=nv
 endfunction

 function s__Line__Line_fadeIn takes integer this,real overtime returns nothing
		set s__Line__Line_alphaaxis[this]=1 / overtime
 endfunction

 function s__Line__Line_fadeOut takes integer this,real overtime returns nothing
		set s__Line__Line_alphaaxis[this]=- 1 / overtime
 endfunction

 function s__Line__Line_pointAction takes nothing returns nothing
  local integer this= sc__Timer_getDataEx()
		set s__Line__Line_alphaaxis[(this)]=- 1 / ((s__Line__Line_temp_overtime[this])*1.0) // INLINED!!
 endfunction

 function s__Line__Line_setFadeOutPoint takes integer this,real fadeat,real overtime returns nothing
		if s__Line__Line_pointtimer[this] == null then
			set s__Line__Line_pointtimer[this]=sc__Timer_new(this)
		endif
		set s__Line__Line_temp_overtime[this]=overtime
		call TimerStart((s__Line__Line_pointtimer[this] ), (( fadeat )*1.0), ( false ), ( function s__Line__Line_pointAction)) // INLINED!!
 endfunction

 function s__Line__Line_periodicAction takes integer this returns nothing
		
 endfunction

 function s__Line__Line_tA takes nothing returns nothing
  local real na= 0.
  local integer this= sc__Timer_getDataEx()
		if s__Line__Line_refresh_position[this] then
			call s__Line__Line_setPositionGeneral(this,s__Line__Line_x[this] + s__Line__Line_velo[this] * Cos(Deg2Rad(s__Line__Line_dir[this])) * TIMER_TICK , s__Line__Line_y[this] + s__Line__Line_velo[this] * Sin(Deg2Rad(s__Line__Line_dir[this])) * TIMER_TICK , s__Line__Line_z[this] , s__Line__Line_length[this] + ( s__Line__Line_lengthaxis[this] * TIMER_TICK ) , s__Line__Line_angle[this] + ( s__Line__Line_angleaxis[this] * TIMER_TICK ) , s__Line__Line_width[this] + ( s__Line__Line_widthaxis[this] * TIMER_TICK ))
		endif
		set s__Line__Line_a[this]=s__Line__Line_a[this] + s__Line__Line_alphaaxis[this] * TIMER_TICK
		set na=s__Line__Line_a[this]
		if na <= 0. then
			set na=0.
			set s__Line__Line_a[this]=0.
			set s__Line__Line_alphaaxis[this]=0.
		elseif na >= 1. then
			set na=1.
			set s__Line__Line_a[this]=1.
			set s__Line__Line_alphaaxis[this]=0.
		endif
		if s__Line__Line_refresh_color[this] then
			call sc__Line__Line_setColor(this,s__Line__Line_r[this] , s__Line__Line_g[this] , s__Line__Line_b[this] , na)
		endif
		call sc__Line__Line_periodicAction(this)
		if s__Line__Line_a[this] <= 0. and s__Line__Line_alphaaxis[this] < 0. and not s__Line__Line_permanent[this] then
			call sc__Line__Line_deallocate(this)
		endif
 endfunction

 function s__Line__Line_create takes nothing returns integer
  local integer this= s__Line__Line__allocate()
		set s__Line__Line_t[this]=sc__Timer_new(this)
		set s__Line__Line_pointtimer[this]=sc__Timer_new(this)
		call TimerStart((s__Line__Line_t[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Line__Line_tA)) // INLINED!!
		return this
 endfunction

 function s__Line__Line_onDestroy takes integer this returns nothing
		call ReleaseTimer(s__Line__Line_t[this])
		set s__Line__Line_t[this]=null
		call ReleaseTimer(s__Line__Line_pointtimer[this])
		set s__Line__Line_pointtimer[this]=null
		set s__Line__Line_visible_player[this]=null
		//call Effect.create(EF_EXPLOSION,x,y,z,0).setDuration(1.5)
 endfunction



 function s__Square_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (2))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (3))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
 endfunction

 function s__Square_setColor takes integer this,real r,real g,real b,real a returns integer
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__Square_setLocalColor(this,r , g , b , a)
		return this
 endfunction

 function s__Square_refreshPosition takes integer this returns nothing
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
		endif
		
 endfunction

 function s__Square_create takes real x,real y,real z,real length,real angle,real width,player visible_player returns integer
  local integer this= s__Square__allocate()
		set s__Line__Line_x[this]=x
		set s__Line__Line_y[this]=y
		set s__Line__Line_z[this]=z
		set s__Line__Line_length[this]=length
		set s__Line__Line_angle[this]=angle
		set s__Line__Line_width[this]=width
		set s__Line__Line_visible_player[this]=visible_player
		call SaveLightningHandle(Line__HASH, (this), (0 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (1 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (2 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (3 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call s__Square_refreshPosition(this)
		return this
 endfunction

 function s__Square_onDestroy takes integer this returns nothing
  local integer i= 0
		loop
			exitwhen i >= 4
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
 endfunction



 function s__DoubleLine_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
 endfunction

 function s__DoubleLine_setColor takes integer this,real r,real g,real b,real a returns integer
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__DoubleLine_setLocalColor(this,r , g , b , a)
		return this
 endfunction

 function s__DoubleLine_refreshPosition takes integer this returns nothing
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
		endif
 endfunction

 function s__DoubleLine_create takes real x,real y,real z,real length,real angle,real width,player visible_player returns integer
  local integer this= s__DoubleLine__allocate()
		set s__Line__Line_x[this]=x
		set s__Line__Line_y[this]=y
		set s__Line__Line_z[this]=z
		set s__Line__Line_length[this]=length
		set s__Line__Line_angle[this]=angle
		set s__Line__Line_width[this]=width
		set s__Line__Line_visible_player[this]=visible_player
		call SaveLightningHandle(Line__HASH, (this), (0 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (1 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call s__DoubleLine_refreshPosition(this)
		return this
 endfunction

 function s__DoubleLine_onDestroy takes integer this returns nothing
  local integer i= 0
		loop
			exitwhen i >= 2
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
 endfunction



 function s__Arrow_refreshPosition takes integer this returns nothing
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (4))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (5))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (4))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (5))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
		endif
 endfunction

 function s__Arrow_setLocalColor takes integer this,real r,real g,real b,real a returns nothing
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (2))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (3))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (4))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (5))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
 endfunction

 function s__Arrow_setColor takes integer this,real r,real g,real b,real a returns integer
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__Arrow_setLocalColor(this,r , g , b , a)
		return this
 endfunction

 function s__Arrow_create takes real x,real y,real z,real length,real angle,real width,player visible_player returns integer
  local integer this= s__Arrow__allocate()
		set s__Line__Line_x[this]=x
		set s__Line__Line_y[this]=y
		set s__Line__Line_z[this]=z
		set s__Line__Line_length[this]=length
		set s__Line__Line_angle[this]=angle
		set s__Line__Line_width[this]=width
		set s__Line__Line_visible_player[this]=visible_player
		call SaveLightningHandle(Line__HASH, (this), (0 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (1 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (2 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (3 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (4 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call SaveLightningHandle(Line__HASH, (this), (5 ), ( AddLightningEx("LSER", true, x, y, z, x, y, z))) // INLINED!!
		call s__Arrow_refreshPosition(this)
		return this
 endfunction

 function s__Arrow_onDestroy takes integer this returns nothing
  local integer i= 0
		loop
			exitwhen i >= 6
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
 endfunction



//library Line ends
//library SkillShop:




  function s__SkillShopWidget_setTarget takes integer this,integer id returns nothing
   local integer i= 0
   local string s= ""
			set s__SkillShopWidget_id[this]=id
			call BlzFrameSetEnable(s__SkillShopWidget_btn[this], id > 0)
			call BlzFrameSetVisible(BlzGetFrameByName("SkillShopBuyButtonIcon", this), id > 0)
			call BlzFrameSetVisible(s__SkillShopWidget_bonus_stat1[this], id > 0)
			call BlzFrameSetVisible(s__SkillShopWidget_bonus_stat2[this], id > 0)
			if id <= 0 then
				call BlzFrameSetTexture(s__SkillShopWidget_icon[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetText(s__SkillShopWidget_name[this], "")
				call BlzFrameSetText(s__SkillShopWidget_tag[this], "")
				call BlzFrameSetPoint(BlzGetFrameByName("SkillShopBuyButtonText", this), FRAMEPOINT_CENTER, s__SkillShopWidget_btn[this], FRAMEPOINT_CENTER, 0., 0.)
				call BlzFrameSetText(BlzGetFrameByName("SkillShopBuyButtonText", this), "|c99999999판매됨|r")
			else
				call BlzFrameSetTexture(s__SkillShopWidget_icon[this], "ReplaceableTextures\\CommandButtons\\" + (LoadStr(Ability__HASH, (id), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				
				call BlzFrameSetText(s__SkillShopWidget_name[this], TIER_STRING_COLOR[(LoadInteger(Ability__HASH, (id), s__Ability_INDEX_TIER))] + (LoadStr(Ability__HASH, (id), s__Ability_INDEX_NAME)) + "|r") // INLINED!!
				
				set i=1
				loop
					exitwhen sc__Ability_getTypeTag(id , i) == ""
					if i <= 1 then
						set s=s + sc__Ability_getTypeTag(id , i)
					else
						set s=s + ", " + sc__Ability_getTypeTag(id , i)
					endif
					set i=i + 1
				endloop
				
				set s=s + "\n\n" + sc__Ability_getTypeTooltip(id)
				
				set s=s + "\n\n|cff00ffff능력치 보너스 :|r"
				call BlzFrameSetText(s__SkillShopWidget_tag[this], s)
				call BlzFrameSetTexture(s__SkillShopWidget_bonus_stat1[this], STAT_TYPE_ICON[(LoadInteger(Ability__HASH, (id ), s__Ability_INDEX_BONUS_STAT + ( 0)))], 0, true) // INLINED!!
				call BlzFrameSetTexture(s__SkillShopWidget_bonus_stat2[this], STAT_TYPE_ICON[(LoadInteger(Ability__HASH, (id ), s__Ability_INDEX_BONUS_STAT + ( 1)))], 0, true) // INLINED!!
				
				call BlzFrameSetPoint(BlzGetFrameByName("SkillShopBuyButtonText", this), FRAMEPOINT_CENTER, s__SkillShopWidget_btn[this], FRAMEPOINT_CENTER, (((12)*1.0) / 1800.), 0.) // INLINED!!
				call BlzFrameSetText(BlzGetFrameByName("SkillShopBuyButtonText", this), "|cffffcc00" + I2S((LoadInteger(Ability__HASH, (id), s__Ability_INDEX_COST))) + "|r") // INLINED!!
			endif
  endfunction

  function s__SkillShopWidget_press takes nothing returns nothing
   local player p= GetTriggerPlayer()
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
   local integer i= 0
   local integer ti= 0
			call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
			call BlzFrameSetEnable(BlzGetTriggerFrame(), s__SkillShopWidget_id[this] > 0)
			
			if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
				
				if (GetPlayerState((p), PLAYER_STATE_RESOURCE_GOLD)) >= (LoadInteger(Ability__HASH, (s__SkillShopWidget_id[this]), s__Ability_INDEX_COST)) then // INLINED!!
					set i=s__Unit_prototype_addAbility((s__User_FOCUSUNIT[GetPlayerId((p))]),s__SkillShopWidget_id[this]) // INLINED!!
					set ti=i
					
					if ti > - 1 then
						
						if sc__Ability_getTypeTag(s__Ability_prototype_id[i] , 0) == ABILITY_STRING_WEAPON then
							if s__Ability_prototype_level[i] == 1 and s__Unit_prototype_weapon_ability[s__Ability_prototype_owner[i]] == 0 then
								call s__Unit_prototype_setWeaponAbility(s__Ability_prototype_owner[i],i)
							endif
						endif
						
						call sc__User_addGold(p , - 1 * (LoadInteger(Ability__HASH, (s__SkillShopWidget_id[this]), s__Ability_INDEX_COST))) // INLINED!!
						
						call s__SkillShopWidget_setTarget(this,0)
						call s__UI_refreshAbilityIconsTarget(s__UI_THIS[GetPlayerId(p)])
						call sc__SlotChanger_stateDefault(s__SlotChanger_THIS[GetPlayerId(p)])
					
					else
						set ERROR_MESSAGE="더이상 능력을 배울 수 없습니다."
						set ERROR_MESSAGE_PLAYER=p
						call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
						if GetLocalPlayer() == p then
							call PlaySoundBJ(gg_snd_Error)
						endif
					endif
				
				else
					set ERROR_MESSAGE="금화가 부족합니다."
					set ERROR_MESSAGE_PLAYER=p
					call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
					if GetLocalPlayer() == p then
						call PlaySoundBJ(gg_snd_Error)
					endif
				endif
			endif
  endfunction

  function s__SkillShopWidget_create takes framehandle parent,integer index returns integer
   local integer this= s__SkillShopWidget__allocate()
			set s__SkillShopWidget_container[this]=BlzCreateFrameByType("BACKDROP", "", parent, "", 0)
			call BlzFrameSetPoint(s__SkillShopWidget_container[this], FRAMEPOINT_TOPLEFT, FRAME_SKILL_SHOP, FRAMEPOINT_TOPLEFT, index * BlzFrameGetWidth(FRAME_SKILL_SHOP) / 5, 0.)
			call BlzFrameSetSize(s__SkillShopWidget_container[this], BlzFrameGetWidth(FRAME_SKILL_SHOP) / 5, BlzFrameGetHeight(FRAME_SKILL_SHOP))
			call BlzFrameSetTexture(s__SkillShopWidget_container[this], "Textures\\black32.blp", 0, true)
			set s__SkillShopWidget_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShopWidget_container[this], "", 0)
			call BlzFrameSetPoint(s__SkillShopWidget_icon[this], FRAMEPOINT_TOP, s__SkillShopWidget_container[this], FRAMEPOINT_TOP, 0., - 0.01)
			call BlzFrameSetSize(s__SkillShopWidget_icon[this], (((96)*1.0) / 1800.), (((96)*1.0) / 1800.)) // INLINED!!
			set s__SkillShopWidget_name[this]=BlzCreateFrame("MyTextLarge", s__SkillShopWidget_container[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShopWidget_name[this], FRAMEPOINT_TOP, s__SkillShopWidget_icon[this], FRAMEPOINT_BOTTOM, 0., - 0.005)
			call BlzFrameSetTextAlignment(s__SkillShopWidget_name[this], TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__SkillShopWidget_name[this], "어빌리티 이름")
			set s__SkillShopWidget_tag[this]=BlzCreateFrame("MyText", s__SkillShopWidget_container[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShopWidget_tag[this], FRAMEPOINT_TOP, s__SkillShopWidget_name[this], FRAMEPOINT_BOTTOM, 0., - 0.005)
			call BlzFrameSetTextAlignment(s__SkillShopWidget_tag[this], TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__SkillShopWidget_tag[this], "|cffffff00어빌리티 태그|r")
			set s__SkillShopWidget_btn[this]=BlzCreateFrame("SkillShopBuyButton", s__SkillShopWidget_container[this], 0, this)
			call BlzFrameSetPoint(s__SkillShopWidget_btn[this], FRAMEPOINT_BOTTOM, s__SkillShopWidget_container[this], FRAMEPOINT_BOTTOM, 0., 0.005)
			call BlzFrameSetSize(s__SkillShopWidget_btn[this], BlzFrameGetWidth(FRAME_SKILL_SHOP) / 5 - 0.02, 0.025)
			call BlzFrameClearAllPoints(BlzGetFrameByName("SkillShopBuyButtonText", this))
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopBuyButtonText", this), FRAMEPOINT_CENTER, s__SkillShopWidget_btn[this], FRAMEPOINT_CENTER, (((12)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTextAlignment(BlzGetFrameByName("SkillShopBuyButtonText", this), TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetTexture(BlzGetFrameByName("SkillShopBuyButtonIcon", this), "ui\\widgets\\tooltips\\human\\tooltipgoldicon.blp", 0, true)
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopBuyButtonIcon", this), FRAMEPOINT_RIGHT, BlzGetFrameByName("SkillShopBuyButtonText", this), FRAMEPOINT_LEFT, - 0.005, 0.)
			call BlzFrameSetSize(BlzGetFrameByName("SkillShopBuyButtonIcon", this), (((24)*1.0) / 1800.), (((24)*1.0) / 1800.)) // INLINED!!
			
			set s__SkillShopWidget_bonus_stat1[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShopWidget_container[this], "", 0)
			call BlzFrameSetPoint(s__SkillShopWidget_bonus_stat1[this], FRAMEPOINT_BOTTOMRIGHT, s__SkillShopWidget_btn[this], FRAMEPOINT_TOP, - 0.005, 0.0025)
			call BlzFrameSetSize(s__SkillShopWidget_bonus_stat1[this], (((32)*1.0) / 1800.), (((32)*1.0) / 1800.)) // INLINED!!
			set s__SkillShopWidget_bonus_stat2[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShopWidget_container[this], "", 0)
			call BlzFrameSetPoint(s__SkillShopWidget_bonus_stat2[this], FRAMEPOINT_BOTTOMLEFT, s__SkillShopWidget_btn[this], FRAMEPOINT_TOP, 0.005, 0.0025)
			call BlzFrameSetSize(s__SkillShopWidget_bonus_stat2[this], (((32)*1.0) / 1800.), (((32)*1.0) / 1800.)) // INLINED!!
			set s__SkillShopWidget_btn_trigger[this]=s__Trigger_new(this)
			call BlzTriggerRegisterFrameEvent(s__SkillShopWidget_btn_trigger[this], s__SkillShopWidget_btn[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__SkillShopWidget_btn_trigger[this], s__SkillShopWidget_btn[this], FRAMEEVENT_MOUSE_LEAVE)
			set s__SkillShopWidget_btn_cond[this]=TriggerAddCondition(s__SkillShopWidget_btn_trigger[this], Condition(function s__SkillShopWidget_press))
			
			call s__SkillShopWidget_setTarget(this,'0000')
			return this
  endfunction

  function s__SkillShopWidget_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__SkillShopWidget_container[this])
	set s__SkillShopWidget_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".icon")
	call BlzDestroyFrame(s__SkillShopWidget_icon[this])
	set s__SkillShopWidget_icon[this]=null
//end of: destroyFrame(".icon")
//textmacro instance: destroyFrame(".name")
	call BlzDestroyFrame(s__SkillShopWidget_name[this])
	set s__SkillShopWidget_name[this]=null
//end of: destroyFrame(".name")
//textmacro instance: destroyFrame(".tag")
	call BlzDestroyFrame(s__SkillShopWidget_tag[this])
	set s__SkillShopWidget_tag[this]=null
//end of: destroyFrame(".tag")
//textmacro instance: destroyFrame(".btn")
	call BlzDestroyFrame(s__SkillShopWidget_btn[this])
	set s__SkillShopWidget_btn[this]=null
//end of: destroyFrame(".btn")
//textmacro instance: destroyFrame(".bonus_stat1")
	call BlzDestroyFrame(s__SkillShopWidget_bonus_stat1[this])
	set s__SkillShopWidget_bonus_stat1[this]=null
//end of: destroyFrame(".bonus_stat1")
//textmacro instance: destroyFrame(".bonus_stat2")
	call BlzDestroyFrame(s__SkillShopWidget_bonus_stat2[this])
	set s__SkillShopWidget_bonus_stat2[this]=null
//end of: destroyFrame(".bonus_stat2")
			call TriggerRemoveCondition(s__SkillShopWidget_btn_trigger[this], s__SkillShopWidget_btn_cond[this])
			call s__Trigger_remove(s__SkillShopWidget_btn_trigger[this])
			set s__SkillShopWidget_btn_trigger[this]=null
			set s__SkillShopWidget_btn_cond[this]=null
  endfunction





//Implemented from module ThisUI:




  function s__SkillShop_carculatedTier takes integer this returns integer
   local integer r= 0
   local integer i= 0
   local integer current_chance= 0
			if s__SkillShop_level[this] >= 1 and s__SkillShop_level[this] <= CHANCE_LEVEL_MAX then
				set r=GetRandomInt(1, CHANCE_TOTAL[s__SkillShop_level[this]])
				
				set current_chance=current_chance + CHANCE_TIER1[s__SkillShop_level[this]]
				if r <= current_chance then
					return 1
				endif
				set current_chance=current_chance + CHANCE_TIER2[s__SkillShop_level[this]]
				if r <= current_chance then
					return 2
				endif
				set current_chance=current_chance + CHANCE_TIER3[s__SkillShop_level[this]]
				if r <= current_chance then
					return 3
				endif
				set current_chance=current_chance + CHANCE_TIER4[s__SkillShop_level[this]]
				if r <= current_chance then
					return 4
				endif
				set current_chance=current_chance + CHANCE_TIER5[s__SkillShop_level[this]]
				if r <= current_chance then
					return 5
				endif
			endif
			return 0
  endfunction

  function s__SkillShop_refreshChanceText takes integer this returns nothing
			
			call BlzFrameSetText(s__SkillShop_chance_text[this], TIER_STRING_COLOR[1] + I2S(R2I(sc__SkillShop_getTierChance(s__SkillShop_level[this] , 1) * 100 / CHANCE_TOTAL[s__SkillShop_level[this]])) + "%|r    " + TIER_STRING_COLOR[2] + I2S(R2I(sc__SkillShop_getTierChance(s__SkillShop_level[this] , 2) * 100 / CHANCE_TOTAL[s__SkillShop_level[this]])) + "%|r    " + TIER_STRING_COLOR[3] + I2S(R2I(sc__SkillShop_getTierChance(s__SkillShop_level[this] , 3) * 100 / CHANCE_TOTAL[s__SkillShop_level[this]])) + "%|r    " + TIER_STRING_COLOR[4] + I2S(R2I(sc__SkillShop_getTierChance(s__SkillShop_level[this] , 4) * 100 / CHANCE_TOTAL[s__SkillShop_level[this]])) + "%|r    " + TIER_STRING_COLOR[5] + I2S(R2I(sc__SkillShop_getTierChance(s__SkillShop_level[this] , 5) * 100 / CHANCE_TOTAL[s__SkillShop_level[this]])) + "%|r")
  endfunction

  function s__SkillShop_refreshLevelState takes integer this returns nothing
			if s__SkillShop_level[this] >= LEVEL_MAX then
				call BlzFrameSetVisible(s__SkillShop_exp_fill[this], true)
				call BlzFrameSetText(s__SkillShop_level_text[this], I2S(LEVEL_MAX))
				call BlzFrameSetText(s__SkillShop_exp_text[this], "MAX")
				call BlzFrameSetPoint((s__SkillShop_exp_fill[this] ), ( FRAMEPOINT_TOPRIGHT ), ( s__SkillShop_exp_backdrop[this] ), ( FRAMEPOINT_TOPRIGHT ), (( 0. )*1.0) / 1800., (( 0.)*1.0) / 1800.) // INLINED!!
			else
				call BlzFrameSetVisible(s__SkillShop_exp_fill[this], s__SkillShop_exp[this] > 0)
				call BlzFrameSetText(s__SkillShop_level_text[this], I2S(s__SkillShop_level[this]))
				call BlzFrameSetText(s__SkillShop_exp_text[this], I2S(s__SkillShop_exp[this]) + " / " + I2S(s__SkillShop_exp_max[this]))
				call BlzFrameSetPoint((s__SkillShop_exp_fill[this] ), ( FRAMEPOINT_TOPRIGHT ), ( s__SkillShop_exp_backdrop[this] ), ( FRAMEPOINT_TOPLEFT ), (( s__SkillShop_EXP_GAUGE_WIDTH * ( I2R(s__SkillShop_exp[this]) / I2R(s__SkillShop_exp_max[this]) ) )*1.0) / 1800., (( 0.)*1.0) / 1800.) // INLINED!!
			endif
  endfunction

  function s__SkillShop_setLevel takes integer this,integer nv returns nothing
			set s__SkillShop_level[this]=nv
			set s__SkillShop_exp_max[this]=SkillShop___MAX_EXP[s__SkillShop_level[this]]
			call BlzFrameSetVisible(s__SkillShop_btn_donate[this], s__SkillShop_level[this] > 1)
			call BlzFrameSetVisible(s__SkillShop_btn_refresh[this], s__SkillShop_level[this] > 1)
			call s__SkillShop_refreshChanceText(this)
  endfunction

  function s__SkillShop_addExp takes integer this,integer v returns nothing
			set s__SkillShop_exp[this]=s__SkillShop_exp[this] + v
			loop
				exitwhen s__SkillShop_exp[this] < s__SkillShop_exp_max[this] or s__SkillShop_level[this] == LEVEL_MAX
				if s__SkillShop_exp[this] >= s__SkillShop_exp_max[this] then
					set s__SkillShop_exp[this]=s__SkillShop_exp[this] - s__SkillShop_exp_max[this]
					call s__SkillShop_setLevel(this,s__SkillShop_level[this] + 1)
				endif
			endloop
			call s__SkillShop_refreshLevelState(this)
  endfunction

  function s__SkillShop_addLevel takes nothing returns nothing
   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				if s__SkillShop_THIS[i] > 0 then
					call s__SkillShop_addExp(s__SkillShop_THIS[i],2)
				endif
				set i=i + 1
			endloop
  endfunction

  function s__SkillShop_refreshGold takes integer this returns nothing
			call BlzFrameSetText(s__SkillShop_gold_text[this], "|cffffcc00" + I2S((GetPlayerState((s__SkillShop_owner[this]), PLAYER_STATE_RESOURCE_GOLD))) + "|r") // INLINED!!
  endfunction

  function s__SkillShop_visibleForPlayer takes integer this,boolean flag returns nothing
			set s__SkillShop_visible_flag[this]=flag
			if GetLocalPlayer() == s__SkillShop_owner[this] then
				call BlzFrameSetVisible(FRAME_SKILL_SHOP_BACKDROP, flag)
			endif
			if s__SkillShop_visible_flag[this] then
				call s__SkillShop_refreshChanceText(this)
			endif
  endfunction

  function s__SkillShop_close takes integer this returns boolean
			if s__SkillShop_visible_flag[this] then
				call s__SkillShop_visibleForPlayer(this,false)
				return true
			else
				return false
			endif
  endfunction

  function s__SkillShop_isWidgetEmpty takes integer this returns boolean
   local integer i= 0
   local integer sw= 0
			loop
				exitwhen i >= 5
				set sw=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SKILL_SHOP_WIDGET + i))) // INLINED!!
				if s__SkillShopWidget_id[sw] > 0 then
					return false
				endif
				set i=i + 1
			endloop
			return true
  endfunction

  function s__SkillShop_refreshAutoRefresh takes integer this returns nothing
   local string s= "|cffffcc00자동 새로고침|r|cffffffff :|r "
   local integer minitue= s__SkillShop_autorefresh_time[this] / 60
   local string second= ""
			if s__SkillShop_autorefresh_time[this] - 60 * minitue >= 10 then
				set second=I2S(s__SkillShop_autorefresh_time[this] - 60 * minitue)
			else
				set second="0" + I2S(s__SkillShop_autorefresh_time[this] - 60 * minitue)
			endif
			if s__SkillShop_autorefresh[this] then
				set s=s + "|cff00ff00활성화|r"
			else
				set s=s + "|cff999999비활성화|r"
			endif
			call BlzFrameSetText(BlzGetFrameByName("SkillShopAutoRefreshButtonText", this), s)
			call BlzFrameSetText(s__SkillShop_autorefresh_text[this], I2S(minitue) + ":" + second)
  endfunction

  function s__SkillShop_setAutoRefreshState takes integer this,boolean flag returns nothing
			set s__SkillShop_autorefresh[this]=flag
  endfunction

  function s__SkillShop_refresh takes integer this returns nothing
   local integer sw= 0
   local integer i= 0
			loop
				exitwhen i >= 5
				set sw=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SKILL_SHOP_WIDGET + i))) // INLINED!!
				call s__SkillShopWidget_setTarget(sw,sc__Ability_getRandomAbility(s__SkillShop_carculatedTier(this)))
				set i=i + 1
			endloop
			call s__SkillShop_refreshChanceText(this)
			call s__SkillShop_refreshLevelState(this)
  endfunction

  function s__SkillShop_press takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if BlzGetTriggerPlayerKey() == OSKEY_T then
				call s__SkillShop_visibleForPlayer(this,not s__SkillShop_visible_flag[this])
			elseif BlzGetTriggerFrame() != null then
				call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
				call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					
					if BlzGetTriggerFrame() == s__SkillShop_btn_refresh[this] then
						if (GetPlayerState((s__SkillShop_owner[this]), PLAYER_STATE_RESOURCE_GOLD)) >= 2 then // INLINED!!
							call s__SkillShop_refresh(this)
							set s__SkillShop_autorefresh[(this)]=(true) // INLINED!!
							call s__SkillShop_refreshAutoRefresh(this)
							call sc__User_addGold(s__SkillShop_owner[this] , - 2)
						
						else
							set ERROR_MESSAGE="금화가 부족합니다."
							set ERROR_MESSAGE_PLAYER=s__SkillShop_owner[this]
							call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
							if GetLocalPlayer() == s__SkillShop_owner[this] then
								call PlaySoundBJ(gg_snd_Error)
							endif
						endif
						return
					
					elseif BlzGetTriggerFrame() == s__SkillShop_btn_autorefresh[this] then
						set s__SkillShop_autorefresh[(this)]=(not s__SkillShop_autorefresh[this]) // INLINED!!
						call s__SkillShop_refreshAutoRefresh(this)
						return
					elseif BlzGetTriggerFrame() == s__SkillShop_btn_donate[this] then
						
						if (GetPlayerState((s__SkillShop_owner[this]), PLAYER_STATE_RESOURCE_GOLD)) >= 4 and s__SkillShop_level[this] < LEVEL_MAX then // INLINED!!
							call s__SkillShop_addExp(this,4)
							call sc__User_addGold(s__SkillShop_owner[this] , - 4)
						
						elseif (GetPlayerState((s__SkillShop_owner[this]), PLAYER_STATE_RESOURCE_GOLD)) < 4 then // INLINED!!
							set ERROR_MESSAGE="금화가 부족합니다."
							set ERROR_MESSAGE_PLAYER=s__SkillShop_owner[this]
							call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
							if GetLocalPlayer() == s__SkillShop_owner[this] then
								call PlaySoundBJ(gg_snd_Error)
							endif
						
						elseif s__SkillShop_level[this] >= LEVEL_MAX then
							set ERROR_MESSAGE="더 이상 기부할 수 없습니다."
							set ERROR_MESSAGE_PLAYER=s__SkillShop_owner[this]
							call TriggerEvaluate(ERROR_MESSAGE_TRIGGER)
							if GetLocalPlayer() == s__SkillShop_owner[this] then
								call PlaySoundBJ(gg_snd_Error)
							endif
						endif
						return
					endif
				endif
			else
				
				set s__SkillShop_autorefresh_time[this]=s__SkillShop_autorefresh_time[this] - 1
				if s__SkillShop_autorefresh_time[this] <= 0 then
					if s__SkillShop_autorefresh[this] or s__SkillShop_isWidgetEmpty(this) then
						call s__SkillShop_refresh(this)
						set s__SkillShop_autorefresh[(this)]=(true) // INLINED!!
					endif
					set s__SkillShop_autorefresh_time[this]=s__SkillShop_autorefresh_time_max[this]
				endif
				call s__SkillShop_refreshAutoRefresh(this)
			endif
  endfunction

  function s__SkillShop_create takes player p returns integer
   local integer this= s__SkillShop__allocate()
   local integer i= 0
			set s__SkillShop_owner[this]=p
			set s__SkillShop_container[this]=BlzCreateFrameByType("FRAME", "", FRAME_SKILL_SHOP_BACKDROP, "", 0)
			call BlzFrameSetPoint(s__SkillShop_container[this], FRAMEPOINT_TOPLEFT, FRAME_SKILL_SHOP, FRAMEPOINT_TOPLEFT, 0., 0.)
			
			loop
				exitwhen i >= 5
				call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SKILL_SHOP_WIDGET + i ), ( s__SkillShopWidget_create(s__SkillShop_container[this] , i))) // INLINED!!
				set i=i + 1
			endloop
			
			set s__SkillShop_btn_autorefresh[this]=BlzCreateFrame("SkillShopAutoRefreshButton", s__SkillShop_container[this], 0, this)
			call BlzFrameSetPoint(s__SkillShop_btn_autorefresh[this], FRAMEPOINT_TOPRIGHT, FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
			call BlzFrameSetSize((s__SkillShop_btn_autorefresh[this] ), (( 240 )*1.0) / 1800., (( 56)*1.0) / 1800.) // INLINED!!
			call BlzFrameClearAllPoints(BlzGetFrameByName("SkillShopAutoRefreshButtonText", this))
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopAutoRefreshButtonText", this), FRAMEPOINT_CENTER, s__SkillShop_btn_autorefresh[this], FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetTextAlignment(BlzGetFrameByName("SkillShopAutoRefreshButtonText", this), TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call s__SkillShop_refreshAutoRefresh(this)
			set s__SkillShop_autorefresh_text_backdrop[this]=BlzCreateFrame("MyTextBox", s__SkillShop_btn_autorefresh[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_autorefresh_text_backdrop[this], FRAMEPOINT_BOTTOM, s__SkillShop_btn_autorefresh[this], FRAMEPOINT_TOP, 0., - 0.0025)
			call BlzFrameSetSize(s__SkillShop_autorefresh_text_backdrop[this], 0.045, 0.015)
			set s__SkillShop_autorefresh_text[this]=BlzCreateFrame("MyText", s__SkillShop_autorefresh_text_backdrop[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_autorefresh_text[this], FRAMEPOINT_CENTER, s__SkillShop_autorefresh_text_backdrop[this], FRAMEPOINT_CENTER, 0, 0)
			call BlzFrameSetTextAlignment(s__SkillShop_autorefresh_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			
			set s__SkillShop_btn_refresh[this]=BlzCreateFrame("SkillShopRefreshButton", s__SkillShop_container[this], 0, this)
			call BlzFrameSetPoint(s__SkillShop_btn_refresh[this], FRAMEPOINT_TOPRIGHT, s__SkillShop_btn_autorefresh[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize((s__SkillShop_btn_refresh[this] ), (( 240 )*1.0) / 1800., (( 56)*1.0) / 1800.) // INLINED!!
			call BlzFrameClearAllPoints(BlzGetFrameByName("SkillShopRefreshButtonText", this))
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopRefreshButtonText", this), FRAMEPOINT_CENTER, s__SkillShop_btn_refresh[this], FRAMEPOINT_CENTER, (((12)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTextAlignment(BlzGetFrameByName("SkillShopRefreshButtonText", this), TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(BlzGetFrameByName("SkillShopRefreshButtonText", this), "|cffffcc002|r |cffffffff: 즉시 새로고침|r")
			call BlzFrameSetTexture(BlzGetFrameByName("SkillShopRefreshButtonIcon", this), "ui\\widgets\\tooltips\\human\\tooltipgoldicon.blp", 0, true)
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopRefreshButtonIcon", this), FRAMEPOINT_RIGHT, BlzGetFrameByName("SkillShopRefreshButtonText", this), FRAMEPOINT_LEFT, - 0.005, 0.)
			call BlzFrameSetSize(BlzGetFrameByName("SkillShopRefreshButtonIcon", this), (((24)*1.0) / 1800.), (((24)*1.0) / 1800.)) // INLINED!!
			
			set s__SkillShop_btn_donate[this]=BlzCreateFrame("SkillShopDonateButton", s__SkillShop_container[this], 0, this)
			call BlzFrameSetPoint(s__SkillShop_btn_donate[this], FRAMEPOINT_TOPLEFT, FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize((s__SkillShop_btn_donate[this] ), (( 256 )*1.0) / 1800., (( 56)*1.0) / 1800.) // INLINED!!
			call BlzFrameClearAllPoints(BlzGetFrameByName("SkillShopDonateButtonText", this))
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopDonateButtonText", this), FRAMEPOINT_CENTER, s__SkillShop_btn_donate[this], FRAMEPOINT_CENTER, (((12)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetTextAlignment(BlzGetFrameByName("SkillShopDonateButtonText", this), TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(BlzGetFrameByName("SkillShopDonateButtonText", this), "|cffffcc004|r |cffffffff: 기부하기 (품질 상승)|r")
			call BlzFrameSetTexture(BlzGetFrameByName("SkillShopDonateButtonIcon", this), "ui\\widgets\\tooltips\\human\\tooltipgoldicon.blp", 0, true)
			call BlzFrameSetPoint(BlzGetFrameByName("SkillShopDonateButtonIcon", this), FRAMEPOINT_RIGHT, BlzGetFrameByName("SkillShopDonateButtonText", this), FRAMEPOINT_LEFT, - 0.005, 0.)
			call BlzFrameSetSize(BlzGetFrameByName("SkillShopDonateButtonIcon", this), (((24)*1.0) / 1800.), (((24)*1.0) / 1800.)) // INLINED!!
			
			set s__SkillShop_exp_outline[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_btn_donate[this], "", 0)
			call BlzFrameSetTexture(s__SkillShop_exp_outline[this], "replaceabletextures\\teamcolor\\teamcolor16.blp", 0, true)
			set s__SkillShop_exp_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_btn_donate[this], "", 0)
			call BlzFrameSetPoint((s__SkillShop_exp_backdrop[this] ), ( FRAMEPOINT_BOTTOMLEFT ), ( s__SkillShop_btn_donate[this] ), ( FRAMEPOINT_TOPLEFT ), (( 2 + 32 )*1.0) / 1800., (( 2)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__SkillShop_exp_backdrop[this] ), (( s__SkillShop_EXP_GAUGE_WIDTH )*1.0) / 1800., (( 16 - 4)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__SkillShop_exp_backdrop[this], "replaceabletextures\\teamcolor\\teamcolor26.blp", 0, true)
			call BlzFrameSetAlpha(s__SkillShop_exp_backdrop[this], 200)
			set s__SkillShop_exp_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_btn_donate[this], "", 0)
			call BlzFrameSetPoint(s__SkillShop_exp_fill[this], FRAMEPOINT_BOTTOMLEFT, s__SkillShop_exp_backdrop[this], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__SkillShop_exp_fill[this], "replaceabletextures\\teamcolor\\teamcolor23.blp", 0, true)
			call BlzFrameSetVisible(s__SkillShop_exp_fill[this], false)
			set s__SkillShop_exp_text[this]=BlzCreateFrame("MyText", s__SkillShop_btn_donate[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_exp_text[this], FRAMEPOINT_CENTER, s__SkillShop_exp_backdrop[this], FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetPoint((s__SkillShop_exp_outline[this] ), ( FRAMEPOINT_TOPLEFT ), ( s__SkillShop_exp_backdrop[this] ), ( FRAMEPOINT_TOPLEFT ), (( - 2 )*1.0) / 1800., (( 2)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetPoint((s__SkillShop_exp_outline[this] ), ( FRAMEPOINT_BOTTOMRIGHT ), ( s__SkillShop_exp_backdrop[this] ), ( FRAMEPOINT_BOTTOMRIGHT ), (( 2 )*1.0) / 1800., (( - 2)*1.0) / 1800.) // INLINED!!
			set s__SkillShop_level_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_btn_donate[this], "", 0)
			call BlzFrameSetSize((s__SkillShop_level_backdrop[this] ), (( 32 )*1.0) / 1800., (( 32)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetPoint(s__SkillShop_level_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, s__SkillShop_exp_outline[this], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__SkillShop_level_backdrop[this], "ui\\console\\human\\human-transport-slot.blp", 0, true)
			set s__SkillShop_level_text[this]=BlzCreateFrame("MyText", s__SkillShop_btn_donate[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_level_text[this], FRAMEPOINT_CENTER, s__SkillShop_level_backdrop[this], FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetTextAlignment(s__SkillShop_level_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			
			set s__SkillShop_gold_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_container[this], "", 0)
			call BlzFrameSetTexture(s__SkillShop_gold_backdrop[this], "Textures\\black32.blp", 0, true)
			call BlzFrameSetAlpha(s__SkillShop_gold_backdrop[this], 128)
			set s__SkillShop_gold_text[this]=BlzCreateFrame("MyTextLarge", s__SkillShop_container[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_gold_text[this], FRAMEPOINT_TOP, FRAME_SKILL_SHOP_BACKDROP, FRAMEPOINT_BOTTOM, 0.0025 + (((16)*1.0) / 1800.), - 0.005) // INLINED!!
			call BlzFrameSetTextAlignment(s__SkillShop_gold_text[this], TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(s__SkillShop_gold_text[this], "|cffffcc00" + I2S((GetPlayerState((s__SkillShop_owner[this]), PLAYER_STATE_RESOURCE_GOLD))) + "|r") // INLINED!!
			set s__SkillShop_gold_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__SkillShop_container[this], "", 0)
			call BlzFrameSetTexture(s__SkillShop_gold_icon[this], "ui\\widgets\\tooltips\\human\\tooltipgoldicon.blp", 0, true)
			call BlzFrameSetPoint(s__SkillShop_gold_icon[this], FRAMEPOINT_RIGHT, s__SkillShop_gold_text[this], FRAMEPOINT_LEFT, - 0.005, 0.)
			call BlzFrameSetSize(s__SkillShop_gold_icon[this], (((32)*1.0) / 1800.), (((32)*1.0) / 1800.)) // INLINED!!
			
			call BlzFrameSetPoint(s__SkillShop_gold_backdrop[this], FRAMEPOINT_TOPRIGHT, s__SkillShop_gold_text[this], FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			call BlzFrameSetPoint(s__SkillShop_gold_backdrop[this], FRAMEPOINT_BOTTOMLEFT, s__SkillShop_gold_text[this], FRAMEPOINT_BOTTOMLEFT, - 0.005 - 0.005 - (((32)*1.0) / 1800.), - 0.005) // INLINED!!
			
			set s__SkillShop_chance_backdrop[this]=BlzCreateFrame("MyTextBox", s__SkillShop_btn_donate[this], 0, 0)
			set s__SkillShop_chance_text[this]=BlzCreateFrame("MyTextSmall", s__SkillShop_btn_donate[this], 0, 0)
			call BlzFrameSetPoint(s__SkillShop_chance_text[this], FRAMEPOINT_LEFT, s__SkillShop_btn_donate[this], FRAMEPOINT_RIGHT, 0.005 + (((16)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetPoint(s__SkillShop_chance_backdrop[this], FRAMEPOINT_TOPLEFT, s__SkillShop_chance_text[this], FRAMEPOINT_TOPLEFT, - 0.005, 0.005)
			call BlzFrameSetPoint(s__SkillShop_chance_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, s__SkillShop_chance_text[this], FRAMEPOINT_BOTTOMRIGHT, 0.005, - 0.005)
			
			call BlzFrameSetVisible(s__SkillShop_container[this], GetLocalPlayer() == s__SkillShop_owner[this])
			
			set s__SkillShop_keypress[this]=s__Trigger_new(this)
			call BlzTriggerRegisterPlayerKeyEvent(s__SkillShop_keypress[this], s__SkillShop_owner[this], OSKEY_T, 0, true)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_refresh[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_refresh[this], FRAMEEVENT_MOUSE_LEAVE)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_autorefresh[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_autorefresh[this], FRAMEEVENT_MOUSE_LEAVE)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_donate[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__SkillShop_keypress[this], s__SkillShop_btn_donate[this], FRAMEEVENT_MOUSE_LEAVE)
			call TriggerRegisterTimerEvent(s__SkillShop_keypress[this], 1.0, true)
			set s__SkillShop_keypress_cond[this]=TriggerAddCondition(s__SkillShop_keypress[this], Condition(function s__SkillShop_press))
			
			call s__SkillShop_setLevel(this,1)
			call s__SkillShop_refresh(this)
			call s__SkillShop_refreshGold(this)
			
			set s__SkillShop_THIS[GetPlayerId(p)]=this
			return this
  endfunction

  function s__SkillShop_onDestroy takes integer this returns nothing
   local integer i= 0
   local integer ia= 0
			loop
				exitwhen i >= 5
				set ia=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SKILL_SHOP_WIDGET + i))) // INLINED!!
				call sc__IconFrame_deallocate(ia)
				set i=i + 1
			endloop
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__SkillShop_container[this])
	set s__SkillShop_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".btn_autorefresh")
	call BlzDestroyFrame(s__SkillShop_btn_autorefresh[this])
	set s__SkillShop_btn_autorefresh[this]=null
//end of: destroyFrame(".btn_autorefresh")
//textmacro instance: destroyFrame(".btn_refresh")
	call BlzDestroyFrame(s__SkillShop_btn_refresh[this])
	set s__SkillShop_btn_refresh[this]=null
//end of: destroyFrame(".btn_refresh")
//textmacro instance: destroyFrame(".btn_donate")
	call BlzDestroyFrame(s__SkillShop_btn_donate[this])
	set s__SkillShop_btn_donate[this]=null
//end of: destroyFrame(".btn_donate")
//textmacro instance: destroyFrame(".exp_outline")
	call BlzDestroyFrame(s__SkillShop_exp_outline[this])
	set s__SkillShop_exp_outline[this]=null
//end of: destroyFrame(".exp_outline")
//textmacro instance: destroyFrame(".exp_backdrop")
	call BlzDestroyFrame(s__SkillShop_exp_backdrop[this])
	set s__SkillShop_exp_backdrop[this]=null
//end of: destroyFrame(".exp_backdrop")
//textmacro instance: destroyFrame(".exp_fill")
	call BlzDestroyFrame(s__SkillShop_exp_fill[this])
	set s__SkillShop_exp_fill[this]=null
//end of: destroyFrame(".exp_fill")
//textmacro instance: destroyFrame(".exp_text")
	call BlzDestroyFrame(s__SkillShop_exp_text[this])
	set s__SkillShop_exp_text[this]=null
//end of: destroyFrame(".exp_text")
//textmacro instance: destroyFrame(".level_backdrop")
	call BlzDestroyFrame(s__SkillShop_level_backdrop[this])
	set s__SkillShop_level_backdrop[this]=null
//end of: destroyFrame(".level_backdrop")
//textmacro instance: destroyFrame(".level_text")
	call BlzDestroyFrame(s__SkillShop_level_text[this])
	set s__SkillShop_level_text[this]=null
//end of: destroyFrame(".level_text")
//textmacro instance: destroyFrame(".autorefresh_text_backdrop")
	call BlzDestroyFrame(s__SkillShop_autorefresh_text_backdrop[this])
	set s__SkillShop_autorefresh_text_backdrop[this]=null
//end of: destroyFrame(".autorefresh_text_backdrop")
//textmacro instance: destroyFrame(".autorefresh_text")
	call BlzDestroyFrame(s__SkillShop_autorefresh_text[this])
	set s__SkillShop_autorefresh_text[this]=null
//end of: destroyFrame(".autorefresh_text")
//textmacro instance: destroyFrame(".gold_backdrop")
	call BlzDestroyFrame(s__SkillShop_gold_backdrop[this])
	set s__SkillShop_gold_backdrop[this]=null
//end of: destroyFrame(".gold_backdrop")
//textmacro instance: destroyFrame(".gold_icon")
	call BlzDestroyFrame(s__SkillShop_gold_icon[this])
	set s__SkillShop_gold_icon[this]=null
//end of: destroyFrame(".gold_icon")
//textmacro instance: destroyFrame(".gold_text")
	call BlzDestroyFrame(s__SkillShop_gold_text[this])
	set s__SkillShop_gold_text[this]=null
//end of: destroyFrame(".gold_text")
//textmacro instance: destroyFrame(".chance_backdrop")
	call BlzDestroyFrame(s__SkillShop_chance_backdrop[this])
	set s__SkillShop_chance_backdrop[this]=null
//end of: destroyFrame(".chance_backdrop")
//textmacro instance: destroyFrame(".chance_text")
	call BlzDestroyFrame(s__SkillShop_chance_text[this])
	set s__SkillShop_chance_text[this]=null
//end of: destroyFrame(".chance_text")
			
			call TriggerRemoveCondition(s__SkillShop_keypress[this], s__SkillShop_keypress_cond[this])
			call s__Trigger_remove(s__SkillShop_keypress[this])
			
			set s__SkillShop_keypress[this]=null
			set s__SkillShop_keypress_cond[this]=null
			set s__SkillShop_owner[this]=null
  endfunction

  function s__SkillShop_staticRefreshGold takes nothing returns nothing
   local integer this= s__SkillShop_THIS[GetPlayerId(GOLD_REFRESH_PLAYER)]
			if this > 0 then
				call s__SkillShop_refreshGold(this)
			endif
  endfunction

  function s__SkillShop_getTierChance takes integer level,integer tier returns integer
   local integer i= level
			if i > CHANCE_LEVEL_MAX then
				set i=CHANCE_LEVEL_MAX
			endif
			if tier == 1 then
				return CHANCE_TIER1[i]
			elseif tier == 2 then
				return CHANCE_TIER2[i]
			elseif tier == 3 then
				return CHANCE_TIER3[i]
			elseif tier == 4 then
				return CHANCE_TIER4[i]
			elseif tier == 5 then
				return CHANCE_TIER5[i]
			endif
			return 0
  endfunction

  function s__SkillShop_initTierChance takes integer level,integer t1,integer t2,integer t3,integer t4,integer t5 returns nothing
			if level < 0 then
				return
			endif
			
			set CHANCE_TIER1[level]=t1
			set CHANCE_TIER2[level]=t2
			set CHANCE_TIER3[level]=t3
			set CHANCE_TIER4[level]=t4
			set CHANCE_TIER5[level]=t5
  endfunction

  function s__SkillShop_onInit takes nothing returns nothing
   local integer i= 1
			call TriggerAddCondition(GOLD_REFRESH_TRIGGER, Condition(function s__SkillShop_staticRefreshGold))
			
			call s__SkillShop_initTierChance(1 , 80 , 20 , 0 , 0 , 0)
			call s__SkillShop_initTierChance(2 , 75 , 25 , 0 , 0 , 0)
			call s__SkillShop_initTierChance(3 , 70 , 25 , 5 , 0 , 0)
			call s__SkillShop_initTierChance(4 , 60 , 30 , 10 , 0 , 0)
			call s__SkillShop_initTierChance(5 , 55 , 30 , 10 , 5 , 0)
			call s__SkillShop_initTierChance(6 , 54 , 25 , 15 , 5 , 1)
			call s__SkillShop_initTierChance(7 , 43 , 25 , 20 , 7 , 5)
			call s__SkillShop_initTierChance(8 , 40 , 25 , 20 , 10 , 5)
			call s__SkillShop_initTierChance(9 , 40 , 25 , 20 , 10 , 5)
			call s__SkillShop_initTierChance(10 , 30 , 20 , 25 , 15 , 10)
			call s__SkillShop_initTierChance(11 , 20 , 20 , 25 , 20 , 15)
			
			loop
				
				exitwhen i > CHANCE_LEVEL_MAX
				set CHANCE_TOTAL[i]=CHANCE_TIER1[i] + CHANCE_TIER2[i] + CHANCE_TIER3[i] + CHANCE_TIER4[i] + CHANCE_TIER5[i]
				set i=i + 1
			endloop
			
			set SkillShop___MAX_EXP[1]=2
			set SkillShop___MAX_EXP[2]=6
			set SkillShop___MAX_EXP[3]=10
			set SkillShop___MAX_EXP[4]=20
			set SkillShop___MAX_EXP[5]=36
			set SkillShop___MAX_EXP[6]=56
			set SkillShop___MAX_EXP[7]=80
			set SkillShop___MAX_EXP[8]=112
			set SkillShop___MAX_EXP[9]=144
			set SkillShop___MAX_EXP[10]=176
			set SkillShop___MAX_EXP[11]=210
  endfunction



//library SkillShop ends
//library SlotChanger:


//Implemented from module ThisUI:







  function s__SlotChanger_refresh takes integer this returns nothing
   local integer i= 0
   local framehandle f= null
   local integer a= 0
			
			set i=0
			loop
				exitwhen i >= 10
				
				set a=s__Unit_prototype_getAbility((s__User_FOCUSUNIT[GetPlayerId((s__SlotChanger_owner[this]))]),(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + i)))) // INLINED!!
				
				set f=LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i)
				if (s__User_FOCUSUNIT[GetPlayerId((s__SlotChanger_owner[this]))]) <= 0 or a <= 0 then // INLINED!!
					call BlzFrameSetTexture(f, "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				else
					call BlzFrameSetTexture(f, "ReplaceableTextures\\CommandButtons\\" + (LoadStr(Ability__HASH, (s__Ability_prototype_id[a]), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				endif
				
				set f=LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i)
				
				if s__SlotChanger_state[this] == 0 or s__SlotChanger_state[this] == 2 then
					
					if (s__User_FOCUSUNIT[GetPlayerId((s__SlotChanger_owner[this]))]) <= 0 or a <= 0 then // INLINED!!
						call BlzFrameSetVisible(f, false)
					
					else
						call BlzFrameSetVisible(f, true)
						if s__SlotChanger_state[this] == 0 then
							call BlzFrameSetText(BlzGetFrameByName("SlotChangerButtonText", this * 10 + i), "|cffffcc00" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
						elseif s__SlotChanger_state[this] == 2 then
							call BlzFrameSetText(BlzGetFrameByName("SlotChangerButtonText", this * 10 + i), "|cff00ccff" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
						endif
					endif
				
				else
					if (s__User_FOCUSUNIT[GetPlayerId((s__SlotChanger_owner[this]))]) <= 0 then // INLINED!!
						call BlzFrameSetVisible(f, false)
					
					else
						call BlzFrameSetVisible(f, true)
						if i == s__SlotChanger_first_index[this] then
							call BlzFrameSetText(BlzGetFrameByName("SlotChangerButtonText", this * 10 + i), "|cffffff00" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
						else
							call BlzFrameSetText(BlzGetFrameByName("SlotChangerButtonText", this * 10 + i), "|cff00cc00" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
						endif
					endif
				endif
				set i=i + 1
			endloop
			
			if s__SlotChanger_state[this] == 0 or s__SlotChanger_state[this] == 1 then
				set f=BlzGetFrameByName("SlotChangerConfirmButtonText", this)
				call BlzFrameSetText(f, "|cff999999적용|r")
				call BlzFrameSetEnable(s__SlotChanger_confirm_button[this], false)
			elseif s__SlotChanger_state[this] == 2 then
				set f=BlzGetFrameByName("SlotChangerConfirmButtonText", this)
				call BlzFrameSetText(f, "|cff00ccff적용|r")
				call BlzFrameSetEnable(s__SlotChanger_confirm_button[this], true)
			endif
			set f=null
  endfunction

  function s__SlotChanger_stateEdited takes integer this,integer target_index returns nothing
   local integer i= (LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + s__SlotChanger_first_index[this]))) // INLINED!!
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + s__SlotChanger_first_index[this] ), ( (LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + target_index))))) // INLINED!!
			call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + target_index ), ( i)) // INLINED!!
			set s__SlotChanger_state[this]=2
			call s__SlotChanger_refresh(this)
  endfunction

  function s__SlotChanger_stateSelectFirst takes integer this,integer first_index returns nothing
			set s__SlotChanger_first_index[this]=first_index
			set s__SlotChanger_state[this]=1
			call s__SlotChanger_refresh(this)
  endfunction

  function s__SlotChanger_stateDefault takes integer this returns nothing
   local integer i= 0
			set s__SlotChanger_state[this]=0
			set s__SlotChanger_first_index[this]=- 1
			loop
				exitwhen i >= 10
				call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + i ), ( i)) // INLINED!!
				set i=i + 1
			endloop
			call s__SlotChanger_refresh(this)
  endfunction

  function s__SlotChanger_confirm takes integer this returns nothing
   local integer i= 0
   local integer u= (s__User_FOCUSUNIT[GetPlayerId((s__SlotChanger_owner[this]))]) // INLINED!!
			loop
				exitwhen i >= 10
				set s__s__SlotChanger_ABILITY_TEMP[i]= s__Unit_prototype_getAbility(u,(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + i)))) // INLINED!!
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= 10
				call SaveInteger(s__Agent_HASH, (u), INDEX_ABILITY + (i ), ( s__s__SlotChanger_ABILITY_TEMP[i])) // INLINED!!
				set i=i + 1
			endloop
			call s__UI_refreshAbilityIconsTarget(s__UI_THIS[GetPlayerId(s__SlotChanger_owner[this])])
			call s__SlotChanger_stateDefault(this)
  endfunction

  function s__SlotChanger_visibleForPlayer takes integer this,boolean flag returns nothing
			if not s__SlotChanger_visible_flag[this] and flag then
				call s__SlotChanger_stateDefault(this)
			endif
			if GetLocalPlayer() == s__SlotChanger_owner[this] then
				call BlzFrameSetVisible(FRAME_SLOT_CHANGER, flag)
			endif
			set s__SlotChanger_visible_flag[this]=flag
  endfunction

  function s__SlotChanger_close takes integer this returns boolean
			if s__SlotChanger_visible_flag[this] then
				call s__SlotChanger_visibleForPlayer(this,false)
				return true
			else
				return false
			endif
  endfunction

  function s__SlotChanger_act takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
   local integer i= 0
			
			if BlzGetTriggerPlayerKey() == OSKEY_G then
				call s__SlotChanger_visibleForPlayer(this,not s__SlotChanger_visible_flag[this])
				return
			endif
			if BlzGetTriggerFrame() != null then
				if BlzFrameGetEnable(BlzGetTriggerFrame()) then
					call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
					call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
				endif
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					if BlzGetTriggerFrame() == s__SlotChanger_confirm_button[this] then
						call s__SlotChanger_confirm(this)
						return
					endif
					loop
						exitwhen i >= 10
						if BlzGetTriggerFrame() == LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i) then
							if s__SlotChanger_state[this] == 0 or s__SlotChanger_state[this] == 2 then
								call s__SlotChanger_stateSelectFirst(this,i)
								return
							elseif s__SlotChanger_state[this] == 1 then
								
								call s__SlotChanger_stateEdited(this,i)
								return
							endif
							return
						endif
						set i=i + 1
					endloop
				endif
				return
			endif
  endfunction

  function s__SlotChanger_create takes player p returns integer
   local integer this= s__SlotChanger__allocate()
   local integer i= 0
   local framehandle f= null
			set s__SlotChanger_owner[this]=p
			set s__SlotChanger_keypress[this]=s__Trigger_new(this)
			set s__SlotChanger_keypress_cond[this]=TriggerAddCondition(s__SlotChanger_keypress[this], Condition(function s__SlotChanger_act))
			call BlzTriggerRegisterPlayerKeyEvent(s__SlotChanger_keypress[this], s__SlotChanger_owner[this], OSKEY_G, 0, true)
			
			set s__SlotChanger_container[this]=BlzCreateFrameByType("FRAME", "", FRAME_SLOT_CHANGER, "", 0)
			call BlzFrameSetPoint(s__SlotChanger_container[this], FRAMEPOINT_TOPLEFT, FRAME_SLOT_CHANGER, FRAMEPOINT_TOPLEFT, 0., 0.)
			
			loop
				exitwhen i >= 10
				call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + i ), ( i)) // INLINED!!
				
				set f=BlzCreateFrameByType("BACKDROP", "", s__SlotChanger_container[this], "", 0)
				call BlzFrameSetPoint(f, FRAMEPOINT_TOPLEFT, FRAME_SLOT_CHANGER, FRAMEPOINT_TOPLEFT, (((16 + ( 16 + 48 ) * i)*1.0) / 1800.), (((- 16)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
				call SaveFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i, f)
				
				set f=BlzCreateFrame("MyText", s__SlotChanger_container[this], 0, 0)
				call BlzFrameSetPoint(f, FRAMEPOINT_TOP, LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i), FRAMEPOINT_BOTTOM, 0., - (((16)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
				call BlzFrameSetText(f, "|cff999999" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
				call SaveFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_HOTKEY + i, f)
				
				set f=BlzCreateFrame("SlotChangerButton", s__SlotChanger_container[this], 0, this * 10 + i)
				call BlzFrameSetPoint(f, FRAMEPOINT_TOP, LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i), FRAMEPOINT_BOTTOM, 0., - (((16)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
				call BlzTriggerRegisterFrameEvent(s__SlotChanger_keypress[this], f, FRAMEEVENT_CONTROL_CLICK)
				call BlzTriggerRegisterFrameEvent(s__SlotChanger_keypress[this], f, FRAMEEVENT_MOUSE_LEAVE)
				call SaveFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i, f)
				set f=BlzGetFrameByName("SlotChangerButtonText", this * 10 + i)
				call BlzFrameSetText(f, "|cffffcc00" + s__User_OSKEY_INDEX_TO_STRING[i] + "|r")
				call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i), FRAMEPOINT_CENTER, 0., 0.)
				call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
				set i=i + 1
			endloop
			
			set s__SlotChanger_confirm_button[this]=BlzCreateFrame("SlotChangerConfirmButton", s__SlotChanger_container[this], 0, this)
			call BlzFrameSetPoint(s__SlotChanger_confirm_button[this], FRAMEPOINT_BOTTOM, FRAME_SLOT_CHANGER, FRAMEPOINT_BOTTOM, 0, (((16)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(s__SlotChanger_confirm_button[this], (((192)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
			call BlzTriggerRegisterFrameEvent(s__SlotChanger_keypress[this], s__SlotChanger_confirm_button[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__SlotChanger_keypress[this], s__SlotChanger_confirm_button[this], FRAMEEVENT_MOUSE_LEAVE)
			set f=BlzGetFrameByName("SlotChangerConfirmButtonText", this)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, s__SlotChanger_confirm_button[this], FRAMEPOINT_CENTER, 0, 0)
			call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			call BlzFrameSetText(f, "|cff999999적용|r")
			call BlzFrameSetEnable(s__SlotChanger_confirm_button[this], false)
			
			call BlzFrameSetVisible(s__SlotChanger_container[this], GetLocalPlayer() == s__SlotChanger_owner[this])
			
			set s__SlotChanger_THIS[GetPlayerId(p)]=this
			set f=null
			return this
  endfunction

  function s__SlotChanger_onDestroy takes integer this returns nothing
   local integer i= 0
			loop
				exitwhen i >= 10
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i))
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i))
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_HOTKEY + i))
				set i=i + 1
			endloop
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__SlotChanger_container[this])
	set s__SlotChanger_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".confirm_button")
	call BlzDestroyFrame(s__SlotChanger_confirm_button[this])
	set s__SlotChanger_confirm_button[this]=null
//end of: destroyFrame(".confirm_button")
			call TriggerRemoveCondition(s__SlotChanger_keypress[this], s__SlotChanger_keypress_cond[this])
			call s__Trigger_remove(s__SlotChanger_keypress[this])
			set s__SlotChanger_keypress[this]=null
			set s__SlotChanger_keypress_cond[this]=null
			set s__SlotChanger_owner[this]=null
  endfunction

//Generated destructor of SlotChanger
function s__SlotChanger_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SlotChanger_V[this]!=-1) then
        return
    endif
    call s__SlotChanger_onDestroy(this)
    set si__SlotChanger_V[this]=si__SlotChanger_F
    set si__SlotChanger_F=this
endfunction



//library SlotChanger ends
//library Sound:


  function s__Sound3D_createInstant takes string path,real x,real y,real z returns nothing
   local sound ns= CreateSound(path, false, true, true, 12700, 12700, "")
			//call SetSoundChannel(ns,11)
			call SetSoundPosition(ns, x, y, z)
			//call KillSoundWhenDone(ns)
			call StartSound(ns)
			call BJDebugMsg("하으읏")
			set ns=null
  endfunction

  function s__Sound3D_test takes nothing returns nothing
			call s__Sound3D_createInstant("abilities\\weapons\\ancientprotectormissile\\ancientprotectormissilehit1.flac" , 0. , 0. , 0.)
  endfunction

  function s__Sound3D_onInit takes nothing returns nothing
   local trigger t= CreateTrigger()
			call TriggerRegisterPlayerChatEvent(t, Player(0), "d", true)
			call TriggerAddAction(t, function s__Sound3D_test)
  endfunction



//library Sound ends
//library TextTag:




  function s__InstantText_clearFlag takes nothing returns nothing
			set s__InstantText_SIZE=16.
			set s__InstantText_R=255
			set s__InstantText_G=255
			set s__InstantText_B=255
  endfunction

  function s__InstantText_setColor takes integer r,integer g,integer b returns nothing
			set s__InstantText_R=r
			set s__InstantText_G=g
			set s__InstantText_B=b
  endfunction

  function s__InstantText_createForPlayer takes real x,real y,real z,string val,player forplayer returns nothing
			set bj_lastCreatedTextTag=CreateTextTag()
			call SetTextTagText(bj_lastCreatedTextTag, val, TextTagSize2Height(s__InstantText_SIZE))
			call SetTextTagPos(bj_lastCreatedTextTag, x - ( StringLength(val) * s__InstantText_SIZE ), y, z)
			call SetTextTagColor(bj_lastCreatedTextTag, s__InstantText_R, s__InstantText_G, s__InstantText_B, 255)
			call SetTextTagPermanent(bj_lastCreatedTextTag, false)
			call SetTextTagVelocity(bj_lastCreatedTextTag, 0, 0.04)
			call SetTextTagFadepoint(bj_lastCreatedTextTag, 0)
			call SetTextTagLifespan(bj_lastCreatedTextTag, 1.5)
			call SetTextTagVisibility(bj_lastCreatedTextTag, GetLocalPlayer() == forplayer)
			call s__InstantText_clearFlag()
  endfunction

  function s__InstantText_createForBothPlayer takes real x,real y,real z,string val,player forplayer,player forplayer2 returns nothing
			set bj_lastCreatedTextTag=CreateTextTag()
			call SetTextTagText(bj_lastCreatedTextTag, val, TextTagSize2Height(s__InstantText_SIZE))
			call SetTextTagPos(bj_lastCreatedTextTag, x - ( StringLength(val) * s__InstantText_SIZE ), y, z)
			call SetTextTagColor(bj_lastCreatedTextTag, s__InstantText_R, s__InstantText_G, s__InstantText_B, 255)
			call SetTextTagPermanent(bj_lastCreatedTextTag, false)
			call SetTextTagVelocity(bj_lastCreatedTextTag, 0, 0.04)
			call SetTextTagFadepoint(bj_lastCreatedTextTag, 0)
			call SetTextTagLifespan(bj_lastCreatedTextTag, 1.5)
			call SetTextTagVisibility(bj_lastCreatedTextTag, GetLocalPlayer() == forplayer or GetLocalPlayer() == forplayer2)
			call s__InstantText_clearFlag()
  endfunction

  function s__InstantText_create takes real x,real y,real z,string val returns integer
			set bj_lastCreatedTextTag=CreateTextTag()
			call SetTextTagText(bj_lastCreatedTextTag, val, TextTagSize2Height(s__InstantText_SIZE))
			call SetTextTagPos(bj_lastCreatedTextTag, x - ( StringLength(val) * s__InstantText_SIZE ), y, z)
			call SetTextTagColor(bj_lastCreatedTextTag, s__InstantText_R, s__InstantText_G, s__InstantText_B, 255)
			call SetTextTagPermanent(bj_lastCreatedTextTag, false)
			call SetTextTagVelocity(bj_lastCreatedTextTag, 0, 0.04)
			call SetTextTagFadepoint(bj_lastCreatedTextTag, 0)
			call SetTextTagLifespan(bj_lastCreatedTextTag, 1.5)
			call SetTextTagVisibility(bj_lastCreatedTextTag, true)
			call s__InstantText_clearFlag()
			return 0
  endfunction
	
	

//library TextTag ends
//library Timer:

	
	
  function s__Timer_getExpiredData takes nothing returns integer
			return (sg__TimerUtils__Data_get(GetHandleId((GetExpiredTimer())) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
  endfunction
	
  function s__Timer_getData takes timer t returns integer
			return (sg__TimerUtils__Data_get(GetHandleId((t)) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
  endfunction
	
  function s__Timer_getDataEx takes nothing returns integer
			return (sg__TimerUtils__Data_get(GetHandleId((GetExpiredTimer())) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
  endfunction
		
  function s__Timer_setData takes timer t,integer i returns nothing
			call sg__TimerUtils__Data_set(GetHandleId((t )) * HASH_UP / HASH_DOWN + HASH_BIAS,( i)) // INLINED!!
  endfunction
	
  function s__Timer_pause takes timer t returns nothing
			call PauseTimer(t)
  endfunction
	
  function s__Timer_start takes timer t,real tick,boolean periodic,code func returns nothing
			call TimerStart(t, tick, periodic, func)
  endfunction
	
  function s__Timer_release takes timer t returns nothing
			call ReleaseTimer(t)
  endfunction
	
  function s__Timer_new takes integer data returns timer
			set Timer__NEWTIMER=null
			set Timer__NEWTIMER=NewTimer()
			call sg__TimerUtils__Data_set(GetHandleId((Timer__NEWTIMER )) * HASH_UP / HASH_DOWN + HASH_BIAS,( data)) // INLINED!!
			return Timer__NEWTIMER
  endfunction
	
	

//library Timer ends
//library UnitData:



  function s__UnitData_getIconPath takes integer uid returns string
			if HaveSavedString(s__UnitData_HASH, uid, s__UnitData_INDEX_EXTERNAL + 0) then
				return LoadStr(s__UnitData_HASH, uid, s__UnitData_INDEX_EXTERNAL + 0)
			else
				return "BTNBlackIcon"
			endif
  endfunction

  function s__UnitData_setIconPath takes string nval returns nothing
			call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, nval)
  endfunction

  function s__UnitData_getInitialAbility takes integer uid,integer index returns integer
			if HaveSavedInteger(s__UnitData_HASH, uid, INDEX_ABILITY + index) then
				return LoadInteger(s__UnitData_HASH, uid, INDEX_ABILITY + index)
			else
				return 0
			endif
  endfunction

  function s__UnitData_setInitialAbility takes integer index,integer aid returns nothing
			call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + index, aid)
  endfunction

  function s__UnitData_setStatValue takes integer stattype,real base,real level returns nothing
			call SaveReal(s__UnitData_HASH, s__UnitData_ID, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_BASE, base)
			call SaveReal(s__UnitData_HASH, s__UnitData_ID, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_LEVEL, level)
  endfunction

  function s__UnitData_setDefaults takes nothing returns nothing
			set s__UnitData_ID=0
			call s__UnitData_setStatValue(STAT_TYPE_MAXHP , 400. , 40.)
			call s__UnitData_setStatValue(STAT_TYPE_MAXMP , 100. , 10.)
			call s__UnitData_setStatValue(STAT_TYPE_ATTACK , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_DEFFENCE , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_MAGICPOWER , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_RESISTANCE , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_ACCURACY , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_EVASION , 20. , 2.)
			call s__UnitData_setStatValue(STAT_TYPE_HPREGEN , 4. , 0.4)
			call s__UnitData_setStatValue(STAT_TYPE_MPREGEN , 1. , 0.1)
  endfunction

  function s__UnitData_onInit takes nothing returns nothing
			set s__UnitData_INDEX_EXTERNAL=INDEX_LAST
			call s__UnitData_setDefaults()
  endfunction



//library UnitData ends
//library User:





 function s__User_oskey2Index takes oskeytype os returns integer
		if os == OSKEY_Q then
			return 0
		elseif os == OSKEY_W then
			return 1
		elseif os == OSKEY_E then
			return 2
		elseif os == OSKEY_R then
			return 3
		elseif os == OSKEY_D then
			return 4
		elseif os == OSKEY_F then
			return 5
		elseif os == OSKEY_Z then
			return 6
		elseif os == OSKEY_X then
			return 7
		elseif os == OSKEY_C then
			return 8
		elseif os == OSKEY_V then
			return 9
		else
			return 0
		endif
 endfunction

 function s__User_oskeyIndex2String takes integer index returns string
		return s__User_OSKEY_INDEX_TO_STRING[index]
 endfunction

 function s__User_setKeyState takes player p,oskeytype ok,boolean val returns nothing
		call SaveBoolean(s__User_HASH, GetPlayerId(p), s__User_oskey2Index(ok), val)
 endfunction

 function s__User_getKeyState takes player p,oskeytype ok returns boolean
		return LoadBoolean(s__User_HASH, GetPlayerId(p), s__User_oskey2Index(ok))
 endfunction

 function s__User_getGold takes player p returns integer
		return GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
 endfunction

 function s__User_addGold takes player p,integer nv returns nothing
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + nv)
		set GOLD_REFRESH_PLAYER=null
		set GOLD_REFRESH_PLAYER=p
		call TriggerEvaluate(GOLD_REFRESH_TRIGGER)
 endfunction

 function s__User_getLumber takes player p returns integer
		return GetPlayerState(p, PLAYER_STATE_RESOURCE_LUMBER)
 endfunction

 function s__User_addLumber takes player p,integer nv returns nothing
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState(p, PLAYER_STATE_RESOURCE_LUMBER) + nv)
 endfunction

 function s__User_teamColorString takes player p,string val returns string
		return s__User_TEAMCOLOR_TO_STRING[GetPlayerId(p)] + val + "|r"
 endfunction

 function s__User_refinePlayerName takes player p returns nothing
  local string origin= GetPlayerName(p)
  local integer i= StringLength(origin)
		set s__User_ORIGIN_NAME[GetPlayerId(p)]=origin
		loop
			exitwhen i == 0
			if SubString(origin, i - 1, i) == "#" then
				set s__User_BATTLE_TAG[GetPlayerId(p)]=SubString(origin, i, StringLength(origin))
				set i=i - 1
				exitwhen true
			endif
			set i=i - 1
		endloop
		if i >= 0 then
			call SetPlayerName(p, SubString(origin, 0, i))
		endif
 endfunction

 function s__User_getFocusUnit takes player p returns integer
		return s__User_FOCUSUNIT[GetPlayerId(p)]
 endfunction

 function s__User_setFocusUnit takes player p,integer u returns nothing
		set s__User_FOCUSUNIT[GetPlayerId(p)]=u
 endfunction

 function s__User_selectFocusUnit takes player p returns nothing
		call ClearSelectionForPlayer(p)
		if GetLocalPlayer() == p then
			call SelectUnit((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__User_FOCUSUNIT[GetPlayerId((p))]))]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
		endif
 endfunction

 function s__User_keyPress takes nothing returns nothing
  local integer a= 0
  local integer u= (s__User_FOCUSUNIT[GetPlayerId((GetTriggerPlayer()))]) // INLINED!!
		if u > 0 then
			set a=s__Unit_prototype_getAbility(u,s__User_oskey2Index(BlzGetTriggerPlayerKey()))
			if a > 0 then
				if (LoadBoolean(s__User_HASH, GetPlayerId((GetTriggerPlayer() )), s__User_oskey2Index(( BlzGetTriggerPlayerKey())))) != BlzGetTriggerPlayerIsKeyDown() then // INLINED!!
					if BlzGetTriggerPlayerIsKeyDown() then
						if BlzGetTriggerPlayerMetaKey() == 1 then
							call sc__Ability_prototype_iconClick(a)
						else
							call s__Ability_prototype_press(a)
							call sc__Ability_prototype_onKeyboard(a)
						endif
					elseif s__Ability_prototype_smart[a] > 0 then
						call s__Ability_prototype_release(a)
					endif
				elseif BlzGetTriggerPlayerIsKeyDown() then
					call sc__Ability_prototype_onKeyboard(a)
				endif
			endif
		endif
		call s__User_setKeyState(GetTriggerPlayer() , BlzGetTriggerPlayerKey() , BlzGetTriggerPlayerIsKeyDown())
 endfunction

 function s__User_new takes player p returns nothing
  local integer i= GetPlayerId(p)
		call s__User_refinePlayerName(p)
		set s__User_KEYPRESS[i]=CreateTrigger()
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Q, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_W, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_E, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_R, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_D, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_F, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Z, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_X, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_C, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_V, 0, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Q, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_W, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_E, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_R, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_D, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_F, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Z, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_X, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_C, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_V, 0, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Q, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_W, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_E, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_R, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_D, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_F, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Z, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_X, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_C, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_V, 1, true)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Q, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_W, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_E, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_R, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_D, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_F, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_Z, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_X, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_C, 1, false)
		call BlzTriggerRegisterPlayerKeyEvent(s__User_KEYPRESS[i], p, OSKEY_V, 1, false)
		call s__User_setKeyState(p , OSKEY_Q , false)
		call s__User_setKeyState(p , OSKEY_W , false)
		call s__User_setKeyState(p , OSKEY_E , false)
		call s__User_setKeyState(p , OSKEY_R , false)
		call s__User_setKeyState(p , OSKEY_D , false)
		call s__User_setKeyState(p , OSKEY_F , false)
		call s__User_setKeyState(p , OSKEY_Z , false)
		call s__User_setKeyState(p , OSKEY_X , false)
		call s__User_setKeyState(p , OSKEY_C , false)
		call s__User_setKeyState(p , OSKEY_V , false)
		call TriggerAddCondition(s__User_KEYPRESS[i], Condition(function s__User_keyPress))
 endfunction

 function s__User_onInit takes nothing returns nothing
		set s__User_TEAMCOLOR_TO_STRING[0]="|cffff0000"
		set s__User_TEAMCOLOR_TO_STRING[1]="|cff0000ff"
		set s__User_TEAMCOLOR_TO_STRING[2]="|cff1be6ba"
		set s__User_TEAMCOLOR_TO_STRING[3]="|cff550081"
		set s__User_TEAMCOLOR_TO_STRING[4]="|cfffffb00"
		set s__User_TEAMCOLOR_TO_STRING[5]="|cffff8a0d"
		set s__User_TEAMCOLOR_TO_STRING[6]="|cff20bf00"
		set s__User_TEAMCOLOR_TO_STRING[7]="|cffe35baf"
		set s__User_TEAMCOLOR_TO_STRING[8]="|cff949697"
		set s__User_TEAMCOLOR_TO_STRING[9]="|cff7ebff1"
		set s__User_TEAMCOLOR_TO_STRING[10]="|cff106247"
		set s__User_TEAMCOLOR_TO_STRING[11]="|cff4f2b05"
		set s__User_TEAMCOLOR_TO_STRING[12]="|cff9c0000"
		set s__User_TEAMCOLOR_TO_STRING[13]="|cff0000c2"
		set s__User_TEAMCOLOR_TO_STRING[14]="|cff00ebff"
		set s__User_TEAMCOLOR_TO_STRING[15]="|cffbd00ff"
		set s__User_TEAMCOLOR_TO_STRING[16]="|cffeccc86"
		set s__User_TEAMCOLOR_TO_STRING[17]="|cfff7a48b"
		set s__User_TEAMCOLOR_TO_STRING[18]="|cffbfff80"
		set s__User_TEAMCOLOR_TO_STRING[19]="|cffdbb8ec"
		set s__User_TEAMCOLOR_TO_STRING[20]="|cff4f4f55"
		set s__User_TEAMCOLOR_TO_STRING[21]="|cffecf0ff"
		set s__User_TEAMCOLOR_TO_STRING[22]="|cff00781e"
		set s__User_TEAMCOLOR_TO_STRING[23]="|cffa46f34"
		set s__User_TEAMCOLOR_TO_STRING[GetPlayerNeutralPassive()]="|cff2e2e2e"
		set s__User_TEAMCOLOR_TO_STRING[GetPlayerNeutralAggressive()]="|cff2e2e2e"
		set s__User_OSKEY_INDEX_TO_STRING[0]="Q"
		set s__User_OSKEY_INDEX_TO_STRING[1]="W"
		set s__User_OSKEY_INDEX_TO_STRING[2]="E"
		set s__User_OSKEY_INDEX_TO_STRING[3]="R"
		set s__User_OSKEY_INDEX_TO_STRING[4]="D"
		set s__User_OSKEY_INDEX_TO_STRING[5]="F"
		set s__User_OSKEY_INDEX_TO_STRING[6]="Z"
		set s__User_OSKEY_INDEX_TO_STRING[7]="X"
		set s__User_OSKEY_INDEX_TO_STRING[8]="C"
		set s__User_OSKEY_INDEX_TO_STRING[9]="V"
 endfunction


//library User ends
//library Ability:






  function s__Ability_getTypeTier takes integer id returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_TIER)
  endfunction

  function s__Ability_setTypeTier takes integer id,integer val returns nothing
			call SaveInteger(Ability__HASH, id, s__Ability_INDEX_TIER, val)
  endfunction

  function s__Ability_addRandomAbility takes integer id,integer table_num returns nothing
			if table_num < s__Ability_TABLE_INDEX_LIMIT then
				call SaveInteger(Ability__HASH, table_num, s__Ability_TABLE_INDEX[table_num], id)
				set s__Ability_TABLE_INDEX[table_num]=s__Ability_TABLE_INDEX[table_num] + 1
			endif
  endfunction

  function s__Ability_getRandomAbility takes integer table_num returns integer
   local integer i= GetRandomInt(0, s__Ability_TABLE_INDEX[table_num] - 1)
			return LoadInteger(Ability__HASH, table_num, i)
  endfunction

  function s__Ability_getTypeTooltip takes integer id returns string
			if HaveSavedString(Ability__HASH, id, s__Ability_INDEX_TOOLTIP) then
				return LoadStr(Ability__HASH, id, s__Ability_INDEX_TOOLTIP)
			else
				return "ToolTip Missing"
			endif
  endfunction

  function s__Ability_setTypeTooltip takes integer id,string val returns nothing
			call SaveStr(Ability__HASH, id, s__Ability_INDEX_TOOLTIP, val)
  endfunction

  function s__Ability_getTypeCost takes integer id returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_COST)
  endfunction

  function s__Ability_setTypeCost takes integer id,integer val returns nothing
			call SaveInteger(Ability__HASH, id, s__Ability_INDEX_COST, val)
  endfunction

  function s__Ability_getTypeName takes integer id returns string
			return LoadStr(Ability__HASH, id, s__Ability_INDEX_NAME)
  endfunction

  function s__Ability_setTypeName takes integer id,string val returns nothing
			call SaveStr(Ability__HASH, id, s__Ability_INDEX_NAME, val)
  endfunction

  function s__Ability_getTypeIconPath takes integer id returns string
			return LoadStr(Ability__HASH, id, s__Ability_INDEX_ICON_PATH)
  endfunction

  function s__Ability_setTypeIconPath takes integer id,string val returns nothing
			call SaveStr(Ability__HASH, id, s__Ability_INDEX_ICON_PATH, val)
  endfunction

  function s__Ability_getTypeBonusStatIndex takes integer id,integer slot returns integer
			return LoadInteger(Ability__HASH, id, s__Ability_INDEX_BONUS_STAT + slot)
  endfunction

  function s__Ability_setTypeBonusStatIndex takes integer id,integer slot,integer index returns nothing
			if slot == 0 or slot == 1 then
				call SaveInteger(Ability__HASH, id, s__Ability_INDEX_BONUS_STAT + slot, index)
			endif
  endfunction

  function s__Ability_addTypeTag takes integer id,string val returns nothing
   local integer i= 0
			loop
				exitwhen i >= s__Ability_INDEX_ICON_PATH
				if not HaveSavedString(Ability__HASH, id, i) then
					call SaveStr(Ability__HASH, id, i, val)
					exitwhen true
				endif
				set i=i + 1
			endloop
  endfunction

  function s__Ability_getTypeTag takes integer id,integer index returns string
			if HaveSavedString(Ability__HASH, id, index) and index < s__Ability_INDEX_ICON_PATH then
				return LoadStr(Ability__HASH, id, index)
			else
				return ""
			endif
  endfunction

  function s__Ability_isTypeIncludeTag takes integer id,string findtext returns boolean
   local integer i= 0
			loop
				exitwhen s__Ability_getTypeTag(id , i) == ""
				if s__Ability_getTypeTag(id , i) == findtext then
					return true
				endif
				set i=i + 1
			endloop
			return false
  endfunction

  function s__Ability_onInit takes nothing returns nothing
   local integer i= 0
			loop
				exitwhen i >= s__Ability_TABLE_INDEX_LIMIT
				set s__Ability_TABLE_INDEX[i]=0
				set i=i + 1
			endloop
  endfunction

  function s__Ability_iconClick takes integer this returns nothing
			if s__Ability_getTypeTag(s__Ability_prototype_id[this] , 0) == ABILITY_STRING_WEAPON then
				call s__Unit_prototype_setWeaponAbility(s__Ability_prototype_owner[this],this)
			endif
  endfunction

  function s__Ability_plusStatValue takes integer this,integer v returns nothing
   local integer ind1= (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 0))) // INLINED!!
   local integer ind2= (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 1))) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],ind1 , v * s__STAT_NORMAL_VALUE[ind1] * (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this]), s__Ability_INDEX_TIER)) * 0.5) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],ind2 , v * s__STAT_NORMAL_VALUE[ind2] * (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this]), s__Ability_INDEX_TIER)) * 0.5) // INLINED!!
			set s__Ability_stat_bonus1[this]=s__Ability_stat_bonus1[this] + v * s__STAT_NORMAL_VALUE[ind1] * (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this]), s__Ability_INDEX_TIER)) * 0.5 // INLINED!!
			set s__Ability_stat_bonus2[this]=s__Ability_stat_bonus2[this] + v * s__STAT_NORMAL_VALUE[ind2] * (LoadInteger(Ability__HASH, (s__Ability_prototype_id[this]), s__Ability_INDEX_TIER)) * 0.5 // INLINED!!
  endfunction

  function s__Ability_addLevel takes integer this,integer v returns nothing
			set s__Ability_prototype_level[this]=s__Ability_prototype_level[this] + v
			call s__Ability_plusStatValue(this,v)
  endfunction

  function s__Ability_deactivate takes integer this returns nothing

  endfunction

  function s__Ability_onDeath takes integer this returns nothing
   local integer ui= s__UI_THIS[GetPlayerId((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))))] // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],(LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 0))) , - s__Ability_stat_bonus1[this]) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],(LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 1))) , - s__Ability_stat_bonus2[this]) // INLINED!!
			call sc__Ability_deactivate(this)
			if ui > 0 then
				call s__UI_refreshAbilityIconsTarget(ui)
			endif
  endfunction



//library Ability ends
//library CharacterSelect:




  function s__ChinghoWidget_click takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
			call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
			if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
				set CharacterSelect_CHINGHO_ID[GetPlayerId(GetTriggerPlayer())]=s__ChinghoWidget_id[this]
				set CharacterSelect___PANEL_REFRESH_PLAYER=GetTriggerPlayer()
				call TriggerEvaluate(CharacterSelect___PANEL_REFRESH_REQUEST)
				set CharacterSelect___PANEL_REFRESH_PLAYER=null
			endif
  endfunction

  function s__ChinghoWidget_create takes integer index,integer cid,framehandle parent returns integer
   local integer this= s__ChinghoWidget__allocate()
   local framehandle f= null
			set s__ChinghoWidget_id[this]=cid
			set s__ChinghoWidget_btn[this]=BlzCreateFrame("ChinghoSelectButton", parent, 0, this)
			
			call BlzFrameSetPoint((s__ChinghoWidget_btn[this] ), ( FRAMEPOINT_TOPLEFT ), ( CharacterSelect___CHINGHO ), ( FRAMEPOINT_TOPLEFT ), (( 16 )*1.0) / 1800., (( - 16 - 64 * ModuloInteger(index, CharacterSelect___CHINGHO_PER_PAGE))*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__ChinghoWidget_btn[this] ), (( CharacterSelect___CHINGHO_WIDTH - 32 )*1.0) / 1800., (( 64)*1.0) / 1800.) // INLINED!!
			
			set f=BlzGetFrameByName("ChinghoSelectButtonIcon1", this)
			call BlzFrameSetPoint((f ), ( FRAMEPOINT_TOPLEFT ), ( s__ChinghoWidget_btn[this] ), ( FRAMEPOINT_TOPLEFT ), (( 8 )*1.0) / 1800., (( - 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((f ), (( 64 - 16 )*1.0) / 1800., (( 64 - 16)*1.0) / 1800.) // INLINED!!
			if cid < 0 then
				call BlzFrameSetTexture(f, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
			else
				call BlzFrameSetTexture(f, "replaceabletextures\\commandbuttons\\" + (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
			endif
			set f=BlzGetFrameByName("ChinghoSelectButtonIcon2", this)
			call BlzFrameSetPoint((f ), ( FRAMEPOINT_TOPRIGHT ), ( s__ChinghoWidget_btn[this] ), ( FRAMEPOINT_TOPRIGHT ), (( - 8 )*1.0) / 1800., (( - 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((f ), (( 64 - 16 )*1.0) / 1800., (( 64 - 16)*1.0) / 1800.) // INLINED!!
			if cid < 0 then
				call BlzFrameSetTexture(f, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
			else
				call BlzFrameSetTexture(f, "replaceabletextures\\commandbuttons\\" + (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
			endif
			
			set f=BlzGetFrameByName("ChinghoSelectButtonText", this)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, s__ChinghoWidget_btn[this], FRAMEPOINT_CENTER, 0., 0.)
			if cid < 0 then
				call BlzFrameSetText(f, "???")
			else
				call BlzFrameSetText(f, (LoadStr(Ability__HASH, (cid), s__Ability_INDEX_NAME))) // INLINED!!
			endif
			
			set s__ChinghoWidget_main_trigger[this]=s__Trigger_new(this)
			call BlzTriggerRegisterFrameEvent(s__ChinghoWidget_main_trigger[this], s__ChinghoWidget_btn[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__ChinghoWidget_main_trigger[this], s__ChinghoWidget_btn[this], FRAMEEVENT_MOUSE_LEAVE)
			set s__ChinghoWidget_main_cond[this]=TriggerAddCondition(s__ChinghoWidget_main_trigger[this], Condition(function s__ChinghoWidget_click))
			
			set f=null
			return this
  endfunction

  function s__ChinghoWidget_onDestroy takes integer this returns nothing
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__ChinghoWidget_main_trigger[this], s__ChinghoWidget_main_cond[this])
		call s__Trigger_remove(s__ChinghoWidget_main_trigger[this])
		set s__ChinghoWidget_main_trigger[this]=null
		set s__ChinghoWidget_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
//textmacro instance: destroyFrame(".btn")
	call BlzDestroyFrame(s__ChinghoWidget_btn[this])
	set s__ChinghoWidget_btn[this]=null
//end of: destroyFrame(".btn")
  endfunction

//Generated destructor of ChinghoWidget
function s__ChinghoWidget_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChinghoWidget_V[this]!=-1) then
        return
    endif
    call s__ChinghoWidget_onDestroy(this)
    set si__ChinghoWidget_V[this]=si__ChinghoWidget_F
    set si__ChinghoWidget_F=this
endfunction




  function s__CharacterWidget_click takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
			call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
			if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
				set CharacterSelect_ID[GetPlayerId(GetTriggerPlayer())]=s__CharacterWidget_id[this]
				set CharacterSelect___PANEL_REFRESH_PLAYER=GetTriggerPlayer()
				call TriggerEvaluate(CharacterSelect___PANEL_REFRESH_REQUEST)
				set CharacterSelect___PANEL_REFRESH_PLAYER=null
			endif
  endfunction

  function s__CharacterWidget_create takes integer index,integer uid returns integer
   local integer this= s__CharacterWidget__allocate()
   local framehandle f= null
			set s__CharacterWidget_id[this]=uid
			set s__CharacterWidget_btn[this]=BlzCreateFrame("CharacterWidgetButton", CharacterSelect___CONTAINER, 0, this)
			
			call BlzFrameSetPoint(s__CharacterWidget_btn[this], FRAMEPOINT_TOPLEFT, CharacterSelect___CONTAINER, FRAMEPOINT_TOPLEFT, (((( CharacterSelect___WIDGET_INSET + CharacterSelect___WIDGET_SIZE ) * ModuloInteger(index, CharacterSelect___PER_ROW) + CharacterSelect___WIDGET_INSET / 2)*1.0) / 1800.), (((( CharacterSelect___WIDGET_INSET + CharacterSelect___WIDGET_SIZE ) * - R2I(index / CharacterSelect___PER_ROW) - CharacterSelect___WIDGET_INSET / 2)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(s__CharacterWidget_btn[this], (((CharacterSelect___WIDGET_SIZE)*1.0) / 1800.), (((CharacterSelect___WIDGET_SIZE)*1.0) / 1800.)) // INLINED!!
			
			set f=BlzGetFrameByName("CharacterWidgetButtonIcon", this)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, s__CharacterWidget_btn[this], FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetSize(f, (((CharacterSelect___WIDGET_SIZE - CharacterSelect___WIDGET_INSET)*1.0) / 1800.), (((CharacterSelect___WIDGET_SIZE - CharacterSelect___WIDGET_INSET)*1.0) / 1800.)) // INLINED!!
			if uid < 0 then
				call BlzFrameSetTexture(f, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
			else
				call BlzFrameSetTexture(f, "replaceabletextures\\commandbuttons\\" + s__UnitData_getIconPath(uid) + ".blp", 0, true)
			endif
			
			set s__CharacterWidget_main_trigger[this]=s__Trigger_new(this)
			call BlzTriggerRegisterFrameEvent(s__CharacterWidget_main_trigger[this], s__CharacterWidget_btn[this], FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(s__CharacterWidget_main_trigger[this], s__CharacterWidget_btn[this], FRAMEEVENT_MOUSE_LEAVE)
			set s__CharacterWidget_main_cond[this]=TriggerAddCondition(s__CharacterWidget_main_trigger[this], Condition(function s__CharacterWidget_click))
			
			set f=null
			return this
  endfunction

  function s__CharacterWidget_onDestroy takes integer this returns nothing
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__CharacterWidget_main_trigger[this], s__CharacterWidget_main_cond[this])
		call s__Trigger_remove(s__CharacterWidget_main_trigger[this])
		set s__CharacterWidget_main_trigger[this]=null
		set s__CharacterWidget_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
//textmacro instance: destroyFrame(".btn")
	call BlzDestroyFrame(s__CharacterWidget_btn[this])
	set s__CharacterWidget_btn[this]=null
//end of: destroyFrame(".btn")
  endfunction

//Generated destructor of CharacterWidget
function s__CharacterWidget_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CharacterWidget_V[this]!=-1) then
        return
    endif
    call s__CharacterWidget_onDestroy(this)
    set si__CharacterWidget_V[this]=si__CharacterWidget_F
    set si__CharacterWidget_F=this
endfunction





  function s__CharacterInfoPanel_setChinghoTarget takes integer this,integer cid returns nothing
			call s__ChinghoFrame_setTarget(s__CharacterInfoPanel_cf[this],cid)
			if cid < 0 then
				call BlzFrameSetText(s__CharacterInfoPanel_tool_text[this], "???")
			elseif cid > 0 then
				call BlzFrameSetText(s__CharacterInfoPanel_tool_text[this], s__Ability_getTypeTooltip(cid))
			else
				call BlzFrameSetText(s__CharacterInfoPanel_tool_text[this], "")
			endif
  endfunction

  function s__CharacterInfoPanel_setTarget takes integer this,integer uid returns nothing
			if uid < 0 then
				call BlzFrameSetTexture(s__CharacterInfoPanel_character[this], "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
				call BlzFrameSetTexture(s__CharacterInfoPanel_a1[this], "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
				call BlzFrameSetTexture(s__CharacterInfoPanel_a2[this], "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp", 0, true)
				call BlzFrameSetText(s__CharacterInfoPanel_name[this], "???")
			elseif uid > 0 then
				call BlzFrameSetTexture(s__CharacterInfoPanel_character[this], "replaceableTextures\\commandbuttons\\" + s__UnitData_getIconPath(uid) + ".blp", 0, true)
				call BlzFrameSetTexture(s__CharacterInfoPanel_a1[this], "replaceableTextures\\commandbuttons\\" + (LoadStr(Ability__HASH, (s__UnitData_getInitialAbility(uid , 0)), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				call BlzFrameSetTexture(s__CharacterInfoPanel_a2[this], "replaceableTextures\\commandbuttons\\" + (LoadStr(Ability__HASH, (s__UnitData_getInitialAbility(uid , 1)), s__Ability_INDEX_ICON_PATH)) + ".blp", 0, true) // INLINED!!
				call BlzFrameSetText(s__CharacterInfoPanel_name[this], GetObjectName(uid))
			else
				call BlzFrameSetTexture(s__CharacterInfoPanel_character[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetTexture(s__CharacterInfoPanel_a1[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetTexture(s__CharacterInfoPanel_a2[this], "ReplaceableTextures\\CommandButtons\\BTNBlackIcon.blp", 0, true)
				call BlzFrameSetText(s__CharacterInfoPanel_name[this], "")
			endif
  endfunction

  function s__CharacterInfoPanel_create takes player owner returns integer
   local integer this= s__CharacterInfoPanel__allocate()
			set s__CharacterInfoPanel_container[this]=BlzCreateFrameByType("FRAME", "", CharacterSelect___PANEL_CONTAINER, "", 0)
			set s__CharacterInfoPanel_character[this]=BlzCreateFrameByType("BACKDROP", "", s__CharacterInfoPanel_container[this], "", 0)
			set s__CharacterInfoPanel_a1[this]=BlzCreateFrameByType("BACKDROP", "", s__CharacterInfoPanel_container[this], "", 0)
			set s__CharacterInfoPanel_a2[this]=BlzCreateFrameByType("BACKDROP", "", s__CharacterInfoPanel_container[this], "", 0)
			call BlzFrameSetPoint((s__CharacterInfoPanel_character[this] ), ( FRAMEPOINT_TOPLEFT ), ( CharacterSelect___PANEL_CONTAINER ), ( FRAMEPOINT_TOPLEFT ), (( 32 )*1.0) / 1800., (( - 32)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__CharacterInfoPanel_character[this] ), (( 64 )*1.0) / 1800., (( 64)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__CharacterInfoPanel_character[this], "replaceableTextures\\commandbuttons\\btnblackicon.blp", 0, true)
			call BlzFrameSetPoint((s__CharacterInfoPanel_a1[this] ), ( FRAMEPOINT_BOTTOMLEFT ), ( CharacterSelect___PANEL_CONTAINER ), ( FRAMEPOINT_BOTTOMLEFT ), (( 32 )*1.0) / 1800., (( 32)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__CharacterInfoPanel_a1[this] ), (( 64 )*1.0) / 1800., (( 64)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__CharacterInfoPanel_a1[this], "replaceableTextures\\commandbuttons\\btnblackicon.blp", 0, true)
			call BlzFrameSetPoint((s__CharacterInfoPanel_a2[this] ), ( FRAMEPOINT_BOTTOMLEFT ), ( s__CharacterInfoPanel_a1[this] ), ( FRAMEPOINT_BOTTOMRIGHT ), (( 16 )*1.0) / 1800., (( 0)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__CharacterInfoPanel_a2[this] ), (( 64 )*1.0) / 1800., (( 64)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__CharacterInfoPanel_a2[this], "replaceableTextures\\commandbuttons\\btnblackicon.blp", 0, true)
			set s__CharacterInfoPanel_name[this]=BlzCreateFrame("MyTextLarge", s__CharacterInfoPanel_container[this], 0, 0)
			call BlzFrameSetPoint((s__CharacterInfoPanel_name[this] ), ( FRAMEPOINT_LEFT ), ( s__CharacterInfoPanel_character[this] ), ( FRAMEPOINT_RIGHT ), (( 8 )*1.0) / 1800., (( 0)*1.0) / 1800.) // INLINED!!
			set s__CharacterInfoPanel_a_title[this]=BlzCreateFrame("MyText", s__CharacterInfoPanel_container[this], 0, 0)
			call BlzFrameSetPoint(s__CharacterInfoPanel_a_title[this], FRAMEPOINT_BOTTOMLEFT, s__CharacterInfoPanel_a1[this], FRAMEPOINT_TOPLEFT, 0., 0.005)
			call BlzFrameSetText(s__CharacterInfoPanel_a_title[this], "보유 능력 : ")
			
			set s__CharacterInfoPanel_tool_backdrop[this]=BlzCreateFrame("MyTextBox", s__CharacterInfoPanel_container[this], 0, 0)
			call BlzFrameSetPoint((s__CharacterInfoPanel_tool_backdrop[this] ), ( FRAMEPOINT_TOP ), ( CharacterSelect___PANEL_CONTAINER ), ( FRAMEPOINT_TOP ), (( 0 )*1.0) / 1800., (( - 96)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetPoint((s__CharacterInfoPanel_tool_backdrop[this] ), ( FRAMEPOINT_LEFT ), ( s__CharacterInfoPanel_a2[this] ), ( FRAMEPOINT_RIGHT ), (( 32 )*1.0) / 1800., (( 0)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetPoint((s__CharacterInfoPanel_tool_backdrop[this] ), ( FRAMEPOINT_BOTTOMRIGHT ), ( CharacterSelect___PANEL_CONTAINER ), ( FRAMEPOINT_BOTTOMRIGHT ), (( - 16 )*1.0) / 1800., (( 16)*1.0) / 1800.) // INLINED!!
			set s__CharacterInfoPanel_tool_text[this]=BlzCreateFrame("MyText", s__CharacterInfoPanel_container[this], 0, 0)
			call BlzFrameSetPoint(s__CharacterInfoPanel_tool_text[this], FRAMEPOINT_TOPLEFT, s__CharacterInfoPanel_tool_backdrop[this], FRAMEPOINT_TOPLEFT, 0.005, - 0.005)
			call BlzFrameSetPoint(s__CharacterInfoPanel_tool_text[this], FRAMEPOINT_BOTTOMRIGHT, s__CharacterInfoPanel_tool_backdrop[this], FRAMEPOINT_BOTTOMRIGHT, - 0.005, 0.005)
			call BlzFrameSetTextAlignment(s__CharacterInfoPanel_tool_text[this], TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
			
			set s__CharacterInfoPanel_cf[this]=s__ChinghoFrame_create(s__CharacterInfoPanel_container[this] , s__CharacterInfoPanel_tool_backdrop[this])
			call BlzFrameClearAllPoints(s__ChinghoFrame_backdrop[s__CharacterInfoPanel_cf[this]])
			call BlzFrameSetPoint((s__ChinghoFrame_backdrop[s__CharacterInfoPanel_cf[this]] ), ( FRAMEPOINT_BOTTOM ), ( s__CharacterInfoPanel_tool_backdrop[this] ), ( FRAMEPOINT_TOP ), (( 0 )*1.0) / 1800., (( 16)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetScale(s__ChinghoFrame_backdrop[s__CharacterInfoPanel_cf[this]], 1.5)
			call s__CharacterInfoPanel_setTarget(this,- 2)
			call s__CharacterInfoPanel_setChinghoTarget(this,- 2)
			
			call BlzFrameSetVisible(s__CharacterInfoPanel_container[this], GetLocalPlayer() == owner)
			return this
  endfunction

  function s__CharacterInfoPanel_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__CharacterInfoPanel_container[this])
	set s__CharacterInfoPanel_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".character")
	call BlzDestroyFrame(s__CharacterInfoPanel_character[this])
	set s__CharacterInfoPanel_character[this]=null
//end of: destroyFrame(".character")
//textmacro instance: destroyFrame(".a1")
	call BlzDestroyFrame(s__CharacterInfoPanel_a1[this])
	set s__CharacterInfoPanel_a1[this]=null
//end of: destroyFrame(".a1")
//textmacro instance: destroyFrame(".a2")
	call BlzDestroyFrame(s__CharacterInfoPanel_a2[this])
	set s__CharacterInfoPanel_a2[this]=null
//end of: destroyFrame(".a2")
//textmacro instance: destroyFrame(".a_title")
	call BlzDestroyFrame(s__CharacterInfoPanel_a_title[this])
	set s__CharacterInfoPanel_a_title[this]=null
//end of: destroyFrame(".a_title")
//textmacro instance: destroyFrame(".name")
	call BlzDestroyFrame(s__CharacterInfoPanel_name[this])
	set s__CharacterInfoPanel_name[this]=null
//end of: destroyFrame(".name")
//textmacro instance: destroyFrame(".tool_backdrop")
	call BlzDestroyFrame(s__CharacterInfoPanel_tool_backdrop[this])
	set s__CharacterInfoPanel_tool_backdrop[this]=null
//end of: destroyFrame(".tool_backdrop")
//textmacro instance: destroyFrame(".tool_text")
	call BlzDestroyFrame(s__CharacterInfoPanel_tool_text[this])
	set s__CharacterInfoPanel_tool_text[this]=null
//end of: destroyFrame(".tool_text")
			call s__ChinghoFrame_deallocate(s__CharacterInfoPanel_cf[this])
  endfunction

//Generated destructor of CharacterInfoPanel
function s__CharacterInfoPanel_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CharacterInfoPanel_V[this]!=-1) then
        return
    endif
    call s__CharacterInfoPanel_onDestroy(this)
    set si__CharacterInfoPanel_V[this]=si__CharacterInfoPanel_F
    set si__CharacterInfoPanel_F=this
endfunction




  function s__CharacterSelect_giveRandomHero takes nothing returns nothing
   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				if CharacterSelect_ID[i] < 0 then
					
					set CharacterSelect_ID[i]=s__CharacterWidget_id[s__CharacterSelect_WIDGET[GetRandomInt(1, CharacterSelect___WIDGET_INDEX - 1)]]
				endif
				if CharacterSelect_CHINGHO_ID[i] < 0 then
					
					set CharacterSelect_CHINGHO_ID[i]=s__ChinghoWidget_id[s__CharacterSelect_CHINGHO_WIDGET[GetRandomInt(1, CharacterSelect___CHINGHO_WIDGET_INDEX - 1)]]
				endif
				set i=i + 1
			endloop
  endfunction

  function s__CharacterSelect_playerSetChinghoPage takes player p,integer index returns nothing
   local integer i= 0
			if index < 0 then
				set CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(p)]=0
			elseif index > CharacterSelect___CHINGHO_PAGE_MAX then
				set CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(p)]=CharacterSelect___CHINGHO_PAGE_MAX
			else
				set CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(p)]=index
			endif
			loop
				exitwhen i > CharacterSelect___CHINGHO_PAGE_MAX
				if GetLocalPlayer() == p then
					call BlzFrameSetVisible(CharacterSelect___CHINGHO_PAGE[i], i == CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(p)])
				endif
				set i=i + 1
			endloop
  endfunction

  function s__CharacterSelect_disableWidgetsForPlayer takes player p returns nothing
   local integer i= 0
			loop
				exitwhen i >= CharacterSelect___WIDGET_INDEX
				if s__CharacterSelect_WIDGET[i] > 0 then
					if GetLocalPlayer() == p then
						call BlzFrameSetEnable(s__CharacterWidget_btn[s__CharacterSelect_WIDGET[i]], false)
					endif
				endif
				set i=i + 1
			endloop
  endfunction

  function s__CharacterSelect_panelRefresh takes nothing returns nothing
			if CharacterSelect___PANEL_REFRESH_PLAYER == null then
				return
			endif
			call s__CharacterInfoPanel_setTarget(s__CharacterSelect_PANEL[GetPlayerId(CharacterSelect___PANEL_REFRESH_PLAYER)],CharacterSelect_ID[GetPlayerId(CharacterSelect___PANEL_REFRESH_PLAYER)])
			call s__CharacterInfoPanel_setChinghoTarget(s__CharacterSelect_PANEL[GetPlayerId(CharacterSelect___PANEL_REFRESH_PLAYER)],CharacterSelect_CHINGHO_ID[GetPlayerId(CharacterSelect___PANEL_REFRESH_PLAYER)])
  endfunction

  function s__CharacterSelect_checkReadyState takes nothing returns boolean
   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				if not CharacterSelect___READY[i] then
					return false
				endif
				set i=i + 1
			endloop
			return true
  endfunction

  function s__CharacterSelect_leavePlayer takes integer pid returns nothing
			if s__CharacterSelect_PANEL[pid] > 0 then
				call s__CharacterInfoPanel_deallocate(s__CharacterSelect_PANEL[pid])
			endif
			set s__CharacterSelect_PANEL[pid]=0
			set CharacterSelect_ID[pid]=0
			set CharacterSelect___READY[pid]=true
			if s__CharacterSelect_checkReadyState() then
				call TriggerEvaluate(st__CharacterSelect_finish) // INLINED!!
			endif
  endfunction

  function s__CharacterSelect_createWidget takes integer uid returns nothing
			set s__CharacterSelect_WIDGET[CharacterSelect___WIDGET_INDEX]=s__CharacterWidget_create(CharacterSelect___WIDGET_INDEX , uid)
			set CharacterSelect___WIDGET_INDEX=CharacterSelect___WIDGET_INDEX + 1
  endfunction

  function s__CharacterSelect_createChinghoWidget takes integer cid returns nothing
			if CharacterSelect___CHINGHO_PAGE[R2I(CharacterSelect___CHINGHO_WIDGET_INDEX / CharacterSelect___CHINGHO_PER_PAGE)] == null then
				set CharacterSelect___CHINGHO_PAGE[R2I(CharacterSelect___CHINGHO_WIDGET_INDEX / CharacterSelect___CHINGHO_PER_PAGE)]=BlzCreateFrameByType("FRAME", "", CharacterSelect___CHINGHO, "", 0)
				call BlzFrameSetVisible(CharacterSelect___CHINGHO_PAGE[R2I(CharacterSelect___CHINGHO_WIDGET_INDEX / CharacterSelect___CHINGHO_PER_PAGE)], false)
			endif
			set s__CharacterSelect_CHINGHO_WIDGET[CharacterSelect___CHINGHO_WIDGET_INDEX]=s__ChinghoWidget_create(CharacterSelect___CHINGHO_WIDGET_INDEX , cid , CharacterSelect___CHINGHO_PAGE[R2I(CharacterSelect___CHINGHO_WIDGET_INDEX / CharacterSelect___CHINGHO_PER_PAGE)])
			set CharacterSelect___CHINGHO_PAGE_MAX=R2I(CharacterSelect___CHINGHO_WIDGET_INDEX / CharacterSelect___CHINGHO_PER_PAGE)
			set CharacterSelect___CHINGHO_WIDGET_INDEX=CharacterSelect___CHINGHO_WIDGET_INDEX + 1
  endfunction

  function s__CharacterSelect_removeFade takes nothing returns nothing
//textmacro instance: destroyFrame("FADE")
	call BlzDestroyFrame(CharacterSelect___FADE)
	set CharacterSelect___FADE=null
//end of: destroyFrame("FADE")
			call DestroyTrigger(GetTriggeringTrigger())
  endfunction

		
  function s__CharacterSelect_end takes nothing returns nothing
   local integer i= 0
   local trigger t= CreateTrigger()
			call s__CharacterSelect_giveRandomHero()
//textmacro instance: destroyFrame("BACKGROUND")
	call BlzDestroyFrame(CharacterSelect_BACKGROUND)
	set CharacterSelect_BACKGROUND=null
//end of: destroyFrame("BACKGROUND")
//textmacro instance: destroyFrame("CONTAINER")
	call BlzDestroyFrame(CharacterSelect___CONTAINER)
	set CharacterSelect___CONTAINER=null
//end of: destroyFrame("CONTAINER")
//textmacro instance: destroyFrame("CONFIRM")
	call BlzDestroyFrame(CharacterSelect___CONFIRM)
	set CharacterSelect___CONFIRM=null
//end of: destroyFrame("CONFIRM")
//textmacro instance: destroyFrame("CHINGHO_HEADER_BACKDROP")
	call BlzDestroyFrame(CharacterSelect___CHINGHO_HEADER_BACKDROP)
	set CharacterSelect___CHINGHO_HEADER_BACKDROP=null
//end of: destroyFrame("CHINGHO_HEADER_BACKDROP")
//textmacro instance: destroyFrame("CHINGHO_HEADER_TEXT")
	call BlzDestroyFrame(CharacterSelect___CHINGHO_HEADER_TEXT)
	set CharacterSelect___CHINGHO_HEADER_TEXT=null
//end of: destroyFrame("CHINGHO_HEADER_TEXT")
//textmacro instance: destroyFrame("CHINGHO_PAGE_NEXT")
	call BlzDestroyFrame(CharacterSelect___CHINGHO_PAGE_NEXT)
	set CharacterSelect___CHINGHO_PAGE_NEXT=null
//end of: destroyFrame("CHINGHO_PAGE_NEXT")
//textmacro instance: destroyFrame("CHINGHO_PAGE_PREV")
	call BlzDestroyFrame(CharacterSelect___CHINGHO_PAGE_PREV)
	set CharacterSelect___CHINGHO_PAGE_PREV=null
//end of: destroyFrame("CHINGHO_PAGE_PREV")
//textmacro instance: destroyFrame("PANEL_CONTAINER")
	call BlzDestroyFrame(CharacterSelect___PANEL_CONTAINER)
	set CharacterSelect___PANEL_CONTAINER=null
//end of: destroyFrame("PANEL_CONTAINER")
//textmacro instance: destroyFrame("PANEL_HEADER_BACKDROP")
	call BlzDestroyFrame(CharacterSelect___PANEL_HEADER_BACKDROP)
	set CharacterSelect___PANEL_HEADER_BACKDROP=null
//end of: destroyFrame("PANEL_HEADER_BACKDROP")
//textmacro instance: destroyFrame("PANEL_HEADER_TEXT")
	call BlzDestroyFrame(CharacterSelect___PANEL_HEADER_TEXT)
	set CharacterSelect___PANEL_HEADER_TEXT=null
//end of: destroyFrame("PANEL_HEADER_TEXT")
			loop
				exitwhen i > CharacterSelect___CHINGHO_PAGE_MAX
//textmacro instance: destroyFrame("CHINGHO_PAGE[i]")
	call BlzDestroyFrame(CharacterSelect___CHINGHO_PAGE[i])
	set CharacterSelect___CHINGHO_PAGE[i]=null
//end of: destroyFrame("CHINGHO_PAGE[i]")
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= CharacterSelect___WIDGET_INDEX
				if s__CharacterSelect_WIDGET[i] > 0 then
					call s__CharacterWidget_deallocate(s__CharacterSelect_WIDGET[i])
				endif
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= CharacterSelect___CHINGHO_WIDGET_INDEX
				if s__CharacterSelect_CHINGHO_WIDGET[i] > 0 then
					call s__ChinghoWidget_deallocate(s__CharacterSelect_CHINGHO_WIDGET[i])
				endif
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= PLAYER_MAX
				if s__CharacterSelect_PANEL[i] > 0 then
					call s__CharacterInfoPanel_deallocate(s__CharacterSelect_PANEL[i])
				endif
				set i=i + 1
			endloop
			call TriggerEvaluate(st__Game_endSelect) // INLINED!!
			call DestroyTrigger(GetTriggeringTrigger())
			call TriggerRegisterTimerEvent(t, 2., false)
			call TriggerAddCondition(t, Condition(function s__CharacterSelect_removeFade))
			set t=null
  endfunction

  function s__CharacterSelect_finish takes nothing returns nothing
   local trigger t= CreateTrigger()
//textmacro instance: destroyTriggerAndCondition("MAIN_TRIGGER","MAIN_COND")
		call TriggerRemoveCondition(CharacterSelect___MAIN_TRIGGER, CharacterSelect___MAIN_COND)
		call s__Trigger_remove(CharacterSelect___MAIN_TRIGGER)
		set CharacterSelect___MAIN_TRIGGER=null
		set CharacterSelect___MAIN_COND=null
//end of: destroyTriggerAndCondition("MAIN_TRIGGER","MAIN_COND")
			call TriggerRegisterTimerEvent(t, 2., false)
			call TriggerAddCondition(t, Condition(function s__CharacterSelect_end))
			set CharacterSelect___FADE=BlzCreateFrameByType("SPRITE", "", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
			call BlzFrameSetModel(CharacterSelect___FADE, "ui\\characterselectfade.mdl", 0)
			call BlzFrameSetAbsPoint(CharacterSelect___FADE, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize(CharacterSelect___FADE, 1., 1.)
			set t=null
  endfunction

  function s__CharacterSelect_cond takes nothing returns nothing
			
			if GetTriggerEventId() == EVENT_PLAYER_LEAVE then
				call s__CharacterSelect_leavePlayer(GetPlayerId(GetTriggerPlayer()))
				return
			
			elseif GetTriggerEventId() == EVENT_GAME_TIMER_EXPIRED then
				set CharacterSelect___TIME=CharacterSelect___TIME - 1
				if CharacterSelect___TIME <= 0 then
					call s__CharacterSelect_finish()
				else
					call BlzFrameSetText(CharacterSelect___HEADER_TEXT, "캐릭터 선택 (" + I2S(CharacterSelect___TIME) + ")")
				endif
				return
			
			elseif BlzGetTriggerFrame() == CharacterSelect___CONFIRM then
				if GetLocalPlayer() == GetTriggerPlayer() then
					if not CharacterSelect___CONFIRM_DISABLE then
						call BlzFrameSetEnable(CharacterSelect___CONFIRM, false)
						call BlzFrameSetEnable(CharacterSelect___CONFIRM, true)
					endif
				endif
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					if CharacterSelect_ID[GetPlayerId(GetTriggerPlayer())] != 0 then
						set CharacterSelect___READY[GetPlayerId(GetTriggerPlayer())]=true
						if GetLocalPlayer() == GetTriggerPlayer() then
							call BlzFrameSetEnable(CharacterSelect___CONFIRM, false)
							set CharacterSelect___CONFIRM_DISABLE=true
						endif
						call s__CharacterSelect_disableWidgetsForPlayer(GetTriggerPlayer())
						if s__CharacterSelect_checkReadyState() then
							call s__CharacterSelect_finish()
						endif
					endif
				endif
				return
			
			elseif BlzGetTriggerFrame() == CharacterSelect___CHINGHO_PAGE_NEXT then
				if GetLocalPlayer() == GetTriggerPlayer() then
					call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
					call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
				endif
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					call s__CharacterSelect_playerSetChinghoPage(GetTriggerPlayer() , CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(GetTriggerPlayer())] + 1)
				endif
				return
			
			elseif BlzGetTriggerFrame() == CharacterSelect___CHINGHO_PAGE_PREV then
				if GetLocalPlayer() == GetTriggerPlayer() then
					call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
					call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
				endif
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					call s__CharacterSelect_playerSetChinghoPage(GetTriggerPlayer() , CharacterSelect___CHINGHO_PAGE_INDEX[GetPlayerId(GetTriggerPlayer())] - 1)
				endif
				return
			endif
  endfunction

  function s__CharacterSelect_init takes nothing returns nothing
   local integer i= 0
   local framehandle origin= BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0)
   local framehandle f= null
			
			set CharacterSelect___CONTAINER=BlzCreateFrame("MBEdge", origin, 0, 0)
			call BlzFrameSetAbsPoint(CharacterSelect___CONTAINER, FRAMEPOINT_CENTER, (((( 1920 - 480 ) * 0.5 + CharacterSelect___OFFSET_X)*1.0) / 1800.), (((560 + CharacterSelect___OFFSET_Y)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(CharacterSelect___CONTAINER, (((CharacterSelect___WIDTH)*1.0) / 1800.), (((CharacterSelect___HEIGHT)*1.0) / 1800.)) // INLINED!!
			set CharacterSelect___HEADER_BACKDROP=BlzCreateFrame("MyTextBox", CharacterSelect___CONTAINER, 0, 0)
			set CharacterSelect___HEADER_TEXT=BlzCreateFrame("MyTextLarge", CharacterSelect___CONTAINER, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___CONTAINER, FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetText(CharacterSelect___HEADER_TEXT, "캐릭터 선택 (" + I2S(CharacterSelect___TIME) + ")")
			call BlzFrameSetPoint(CharacterSelect___HEADER_BACKDROP, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
			call BlzFrameSetPoint(CharacterSelect___HEADER_BACKDROP, FRAMEPOINT_TOPRIGHT, CharacterSelect___HEADER_TEXT, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			
			set CharacterSelect___MAIN_TRIGGER=CreateTrigger()
			set CharacterSelect___MAIN_COND=TriggerAddCondition(CharacterSelect___MAIN_TRIGGER, Condition(function s__CharacterSelect_cond))
			call TriggerRegisterTimerEvent(CharacterSelect___MAIN_TRIGGER, 1., true)
			set CharacterSelect___PANEL_REFRESH_REQUEST=CreateTrigger()
			call TriggerAddCondition(CharacterSelect___PANEL_REFRESH_REQUEST, Condition(function s__CharacterSelect_panelRefresh))
			
			call s__CharacterSelect_createWidget(- 2)
			call s__CharacterSelect_createWidget('HR00')
			call s__CharacterSelect_createWidget('HR09')
			call s__CharacterSelect_createWidget('HR07')
			call s__CharacterSelect_createWidget('U000')
			call s__CharacterSelect_createWidget('U001')
			call s__CharacterSelect_createWidget('U002')
			call s__CharacterSelect_createWidget('U003')
			call s__CharacterSelect_createWidget('U004')
			
			set CharacterSelect___CHINGHO=BlzCreateFrame("MBEdge", CharacterSelect___CONTAINER, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___CHINGHO, FRAMEPOINT_TOPLEFT, CharacterSelect___CONTAINER, FRAMEPOINT_TOPRIGHT, (((32)*1.0) / 1800.), 0.) // INLINED!!
			call BlzFrameSetSize(CharacterSelect___CHINGHO, (((CharacterSelect___CHINGHO_WIDTH)*1.0) / 1800.), (((CharacterSelect___CHINGHO_HEIGHT)*1.0) / 1800.)) // INLINED!!
			set CharacterSelect___CHINGHO_HEADER_BACKDROP=BlzCreateFrame("MyTextBox", CharacterSelect___CHINGHO, 0, 0)
			set CharacterSelect___CHINGHO_HEADER_TEXT=BlzCreateFrame("MyTextLarge", CharacterSelect___CHINGHO, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___CHINGHO_HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___CHINGHO, FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetText(CharacterSelect___CHINGHO_HEADER_TEXT, "칭호 선택")
			call BlzFrameSetPoint(CharacterSelect___CHINGHO_HEADER_BACKDROP, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___CHINGHO_HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
			call BlzFrameSetPoint(CharacterSelect___CHINGHO_HEADER_BACKDROP, FRAMEPOINT_TOPRIGHT, CharacterSelect___CHINGHO_HEADER_TEXT, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			set CharacterSelect___CHINGHO_PAGE_NEXT=BlzCreateFrame("ChinghoSelectPageNextButton", CharacterSelect___CHINGHO, 0, 0)
			call BlzFrameSetPoint((CharacterSelect___CHINGHO_PAGE_NEXT ), ( FRAMEPOINT_BOTTOMRIGHT ), ( CharacterSelect___CHINGHO ), ( FRAMEPOINT_BOTTOMRIGHT ), (( - 16 )*1.0) / 1800., (( 16)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((CharacterSelect___CHINGHO_PAGE_NEXT ), (( 48 )*1.0) / 1800., (( 48)*1.0) / 1800.) // INLINED!!
			set f=BlzGetFrameByName("ChinghoSelectPageNextButtonText", 0)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, CharacterSelect___CHINGHO_PAGE_NEXT, FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetText(f, "▶")
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CHINGHO_PAGE_NEXT, FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CHINGHO_PAGE_NEXT, FRAMEEVENT_MOUSE_LEAVE)
			set CharacterSelect___CHINGHO_PAGE_PREV=BlzCreateFrame("ChinghoSelectPagePrevButton", CharacterSelect___CHINGHO, 0, 0)
			call BlzFrameSetPoint((CharacterSelect___CHINGHO_PAGE_PREV ), ( FRAMEPOINT_BOTTOMRIGHT ), ( CharacterSelect___CHINGHO_PAGE_NEXT ), ( FRAMEPOINT_BOTTOMLEFT ), (( - 16 )*1.0) / 1800., (( 0)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((CharacterSelect___CHINGHO_PAGE_PREV ), (( 48 )*1.0) / 1800., (( 48)*1.0) / 1800.) // INLINED!!
			set f=BlzGetFrameByName("ChinghoSelectPagePrevButtonText", 0)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, CharacterSelect___CHINGHO_PAGE_PREV, FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetText(f, "◀")
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CHINGHO_PAGE_PREV, FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CHINGHO_PAGE_PREV, FRAMEEVENT_MOUSE_LEAVE)
			
			call s__CharacterSelect_createChinghoWidget(- 2)
			call s__CharacterSelect_createChinghoWidget('C000')
			call s__CharacterSelect_createChinghoWidget('C001')
			call s__CharacterSelect_createChinghoWidget('C002')
			call s__CharacterSelect_createChinghoWidget('C003')
			call s__CharacterSelect_createChinghoWidget('C004')
			call s__CharacterSelect_createChinghoWidget('C005')
			call s__CharacterSelect_createChinghoWidget('C006')
			call s__CharacterSelect_createChinghoWidget('C007')
			call s__CharacterSelect_createChinghoWidget('C008')
			
			set CharacterSelect___PANEL_CONTAINER=BlzCreateFrame("MBEdge", CharacterSelect___CONTAINER, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___PANEL_CONTAINER, FRAMEPOINT_TOPLEFT, CharacterSelect___CONTAINER, FRAMEPOINT_BOTTOMLEFT, 0., (((- 32)*1.0) / 1800.)) // INLINED!!
			call BlzFrameSetSize(CharacterSelect___PANEL_CONTAINER, (((CharacterSelect___WIDTH)*1.0) / 1800.), (((CharacterSelect___CHINGHO_HEIGHT - 32 - CharacterSelect___HEIGHT)*1.0) / 1800.)) // INLINED!!
			set CharacterSelect___PANEL_HEADER_BACKDROP=BlzCreateFrame("MyTextBox", CharacterSelect___PANEL_CONTAINER, 0, 0)
			set CharacterSelect___PANEL_HEADER_TEXT=BlzCreateFrame("MyTextLarge", CharacterSelect___PANEL_CONTAINER, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___PANEL_HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___PANEL_CONTAINER, FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetText(CharacterSelect___PANEL_HEADER_TEXT, "캐릭터&칭호")
			call BlzFrameSetPoint(CharacterSelect___PANEL_HEADER_BACKDROP, FRAMEPOINT_BOTTOMLEFT, CharacterSelect___PANEL_HEADER_TEXT, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
			call BlzFrameSetPoint(CharacterSelect___PANEL_HEADER_BACKDROP, FRAMEPOINT_TOPRIGHT, CharacterSelect___PANEL_HEADER_TEXT, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
			
			set CharacterSelect___CONFIRM=BlzCreateFrame("CharacterSelectConfirmButton", CharacterSelect___CONTAINER, 0, 0)
			call BlzFrameSetPoint(CharacterSelect___CONFIRM, FRAMEPOINT_BOTTOM, origin, FRAMEPOINT_BOTTOM, 0., 0.025)
			call BlzFrameSetSize(CharacterSelect___CONFIRM, (((128)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
			set f=BlzGetFrameByName("CharacterSelectConfirmButtonText", 0)
			call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, CharacterSelect___CONFIRM, FRAMEPOINT_CENTER, 0., 0.)
			call BlzFrameSetText(f, "결정")
			call BlzFrameSetScale(CharacterSelect___CONFIRM, 1.5)
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CONFIRM, FRAMEEVENT_CONTROL_CLICK)
			call BlzTriggerRegisterFrameEvent(CharacterSelect___MAIN_TRIGGER, CharacterSelect___CONFIRM, FRAMEEVENT_MOUSE_LEAVE)
			
			loop
				exitwhen i >= PLAYER_MAX
				set CharacterSelect___CHINGHO_PAGE_INDEX[i]=0
				if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
					set CharacterSelect_CHINGHO_ID[i]=- 2
					set CharacterSelect_ID[i]=- 2
					set CharacterSelect___READY[i]=false
					set s__CharacterSelect_PANEL[i]=s__CharacterInfoPanel_create(Player(i))
					
					call TriggerRegisterPlayerEventLeave(CharacterSelect___MAIN_TRIGGER, Player(i))
					call s__CharacterSelect_playerSetChinghoPage(Player(i) , 0)
				else
					set CharacterSelect_CHINGHO_ID[i]='C000'
					set CharacterSelect_ID[i]=0
					set s__CharacterSelect_PANEL[i]=0
					set CharacterSelect___READY[i]=true
				endif
				set i=i + 1
			endloop
			
			set origin=null
			set f=null
  endfunction



//library CharacterSelect ends
//library Circle:




  function s__Circle_timerAction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
   local boolean want_kill= false
			set s__Circle_timeout[this]=s__Circle_timeout[this] + TIMER_TICK
			if s__Circle_timeout[this] >= s__Circle_fadepoint[this] and s__Circle_fadepoint[this] >= 0. then
				if s__Circle_overtime[this] > 0. then
					set s__Circle_fade[this]=- 1. / s__Circle_overtime[this]
					set s__Circle_fadepoint[this]=- 1.
				else
					set want_kill=true
				endif
			endif
			set s__Circle_alpha[this]=s__Circle_alpha[this] + s__Circle_fade[this] * TIMER_TICK
			if s__Circle_alpha[this] > 1 and s__Circle_fade[this] > 0. then
				set s__Circle_alpha[this]=1.
			endif
			if s__Circle_alpha[this] * s__Circle_alpha_max[this] > 1. then
				call s__Effect_setAlpha(this,255)
			elseif s__Circle_alpha[this] * s__Circle_alpha_max[this] < 0. then
				call s__Effect_setAlpha(this,0)
			else
				call s__Effect_setAlpha(this,R2I(s__Circle_alpha[this] * 255 * s__Circle_alpha_max[this]))
			endif
			if s__Circle_alpha[this] < .0 and s__Circle_fade[this] < 0. then
				set want_kill=true
			endif
			if want_kill then
				call sc__Object_deallocate(this)
			endif
  endfunction

  function s__Circle_setFadeOutPoint takes integer this,real point,real overtime returns nothing
			set s__Circle_timeout[this]=0.
			set s__Circle_fadepoint[this]=point
			set s__Circle_overtime[this]=overtime
  endfunction

  function s__Circle_fadeIn takes integer this,real overtime returns nothing
			if overtime > 0. then
				set s__Circle_timeout[this]=0.
				set s__Circle_alpha[this]=0.
				call s__Effect_setAlpha(this,0)
				set s__Circle_fade[this]=1. / overtime
			else
				call s__Effect_setAlpha(this,255)
				set s__Circle_fade[this]=0.
				set s__Circle_alpha[this]=1.
				set s__Circle_timeout[this]=0.
			endif
  endfunction

  function s__Circle_create takes real x,real y,real z,real radius returns integer
   local integer this= s__Circle__allocate(s__Circle_PATH_TEMP , x , y , z , 270.)
			call s__Effect_setScale(this,radius / 100.)
			set s__Circle_main_timer[this]=s__Timer_new(this)
			call TimerStart((s__Circle_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Circle_timerAction)) // INLINED!!
			set s__Circle_PATH_TEMP="Effects\\RCircle.mdl"
			return this
  endfunction

  function s__Circle_createSpecific takes string path,real x,real y,real z,real radius returns integer
			set s__Circle_PATH_TEMP=path
			return s__Circle_create(x , y , z , radius)
  endfunction

  function s__Circle_onDestroy takes integer this returns nothing
			call ReleaseTimer((s__Circle_main_timer[this])) // INLINED!!
			set s__Circle_main_timer[this]=null
  endfunction




  function s__TargetCircle_create takes integer target,player owner returns integer
   local integer this= s__TargetCircle__allocate("UI\\Feedback\\Target\\Target.mdl" , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + 2.0 , 270.)
			set s__Object_movement[this]=sc__Movement_create(this , 0 , 0)
			call sc__Movement__set_target(s__Object_movement[this],target)
			set s__Movement_flag_target_attatch[s__Object_movement[this]]=true
			call s__Effect_setScale(this,1.5)
			call s__Effect_setDuration(this,1.5)
			return this
  endfunction

  function s__TargetCircle_onDestroy takes integer this returns nothing
			set s__TargetCircle_owner[this]=null
  endfunction



//library Circle ends
//library Guardians:




  function s__Guardian_guardianDeath takes nothing returns nothing
   local integer this= DEATH_UNIT
   local integer i= 0
   local unit u= null
   local integer ud= 0
			if this <= 0 or s__Unit_prototype_class[this] != "Guardian" then
				return
			endif
			loop
				set u=BlzGroupUnitAt(Undead_GROUP, i)
				exitwhen u == null
				set ud=s__Unit_prototype_get(u)
				if s__Undead_position[ud] == s__Guardian_position[this] then
					call sc__Undead_encount(ud)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

  function s__Guardian_countUndeads takes integer this returns integer
   local integer i= 0
   local integer j= 0
   local unit u= null
   local integer ud= 0
   local real dist= 0.
			set s__Guardian_target[this]=0
			loop
				set u=BlzGroupUnitAt(Undead_GROUP, i)
				exitwhen u == null
				set ud=s__Unit_prototype_get(u)
				if (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((ud))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( s__Guardian_acquire_range[this])*1.0))) then // INLINED!!
					if j == 0 then
						set s__Guardian_target[this]=ud
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(ud) , sc__Object__get_y(ud))
					elseif s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(ud) , sc__Object__get_y(ud)) < dist then
						set s__Guardian_target[this]=ud
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(ud) , sc__Object__get_y(ud))
					endif
					set j=j + 1
				endif
				set i=i + 1
			endloop
			set u=null
			return j
  endfunction

  function s__Guardian_targetAction takes integer this returns nothing
			
  endfunction

  function s__Guardian_timerAction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			if s__Unit_prototype_isUnitType(this,UNIT_TYPE_DEAD) then
				return
			endif
			if s__Guardian_countUndeads(this) <= 0 then
				set s__Guardian_attacking[this]=false
				if s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , s__Guardian_origin_x[this] , s__Guardian_origin_y[this]) < 32. then
					call IssueImmediateOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("holdposition")) // INLINED!!
					call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Guardian_origin_yaw[this]) // INLINED!!
					set s__Guardian_moving[this]=false
				else
					if not s__Guardian_moving[this] then
						call IssuePointOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("move" ), (( s__Guardian_origin_x[this] )*1.0), (( s__Guardian_origin_y[this])*1.0)) // INLINED!!
						set s__Guardian_moving[this]=true
					endif
				endif
			else
				set s__Guardian_moving[this]=false
				if not s__Guardian_attacking[this] then
					call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Guardian_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
					set s__Guardian_attacking[this]=true
				else
					call s__Guardian_targetAction(this)
				endif
			endif
  endfunction

  function s__Guardian_create takes real x,real y,real facing,integer position returns integer
   local integer this= s__Guardian__allocate(PLAYER_GUARDIANS , 'G000' , x , y , facing)
   local integer i= 0
   local integer a= 0
			set s__Guardian_origin_x[this]=x
			set s__Guardian_origin_y[this]=y
			set s__Guardian_origin_yaw[this]=facing
			set s__Unit_prototype_class[this]="Guardian"
			set s__Guardian_position[this]=position
			loop
				exitwhen s__Unit_prototype_getAbility(this,i) <= 0
				set a=s__Unit_prototype_getAbility(this,i)
				set s__Ability_prototype_is_ai[a]=true
				set i=i + 1
			endloop
			set s__Unit_prototype_main_timer[this]=s__Timer_new(this)
			call TimerStart((s__Unit_prototype_main_timer[this] ), (( 1.0 )*1.0), ( true ), ( function s__Guardian_timerAction)) // INLINED!!
			return this
  endfunction

  function s__Guardian_onDestroy takes integer this returns nothing
			call ReleaseTimer((s__Unit_prototype_main_timer[this])) // INLINED!!
			set s__Unit_prototype_main_timer[this]=null
  endfunction

  function s__Guardian_onInit takes nothing returns nothing
			call TriggerAddCondition(DEATH_TRIGGER, Condition(function s__Guardian_guardianDeath))
  endfunction



//Implemented from module ThisUI:






  function s__GuardianFrame_refresh takes integer this returns nothing
   local real val= (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__GuardianFrame_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) / (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__GuardianFrame_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) // INLINED!!
			call BlzFrameSetVisible(s__GuardianFrame_gauge_fill[this], val > 0.05)
			call BlzFrameSetSize((s__GuardianFrame_gauge_fill[this] ), (( ( s__GuardianFrame_WIDTH - s__GuardianFrame_HEIGHT ) * val )*1.0) / 1800., (( 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetVisible(s__GuardianFrame_death[this], s__Unit_prototype_getStatus(s__GuardianFrame_target[this],STATUS_DEAD) > 0)
  endfunction

  function s__GuardianFrame_cond takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if GetLocalPlayer() == GetTriggerPlayer() then
				call BlzFrameSetEnable(s__GuardianFrame_container[this], false)
				call BlzFrameSetEnable(s__GuardianFrame_container[this], true)
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_ENTER then
					set s__GuardianFrame_in[this]=true
				elseif BlzGetTriggerFrameEvent() == FRAMEEVENT_MOUSE_LEAVE then
					set s__GuardianFrame_in[this]=false
				elseif BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_LEFT then
					if s__GuardianFrame_in[this] then
						call PanCameraToTimed(sc__Object__get_x(s__GuardianFrame_target[this]), sc__Object__get_y(s__GuardianFrame_target[this]), 0.)
					endif
				endif
			endif
  endfunction

  function s__GuardianFrame_create takes integer target,integer index returns integer
   local integer this= s__GuardianFrame__allocate()
   local integer i= 0
			set s__GuardianFrame_target[this]=target
			set s__GuardianFrame_index[this]=index
			
			set s__GuardianFrame_container[this]=BlzCreateFrameByType("BUTTON", "", FRAME_GAME_UI, "", 0)
			call BlzFrameSetPoint((s__GuardianFrame_container[this] ), ( FRAMEPOINT_TOPLEFT ), ( FRAME_MINIMAP_BACKDROP ), ( FRAMEPOINT_TOPRIGHT ), (( 4 )*1.0) / 1800., (( - ( s__GuardianFrame_HEIGHT + 10 ) * index)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetSize((s__GuardianFrame_container[this] ), (( s__GuardianFrame_HEIGHT )*1.0) / 1800., (( s__GuardianFrame_HEIGHT)*1.0) / 1800.) // INLINED!!
			set s__GuardianFrame_icon[this]=BlzCreateFrameByType("BACKDROP", "", s__GuardianFrame_container[this], "", 0)
			call BlzFrameSetPoint(s__GuardianFrame_icon[this], FRAMEPOINT_TOPLEFT, s__GuardianFrame_container[this], FRAMEPOINT_TOPLEFT, 0., 0.)
			call BlzFrameSetSize((s__GuardianFrame_icon[this] ), (( s__GuardianFrame_HEIGHT )*1.0) / 1800., (( s__GuardianFrame_HEIGHT)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__GuardianFrame_icon[this], "ReplaceableTextures\\CommandButtons\\" + s__UnitData_getIconPath((GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__GuardianFrame_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) + ".blp", 0, true) // INLINED!!
			set s__GuardianFrame_gauge_backdrop[this]=BlzCreateFrameByType("BACKDROP", "", s__GuardianFrame_container[this], "", 0)
			call BlzFrameSetPoint(s__GuardianFrame_gauge_backdrop[this], FRAMEPOINT_BOTTOMLEFT, s__GuardianFrame_icon[this], FRAMEPOINT_BOTTOMRIGHT, 0., 0.)
			call BlzFrameSetSize((s__GuardianFrame_gauge_backdrop[this] ), (( s__GuardianFrame_WIDTH - s__GuardianFrame_HEIGHT )*1.0) / 1800., (( 8)*1.0) / 1800.) // INLINED!!
			call BlzFrameSetTexture(s__GuardianFrame_gauge_backdrop[this], "ReplaceableTextures\\teamcolor\\teamcolor00.blp", 0, true)
			call BlzFrameSetAlpha(s__GuardianFrame_gauge_backdrop[this], 128)
			set s__GuardianFrame_gauge_fill[this]=BlzCreateFrameByType("BACKDROP", "", s__GuardianFrame_container[this], "", 0)
			call BlzFrameSetPoint(s__GuardianFrame_gauge_fill[this], FRAMEPOINT_BOTTOMLEFT, s__GuardianFrame_gauge_backdrop[this], FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetTexture(s__GuardianFrame_gauge_fill[this], "ReplaceableTextures\\teamcolor\\teamcolor06.blp", 0, true)
			call BlzFrameSetVisible(s__GuardianFrame_gauge_fill[this], false)
			set s__GuardianFrame_death[this]=BlzCreateFrameByType("BACKDROP", "", s__GuardianFrame_container[this], "", 0)
			call BlzFrameSetAllPoints(s__GuardianFrame_death[this], s__GuardianFrame_icon[this])
			call BlzFrameSetTexture(s__GuardianFrame_death[this], "ReplaceableTextures\\teamcolor\\teamcolor00.blp", 0, true)
			call BlzFrameSetAlpha(s__GuardianFrame_death[this], 128)
			call BlzFrameSetVisible(s__GuardianFrame_death[this], false)
			set s__GuardianFrame_position[this]=BlzCreateFrameByType("BACKDROP", "", s__GuardianFrame_container[this], "", 0)
			call BlzFrameSetPoint(s__GuardianFrame_position[this], FRAMEPOINT_TOPLEFT, s__GuardianFrame_icon[this], FRAMEPOINT_TOPRIGHT, 0, 0)
			call BlzFrameSetSize((s__GuardianFrame_position[this] ), (( 32 )*1.0) / 1800., (( 32)*1.0) / 1800.) // INLINED!!
			if index == 0 then
				call BlzFrameSetTexture(s__GuardianFrame_position[this], "Textures\\ui_position_top", 0, true)
			elseif index == 1 then
				call BlzFrameSetTexture(s__GuardianFrame_position[this], "Textures\\ui_position_left", 0, true)
			elseif index == 2 then
				call BlzFrameSetTexture(s__GuardianFrame_position[this], "Textures\\ui_position_right", 0, true)
			elseif index == 3 then
				call BlzFrameSetTexture(s__GuardianFrame_position[this], "Textures\\ui_position_bottom", 0, true)
			else
				call BlzFrameSetTexture(s__GuardianFrame_position[this], "replaceabletextures\\commandbuttons\\btnblackicon.blp", 0, true)
			endif
			
			set s__GuardianFrame_main_trigger[this]=s__Trigger_new(this)
			set s__GuardianFrame_main_cond[this]=TriggerAddCondition(s__GuardianFrame_main_trigger[this], Condition(function s__GuardianFrame_cond))
			loop
				exitwhen i >= PLAYER_MAX
				call TriggerRegisterPlayerEvent(s__GuardianFrame_main_trigger[this], Player(i), EVENT_PLAYER_MOUSE_DOWN)
				set i=i + 1
			endloop
			call BlzTriggerRegisterFrameEvent(s__GuardianFrame_main_trigger[this], s__GuardianFrame_container[this], FRAMEEVENT_MOUSE_LEAVE)
			call BlzTriggerRegisterFrameEvent(s__GuardianFrame_main_trigger[this], s__GuardianFrame_container[this], FRAMEEVENT_MOUSE_ENTER)
			
			call s__GuardianFrame_refresh(this)
			set s__GuardianFrame_THIS[s__GuardianFrame_index[this]]=this
			return this
  endfunction

  function s__GuardianFrame_onDestroy takes integer this returns nothing
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__GuardianFrame_container[this])
	set s__GuardianFrame_container[this]=null
//end of: destroyFrame(".container")
//textmacro instance: destroyFrame(".icon")
	call BlzDestroyFrame(s__GuardianFrame_icon[this])
	set s__GuardianFrame_icon[this]=null
//end of: destroyFrame(".icon")
//textmacro instance: destroyFrame(".gauge_backdrop")
	call BlzDestroyFrame(s__GuardianFrame_gauge_backdrop[this])
	set s__GuardianFrame_gauge_backdrop[this]=null
//end of: destroyFrame(".gauge_backdrop")
//textmacro instance: destroyFrame(".gauge_fill")
	call BlzDestroyFrame(s__GuardianFrame_gauge_fill[this])
	set s__GuardianFrame_gauge_fill[this]=null
//end of: destroyFrame(".gauge_fill")
//textmacro instance: destroyFrame(".position")
	call BlzDestroyFrame(s__GuardianFrame_position[this])
	set s__GuardianFrame_position[this]=null
//end of: destroyFrame(".position")
//textmacro instance: destroyFrame(".death")
	call BlzDestroyFrame(s__GuardianFrame_death[this])
	set s__GuardianFrame_death[this]=null
//end of: destroyFrame(".death")
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__GuardianFrame_main_trigger[this], s__GuardianFrame_main_cond[this])
		call s__Trigger_remove(s__GuardianFrame_main_trigger[this])
		set s__GuardianFrame_main_trigger[this]=null
		set s__GuardianFrame_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
			set s__GuardianFrame_THIS[s__GuardianFrame_index[this]]=0
  endfunction

//Generated destructor of GuardianFrame
function s__GuardianFrame_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__GuardianFrame_V[this]!=-1) then
        return
    endif
    call s__GuardianFrame_onDestroy(this)
    set si__GuardianFrame_V[this]=si__GuardianFrame_F
    set si__GuardianFrame_F=this
endfunction




  function s__Guardians_kill takes nothing returns nothing
			call s__Unit_prototype_kill(s__Guardians_GUARDIAN[0])
			call s__Unit_prototype__set_hp(s__Guardians_GUARDIAN[0],1.)
			call s__Unit_prototype_kill(s__Guardians_GUARDIAN[1])
			call s__Unit_prototype__set_hp(s__Guardians_GUARDIAN[1],1.)
			call s__Unit_prototype_kill(s__Guardians_GUARDIAN[2])
			call s__Unit_prototype__set_hp(s__Guardians_GUARDIAN[2],1.)
			call s__Unit_prototype_kill(s__Guardians_GUARDIAN[3])
			call s__Unit_prototype__set_hp(s__Guardians_GUARDIAN[3],1.)
  endfunction

  function s__Guardians_addLevel takes nothing returns nothing
   local integer ef= 0
   local integer i= 0
			loop
				exitwhen i >= 4
				call s__Unit_prototype__set_level(s__Guardians_GUARDIAN[i],(s__Unit_prototype_level_true[(s__Guardians_GUARDIAN[i])]) + 1) // INLINED!!
				set ef=s__Effect_setDuration(s__Effect_createAttatched("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Guardians_GUARDIAN[i])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
				set i=i + 1
			endloop
  endfunction

  function s__Guardians_refreshFrame takes nothing returns nothing
			call s__GuardianFrame_refresh(s__GuardianFrame_THIS[0])
			call s__GuardianFrame_refresh(s__GuardianFrame_THIS[1])
			call s__GuardianFrame_refresh(s__GuardianFrame_THIS[2])
			call s__GuardianFrame_refresh(s__GuardianFrame_THIS[3])
  endfunction

  function s__Guardians_init takes nothing returns nothing
   local integer i= 0
			set s__Guardians_GUARDIAN[0]=s__Guardian_create(GetRectCenterX(gg_rct_GuardianNorth) , GetRectCenterY(gg_rct_GuardianNorth) , 90. , 0)
			set s__Guardians_GUARDIAN[1]=s__Guardian_create(GetRectCenterX(gg_rct_GuardianWest) , GetRectCenterY(gg_rct_GuardianWest) , 180. , 1)
			set s__Guardians_GUARDIAN[2]=s__Guardian_create(GetRectCenterX(gg_rct_GuardianEast) , GetRectCenterY(gg_rct_GuardianEast) , 0. , 2)
			set s__Guardians_GUARDIAN[3]=s__Guardian_create(GetRectCenterX(gg_rct_GuardianSouth) , GetRectCenterY(gg_rct_GuardianSouth) , 270. , 3)
			loop
				exitwhen i >= 4
				set s__Unit_prototype_is_revive[s__Guardians_GUARDIAN[i]]=true
				call s__Unit_prototype__set_level(s__Guardians_GUARDIAN[i],10)
				call s__GuardianFrame_create(s__Guardians_GUARDIAN[i] , i)
				set i=i + 1
			endloop
			set s__Guardians_FRAME_REFRESH_TIMER=s__Timer_new(0)
			call TimerStart((s__Guardians_FRAME_REFRESH_TIMER ), (( 0.25 )*1.0), ( true ), ( function s__Guardians_refreshFrame)) // INLINED!!
  endfunction



//library Guardians ends
//library Missile:





		//group group_generic = null


		
  function s__Missile__get_curve takes integer this returns integer
			return (s__Movement_curve_true[(s__Object_movement[this])]) // INLINED!!
  endfunction

  function s__Missile__set_curve takes integer this,integer cv returns nothing
			call sc__Movement__set_curve(s__Object_movement[this],cv)
  endfunction

  function s__Missile__get_flag_target takes integer this returns boolean
			return s__Movement_flag_target[s__Object_movement[this]]
  endfunction

  function s__Missile__get_flag_curve takes integer this returns boolean
			return s__Movement_flag_curve[s__Object_movement[this]]
  endfunction

  function s__Missile__get_velo takes integer this returns real
			return s__Movement_velo[s__Object_movement[this]]
  endfunction

  function s__Missile__set_velo takes integer this,real nv returns nothing
			set s__Movement_velo[s__Object_movement[this]]=nv
  endfunction

  function s__Missile_setCollision takes integer this,real v returns nothing
			set s__Missile_radius_target[this]=v
			set s__Missile_flag_collision[this]=true
  endfunction

  function s__Missile__get_radius_wave takes integer this returns real
			return s__Missile_radius_wave_true[this]
  endfunction

  function s__Missile__set_radius_wave takes integer this,real nv returns nothing
			set s__Missile_flag_wave[this]=nv > 0.
			set s__Missile_radius_wave_true[this]=nv
  endfunction

  function s__Missile_setWave takes integer this,real rad returns nothing
			call s__Missile__set_radius_wave(this,rad)
  endfunction

  function s__Missile__get_radius_explosion takes integer this returns real
			return s__Missile_radius_explosion_true[this]
  endfunction

  function s__Missile__set_radius_explosion takes integer this,real nv returns nothing
			set s__Missile_flag_explosion[this]=nv > 0.
			set s__Missile_radius_explosion_true[this]=nv
  endfunction

  function s__Missile_setExplosion takes integer this,real rad returns nothing
			call s__Missile__set_radius_explosion(this,rad)
  endfunction

  function s__Missile__get_z_velo takes integer this returns real
			return s__Movement_z_velo[s__Object_movement[this]]
  endfunction

  function s__Missile__set_z_velo takes integer this,real nv returns nothing
			set s__Movement_z_velo[s__Object_movement[this]]=nv
  endfunction

  function s__Missile__get_gravity takes integer this returns real
			return s__Movement_gravity[s__Object_movement[this]]
  endfunction

  function s__Missile__set_gravity takes integer this,real nv returns nothing
			set s__Movement_gravity[s__Object_movement[this]]=nv
  endfunction

  function s__Missile__get_target_x takes integer this returns real
			return s__Movement_target_x[s__Object_movement[this]]
  endfunction

  function s__Missile__get_target_y takes integer this returns real
			return s__Movement_target_y[s__Object_movement[this]]
  endfunction

  function s__Missile__get_target_z takes integer this returns real
			return s__Movement_target_z[s__Object_movement[this]]
  endfunction

  function s__Missile_setTargetLocation takes integer this,real x,real y,real z returns nothing
			call sc__Movement_setTargetLocation(s__Object_movement[this],x , y , z)
  endfunction

  function s__Missile__get_target takes integer this returns integer
			return s__Missile_target_true[this]
  endfunction

  function s__Missile__set_target takes integer this,integer nt returns nothing
			set s__Missile_target_true[this]=nt
			call sc__Movement__set_target(s__Object_movement[this],nt)
  endfunction

  function s__Missile_setTarget takes integer this,integer nt returns nothing
			call s__Missile__set_target(this,nt)
  endfunction

  function s__Missile_explosionFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Missile_executeExplosion takes integer this,integer target returns nothing
			call sc__Missile_damageTarget(this,target)
  endfunction

//Implemented from module ExplosionModule:


		


  function s__Missile_setDamagePosition takes integer this,real x,real y returns nothing
			set s__Missile_damage_x[this]=x
			set s__Missile_damage_y[this]=y
  endfunction

  function s__Missile_applyDamageFlag takes integer this returns nothing
			call s__Damage_setFlag(s__Missile_damage_type[this] , s__Missile_attack_type[this] , s__Missile_is_target[this] , s__Missile_is_aoe[this] , s__Missile_interval_type[this] , s__Missile_vector_type[this] , s__Missile_is_onhit[this] , s__Missile_is_ranged[this])
			set DAMAGE_ID=s__Missile_damage_id[this]
			set USE_DAMAGE_POSITION=s__Missile_use_damage_position[this]
			if s__Missile_use_damage_position[this] then
				set DAMAGE_X=s__Missile_damage_x[this]
				set DAMAGE_Y=s__Missile_damage_y[this]
			endif
  endfunction

  function s__Missile_damageTarget takes integer this,integer target returns real
			call s__Missile_applyDamageFlag(this)
			return (s__Damage_unitDamageTarget((s__Missile_owner[this]) , (target ) , (( s__Missile_damage[this] )*1.0) , ( s__Missile_weapon_type[this]))) // INLINED!!
  endfunction

  function s__Missile_setDamageFlag takes integer this,integer damage,integer attack,boolean target,boolean aoe,integer interval,integer vector,boolean onhit,boolean ranged returns nothing
			set s__Missile_damage_type[this]=damage
			set s__Missile_attack_type[this]=attack
			set s__Missile_is_target[this]=target
			set s__Missile_is_aoe[this]=aoe
			set s__Missile_interval_type[this]=interval
			set s__Missile_vector_type[this]=vector
			set s__Missile_is_onhit[this]=onhit
			set s__Missile_is_ranged[this]=ranged
  endfunction

  function s__Missile_damageFlagTemplateMeleeAttack takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false)
  endfunction

  function s__Missile_damageFlagTemplateRangedAttack takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Missile_damageFlagTemplateMagicalExplosion takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Missile_damageFlagTemplatePhysicalExplosion takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Missile_damageFlagTemplateTargetMagic takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Missile_damageFlagTemplateDOT takes integer this returns nothing
			call s__Missile_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_ETC , false , false , INTERVAL_TYPE_PERIODIC , VECTOR_TYPE_INNER , false , true)
  endfunction



  function s__Missile_affectFilter takes integer this,integer target returns boolean
			if ( not s__Missile_affect_enemy[this] and (IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Missile_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
				return false
			elseif ( not s__Missile_affect_ally[this] and (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Missile_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
				return false
			elseif ( not s__Missile_affect_invincible[this] and s__Unit_prototype_getStatus(target,STATUS_INVINCIBLE) > 0 ) then
				return false
			elseif ( not s__Missile_affect_evasion[this] and s__Unit_prototype_getStatus(target,STATUS_EVASION) > 0 ) then
				return false
			elseif ( not s__Missile_affect_self[this] and target == s__Missile_owner[this] ) then
				return false
			elseif s__Unit_prototype_isUnitType(target,UNIT_TYPE_DEAD) then
				return false
			else
				return true
			endif
  endfunction


  function s__Missile_rangeFilter takes integer this,integer target returns boolean
			return (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( (s__Missile_radius_explosion_true[(this)]))*1.0))) // INLINED!!
  endfunction


		

  function s__Missile_explosionFilter takes integer this,integer target returns boolean
			if not s__Missile_affectFilter(this,target) then
				return false
			elseif not sc__Missile_rangeFilter(this,target) then
				return false
			elseif not sc__Missile_explosionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Missile_explosionAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__Missile_explosionFilter(this,s__Unit_prototype_get(u)) then
					call sc__Missile_executeExplosion(this,s__Unit_prototype_get(u))
					call GroupAddUnit(s__Missile_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

//Implemented from module WaveModule:


  function s__Missile_waveFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Missile_waveRangeFilter takes integer this,integer target returns boolean
			return (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( (s__Missile_radius_wave_true[(this)]))*1.0))) // INLINED!!
  endfunction

  function s__Missile_waveFilter takes integer this,integer target returns boolean
			if not s__Missile_affectFilter(this,target) then
				return false
			elseif not sc__Missile_waveRangeFilter(this,target) then
				return false
			elseif not sc__Missile_waveFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Missile_executeWave takes integer this,integer target returns nothing
			call s__Missile_damageTarget(this,target)
  endfunction

  function s__Missile_waveAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__Missile_waveFilter(this,s__Unit_prototype_get(u)) and not IsUnitInGroup(u, s__Missile_group_wave[this]) then
					call sc__Missile_executeWave(this,s__Unit_prototype_get(u))
					call GroupAddUnit(s__Missile_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

//Implemented from module TargetModule:


  function s__Missile_collisionFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Missile_collisionFilter takes integer this,integer target returns boolean
			if not s__Missile_affectFilter(this,target) then
				return false
			elseif not sc__Missile_collisionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Missile_targetFilterAdditional takes integer this,integer target returns boolean
			return true
  endfunction

  function s__Missile_targetFilter takes integer this,integer target returns boolean
			if not s__Missile_affectFilter(this,target) then
				return false
			elseif not sc__Missile_targetFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Missile_executeTarget takes integer this,integer target returns nothing
			call s__Missile_damageTarget(this,target)
  endfunction

  function s__Missile_collisionAction takes integer this returns boolean
   local integer i= 0
   local unit u= null
   local integer uu= 0
   local boolean b= false
			call GroupClear((s__Missile_group_collision[this])) // INLINED!!
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				set uu=s__Unit_prototype_get(u)
				if s__Missile_collisionFilter(this,uu) and s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(uu) + s__Object_pivot_x[uu] , sc__Object__get_y(uu) + s__Object_pivot_y[uu]) <= s__Missile_radius_target[this] + BlzGetUnitCollisionSize(u) then
					call GroupAddUnit(s__Missile_group_collision[this], u)
				endif
				set i=i + 1
			endloop
			set u=s__Group_getNearest(s__Missile_group_collision[this] , sc__Object__get_x(this) , sc__Object__get_y(this) , null)
			if u != null then
				if s__Missile_targetFilter(this,s__Unit_prototype_get(u)) then
					call sc__Missile_executeTarget(this,s__Unit_prototype_get(u))
				endif
				call GroupAddUnit(s__Missile_group_wave[this], u)
				set b=true
			endif
			set u=null
			return b
  endfunction

  function s__Missile_targetLocationAction takes integer this returns boolean
   local boolean b= false
			if s__Math_distancePoints3D(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_z(this) , (s__Movement_target_x[s__Object_movement[(this)]]) , (s__Movement_target_y[s__Object_movement[(this)]]) , (s__Movement_target_z[s__Object_movement[(this)]])) <= (s__Movement_velo[s__Object_movement[(this)]]) * TIMER_TICK * 0.5 then // INLINED!!
				set b=true
			endif
			return b
  endfunction

  function s__Missile_targetAction takes integer this returns boolean
   local boolean b= false
			if s__Math_distancePoints3D(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_z(this) , sc__Object__get_x((s__Missile_target_true[(this)])) + s__Object_pivot_x[(s__Missile_target_true[(this)])] , sc__Object__get_y((s__Missile_target_true[(this)])) + s__Object_pivot_y[(s__Missile_target_true[(this)])] , sc__Object__get_z((s__Missile_target_true[(this)])) + s__Object_pivot_z[(s__Missile_target_true[(this)])]) <= s__Missile_radius_target[this] then // INLINED!!
				if s__Missile_targetFilter(this,(s__Missile_target_true[(this)])) then // INLINED!!
					call sc__Missile_executeTarget(this,(s__Missile_target_true[(this)])) // INLINED!!
					call GroupAddUnit(s__Missile_group_wave[this], (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Missile_target_true[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
				endif
				set b=true
			endif
			return b
  endfunction


  function s__Missile_killFilter takes integer this returns boolean
			return true
  endfunction

  function s__Missile_killRequest takes integer this returns nothing
			if not s__Missile_want_destroy[this] then
				set s__Missile_want_destroy[this]=sc__Missile_killFilter(this)
				set s__Missile_want_kill[this]=s__Missile_want_destroy[this]
			endif
  endfunction

  function s__Missile_onBound takes integer this returns nothing
			set s__Missile_want_kill[this]=true
  endfunction

  function s__Missile_beforeExplosion takes integer this returns nothing

  endfunction

  function s__Missile_afterExplosion takes integer this returns nothing

  endfunction

  function s__Missile_beforeWave takes integer this returns nothing

  endfunction

  function s__Missile_afterWave takes integer this returns nothing

  endfunction

  function s__Missile_periodicAction takes integer this returns nothing

  endfunction

  function s__Missile_missileAction takes integer this returns nothing
			if s__Missile_want_kill[this] then
				return
			endif
			if (s__Missile_target_true[(this)]) != 0 then // INLINED!!
				call s__Object_setDirection3D(this,sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_z(this) , sc__Object__get_x((s__Missile_target_true[(this)])) + s__Object_pivot_x[(s__Missile_target_true[(this)])] , sc__Object__get_y((s__Missile_target_true[(this)])) + s__Object_pivot_y[(s__Missile_target_true[(this)])] , sc__Object__get_z((s__Missile_target_true[(this)])) + s__Object_pivot_z[(s__Missile_target_true[(this)])]) // INLINED!!
				if s__Missile_targetAction(this) then
					set s__Missile_want_kill[this]=true
				endif
			else
				if s__Movement_z_velo[s__Object_movement[this]] < 0. and sc__Object__get_z(this) <= 0. then
					call sc__Missile_onBound(this)
				endif
			endif
			if s__Missile_flag_collision[this] and not s__Missile_want_kill[this] then
				if s__Missile_collisionAction(this) then
					set s__Missile_want_kill[this]=true
				endif
			endif
			if s__Missile_flag_wave[this] and not s__Missile_want_kill[this] then
				set s__Missile_wave_timeout[this]=s__Missile_wave_timeout[this] + TIMER_TICK
				if s__Missile_wave_timeout[this] >= s__Missile_wave_interval[this] or s__Missile_wave_interval[this] <= 0. then
					call sc__Missile_beforeWave(this)
					call s__Missile_waveAction(this)
					call sc__Missile_afterWave(this)
					set s__Missile_wave_timeout[this]=s__Missile_wave_timeout[this] - s__Missile_wave_interval[this]
				endif
			endif
  endfunction

  function s__Missile_timerAction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			call s__Missile_missileAction(this)
			call sc__Missile_periodicAction(this)
			if s__Missile_want_kill[this] then
				if s__Missile_flag_explosion[this] then
					call sc__Missile_beforeExplosion(this)
					call s__Missile_explosionAction(this)
					call sc__Missile_afterExplosion(this)
				endif
				call s__Missile_killRequest(this)
			endif
			if s__Missile_want_destroy[this] then
				if s__Missile_want_kill[this] then
					call s__Effect_kill(this)
				else
					call s__Effect_remove(this)
				endif
			endif
  endfunction

  function s__Missile_create takes integer owner,string path,real x,real y,real z,real yaw returns integer
   local integer this= s__Missile__allocate(path , x , y , z , yaw)
			set s__Object_movement[this]=sc__Movement_create(this , 0. , yaw)
			set s__Missile_owner[this]=owner
			set s__Missile_main_timer[this]=s__Timer_new(this)
			//set .group_generic 		= Group.new()
			set s__Missile_group_wave[this]=s__Group_new()
			set s__Missile_group_collision[this]=s__Group_new()
			call TimerStart((s__Missile_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Missile_timerAction)) // INLINED!!
			return this
  endfunction

  function s__Missile_onDestroy takes integer this returns nothing
			call ReleaseTimer((s__Missile_main_timer[this])) // INLINED!!
			
			if s__Missile_group_link[this] > 0 then
				call s__MissileGroup_remove(s__Missile_group_link[this],this)
			
			else
				
				if s__Missile_group_wave[this] != null then
					call ReleaseGroup((s__Missile_group_wave[this])) // INLINED!!
				endif
			endif
			//call Group.release(.group_generic)
			call ReleaseGroup((s__Missile_group_collision[this])) // INLINED!!
			set s__Missile_main_timer[this]=null
			//set .group_generic 		= null
			set s__Missile_group_wave[this]=null
			set s__Missile_group_collision[this]=null
			set s__Missile_group_link[this]=0
  endfunction



//library Missile ends
//library Movement:










  function s__Movement__get_x takes integer this returns real
			return sc__Object__get_x(s__Actor_actor[this])
  endfunction

  function s__Movement__get_y takes integer this returns real
			return sc__Object__get_y(s__Actor_actor[this])
  endfunction

  function s__Movement__get_z takes integer this returns real
			return sc__Object__get_z(s__Actor_actor[this])
  endfunction

  function s__Movement__get_target takes integer this returns integer
			return s__Movement_target_true[this]
  endfunction

  function s__Movement__set_target takes integer this,integer nt returns nothing
			set s__Movement_target_true[this]=nt
			set s__Movement_flag_target[this]=nt != 0
  endfunction

  function s__Movement__get_curve takes integer this returns integer
			return s__Movement_curve_true[this]
  endfunction

  function s__Movement__set_curve takes integer this,integer cv returns nothing
			set s__Movement_curve_true[this]=cv
			set s__Movement_flag_curve[this]=cv > 0
  endfunction

  function s__Movement_setTargetLocation takes integer this,real x,real y,real z returns nothing
			set s__Movement_flag_target_location[this]=true
			set s__Movement_target_x[this]=x
			set s__Movement_target_y[this]=y
			set s__Movement_target_z[this]=z
  endfunction

  function s__Movement_carculateNextPosition takes integer this returns nothing
   local real np= 0.
   local real ny= 0.
			if s__Movement_flag_target[this] then
				if s__Movement_flag_target_attatch[this] then
					set s__Movement_next_x[this]=sc__Object__get_x(sc__Movement__get_target(this))
					set s__Movement_next_y[this]=sc__Object__get_y(sc__Movement__get_target(this))
					set s__Movement_next_z[this]=sc__Object__get_z(sc__Movement__get_target(this))
				elseif s__Movement_flag_curve[this] then
					set s__Curve_value[(s__Movement_curve_true[(this)])]=s__Curve_value[(s__Movement_curve_true[(this)])] + ( TIMER_TICK / s__Curve_overtime[(s__Movement_curve_true[(this)])] ) // INLINED!!
					call s__Curve_setX((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , sc__Object__get_x(sc__Movement__get_target(this)) + s__Object_pivot_x[sc__Movement__get_target(this)]) // INLINED!!
					call s__Curve_setY((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , sc__Object__get_y(sc__Movement__get_target(this)) + s__Object_pivot_y[sc__Movement__get_target(this)]) // INLINED!!
					call s__Curve_setZ((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , sc__Object__get_z(sc__Movement__get_target(this)) + s__Object_pivot_z[sc__Movement__get_target(this)]) // INLINED!!
					set s__Movement_next_x[this]=sc__Object__get_x((s__Movement_curve_true[(this)])) // INLINED!!
					set s__Movement_next_y[this]=sc__Object__get_y((s__Movement_curve_true[(this)])) // INLINED!!
					set s__Movement_next_z[this]=sc__Object__get_z((s__Movement_curve_true[(this)])) // INLINED!!
					set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
					set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this])
				else
					set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , sc__Object__get_x(sc__Movement__get_target(this)) + s__Object_pivot_x[sc__Movement__get_target(this)] , sc__Object__get_y(sc__Movement__get_target(this)) + s__Object_pivot_y[sc__Movement__get_target(this)] , sc__Object__get_z(sc__Movement__get_target(this)) + s__Object_pivot_z[sc__Movement__get_target(this)])
					set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_x(sc__Movement__get_target(this)) + s__Object_pivot_x[sc__Movement__get_target(this)] , sc__Object__get_y(sc__Movement__get_target(this)) + s__Object_pivot_y[sc__Movement__get_target(this)])
					set s__Movement_next_x[this]=(((sc__Object__get_x(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK * Cos(Deg2Rad(np)) )*1.0) * Cos((( ny)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Movement_next_y[this]=(((sc__Object__get_y(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK * Cos(Deg2Rad(np)) )*1.0) * Sin((( ny)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Movement_next_z[this]=sc__Object__get_z(s__Actor_actor[this]) - Sin(Deg2Rad(np)) * s__Movement_velo[this] * TIMER_TICK
				endif
			elseif s__Movement_flag_target_location[this] then
				if s__Movement_flag_curve[this] then
					set s__Curve_value[(s__Movement_curve_true[(this)])]=s__Curve_value[(s__Movement_curve_true[(this)])] + ( TIMER_TICK / s__Curve_overtime[(s__Movement_curve_true[(this)])] ) // INLINED!!
					call s__Curve_setX((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , s__Movement_target_x[this]) // INLINED!!
					call s__Curve_setY((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , s__Movement_target_y[this]) // INLINED!!
					call s__Curve_setZ((s__Movement_curve_true[(this)]),INDEX_POINT_LAST , s__Movement_target_z[this]) // INLINED!!
					set s__Movement_next_x[this]=sc__Object__get_x((s__Movement_curve_true[(this)])) // INLINED!!
					set s__Movement_next_y[this]=sc__Object__get_y((s__Movement_curve_true[(this)])) // INLINED!!
					set s__Movement_next_z[this]=sc__Object__get_z((s__Movement_curve_true[(this)])) // INLINED!!
					set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
					set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this])
				else
					set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , s__Movement_target_x[this] , s__Movement_target_y[this] , s__Movement_target_z[this])
					set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , s__Movement_target_x[this] , s__Movement_target_y[this])
					set s__Movement_next_x[this]=(((sc__Object__get_x(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK * Cos(Deg2Rad(np)) )*1.0) * Cos((( ny)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Movement_next_y[this]=(((sc__Object__get_y(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK * Cos(Deg2Rad(np)) )*1.0) * Sin((( ny)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Movement_next_z[this]=sc__Object__get_z(s__Actor_actor[this]) - Sin(Deg2Rad(np)) * s__Movement_velo[this] * TIMER_TICK
				endif
			elseif s__Movement_flag_curve[this] then
				set s__Curve_value[(s__Movement_curve_true[(this)])]=s__Curve_value[(s__Movement_curve_true[(this)])] + ( TIMER_TICK / s__Curve_overtime[(s__Movement_curve_true[(this)])] ) // INLINED!!
				set s__Movement_next_x[this]=sc__Object__get_x((s__Movement_curve_true[(this)])) // INLINED!!
				set s__Movement_next_y[this]=sc__Object__get_y((s__Movement_curve_true[(this)])) // INLINED!!
				set s__Movement_next_z[this]=sc__Object__get_z((s__Movement_curve_true[(this)])) // INLINED!!
				set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
				set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this])
			else
				set s__Movement_next_x[this]=(((sc__Object__get_x(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK )*1.0) * Cos((( s__Movement_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__Movement_next_y[this]=(((sc__Object__get_y(s__Actor_actor[this]) )*1.0) + (( s__Movement_velo[this] * TIMER_TICK )*1.0) * Sin((( s__Movement_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__Movement_next_z[this]=sc__Object__get_z(s__Actor_actor[this]) + s__Movement_z_velo[this] * TIMER_TICK
				if s__Movement_next_z[this] < 0. then
					if s__Movement_z_velo[this] <= 0. and s__Movement_gravity[this] > 0. then
						set s__Movement_next_z[this]=0.
						set s__Movement_z_velo[this]=0.
					endif
				endif
				set s__Movement_z_velo[this]=s__Movement_z_velo[this] - s__Movement_gravity[this] * TIMER_TICK
				set np=s__Math_anglePoints2(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , sc__Object__get_z(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
				set ny=s__Math_anglePoints(sc__Object__get_x(s__Actor_actor[this]) , sc__Object__get_y(s__Actor_actor[this]) , s__Movement_next_x[this] , s__Movement_next_y[this])
			endif
			if s__Movement_refresh_facing[this] then
				call sc__Object_setOrientation(s__Actor_actor[this],ny , np , 0.)
			endif
  endfunction

  function s__Movement_onSuspend takes integer this returns nothing

  endfunction

  function s__Movement_onComplete takes integer this returns nothing

  endfunction

  function s__Movement_onCollision takes integer this returns nothing

  endfunction

  function s__Movement_moveAction takes integer this returns nothing
			call s__Movement_carculateNextPosition(this)
			if s__Movement_use_collision[this] then
				if s__LocationEx_collisionProjection(s__Movement_next_x[this] , s__Movement_next_y[this]) > 3.0 then
					call sc__Movement_onCollision(this)
				endif
				set s__Movement_next_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Movement_next_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
			endif
			call sc__Object_move(s__Actor_actor[this],s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
  endfunction

  function s__Movement_suspendFilter takes integer this returns boolean
			return false
  endfunction

  function s__Movement_periodicAction takes integer this returns nothing
			call sc__Movement_moveAction(this)
			if s__Movement_friction[this] > 0. then
				set s__Movement_velo[this]=s__Movement_velo[this] - ( s__Movement_friction[this] * TIMER_TICK )
				if s__Movement_velo[this] <= 0. then
					set s__Actor_duration[this]=0.
				endif
			endif
  endfunction

  function s__Movement_create takes integer actor,real velo,real angle returns integer
   local integer this= s__Movement__allocate(actor , 0 , 0 , - 1.)
			set s__Movement_velo[this]=velo
			set s__Movement_yaw[this]=angle
			return this
  endfunction

  function s__Movement_onDestroy takes integer this returns nothing
			if (s__Movement_curve_true[(this)]) != 0 then // INLINED!!
				call sc__Object_deallocate((s__Movement_curve_true[(this)])) // INLINED!!
				call s__Movement__set_curve(this,0)
			endif
  endfunction



//library Movement ends
//library Unit:



  function s__Unit_onLevel takes nothing returns nothing
   local integer i= 0
   local integer a= 0
   local integer this= LEVEL_UNIT
   local integer ui= 0
			if LEVEL_UNIT <= 0 or LEVEL_LEVEL <= 0 then
				return
			endif
			loop
				exitwhen i >= ABILITY_SIZE
				set a=s__Unit_prototype_getAbility(this,i)
				if a > 0 and s__Ability_signiture[a] then
					call sc__Ability_prototype_addLevel(a,LEVEL_LEVEL)
				endif
				set i=i + 1
			endloop
			set ui=s__UI_THIS[GetPlayerId((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))))] // INLINED!!
			if ui > 0 then
				call s__UI_setTarget(ui,s__UI_target[ui])
			endif
  endfunction

  function s__Unit_setChingho takes integer this,integer id returns nothing
			if s__Unit_chingho[this] > 0 then
				call sc__Ability_prototype_deallocate(s__Unit_chingho[this])
			endif
			call s__Ability_prototype_new(id)
			set s__Unit_chingho[this]=ABILITY_LAST_CREATED
			if s__Unit_chingho[this] > 0 then
				set s__Ability_prototype_owner[s__Unit_chingho[this]]=this
				call s__Ability_prototype_essentialInit(s__Unit_chingho[this])
				call sc__Ability_prototype_init(s__Unit_chingho[this])
				set s__Unit_prototype_origin_name[this]="|cffffcc00[" + s__Ability_prototype_name[s__Unit_chingho[this]] + "]|r\n" + s__Unit_prototype_origin_name[this]
				call BlzSetHeroProperName((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Unit_prototype_origin_name[this]) // INLINED!!
			endif
  endfunction

  function s__Unit_copyStat takes integer this,integer stattype returns nothing
			if HaveSavedReal(s__UnitData_HASH, (GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))), INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_BASE) then // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( LoadReal(s__UnitData_HASH, (GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))), INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_BASE))*1.0)) // INLINED!!
			else
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE ), (( LoadReal(s__UnitData_HASH, 0, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_BASE))*1.0)) // INLINED!!
			endif
			if HaveSavedReal(s__UnitData_HASH, (GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))), INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_LEVEL) then // INLINED!!
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_LEVEL ), (( LoadReal(s__UnitData_HASH, (GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))), INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_LEVEL))*1.0)) // INLINED!!
			else
				call SaveReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_LEVEL ), (( LoadReal(s__UnitData_HASH, 0, INDEX_STAT + ( stattype * STAT_INDEX_SIZE ) + STAT_INDEX_LEVEL))*1.0)) // INLINED!!
			endif
			call s__Unit_prototype_refreshStatValue(this,stattype)
  endfunction

  function s__Unit_copyStats takes integer this returns nothing
			call s__Unit_copyStat(this,STAT_TYPE_MAXHP)
			call s__Unit_copyStat(this,STAT_TYPE_MAXMP)
			call s__Unit_copyStat(this,STAT_TYPE_ATTACK)
			call s__Unit_copyStat(this,STAT_TYPE_DEFFENCE)
			call s__Unit_copyStat(this,STAT_TYPE_MAGICPOWER)
			call s__Unit_copyStat(this,STAT_TYPE_RESISTANCE)
			call s__Unit_copyStat(this,STAT_TYPE_ACCURACY)
			call s__Unit_copyStat(this,STAT_TYPE_EVASION)
			call s__Unit_copyStat(this,STAT_TYPE_HPREGEN)
			call s__Unit_copyStat(this,STAT_TYPE_MPREGEN)
			call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)))*1.0)) // INLINED!!
  endfunction

  function s__Unit_loadAbility takes integer this returns nothing
   local integer i= 0
   local integer lc= 0
			loop
				exitwhen i >= 10 or s__UnitData_getInitialAbility((GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))) , i) <= 0 // INLINED!!
				set lc=s__Unit_prototype_addAbility(this,s__UnitData_getInitialAbility((GetUnitTypeId((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))) , i)) // INLINED!!
				set s__Ability_signiture[lc]=true
				if s__Ability_getTypeTag(s__Ability_prototype_id[lc] , 0) == ABILITY_STRING_WEAPON then
					call s__Unit_prototype_setWeaponAbility(this,lc)
				endif
				set i=i + 1
			endloop
  endfunction

  function s__Unit_create takes player p,integer uid,real x,real y,real yaw returns integer
   local integer this= s__Unit__allocate(p , uid , x , y , yaw)
			call s__Unit_copyStats(this)
			call s__Unit_loadAbility(this)
			set s__Unit_prototype_class[this]="Unit"
			return this
  endfunction

  function s__Unit_onDestroy takes integer this returns nothing
			if s__Unit_chingho[this] > 0 then
				call sc__Ability_prototype_deallocate(s__Unit_chingho[this])
			endif
  endfunction

  function s__Unit_onInit takes nothing returns nothing
			set s__Unit_LEVEL_COND=TriggerAddCondition(LEVEL_TRIGGER, Condition(function s__Unit_onLevel))
  endfunction



//library Unit ends
//library Game:



  function s__Game_playerLeave takes nothing returns nothing
			if s__SkillShop_THIS[GetPlayerId(GetTriggerPlayer())] > 0 then
				call sc__Closeable_deallocate(s__SkillShop_THIS[GetPlayerId(GetTriggerPlayer())])
			endif
			if s__UI_THIS[GetPlayerId(GetTriggerPlayer())] > 0 then
				call s__UI_deallocate(s__UI_THIS[GetPlayerId(GetTriggerPlayer())])
			endif
			if s__SlotChanger_THIS[GetPlayerId(GetTriggerPlayer())] > 0 then
				call s__SlotChanger_deallocate(s__SlotChanger_THIS[GetPlayerId(GetTriggerPlayer())])
			endif
			if (s__User_FOCUSUNIT[GetPlayerId((GetTriggerPlayer()))]) > 0 then // INLINED!!
				set s__Unit_prototype_is_revive[(s__User_FOCUSUNIT[GetPlayerId((GetTriggerPlayer()))])]=false // INLINED!!
				set s__User_FOCUSUNIT[GetPlayerId((GetTriggerPlayer() ))]=( 0) // INLINED!!
			endif
  endfunction

  function s__Game_defeat takes nothing returns nothing
   local integer i= 0
   local integer u= 0
			set s__Tombstone_GAME_OVER=true
			call s__Guardians_kill()
			loop
				exitwhen i >= 4
				set u=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				call s__Unit_prototype_kill(u)
				call s__Unit_prototype__set_hp(u,1.)
				set i=i + 1
			endloop
			call PauseTimer((s__Round_TIMER)) // INLINED!!
  endfunction

  function s__Game_systemMessage takes string msg returns nothing
			call BlzDisplayChatMessage(PLAYER_SYSTEM, 0, msg)
  endfunction

  function s__Game_addLevel takes nothing returns nothing
   local integer i= 0
   local integer u= 0
			loop
				exitwhen i >= 4
				call s__User_addGold(Player(i) , 5)
				set u=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				call s__Effect_setDuration(s__Effect_createAttatched("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(u)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
				if u > 0 then
					call s__Unit_prototype__set_level(u,(s__Unit_prototype_level_true[(u)]) + 1) // INLINED!!
				endif
				set i=i + 1
			endloop
  endfunction

  function s__Game_initForPlayer takes player p,integer uid,integer chingho returns nothing
   local integer u= s__Unit_create(p , uid , (((GetRectCenterX(gg_rct_spawn) )*1.0) + (( 512 )*1.0) * Cos((( GetRandomReal(235, 315))*1.0) * bj_DEGTORAD)) , (((GetRectCenterY(gg_rct_spawn) )*1.0) + (( 512 )*1.0) * Sin((( GetRandomReal(235, 315))*1.0) * bj_DEGTORAD)) , 270.) // INLINED!!
			set s__Unit_prototype_is_revive[u]=true
			
			call FixCamSetup(p , gg_cam_Cam00 , true)
			call FixCamResetPosition(p)
			call PanCameraToForPlayer(p, sc__Object__get_x(u), sc__Object__get_y(u))
			
			call sc__Mouse_activateRefresher(p)
			
			call s__User_new(p)
			set s__User_FOCUSUNIT[GetPlayerId((p ))]=( u) // INLINED!!
			call s__User_selectFocusUnit(p)
			
			call s__Unit_setChingho(u,chingho)
			
			call s__UI_create(p)
			call s__SkillShop_create(p)
			call s__SlotChanger_create(p)
			call s__CloseUI_create(p)
			
			if Game___TEST then
				call s__User_addGold(p , 5000)
			else
				call s__User_addGold(p , 5)
			endif
			call s__Unit_prototype__set_level(u,5)
  endfunction

  function s__Game_endSelect takes nothing returns nothing
   local integer i= 0
			
			call s__Tip_init()
			
			call s__UI_init()
			
			loop
				exitwhen i >= PLAYER_MAX
				if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
					call s__Game_initForPlayer(Player(i) , CharacterSelect_ID[i] , CharacterSelect_CHINGHO_ID[i])
					call TriggerRegisterPlayerEventLeave(Game___LEAVE_TRIGGER, Player(i))
				endif
				set i=i + 1
			endloop
			
			call s__TreeOfLife_init()
			
			call s__Guardians_init()
			
			call s__Round_init()
			
			call TriggerAddCondition(Game___LEAVE_TRIGGER, Condition(function s__Game_playerLeave))
  endfunction

  function s__Game_start takes nothing returns nothing
   local integer u= 0
   local trigger t= null
   local integer i= 0
			if Game___TEST then
				
				call s__Tip_init()
				
				call s__UI_init()
				
				call s__Game_initForPlayer(Player(0) , 'U004' , 'C000')
				//call initForPlayer(Player(1),'HR09','C000')
				
				call s__TreeOfLife_init()
				
				//call Guardians.init()
				
				//call Round.init()
				
				loop
					exitwhen i >= 5
					set u=s__Unit_create(PLAYER_UNDEAD , 'HR00' , 250 + 200 * i , 0 , 0)
					call s__Unit_prototype_plusStatus(u,STATUS_CAST)
					//call u.plusStatValue(STAT_TYPE_HPREGEN,100.)
					set i=i + 1
				endloop
				call s__SkillShop_addLevel()
				
			else
				
				call s__CharacterSelect_init()
			endif
			call DestroyTrigger(GetTriggeringTrigger())
			set t=null
  endfunction

  function s__Game_initAlly takes nothing returns nothing
   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				call SetPlayerAllianceStateBJ(Player(i), PLAYER_GUARDIANS, bj_ALLIANCE_ALLIED_VISION)
				call SetPlayerAllianceStateBJ(PLAYER_GUARDIANS, Player(i), bj_ALLIANCE_ALLIED_VISION)
				set i=i + 1
			endloop
			call SetPlayerAllianceStateBJ(PLAYER_MONSTER, PLAYER_UNDEAD, bj_ALLIANCE_ALLIED_VISION)
			call SetPlayerAllianceStateBJ(PLAYER_UNDEAD, PLAYER_MONSTER, bj_ALLIANCE_ALLIED_VISION)
  endfunction

  function s__Game_onInit takes nothing returns nothing
			
   local trigger t= CreateTrigger()
			call TriggerRegisterTimerEvent(t, 0.5, false)
			call TriggerAddAction(t, function s__Game_start)
			
			call BlzLoadTOCFile("ui\\framedef\\myframes\\MyFrames.toc")
			
			call BlzHideOriginFrames(true)
			call BlzFrameClearAllPoints(BlzGetFrameByName("ConsoleUIBackdrop", 0))
			
			call BlzFrameClearAllPoints(BlzGetFrameByName("CommandBarFrame", 0))
			call BlzFrameClearAllPoints(BlzFrameGetParent(BlzGetFrameByName("CommandBarFrame", 0)))
			
			call BlzFrameSetAbsPoint(BlzGetOriginFrame(ORIGIN_FRAME_UNIT_MSG, 0), FRAMEPOINT_BOTTOMLEFT, 0., 0.185)
			call BlzFrameSetSize(BlzGetOriginFrame(ORIGIN_FRAME_UNIT_MSG, 0), 1, 1)
			
			call BlzFrameSetAbsPoint(BlzGetOriginFrame(ORIGIN_FRAME_CHAT_MSG, 0), FRAMEPOINT_BOTTOMLEFT, 0., 0.135)
			call BlzFrameSetSize(BlzGetOriginFrame(ORIGIN_FRAME_CHAT_MSG, 0), 1, 1)
			
			call BlzEnableSelections(false, false)
			
			call FogMaskEnable(false)
			call FogEnable(false)
			
			call SetTimeOfDay(12.)
   			call SetTimeOfDayScalePercentBJ(0.)
			
			call s__Camera_init()
			
			call SetPlayerName(PLAYER_GUARDIANS, "수호자")
			call SetPlayerName(PLAYER_MONSTER, "숲의 괴물들")
			call SetPlayerName(PLAYER_UNDEAD, "언데드 침략자")
			call SetPlayerName(PLAYER_SYSTEM, "|cffffcc00시스템|r")
			
			call s__Game_initAlly()
			
			if not Game___TEST then
				
				set CharacterSelect_BACKGROUND=BlzCreateFrameByType("SPRITE", "", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
				call BlzFrameSetModel(CharacterSelect_BACKGROUND, "ui\\characterselectbackground.mdl", 0)
				call BlzFrameSetAbsPoint(CharacterSelect_BACKGROUND, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
				call BlzFrameSetSize(CharacterSelect_BACKGROUND, 1, 1)
			endif
			
			set t=null
  endfunction



//library Game ends
//library Undead:






  function s__Undead_timerBreak takes integer this returns nothing
			set s__Undead_target[this]=0
			call PauseTimer((s__Undead_ai_timer[this])) // INLINED!!
			set s__Undead_running[this]=false
  endfunction

		
		
  function s__Undead_goToSpawnLocation takes integer this returns nothing
			call IssuePointOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("move" ), (( GetRectCenterX(gg_rct_spawn) )*1.0), (( GetRectCenterY(gg_rct_spawn))*1.0)) // INLINED!!
			call s__Undead_timerBreak(this)
  endfunction

		
		
  function s__Undead_isGuardianAlive takes integer this returns boolean
			return not s__Unit_prototype_isUnitType(s__Guardians_GUARDIAN[s__Undead_position[this]],UNIT_TYPE_DEAD) and s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) > 768.
  endfunction

  function s__Undead_unitCondition takes integer this,integer u returns boolean
			return (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( s__Undead_acquire_range[this])*1.0))) and not s__Unit_prototype_isUnitType(u,UNIT_TYPE_DEAD) and (IsUnitVisible((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) // INLINED!!
  endfunction

		
  function s__Undead_getNearestHero takes integer this returns integer
   local integer i= 0
   local integer g= 0
   local integer r= 0
   local real dist= 0.
			loop
				exitwhen i >= 4
				set g=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				if s__Undead_unitCondition(this,g) then
					if i == 0 or r == 0 then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					elseif s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g)) < dist then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					endif
				endif
				set i=i + 1
			endloop
			return r
  endfunction

		
  function s__Undead_getNearestGuardian takes integer this returns integer
   local integer i= 0
   local integer g= 0
   local integer r= 0
   local real dist= 0.
			loop
				exitwhen i >= 4
				set g=s__Guardians_GUARDIAN[i]
				if s__Undead_unitCondition(this,g) then
					if i == 0 or r == 0 then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					elseif s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g)) < dist then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					endif
				endif
				set i=i + 1
			endloop
			return r
  endfunction

  function s__Undead_getNearestEnemy takes integer this returns integer
   local integer u1= sc__Undead_getNearestHero(this)
   local integer u2= sc__Undead_getNearestGuardian(this)
			if u1 > 0 and u2 > 0 then
				if s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u1) , sc__Object__get_y(u1)) >= s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u2) , sc__Object__get_y(u2)) then
					return u2
				else
					return u1
				endif
			elseif u1 > 0 then
				return u1
			elseif u2 > 0 then
				return u2
			else
				return 0
			endif
  endfunction

  function s__Undead_onSetTarget takes integer this returns nothing
			//if .target_is_different then
				call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
			//endif
  endfunction

		
  function s__Undead_onFreeTarget takes integer this returns nothing
			call s__Undead_goToSpawnLocation(this)
  endfunction

  function s__Undead_setTarget takes integer this,integer u returns nothing
			set s__Undead_target_is_different[this]=u == s__Undead_target[this]
			set s__Undead_target[this]=u
			if s__Undead_target[this] > 0 then
				call sc__Undead_onSetTarget(this)
			else
				call sc__Undead_onFreeTarget(this)
			endif
  endfunction

  function s__Undead_refreshTarget takes integer this returns nothing
   local integer u= 0
			
			set u=sc__Undead_getNearestGuardian(this)
			if u == 0 then
				
				set u=sc__Undead_getNearestHero(this)
				if u == 0 then
					
					if sc__Undead_isGuardianAlive(this) then
						call s__Undead_setTarget(this,s__Guardians_GUARDIAN[s__Undead_position[this]])
					
					else
						
						call s__Undead_setTarget(this,0)
					endif
				
				else
					call s__Undead_setTarget(this,u)
				endif
			
			else
				call s__Undead_setTarget(this,u)
			endif
  endfunction

  function s__Undead_getTarget takes integer this returns integer
   local integer u= 0
			if s__Undead_target[this] != 0 then
				if not s__Undead_unitCondition(this,s__Undead_target[this]) then
					call sc__Undead_refreshTarget(this)
				elseif s__Unit_prototype_class[s__Undead_target[this]] != "Guardian" then
					set u=sc__Undead_getNearestGuardian(this)
					if u > 0 then
						call s__Undead_setTarget(this,u)
					endif
				endif
			else
				call sc__Undead_refreshTarget(this)
			endif
			return s__Undead_target[this]
  endfunction

  function s__Undead_periodicAction takes integer this returns nothing
			call s__Undead_getTarget(this)
  endfunction

  function s__Undead_timerAction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			call sc__Undead_periodicAction(this)
  endfunction

  function s__Undead_onDamaged takes integer this returns nothing

  endfunction

  function s__Undead_encount takes integer this returns nothing
			if not s__Undead_running[this] then
				call sc__Undead_refreshTarget(this)
				set s__Undead_running[this]=true
				call TimerStart((s__Undead_ai_timer[this] ), (( s__Undead_AI_TICK )*1.0), ( true ), ( function s__Undead_timerAction)) // INLINED!!
			endif
  endfunction

  function s__Undead_helpCall takes integer this returns nothing
   local integer i= 0
   local unit u= null
   local integer ud= 0
			
			loop
				set u=BlzGroupUnitAt(Undead_GROUP, i)
				exitwhen u == null
				if u != (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) then // INLINED!!
					set ud=s__Unit_prototype_get(u)
					call s__Undead_encount(ud)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction

  function s__Undead_cond takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if not ( DAMAGE_ATTACKER == this or DAMAGE_TARGET == this ) then
				return
			endif
			call s__Undead_encount(this)
			call sc__Undead_onDamaged(this)
  endfunction

  function s__Undead_init takes integer this returns nothing

  endfunction

  function s__Undead_create takes integer uid,real x,real y,real yaw,integer position returns integer
   local integer this= s__Undead__allocate(PLAYER_UNDEAD , uid , x , y , yaw)
   local integer i= 0
   local integer a= 0
			call GroupAddUnit(Undead_GROUP, (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			set s__Undead_position[this]=position
			set s__Undead_ai_timer[this]=s__Timer_new(this)
			set s__Undead_main_trigger[this]=s__Trigger_new(this)
			set s__Undead_main_cond[this]=TriggerAddCondition(s__Undead_main_trigger[this], Condition(function s__Undead_cond))
			call TriggerRegisterVariableEvent((s__Undead_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_BEFORE_HPREDUCE)*1.0)) // INLINED!!
			set s__Unit_prototype_class[this]="Undead"
			loop
				exitwhen s__Unit_prototype_getAbility(this,i) <= 0
				set a=s__Unit_prototype_getAbility(this,i)
				set s__Ability_prototype_is_ai[a]=true
				set i=i + 1
			endloop
			return this
  endfunction

  function s__Undead_new takes integer uid,real x,real y,integer position returns integer
			set Undead_LAST_CREATED=0
			set Undead_CREATE_ID=uid
			set Undead_CREATE_X=x
			set Undead_CREATE_Y=y
			set Undead_CREATE_POSITION=position
			call TriggerEvaluate(Undead_CREATE_REQUEST)
			return Undead_LAST_CREATED
  endfunction

  function s__Undead_unregister2 takes nothing returns nothing
			if UNREGISTER_GROUP_UNIT == null then
				return
			else
				call GroupRemoveUnit(Undead_GROUP, UNREGISTER_GROUP_UNIT)
			endif
  endfunction

  function s__Undead_onDestroy takes integer this returns nothing
			call ReleaseTimer((s__Undead_ai_timer[this])) // INLINED!!
			set s__Undead_ai_timer[this]=null
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__Undead_main_trigger[this], s__Undead_main_cond[this])
		call s__Trigger_remove(s__Undead_main_trigger[this])
		set s__Undead_main_trigger[this]=null
		set s__Undead_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
  endfunction

  function s__Undead_onInit takes nothing returns nothing
			set Undead_GROUP=s__Group_new()
			call TriggerAddCondition(UNREGISTER_GROUP, Condition(function s__Undead_unregister2))
  endfunction



//library Undead ends
//library Wave:





  function s__Wave___spawner_timerAction takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
   local integer u= 0
			if not HaveSavedInteger(Wave___HASH, s__Wave___spawner_index[this], s__Wave___spawner_count[this]) then
				call sc__Wave___spawner_deallocate(this)
				return
			endif
			set u=s__Undead_new(LoadInteger(Wave___HASH, s__Wave___spawner_index[this], s__Wave___spawner_count[this]) , GetRectCenterX(Wave___RECT[s__Wave___spawner_position[this]]) , GetRectCenterY(Wave___RECT[s__Wave___spawner_position[this]]) , s__Wave___spawner_position[this])
			if s__Unit_prototype_getStatus(s__Guardians_GUARDIAN[s__Wave___spawner_position[this]],STATUS_DEAD) <= 0 then
				call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Guardians_GUARDIAN[s__Wave___spawner_position[this]])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
			else
				call IssuePointOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((u))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), (( (GetRectCenterX(gg_rct_spawn)) )*1.0), (( (GetRectCenterY(gg_rct_spawn)))*1.0)) // INLINED!!
			endif
			call s__Unit_prototype__set_level(u,s__Wave___spawner_level[this])
			set s__Wave___spawner_count[this]=s__Wave___spawner_count[this] + 1
  endfunction

  function s__Wave___spawner_create takes integer index,integer level,integer position returns integer
   local integer this= s__Wave___spawner__allocate()
			set s__Wave___spawner_main_timer[this]=s__Timer_new(this)
			set s__Wave___spawner_index[this]=index
			set s__Wave___spawner_level[this]=level
			set s__Wave___spawner_position[this]=position
			call PingMinimapEx(GetRectCenterX(Wave___RECT[s__Wave___spawner_position[this]]), GetRectCenterY(Wave___RECT[s__Wave___spawner_position[this]]), 2.5, 0, 0, 0, true)
			call TimerStart((s__Wave___spawner_main_timer[this] ), (( 0.75 )*1.0), ( true ), ( function s__Wave___spawner_timerAction)) // INLINED!!
			return this
  endfunction

  function s__Wave___spawner_onDestroy takes integer this returns nothing
			call ReleaseTimer((s__Wave___spawner_main_timer[this])) // INLINED!!
			set s__Wave___spawner_main_timer[this]=null
  endfunction

//Generated destructor of Wave___spawner
function s__Wave___spawner_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Wave___spawner_V[this]!=-1) then
        return
    endif
    call s__Wave___spawner_onDestroy(this)
    set si__Wave___spawner_V[this]=si__Wave___spawner_F
    set si__Wave___spawner_F=this
endfunction




  function s__Wave_spawn takes nothing returns nothing
   local integer i= 0
   local integer j= 0
   local integer random= GetRandomInt(0, s__Wave_MAX_INDEX)
   local integer u= 0
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 0)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 1)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 2)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 3)
  endfunction

  function s__Wave_addWaveData takes integer index,integer uid returns nothing
			if index > s__Wave_MAX_INDEX then
				set s__Wave_MAX_INDEX=index
			endif
			if s__Wave_LAST_INDEX != index then
				set s__Wave_INDEX=0
			endif
			set s__Wave_LAST_INDEX=index
			call SaveInteger(Wave___HASH, index, s__Wave_INDEX, uid)
			set s__Wave_INDEX=s__Wave_INDEX + 1
  endfunction

  function s__Wave_initWaveData takes nothing returns nothing
			call s__Wave_addWaveData(0 , 'U000')
			call s__Wave_addWaveData(0 , 'U000')
			call s__Wave_addWaveData(0 , 'U000')
			call s__Wave_addWaveData(0 , 'U000')
			call s__Wave_addWaveData(0 , 'U000')
			//
			call s__Wave_addWaveData(1 , 'U000')
			call s__Wave_addWaveData(1 , 'U000')
			call s__Wave_addWaveData(1 , 'U001')
			call s__Wave_addWaveData(1 , 'U001')
			call s__Wave_addWaveData(1 , 'U001')
			//
			call s__Wave_addWaveData(2 , 'U000')
			call s__Wave_addWaveData(2 , 'U000')
			call s__Wave_addWaveData(2 , 'U003')
			call s__Wave_addWaveData(2 , 'U003')
			call s__Wave_addWaveData(2 , 'U003')
			//
			call s__Wave_addWaveData(3 , 'U002')
			call s__Wave_addWaveData(3 , 'U002')
			call s__Wave_addWaveData(3 , 'U002')
			call s__Wave_addWaveData(3 , 'U002')
			call s__Wave_addWaveData(3 , 'U002')
			//
			call s__Wave_addWaveData(4 , 'U004')
			call s__Wave_addWaveData(4 , 'U004')
			call s__Wave_addWaveData(4 , 'U004')
			call s__Wave_addWaveData(4 , 'U004')
			call s__Wave_addWaveData(4 , 'U004')
			//
			call s__Wave_addWaveData(5 , 'U004')
			call s__Wave_addWaveData(5 , 'U004')
			call s__Wave_addWaveData(5 , 'U004')
			call s__Wave_addWaveData(5 , 'U002')
			call s__Wave_addWaveData(5 , 'U002')
			//
			call s__Wave_addWaveData(6 , 'U004')
			call s__Wave_addWaveData(6 , 'U004')
			call s__Wave_addWaveData(6 , 'U002')
			call s__Wave_addWaveData(6 , 'U002')
			call s__Wave_addWaveData(6 , 'U002')
			//
			call s__Wave_addWaveData(7 , 'U000')
			call s__Wave_addWaveData(7 , 'U000')
			call s__Wave_addWaveData(7 , 'U000')
			call s__Wave_addWaveData(7 , 'U000')
			call s__Wave_addWaveData(7 , 'U001')
			//
			call s__Wave_addWaveData(8 , 'U000')
			call s__Wave_addWaveData(8 , 'U000')
			call s__Wave_addWaveData(8 , 'U000')
			call s__Wave_addWaveData(8 , 'U001')
			call s__Wave_addWaveData(8 , 'U001')
			//
			call s__Wave_addWaveData(9 , 'U004')
			call s__Wave_addWaveData(9 , 'U004')
			call s__Wave_addWaveData(9 , 'U004')
			call s__Wave_addWaveData(9 , 'U004')
			call s__Wave_addWaveData(9 , 'U002')
			//
			call s__Wave_addWaveData(10 , 'U004')
			call s__Wave_addWaveData(10 , 'U002')
			call s__Wave_addWaveData(10 , 'U002')
			call s__Wave_addWaveData(10 , 'U002')
			call s__Wave_addWaveData(10 , 'U002')
			//
			call s__Wave_addWaveData(11 , 'U000')
			call s__Wave_addWaveData(11 , 'U000')
			call s__Wave_addWaveData(11 , 'U000')
			call s__Wave_addWaveData(11 , 'U000')
			call s__Wave_addWaveData(11 , 'U003')
			//
			call s__Wave_addWaveData(12 , 'U000')
			call s__Wave_addWaveData(12 , 'U000')
			call s__Wave_addWaveData(12 , 'U000')
			call s__Wave_addWaveData(12 , 'U003')
			call s__Wave_addWaveData(12 , 'U003')
			
			call s__Wave_addWaveData(13 , 'U000')
			call s__Wave_addWaveData(13 , 'U000')
			call s__Wave_addWaveData(13 , 'U000')
			call s__Wave_addWaveData(13 , 'U000')
			call s__Wave_addWaveData(13 , 'U000')
			//
			call s__Wave_addWaveData(14 , 'U000')
			call s__Wave_addWaveData(14 , 'U000')
			call s__Wave_addWaveData(14 , 'U000')
			call s__Wave_addWaveData(14 , 'U000')
			call s__Wave_addWaveData(14 , 'U000')
			//
			call s__Wave_addWaveData(15 , 'U000')
			call s__Wave_addWaveData(15 , 'U000')
			call s__Wave_addWaveData(15 , 'U000')
			call s__Wave_addWaveData(15 , 'U000')
			call s__Wave_addWaveData(15 , 'U000')
			//
			call s__Wave_addWaveData(16 , 'U000')
			call s__Wave_addWaveData(16 , 'U000')
			call s__Wave_addWaveData(16 , 'U000')
			call s__Wave_addWaveData(16 , 'U000')
			call s__Wave_addWaveData(16 , 'U000')
			//
			call s__Wave_addWaveData(17 , 'U000')
			call s__Wave_addWaveData(17 , 'U000')
			call s__Wave_addWaveData(17 , 'U000')
			call s__Wave_addWaveData(17 , 'U000')
			call s__Wave_addWaveData(17 , 'U000')
			//
			call s__Wave_addWaveData(18 , 'U000')
			call s__Wave_addWaveData(18 , 'U000')
			call s__Wave_addWaveData(18 , 'U000')
			call s__Wave_addWaveData(18 , 'U000')
			call s__Wave_addWaveData(18 , 'U000')
			//
			call s__Wave_addWaveData(19 , 'U000')
			call s__Wave_addWaveData(19 , 'U000')
			call s__Wave_addWaveData(19 , 'U000')
			call s__Wave_addWaveData(19 , 'U000')
			call s__Wave_addWaveData(19 , 'U000')
			//
  endfunction

  function s__Wave_onInit takes nothing returns nothing
			call s__Wave_initWaveData()
			set Wave___RECT[0]=gg_rct_GateNorth
			set Wave___RECT[1]=gg_rct_GateWest
			set Wave___RECT[2]=gg_rct_GateEast
			set Wave___RECT[3]=gg_rct_GateSouth
  endfunction



//library Wave ends
//===========================================================================
// 
// |cffd5bd92스킬저장소|r |cffffff00v1.00|r
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: 모래여우
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************


function InitGlobals takes nothing returns nothing
    set udg_EVENT_VALUE=0.00
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//***************************************************************************
//*  ImportGeneric
// BEGIN IMPORT OF C:\war3lib\Generic\Generic.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Utils.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\EventValue.j

// END IMPORT OF C:\war3lib\Generic\Utils\EventValue.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Code.j
// END IMPORT OF C:\war3lib\Generic\Utils\Code.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\FixCam.j
// END IMPORT OF C:\war3lib\Generic\Utils\FixCam.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Timer.j

// END IMPORT OF C:\war3lib\Generic\Utils\Timer.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Group.j

// END IMPORT OF C:\war3lib\Generic\Utils\Group.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Math.j
	

// END IMPORT OF C:\war3lib\Generic\Utils\Math.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\LocationEx.j
// END IMPORT OF C:\war3lib\Generic\Utils\LocationEx.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Trigger.j
	
// END IMPORT OF C:\war3lib\Generic\Utils\Trigger.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\YouCantAttackAlly.j
// END IMPORT OF C:\war3lib\Generic\Utils\YouCantAttackAlly.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Texttag.j
// END IMPORT OF C:\war3lib\Generic\Utils\Texttag.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Sound.j
// END IMPORT OF C:\war3lib\Generic\Utils\Sound.j
// BEGIN IMPORT OF C:\war3lib\Generic\Utils\Mouse.j
// scope Mouse begins




 function s__Mouse_triggerRegisterGenericRightClick takes trigger t returns nothing
		call TriggerRegisterVariableEvent(t, "udg_EVENT_VALUE", EQUAL, RIGHT_CLICK_EVENT)
 endfunction

 function s__Mouse_getX takes player p returns real
		return s__s__Mouse_X[GetPlayerId(p)]
 endfunction

 function s__Mouse_getVX takes player p returns real
		return s__s__Mouse_X[GetPlayerId(p)]
 endfunction

 function s__Mouse_getY takes player p returns real
		return s__s__Mouse_Y[GetPlayerId(p)]
 endfunction

 function s__Mouse_getVY takes player p returns real
		return s__s__Mouse_Y[GetPlayerId(p)]
 endfunction

 function s__Mouse_move takes nothing returns nothing
  local integer i= GetPlayerId(GetTriggerPlayer())
		set s__s__Mouse_X[i]= BlzGetTriggerPlayerMouseX()
		set s__s__Mouse_Y[i]= BlzGetTriggerPlayerMouseY()
 endfunction

 function s__Mouse_receiveRightClick takes nothing returns nothing
  local string source= ""
  local integer l= 0
		set udg_EVENT_VALUE=0.
		set source=BlzGetTriggerSyncData()
		set l=StringLength(source)
		set bj_forLoopAIndex=0
		
		loop
			exitwhen SubString(source, bj_forLoopAIndex, bj_forLoopAIndex + 1) == "#"
			set bj_forLoopAIndex=bj_forLoopAIndex + 1
		endloop
		set RIGHT_CLICK_PLAYER=Player(S2I(SubString(source, 0, bj_forLoopAIndex)))
		set RIGHT_CLICK_UNIT=s__Agent_H2U(S2I(SubString(source, bj_forLoopAIndex + 1, l)))
		//call BJDebugMsg(GetPlayerName(RIGHT_CLICK_PLAYER)+", "+GetUnitName(RIGHT_CLICK_UNIT))
		
		set udg_EVENT_VALUE=RIGHT_CLICK_EVENT
		set RIGHT_CLICK_PLAYER=null
		set RIGHT_CLICK_UNIT=null
 endfunction

 function s__Mouse_sendRightClick takes nothing returns nothing
		if BlzGetTriggerPlayerMouseButton() == MOUSE_BUTTON_TYPE_RIGHT then
			if GetLocalPlayer() == GetTriggerPlayer() then
				if BlzGetMouseFocusUnit() != null then
					call BlzSendSyncData("GRM", I2S(GetPlayerId(GetTriggerPlayer())) + "#" + I2S(GetHandleId(BlzGetMouseFocusUnit())))
				else
					call BlzSendSyncData("GRM", I2S(GetPlayerId(GetTriggerPlayer())) + "#0")
				endif
			endif
		endif
 endfunction

 function s__Mouse_activateRefresher takes player p returns nothing
  local integer i= GetPlayerId(p)
		set s__s__Mouse_MOVE[i]= null
		set s__s__Mouse_MOVE[i]= CreateTrigger()
		call TriggerRegisterPlayerEvent(s__s__Mouse_MOVE[i], p, EVENT_PLAYER_MOUSE_MOVE)
		call TriggerAddCondition(s__s__Mouse_MOVE[i], Condition(function s__Mouse_move))
		set s__s__Mouse_X[i]= 0.
		set s__s__Mouse_Y[i]= 0.
		
		call TriggerRegisterPlayerEvent(RIGHT_CLICK, p, EVENT_PLAYER_MOUSE_DOWN)
		call BlzTriggerRegisterPlayerSyncEvent(RIGHT_CLICK_RECEIVE, p, "GRM", false)
 endfunction

 function s__Mouse_onInit takes nothing returns nothing
		call TriggerAddCondition(RIGHT_CLICK, Condition(function s__Mouse_sendRightClick))
		call TriggerAddCondition(RIGHT_CLICK_RECEIVE, Condition(function s__Mouse_receiveRightClick))
 endfunction


// scope Mouse ends
// END IMPORT OF C:\war3lib\Generic\Utils\Mouse.j
// END IMPORT OF C:\war3lib\Generic\Utils\Utils.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Class.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Effect.j
	
// END IMPORT OF C:\war3lib\Generic\Class\Effect.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Ability.j

// BEGIN IMPORT OF C:\war3lib\Generic\Class\AbilityIndicator.j
// END IMPORT OF C:\war3lib\Generic\Class\AbilityIndicator.j
// END IMPORT OF C:\war3lib\Generic\Class\Ability.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Item.j
// END IMPORT OF C:\war3lib\Generic\Class\Item.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Movement.j
// END IMPORT OF C:\war3lib\Generic\Class\Movement.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\UnitMovement.j

// END IMPORT OF C:\war3lib\Generic\Class\UnitMovement.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Damage.j
// END IMPORT OF C:\war3lib\Generic\Class\Damage.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Actor.j
// END IMPORT OF C:\war3lib\Generic\Class\Actor.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\UnitActor.j
// END IMPORT OF C:\war3lib\Generic\Class\UnitActor.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Unit.j
// END IMPORT OF C:\war3lib\Generic\Class\Unit.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Missile.j

// BEGIN IMPORT OF C:\war3lib\Generic\Class\MissileGroup.j
// END IMPORT OF C:\war3lib\Generic\Class\MissileGroup.j
// END IMPORT OF C:\war3lib\Generic\Class\Missile.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Object.j
// END IMPORT OF C:\war3lib\Generic\Class\Object.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Curve.j
// END IMPORT OF C:\war3lib\Generic\Class\Curve.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Agent.j
// END IMPORT OF C:\war3lib\Generic\Class\Agent.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Circle.j
// END IMPORT OF C:\war3lib\Generic\Class\Circle.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Square.j
// END IMPORT OF C:\war3lib\Generic\Class\Square.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Lightning.j
// END IMPORT OF C:\war3lib\Generic\Class\Lightning.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Explosion.j
// END IMPORT OF C:\war3lib\Generic\Class\Explosion.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\User.j
// END IMPORT OF C:\war3lib\Generic\Class\User.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Buff.j



// scope BuffStun begins
//textmacro instance: buffHeader("기절","Stun","0","BTNStun")

//end of: buffHeader("기절","Stun","0","BTNStun")



  function s__BuffStun_main_update takes integer this returns nothing
			//call BJDebugMsg("Stun.update()")
  endfunction

  function s__BuffStun_main_init takes integer this returns nothing
			call s__Unit_prototype_plusStatus(s__Buff_target[this],STATUS_STUN)
			set s__BuffStun_main_ef[this]=s__Effect_createAttatched("Abilities\\Spells\\Human\\Thunderclap\\ThunderclapTarget.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "overhead") // INLINED!!
  endfunction

  function s__BuffStun_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_minusStatus(s__Buff_target[this],STATUS_STUN)
			call s__Effect_kill(s__BuffStun_main_ef[this])
  endfunction


//textmacro instance: buffEnd()

   function BuffStun__new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if BuffStun__INDIVISUAL == 2 then
					set b=s__BuffStun_main__allocate(BuffStun__ID , caster , target , duration , BuffStun__NAME)
					set s__Buff_icon[b]=BuffStun__ICON_PATH
					call s__BuffStun_main_init(b)
				elseif BuffStun__INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , BuffStun__ID)
					if b == 0 then
						set b=s__BuffStun_main__allocate(BuffStun__ID , caster , target , duration , BuffStun__NAME)
						set s__Buff_icon[b]=BuffStun__ICON_PATH
						call s__BuffStun_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__BuffStun_main_update(b)
					endif
				elseif BuffStun__INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , BuffStun__ID)
					if b == 0 then
						set b=s__BuffStun_main__allocate(BuffStun__ID , caster , target , duration , BuffStun__NAME)
						set s__Buff_icon[b]=BuffStun__ICON_PATH
						call s__BuffStun_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__BuffStun_main_update(b)
					endif
				endif
				return b
			endfunction

   function BuffStun__cond takes nothing returns nothing
				if BUFF_CREATE_ID == BuffStun__ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=BuffStun__new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function BuffStun__init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function BuffStun__cond))
			endfunction

//end of: buffEnd()
// scope BuffStun ends


// scope BuffEnsn begins
//textmacro instance: buffHeader("속박","Ensn","0","BTNEnsnare")

//end of: buffHeader("속박","Ensn","0","BTNEnsnare")


  function s__BuffEnsn_main_update takes integer this returns nothing
			//call BJDebugMsg("Ensn.update()")
  endfunction

  function s__BuffEnsn_main_init takes integer this returns nothing
			call s__Unit_prototype_plusStatus(s__Buff_target[this],STATUS_ENSNARE)
  endfunction

  function s__BuffEnsn_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_minusStatus(s__Buff_target[this],STATUS_ENSNARE)
  endfunction


//textmacro instance: buffEnd()

   function BuffEnsn__new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if BuffEnsn__INDIVISUAL == 2 then
					set b=s__BuffEnsn_main__allocate(BuffEnsn__ID , caster , target , duration , BuffEnsn__NAME)
					set s__Buff_icon[b]=BuffEnsn__ICON_PATH
					call s__Unit_prototype_plusStatus(s__Buff_target[(b)],STATUS_ENSNARE) // INLINED!!
				elseif BuffEnsn__INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , BuffEnsn__ID)
					if b == 0 then
						set b=s__BuffEnsn_main__allocate(BuffEnsn__ID , caster , target , duration , BuffEnsn__NAME)
						set s__Buff_icon[b]=BuffEnsn__ICON_PATH
						call s__Unit_prototype_plusStatus(s__Buff_target[(b)],STATUS_ENSNARE) // INLINED!!
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__BuffEnsn_main_update(b)
					endif
				elseif BuffEnsn__INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , BuffEnsn__ID)
					if b == 0 then
						set b=s__BuffEnsn_main__allocate(BuffEnsn__ID , caster , target , duration , BuffEnsn__NAME)
						set s__Buff_icon[b]=BuffEnsn__ICON_PATH
						call s__Unit_prototype_plusStatus(s__Buff_target[(b)],STATUS_ENSNARE) // INLINED!!
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__BuffEnsn_main_update(b)
					endif
				endif
				return b
			endfunction

   function BuffEnsn__cond takes nothing returns nothing
				if BUFF_CREATE_ID == BuffEnsn__ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=BuffEnsn__new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function BuffEnsn__init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function BuffEnsn__cond))
			endfunction

//end of: buffEnd()
// scope BuffEnsn ends

// END IMPORT OF C:\war3lib\Generic\Class\Buff.j
// BEGIN IMPORT OF C:\war3lib\Generic\Class\Mover.j
// END IMPORT OF C:\war3lib\Generic\Class\Mover.j
// END IMPORT OF C:\war3lib\Generic\Class\Class.j
// BEGIN IMPORT OF C:\war3lib\Generic\Frame\Frame.j
// BEGIN IMPORT OF C:\war3lib\Generic\Frame\ProgressBar.j
// END IMPORT OF C:\war3lib\Generic\Frame\ProgressBar.j



// END IMPORT OF C:\war3lib\Generic\Frame\Frame.j
// END IMPORT OF C:\war3lib\Generic\Generic.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\main.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Unit.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\UnitData.j



// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\GeneratedUnitData.j
// scope UnitHR00 begins
//textmacro instance: unitDataHeader("HR00","BTNFootman")
 function UnitHR00__init takes nothing returns nothing
		set s__UnitData_ID='HR00'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNFootman")) // INLINED!!
//end of: unitDataHeader("HR00","BTNFootman")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( '0000')) // INLINED!!
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (1 ), ( '0013')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitHR00 ends

// scope UnitHR09 begins
//textmacro instance: unitDataHeader("HR09","BTNVillagerMan1")
 function UnitHR09__init takes nothing returns nothing
		set s__UnitData_ID='HR09'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNVillagerMan1")) // INLINED!!
//end of: unitDataHeader("HR09","BTNVillagerMan1")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( '0006')) // INLINED!!
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (1 ), ( '0014')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitHR09 ends

// scope UnitHR07 begins
//textmacro instance: unitDataHeader("HR07","BTNAssassin")
 function UnitHR07__init takes nothing returns nothing
		set s__UnitData_ID='HR07'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNAssassin")) // INLINED!!
//end of: unitDataHeader("HR07","BTNAssassin")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( '0007')) // INLINED!!
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (1 ), ( '0016')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitHR07 ends

// scope UnitG000 begins
//textmacro instance: unitDataHeader("G000","BTNArmorGolem")
 function UnitG000__init takes nothing returns nothing
		set s__UnitData_ID='G000'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNArmorGolem")) // INLINED!!
//end of: unitDataHeader("G000","BTNArmorGolem")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( '0000')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitG000 ends

// scope UnitG001 begins
//textmacro instance: unitDataHeader("G001","BTNTreeOfEternity")
 function UnitG001__init takes nothing returns nothing
		set s__UnitData_ID='G001'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNTreeOfEternity")) // INLINED!!
//end of: unitDataHeader("G001","BTNTreeOfEternity")
	call s__UnitData_setStatValue(STAT_TYPE_MAXHP , 10000. , 1000.)
	call s__UnitData_setStatValue(STAT_TYPE_HPREGEN , 40. , 4.)
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitG001 ends

// scope UnitU000 begins
//textmacro instance: unitDataHeader("U000","BTNGhoul")
 function UnitU000__init takes nothing returns nothing
		set s__UnitData_ID='U000'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNGhoul")) // INLINED!!
//end of: unitDataHeader("U000","BTNGhoul")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( 'u000')) // INLINED!!
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (1 ), ( 'u010')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitU000 ends

// scope UnitU001 begins
//textmacro instance: unitDataHeader("U001","BTNCryptFiend")
 function UnitU001__init takes nothing returns nothing
		set s__UnitData_ID='U001'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNCryptFiend")) // INLINED!!
//end of: unitDataHeader("U001","BTNCryptFiend")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( 'u001')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitU001 ends

// scope UnitU002 begins
//textmacro instance: unitDataHeader("U002","BTNGargoyle")
 function UnitU002__init takes nothing returns nothing
		set s__UnitData_ID='U002'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNGargoyle")) // INLINED!!
//end of: unitDataHeader("U002","BTNGargoyle")
	//call UnitData.setInitialAbility(0,'u001')
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitU002 ends

// scope UnitU003 begins
//textmacro instance: unitDataHeader("U003","BTNNecromancer")
 function UnitU003__init takes nothing returns nothing
		set s__UnitData_ID='U003'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNNecromancer")) // INLINED!!
//end of: unitDataHeader("U003","BTNNecromancer")
	//call UnitData.setInitialAbility(0,'u001')
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitU003 ends

// scope UnitU004 begins
//textmacro instance: unitDataHeader("U004","BTNAbomination")
 function UnitU004__init takes nothing returns nothing
		set s__UnitData_ID='U004'
		call SaveStr(s__UnitData_HASH, s__UnitData_ID, s__UnitData_INDEX_EXTERNAL + 0, ("BTNAbomination")) // INLINED!!
//end of: unitDataHeader("U004","BTNAbomination")
	call SaveInteger(s__UnitData_HASH, s__UnitData_ID, INDEX_ABILITY + (0 ), ( 'u011')) // INLINED!!
//textmacro instance: unitDataEnd()
	endfunction
//end of: unitDataEnd()
// scope UnitU004 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\GeneratedUnitData.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\UnitData.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Tombstone.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Tombstone.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Undead\\Undead.j



// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Undead\\UndeadData.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Undead\\UndeadData.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Undead\\Undead.j

// END IMPORT OF C:\war3lib\maps\SkillArchive\Unit\Unit.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\Ability.j



// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\AbilityData.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier1.j

// scope Ability0000 begins
//textmacro instance: abilityDataHeader("0000","후려치기","BTNSteelMelee","1","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")

		
//end of: abilityDataHeader("0000","후려치기","BTNSteelMelee","1","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")
	
	
	
   function s__Ability0000_mv_executeExplosion takes integer this,integer target returns nothing
    local integer kn= s__knockback_create(target , Ability0000__KNOCKBACK_DISTANCE / Ability0000__KNOCKABCK_DURATION , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
				set s__Movement_z_velo[kn]=300.
				set s__Movement_gravity[kn]=( 300. * 2 ) / Ability0000__KNOCKABCK_DURATION
				set s__Actor_duration[kn]=Ability0000__KNOCKABCK_DURATION
				set s__UnitMovement_damage_id[this]=Ability0000__ID
				call s__UnitMovement_setDamageFlag((this),DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				if target == sc__Movement__get_target(this) then
					set s__UnitMovement_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK_ALTERNATE ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__UnitMovement_level[this] - 1 ) ) // INLINED!!
				else
					set s__UnitMovement_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__UnitMovement_level[this] - 1 ) ) // INLINED!!
				endif
				call s__UnitMovement_damageTarget(this,target)
				call s__Effect_kill(s__Effect_setScale(s__Effect_create(EF_ROCK , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 0),2.5))
				call s__Buff_add(0 , target , 'Stun' , 0.5)
   endfunction
	
   function s__Ability0000_mv_executeTarget takes integer this,integer target returns nothing
				call s__Movement__set_target(this,target)
				call s__UnitMovement_explosionAction(this)
				set s__Actor_want_destroy[this]=true
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0000__BACKSWING , true) // INLINED!!
   endfunction
	
   function s__Ability0000_mv_create takes integer u,real yaw,integer level returns integer
    local integer this= s__Ability0000_mv__allocate(u , Ability0000__CHARGE_SPEED , yaw)
				set s__Movement_use_collision[this]=true
				set s__Actor_duration[this]=Ability0000__CHARGE_DURATION
				set s__Movement_refresh_facing[this]=false
				set s__UnitMovement_level[this]=level
				set s__UnitMovement_flag_collision[this]=true
				set s__UnitMovement_radius_target[this]=Ability0000__COLRAD
				set s__UnitMovement_radius_explosion[this]=125.
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0 * s__Unit_prototype__get_attack_speed((s__Actor_actor[(this)])))*1.0)) // INLINED!!
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
				call s__Effect_kill(s__Effect_setPitch(s__Effect_create(EF_ROCK , sc__Object__get_x(u) , sc__Object__get_y(u) , sc__Object__get_z(u) , 0),- 90))
				return this
   endfunction
	
   function s__Ability0000_mv_onDestroy takes integer this returns nothing
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
   endfunction
	
	
	

   function s__Ability0000_actor_periodicAction takes integer this returns nothing
   endfunction
	
   function s__Ability0000_actor_onComplete takes integer this returns nothing
				call s__Ability0000_mv_create((s__Actor_actor[(this)]) , s__Ability0000_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
   endfunction
	
   function s__Ability0000_actor_create takes integer u,real x,real y,real delay,integer level returns integer
    local integer this= s__Ability0000_actor__allocate(u , 0 , x , y , level , delay , true)
				set s__Ability0000_actor_angle[this]=s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)) // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((s__Unit_prototype__get_attack_speed((s__Actor_actor[(this)])))*1.0)) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Ability0000_actor_angle[this]) // INLINED!!
				set s__UnitActor_suspend_ensnare[this]=true
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0000__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				return this
   endfunction
	


   function s__Ability0000__ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=( Ability0000__CHARGE_SPEED * Ability0000__CHARGE_DURATION )
				set s__LineIndicator_width[this]=Ability0000__COLRAD
   endfunction

   function s__Ability0000__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0000__ind__allocate(abil , owner)
				call s__Effect_setColor(s__LineIndicator_ef[this],255 , R2I(0.65 * 255) , 0)
				return this
   endfunction

	
	
   function s__Ability0000_main_relativeTooltip takes integer this returns string
				return "지정한 방향으로 약진하여 충돌하는 대상과 대상 주변의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히고 밀쳐냅니다.\n가장 가까운 적은 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK_ALTERNATE ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 피해량이 대신 적용됩니다." // INLINED!!
   endfunction
	
   function s__Ability0000_main_execute takes integer this returns nothing
				call s__Ability0000_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_getCarculatedCastDelayByAttackSpeed(this) , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0000_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=8.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=0.25
				set s__Ability_prototype_indicator[this]=s__Ability0000__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0000_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0000__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0000__ID , ABILITY_TAG_IRON)
				call SaveStr(Ability__HASH, (Ability0000__ID ), s__Ability_INDEX_TOOLTIP, ( "단거리 돌진,\n충돌 시 범위피해")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0000__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0000__ID then
			set a=s__Ability0000_main__allocate()
			set s__Ability_prototype_id[a]=Ability0000__ID
			set s__Ability_prototype_name[a]=Ability0000__NAME
			set s__Ability_prototype_icon[a]=Ability0000__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0000__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0000__act))
		call SaveStr(Ability__HASH, (Ability0000__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0000__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0000__ID ), s__Ability_INDEX_NAME, ( Ability0000__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0000__ID ), s__Ability_INDEX_TIER, ( Ability0000__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0000__ID ), s__Ability_INDEX_COST, ( Ability0000__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0000__ID , 0 , Ability0000__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0000__ID , 1 , Ability0000__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0000 ends
	

// scope Ability0001 begins
//textmacro instance: abilityDataHeader("0001","쌍극의 번개","btn-ability-protoss-doubleshieldrecharge","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")

		
//end of: abilityDataHeader("0001","쌍극의 번개","btn-ability-protoss-doubleshieldrecharge","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")
	


   function s__Ability0001_explosion_executeExplosion takes integer this,integer target returns nothing
				set s__Explosion_damage_id[this]=Ability0001__ID
				call s__Explosion_damageTarget(this,target)
				call s__Effect_kill(s__Effect_createAttatched(Ability0001__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin")) // INLINED!!
   endfunction

	
			

   function s__Ability0001_a2_onComplete takes integer this returns nothing
    local integer lh= s__Lightning_create("CLSB" , sc__Object__get_x(s__Ability0001_a2_effect_1[this]) , sc__Object__get_y(s__Ability0001_a2_effect_1[this]) , sc__Object__get_z(s__Ability0001_a2_effect_1[this]) , sc__Object__get_x(s__Ability0001_a2_effect_2[this]) , sc__Object__get_y(s__Ability0001_a2_effect_2[this]) , sc__Object__get_z(s__Ability0001_a2_effect_2[this]))
    local integer lex= s__Ability0001_explosion__allocate((s__Actor_actor[((this))]) , sc__Object__get_x(s__Ability0001_a2_effect_1[this]) , sc__Object__get_y(s__Ability0001_a2_effect_1[this]) , sc__Object__get_x(s__Ability0001_a2_effect_2[this]) , sc__Object__get_y(s__Ability0001_a2_effect_2[this]) , Ability0001__BALL_RADIUS) // INLINED!!
				call s__Lightning_setDuration(lh,0.25)
				set s__Lightning_fade[lh]=3.
				set s__Explosion_damage[lex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0001__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0001__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				call s__Explosion_activate(lex)
   endfunction

   function s__Ability0001_a2_periodicAction takes integer this returns nothing
				if s__Actor_stage[this] == 0 then
					if (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
						call s__Square_setLocalColor(s__Ability0001_a2_sq[this],0. , 1. , 0. , s__Line__Line_a[s__Ability0001_a2_sq[this]])
					else
						call s__Square_setLocalColor(s__Ability0001_a2_sq[this],1. , 0. , 0. , s__Line__Line_a[s__Ability0001_a2_sq[this]])
					endif
					call sc__Object__set_z(s__Ability0001_a2_effect_1[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]) + ( Ability0001__BALL_HEIGHT / Ability0001__BALL_UP ) * TIMER_TICK)
					call sc__Object__set_z(s__Ability0001_a2_effect_2[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]))
					call s__Effect_setAlpha(s__Ability0001_a2_effect_1[this],R2I(( s__Actor_timeout[this] / Ability0001__BALL_UP ) * 255))
					call s__Effect_setAlpha(s__Ability0001_a2_effect_2[this],R2I(( s__Actor_timeout[this] / Ability0001__BALL_UP ) * 255))
					if s__Actor_timeout[this] >= Ability0001__BALL_UP then
						call s__Effect_setAlpha(s__Ability0001_a2_effect_1[this],255)
						call s__Effect_setAlpha(s__Ability0001_a2_effect_2[this],255)
						call sc__Object__set_z(s__Ability0001_a2_effect_1[this],Ability0001__BALL_HEIGHT)
						call sc__Object__set_z(s__Ability0001_a2_effect_2[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]))
						call s__Actor_stageNext(this)
					endif
				endif
   endfunction

   function s__Ability0001_a2_create takes integer caster,real x,real y,real angle,integer level returns integer
    local integer this= s__Ability0001_a2__allocate(caster , 0 , x , y , level , Ability0001__DELAY , false)
				set s__Ability0001_a2_sq[this]=s__Square_create((((x )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Cos((( angle)*1.0) * bj_DEGTORAD)) , (((y )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Sin((( angle)*1.0) * bj_DEGTORAD)) , 0. , Ability0001__BALL_DISTANCE + Ability0001__BALL_RADIUS * 2 , angle , Ability0001__BALL_RADIUS , null) // INLINED!!
				set s__Ability0001_a2_effect_1[this]=s__Effect_create(Ability0001__EFFECT_PATH1 , x , y , 0. , 270.)
				set s__Ability0001_a2_effect_2[this]=s__Effect_create(Ability0001__EFFECT_PATH1 , (((x )*1.0) + (( Ability0001__BALL_DISTANCE )*1.0) * Cos((( angle)*1.0) * bj_DEGTORAD)) , (((y )*1.0) + (( Ability0001__BALL_DISTANCE )*1.0) * Sin((( angle)*1.0) * bj_DEGTORAD)) , 0. , 270.) // INLINED!!
				call s__Effect_setAlpha(s__Ability0001_a2_effect_1[this],0)
				call s__Effect_setAlpha(s__Ability0001_a2_effect_2[this],0)
				set s__Ability0001_a2_angle[this]=angle
				set s__Line__Line_alpha_max[s__Ability0001_a2_sq[this]]=0.5
				set s__Line__Line_refresh_color[s__Ability0001_a2_sq[this]]=false
				set s__Line__Line_permanent[s__Ability0001_a2_sq[this]]=true
				call s__Square_setColor(s__Ability0001_a2_sq[this],0 , 0.3 , 1. , 0.)
				set s__Line__Line_alphaaxis[(s__Ability0001_a2_sq[this])]=1 / ((Ability0001__BALL_UP)*1.0) // INLINED!!
				call s__Line__Line_setFadeOutPoint(s__Ability0001_a2_sq[this],Ability0001__DELAY , 0.25)
				return this
   endfunction

   function s__Ability0001_a2_onDestroy takes integer this returns nothing
				call s__Effect_kill(s__Ability0001_a2_effect_1[this])
				call s__Effect_kill(s__Ability0001_a2_effect_2[this])
				call sc__Line__Line_deallocate(s__Ability0001_a2_sq[this])
   endfunction
	
	
	
   function s__Ability0001_actor_onComplete takes integer this returns nothing
				call s__Ability0001_a2_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__Math_anglePoints(sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__Actor_x2[this] , s__Actor_y2[this]) , s__UnitActor_level[this]) // INLINED!!
   endfunction
	
   function s__Ability0001_actor_create takes integer caster,real x,real y,real x2,real y2,integer level returns integer
    local integer this= s__Ability0001_actor__allocate(caster , 0 , x , y , level , Ability0001__CAST , true)
				set s__Actor_x2[this]=x2
				set s__Actor_y2[this]=y2
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y)) // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((2.)*1.0)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0001__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				return this
   endfunction

   function s__Ability0001_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction



   function s__Ability0001__ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__Ability_prototype_command_x_temp[s__AbilityIndicator_abil[this]] , s__Ability_prototype_command_y_temp[s__AbilityIndicator_abil[this]] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_x[this]=(((s__Ability_prototype_command_x_temp[s__AbilityIndicator_abil[this]] )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Cos((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_y[this]=(((s__Ability_prototype_command_y_temp[s__AbilityIndicator_abil[this]] )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Sin((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_range[this]=Ability0001__BALL_DISTANCE + Ability0001__BALL_RADIUS * 2
				set s__LineIndicator_width[this]=Ability0001__BALL_RADIUS
   endfunction

   function s__Ability0001__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0001__ind__allocate(abil , owner)
				call s__Effect_setColor(s__LineIndicator_ef[this],0 , R2I(0.3 * 255) , 255)
				call s__Effect_setColor(s__AbilityIndicator_circle[this],0 , R2I(0.3 * 255) , 255)
				return this
   endfunction

	
	
   function s__Ability0001_main_relativeTooltip takes integer this returns string
				return "직선 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0001__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0001__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다." // INLINED!!
   endfunction

   function s__Ability0001_main_execute takes integer this returns nothing
				call s__Ability0001_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_command_x2[this] , s__Ability_prototype_command_y2[this] , s__Ability_prototype_level[this])
   endfunction

   function s__Ability0001_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=27
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0001__RANGE
				set s__Ability_prototype_cooldown_max[this]=6.7
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_drag_to_use[this]=true
				set s__Ability_prototype_indicator[this]=s__Ability0001__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0001_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0001__ID , ABILITY_STRING_DRAG_TO_USE)
				call s__Ability_addTypeTag(Ability0001__ID , ABILITY_TAG_MAGIC)
				call s__Ability_addTypeTag(Ability0001__ID , ABILITY_TAG_LIGHTNING)
				call SaveStr(Ability__HASH, (Ability0001__ID ), s__Ability_INDEX_TOOLTIP, ( "직선영역 범위피해\n ")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function Ability0001__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0001__ID then
			set a=s__Ability0001_main__allocate()
			set s__Ability_prototype_id[a]=Ability0001__ID
			set s__Ability_prototype_name[a]=Ability0001__NAME
			set s__Ability_prototype_icon[a]=Ability0001__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0001__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0001__act))
		call SaveStr(Ability__HASH, (Ability0001__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0001__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0001__ID ), s__Ability_INDEX_NAME, ( Ability0001__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0001__ID ), s__Ability_INDEX_TIER, ( Ability0001__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0001__ID ), s__Ability_INDEX_COST, ( Ability0001__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0001__ID , 0 , Ability0001__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0001__ID , 1 , Ability0001__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0001 ends


// scope Ability0002 begins
//textmacro instance: abilityDataHeader("0002","고정사격","BTNDwarvenLongRifle","1","STAT_TYPE_ACCURACY","STAT_TYPE_ARMOR_PENET")

		
//end of: abilityDataHeader("0002","고정사격","BTNDwarvenLongRifle","1","STAT_TYPE_ACCURACY","STAT_TYPE_ARMOR_PENET")
	
	
	

   function s__Ability0002_actor_suspendFilterAdditional takes integer this returns boolean
				return s__Unit_prototype_isUnitType(s__UnitActor_target[this],UNIT_TYPE_DEAD)
   endfunction

   function s__Ability0002_actor_onSuspend takes integer this returns nothing
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) + R2I(s__Ability0002_actor_mana[this]))*1.0)) // INLINED!!
   endfunction

   function s__Ability0002_actor_onComplete takes integer this returns nothing
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0002__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0002__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= s__Missile_create((s__Actor_actor[(this)]) , Ability0002__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
				set s__Missile_damage_id[ms]=Ability0002__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0002__DAMAGE_PER_ATTACK ) * ( 1 + Ability0002__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				set s__Missile_radius_target[ms]=Ability0002__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0002__VELO)*1.0) // INLINED!!
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0002__BACKSWING , true) // INLINED!!
   endfunction

   function s__Ability0002_actor_periodicAction takes integer this returns nothing
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
				if s__Actor_duration_max[this] - s__Actor_timeout[this] < 0.25 and not s__Ability0002_actor_play[this] then
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
					set s__Ability0002_actor_play[this]=true
				endif
   endfunction
	
   function s__Ability0002_actor_create takes integer caster,integer target,integer level returns integer
    local integer this= s__Ability0002_actor__allocate(caster , target , 0. , 0. , level , Ability0002__DELAY , true)
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0002__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__UnitActor_suspend_rclick[this]=true
				return this
   endfunction

   function s__Ability0002_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction

	

   function s__Ability0002_main_relativeTooltip takes integer this returns string
				return "정신집중 후 대상에게 강력한 탄환을 발사하여 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0002__DAMAGE_PER_ATTACK ) * ( 1 + Ability0002__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다." // INLINED!!
   endfunction

   function s__Ability0002_main_execute takes integer this returns nothing
    local integer ac= s__Ability0002_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
				set s__Ability0002_actor_mana[ac]=(I2R(s__Ability_prototype_manacost[(this)])) // INLINED!!
   endfunction

   function s__Ability0002_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=15
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_cast_range[this]=600.
				set s__Ability_prototype_cooldown_max[this]=0.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_delay[this]=Ability0002__DELAY
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction

   function s__Ability0002_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0002__ID , ABILITY_STRING_TARGET_UNIT)
				call s__Ability_addTypeTag(Ability0002__ID , ABILITY_TAG_FIREARM)
				call s__Ability_addTypeTag(Ability0002__ID , ABILITY_TAG_SHOOTING)
				call SaveStr(Ability__HASH, (Ability0002__ID ), s__Ability_INDEX_TOOLTIP, ( "정신 집중 후\n단일 대상 공격")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0002__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0002__ID then
			set a=s__Ability0002_main__allocate()
			set s__Ability_prototype_id[a]=Ability0002__ID
			set s__Ability_prototype_name[a]=Ability0002__NAME
			set s__Ability_prototype_icon[a]=Ability0002__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0002__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0002__act))
		call SaveStr(Ability__HASH, (Ability0002__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0002__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0002__ID ), s__Ability_INDEX_NAME, ( Ability0002__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0002__ID ), s__Ability_INDEX_TIER, ( Ability0002__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0002__ID ), s__Ability_INDEX_COST, ( Ability0002__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0002__ID , 0 , Ability0002__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0002__ID , 1 , Ability0002__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0002 ends


// scope Ability0003 begins
//textmacro instance: abilityDataHeader("0003","화염구","BTNFireBolt","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_SPELL_BOOST")

		
//end of: abilityDataHeader("0003","화염구","BTNFireBolt","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_SPELL_BOOST")
	
	


   function s__Ability0003__ball_periodicAction takes integer this returns nothing
				call s__Effect_setPosition(s__Ability0003__ball_l[this],sc__Object__get_x(this) , sc__Object__get_y(this) , 5.)
   endfunction

   function s__Ability0003__ball_executeTarget takes integer this,integer target returns nothing
				call DoNothing()
   endfunction

   function s__Ability0003__ball_afterExplosion takes integer this returns nothing
    local integer c= s__Circle_create(sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , Ability0003__EXPRAD)
				call s__Effect_setColor(c,255 , 153 , 0)
				set s__Circle_alpha[c]=0.66
				call s__Circle_setFadeOutPoint(c,0.25 , 0.75)
				call s__Effect_setDuration(s__Effect_create(Ability0003__EFFECT_PATH2 , sc__Object__get_x(this) , sc__Object__get_y(this) , 0. , 0.),1.5)
				call sc__Object_deallocate(s__Ability0003__ball_l[this])
				set s__Ability0003__ball_l[this]=0
   endfunction

   function s__Ability0003__ball_create takes integer owner,real x,real y,real z,real yaw,integer level returns integer
    local integer this= s__Ability0003__ball__allocate(owner , Ability0003__EFFECT_PATH1 , x , y , z , yaw)
				set s__Movement_velo[s__Object_movement[(this)]]=((Ability0003__VELO)*1.0) // INLINED!!
				set s__Missile_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Missile_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0003__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0003__DAMAGE_PER_LEVEL * ( level - 1 ) ) // INLINED!!
				set s__Missile_damage_id[this]=Ability0003__ID
				call s__Missile_setCollision(this,Ability0003__COLRAD)
				call s__Missile__set_radius_explosion((this),((Ability0003__EXPRAD)*1.0)) // INLINED!!
				call s__Effect_setDuration(this,( Ability0003__RANGE - Ability0003__STARTAT ) / Ability0003__VELO)
				call s__Missile_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Ability0003__ball_l[this]=s__Circle_create(x , y , 5. , Ability0003__COLRAD)
				call s__Effect_setColor(s__Ability0003__ball_l[this],255 , 153 , 0)
				set s__Circle_alpha[s__Ability0003__ball_l[this]]=0.5
				return this
   endfunction

   function s__Ability0003__ball_onDestroy takes integer this returns nothing
				if s__Ability0003__ball_l[this] != 0 then
					call s__Circle_setFadeOutPoint(s__Ability0003__ball_l[this],0. , 1.5)
					set s__Ability0003__ball_l[this]=0
				endif
   endfunction


	

   function s__Ability0003_actor_onComplete takes integer this returns nothing
    local integer ms= s__Ability0003__ball_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0003__STARTAT )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0003__STARTAT )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0003_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0003__BACKSWING , true) // INLINED!!
   endfunction
	
   function s__Ability0003_actor_create takes integer u,real x,real y,real delay,integer level returns integer
    local integer this= s__Ability0003_actor__allocate(u , 0 , x , y , level , delay , true)
				set s__Ability0003_actor_angle[this]=s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)) // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.66)*1.0)) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0003__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				return this
   endfunction

   function s__Ability0003_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
	

   function s__Ability0003__ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0003__RANGE
				set s__LineIndicator_width[this]=Ability0003__COLRAD
   endfunction

   function s__Ability0003__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0003__ind__allocate(abil , owner)
				call s__Effect_setColor(s__LineIndicator_ef[this],255 , R2I(0.65 * 255) , 0)
				call s__Effect_setColor(s__AbilityIndicator_circle[this],255 , R2I(0.65 * 255) , 0)
				return this
   endfunction


	
   function s__Ability0003_main_relativeTooltip takes integer this returns string
				return "지정한 방향으로 화염구를 발사하여 적과 닿으면 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0003__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0003__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다." // INLINED!!
   endfunction
	
   function s__Ability0003_main_execute takes integer this returns nothing
				call s__Ability0003_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0003_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=5.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0003__DELAY
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_indicator[this]=s__Ability0003__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0003_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0003__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0003__ID , ABILITY_TAG_MAGIC)
				call s__Ability_addTypeTag(Ability0003__ID , ABILITY_TAG_FIRE)
				call SaveStr(Ability__HASH, (Ability0003__ID ), s__Ability_INDEX_TOOLTIP, ( "범위피해 투사체 발사\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0003__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0003__ID then
			set a=s__Ability0003_main__allocate()
			set s__Ability_prototype_id[a]=Ability0003__ID
			set s__Ability_prototype_name[a]=Ability0003__NAME
			set s__Ability_prototype_icon[a]=Ability0003__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0003__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0003__act))
		call SaveStr(Ability__HASH, (Ability0003__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0003__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0003__ID ), s__Ability_INDEX_NAME, ( Ability0003__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0003__ID ), s__Ability_INDEX_TIER, ( Ability0003__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0003__ID ), s__Ability_INDEX_COST, ( Ability0003__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0003__ID , 0 , Ability0003__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0003__ID , 1 , Ability0003__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0003 ends


// scope Ability0004 begins
//textmacro instance: abilityDataHeader("0004","연쇄번개","btn-ability-swarm-kerrigan-chainreaction","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_ACCURACY")

		
//end of: abilityDataHeader("0004","연쇄번개","btn-ability-swarm-kerrigan-chainreaction","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_ACCURACY")
	




//Implemented from module ExplosionModule:


		


  function s__Ability0004__chain_setDamagePosition takes integer this,real x,real y returns nothing
			set s__Ability0004__chain_damage_x[this]=x
			set s__Ability0004__chain_damage_y[this]=y
  endfunction

  function s__Ability0004__chain_applyDamageFlag takes integer this returns nothing
			call s__Damage_setFlag(s__Ability0004__chain_damage_type[this] , s__Ability0004__chain_attack_type[this] , s__Ability0004__chain_is_target[this] , s__Ability0004__chain_is_aoe[this] , s__Ability0004__chain_interval_type[this] , s__Ability0004__chain_vector_type[this] , s__Ability0004__chain_is_onhit[this] , s__Ability0004__chain_is_ranged[this])
			set DAMAGE_ID=s__Ability0004__chain_damage_id[this]
			set USE_DAMAGE_POSITION=s__Ability0004__chain_use_damage_position[this]
			if s__Ability0004__chain_use_damage_position[this] then
				set DAMAGE_X=s__Ability0004__chain_damage_x[this]
				set DAMAGE_Y=s__Ability0004__chain_damage_y[this]
			endif
  endfunction

  function s__Ability0004__chain_damageTarget takes integer this,integer target returns real
			call s__Ability0004__chain_applyDamageFlag(this)
			return (s__Damage_unitDamageTarget(((s__Actor_actor[((this))])) , (target ) , (( s__Ability0004__chain_damage[this] )*1.0) , ( s__Ability0004__chain_weapon_type[this]))) // INLINED!!
  endfunction

  function s__Ability0004__chain_setDamageFlag takes integer this,integer damage,integer attack,boolean target,boolean aoe,integer interval,integer vector,boolean onhit,boolean ranged returns nothing
			set s__Ability0004__chain_damage_type[this]=damage
			set s__Ability0004__chain_attack_type[this]=attack
			set s__Ability0004__chain_is_target[this]=target
			set s__Ability0004__chain_is_aoe[this]=aoe
			set s__Ability0004__chain_interval_type[this]=interval
			set s__Ability0004__chain_vector_type[this]=vector
			set s__Ability0004__chain_is_onhit[this]=onhit
			set s__Ability0004__chain_is_ranged[this]=ranged
  endfunction

  function s__Ability0004__chain_damageFlagTemplateMeleeAttack takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false)
  endfunction

  function s__Ability0004__chain_damageFlagTemplateRangedAttack takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Ability0004__chain_damageFlagTemplateMagicalExplosion takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Ability0004__chain_damageFlagTemplatePhysicalExplosion takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Ability0004__chain_damageFlagTemplateTargetMagic takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true)
  endfunction

  function s__Ability0004__chain_damageFlagTemplateDOT takes integer this returns nothing
			call s__Ability0004__chain_setDamageFlag(this,DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_ETC , false , false , INTERVAL_TYPE_PERIODIC , VECTOR_TYPE_INNER , false , true)
  endfunction



  function s__Ability0004__chain_affectFilter takes integer this,integer target returns boolean
			if ( not s__Ability0004__chain_affect_enemy[this] and (IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[((this))])))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
				return false
			elseif ( not s__Ability0004__chain_affect_ally[this] and (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[((this))])))]), s__Agent_INDEX_ORIGIN_HANDLE))))))) ) then // INLINED!!
				return false
			elseif ( not s__Ability0004__chain_affect_invincible[this] and s__Unit_prototype_getStatus(target,STATUS_INVINCIBLE) > 0 ) then
				return false
			elseif ( not s__Ability0004__chain_affect_evasion[this] and s__Unit_prototype_getStatus(target,STATUS_EVASION) > 0 ) then
				return false
			elseif ( not s__Ability0004__chain_affect_self[this] and target == (s__Actor_actor[((this))]) ) then // INLINED!!
				return false
			elseif s__Unit_prototype_isUnitType(target,UNIT_TYPE_DEAD) then
				return false
			else
				return true
			endif
  endfunction


  function s__Ability0004__chain_rangeFilter takes integer this,integer target returns boolean
			return (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Actor__get_x(this) )*1.0), (( sc__Actor__get_y(this) )*1.0), (( s__Ability0004__chain_radius_explosion[this])*1.0))) // INLINED!!
  endfunction


		

  function s__Ability0004__chain_explosionFilter takes integer this,integer target returns boolean
			if not s__Ability0004__chain_affectFilter(this,target) then
				return false
			elseif not s__Ability0004__chain_rangeFilter(this,target) then
				return false
			elseif not sc__Ability0004__chain_explosionFilterAdditional(this,target) then
				return false
			else
				return true
			endif
  endfunction

  function s__Ability0004__chain_explosionAction takes integer this returns nothing
   local integer i= 0
   local unit u= null
			loop
				set u=BlzGroupUnitAt(UnitPrototype_GROUP, i)
				exitwhen u == null
				if s__Ability0004__chain_explosionFilter(this,s__Unit_prototype_get(u)) then
					call sc__Ability0004__chain_executeExplosion(this,s__Unit_prototype_get(u))
					call GroupAddUnit(s__Ability0004__chain_group_wave[this], u)
				endif
				set i=i + 1
			endloop
			set u=null
  endfunction


   function s__Ability0004__chain_explosionFilterAdditional takes integer this,integer target returns boolean
				return not IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Ability0004__chain_already[this]) // INLINED!!
   endfunction
	
   function s__Ability0004__chain_executeExplosion takes integer this,integer target returns nothing
				call DoNothing()
   endfunction

   function s__Ability0004__chain_killFilter takes integer this returns boolean
				if s__Ability0004__chain_count[this] <= 0 then
					return true
				else
					
					set s__Ability0004__chain_target_previous[this]=s__UnitActor_target[this]
					set s__UnitActor_target[this]=s__Unit_prototype_get(s__Group_getNearest(s__Ability0004__chain_group_wave[this] , sc__Actor__get_x(this) , sc__Actor__get_y(this) , null))
					
					if s__UnitActor_target[this] != 0 then
						set s__Actor_timeout[this]=0.
						set s__Actor_duration[this]=Ability0004__INTERVAL
						call sc__Actor__set_x(this,sc__Object__get_x(s__UnitActor_target[this]))
						call sc__Actor__set_y(this,sc__Object__get_y(s__UnitActor_target[this]))
						return false
					
					else
						return true
					endif
				endif
   endfunction

   function s__Ability0004__chain_onComplete takes integer this returns nothing
				
    local integer l= s__Lightning_createOO("CLPB" , s__Ability0004__chain_target_previous[this] , s__UnitActor_target[this])
				set s__Lightning_oz1[l]=s__Object_pivot_z[s__Ability0004__chain_target_previous[this]]
				set s__Lightning_oz2[l]=s__Object_pivot_z[s__UnitActor_target[this]]
				set s__Lightning_duration[l]=0.45
				set s__Lightning_alpha[l]=1.5
				set s__Lightning_fade[l]=1.
				
				call s__Ability0004__chain_damageTarget(this,s__UnitActor_target[this])
				set s__Ability0004__chain_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_MAGICPOWER)) * Ability0004__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				
				call s__Effect_kill(s__Effect_createAttatched(Ability0004__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest")) // INLINED!!
				
				if s__Actor_progress_bar[this] != 0 then
					call s__ProgressBar_deallocate(s__Actor_progress_bar[this])
					set s__Actor_progress_bar[this]=0
				endif
				
				set s__Ability0004__chain_count[this]=s__Ability0004__chain_count[this] - 1
				
				call GroupAddUnit(s__Ability0004__chain_already[this], (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
				
				call GroupClear(s__Ability0004__chain_group_wave[this])
				call s__Ability0004__chain_explosionAction(this)
   endfunction

   function s__Ability0004__chain_create takes integer caster,integer target,integer level,integer count returns integer
    local integer this= s__Ability0004__chain__allocate(caster , target , sc__Object__get_x(target) , sc__Object__get_y(target) , level , Ability0004__INTERVAL , false)
				call s__Effect_kill(s__Effect_createAttatched(Ability0004__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest")) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0004__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__Ability0004__chain_target_previous[this]=(s__Actor_actor[(this)]) // INLINED!!
				set s__Ability0004__chain_group_wave[this]=s__Group_new()
				set s__Ability0004__chain_already[this]=s__Group_new()
				set s__Ability0004__chain_count[this]=count
				set s__Ability0004__chain_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_MAGICPOWER)) * Ability0004__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) + ( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_ACCURACY)) * Ability0004__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				call s__Ability0004__chain_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Ability0004__chain_damage_id[this]=Ability0004__ID
				set s__Ability0004__chain_weapon_type[this]=WEAPON_TYPE_METAL_LIGHT_CHOP
				call s__UnitActor_suspendFree(this)
				return this
   endfunction

   function s__Ability0004__chain_onDestroy takes integer this returns nothing
				call ReleaseGroup((s__Ability0004__chain_group_wave[this])) // INLINED!!
				call ReleaseGroup((s__Ability0004__chain_already[this])) // INLINED!!
				set s__Ability0004__chain_group_wave[this]=null
				set s__Ability0004__chain_already[this]=null
   endfunction


	
   function s__Ability0004_actor_create takes integer u,integer target,real delay,integer level returns integer
    local integer this= s__Ability0004_actor__allocate(u , target , 0. , 0. , level , delay + Ability0004__BACKSWING , true)
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.66)*1.0)) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
				call s__Ability0004__chain_create(u , target , level , Ability0004__TARGET_MAX)
				return this
   endfunction

   function s__Ability0004_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
	
	
   function s__Ability0004_main_relativeTooltip takes integer this returns string
				return "대상을 포함한 최대 " + STRING_COLOR_CONSTANT + I2S(Ability0004__TARGET_MAX) + "기|r의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0004__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다.\n첫 대상에게는 피해량이 " + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0004__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 만큼 증가합니다." // INLINED!!
   endfunction
	
   function s__Ability0004_main_execute takes integer this returns nothing
				call s__Ability0004_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0004_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=22
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0004__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=5.3
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0004__INTERVAL
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0004_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0004__ID , ABILITY_STRING_TARGET_UNIT)
				call s__Ability_addTypeTag(Ability0004__ID , ABILITY_TAG_MAGIC)
				call s__Ability_addTypeTag(Ability0004__ID , ABILITY_TAG_LIGHTNING)
				call SaveStr(Ability__HASH, (Ability0004__ID ), s__Ability_INDEX_TOOLTIP, ( "연쇄공격\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0004__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0004__ID then
			set a=s__Ability0004_main__allocate()
			set s__Ability_prototype_id[a]=Ability0004__ID
			set s__Ability_prototype_name[a]=Ability0004__NAME
			set s__Ability_prototype_icon[a]=Ability0004__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0004__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0004__act))
		call SaveStr(Ability__HASH, (Ability0004__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0004__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0004__ID ), s__Ability_INDEX_NAME, ( Ability0004__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0004__ID ), s__Ability_INDEX_TIER, ( Ability0004__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0004__ID ), s__Ability_INDEX_COST, ( Ability0004__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0004__ID , 0 , Ability0004__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0004__ID , 1 , Ability0004__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0004 ends


// scope Ability0005 begins
//textmacro instance: abilityDataHeader("0005","신성의 빛","BTNHolyBolt","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAXHP")

		
//end of: abilityDataHeader("0005","신성의 빛","BTNHolyBolt","1","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAXHP")
	

	
   function s__Ability0005_actor_onComplete takes integer this returns nothing
				call s__Unit_prototype_restoreHP(s__UnitActor_target[this],( ( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_MAGICPOWER)) * Ability0005__HEAL_PER_MAGICPOWER ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) ) + ( ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[((this))])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * Ability0005__HEAL_PER_MAXHP ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) )) // INLINED!!
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0005__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
   endfunction

   function s__Ability0005_actor_create takes integer u,integer target,real delay,integer level returns integer
    local integer this= s__Ability0005_actor__allocate(u , target , 0. , 0. , level , delay + Ability0005__BACKSWING , true)
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"spell") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.25)*1.0)) // INLINED!!
				if (s__Actor_actor[(this)]) != s__UnitActor_target[this] then // INLINED!!
					call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
				endif
				return this
   endfunction

   function s__Ability0005_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
	
	
   function s__Ability0005_main_relativeTooltip takes integer this returns string
				return "대상 아군 유닛의 체력을 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0005__HEAL_PER_MAGICPOWER ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * Ability0005__HEAL_PER_MAXHP ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 만큼 회복시킵니다." // INLINED!!
   endfunction

   function s__Ability0005_main_targetFilterAdditional takes integer this,integer target returns boolean
				if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) < (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) then // INLINED!!
					return true
				else
					set ERROR_MESSAGE="대상의 체력이 가득 찼습니다."
					return false
				endif
   endfunction

   function s__Ability0005_main_execute takes integer this returns nothing
				call s__Ability0005_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0005_main_init takes integer this returns nothing
				set s__Ability_prototype_target_useable_enemy[this]=false
				set s__Ability_prototype_target_useable_ally[this]=true
				set s__Ability_prototype_target_useable_self[this]=true
				set s__Ability_prototype_manacost[this]=35
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0005__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=8.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=Ability0005__DELAY
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0005_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0005__ID , ABILITY_STRING_TARGET_UNIT)
				call s__Ability_addTypeTag(Ability0005__ID , ABILITY_TAG_MAGIC)
				call s__Ability_addTypeTag(Ability0005__ID , ABILITY_TAG_DIVINE)
				call SaveStr(Ability__HASH, (Ability0005__ID ), s__Ability_INDEX_TOOLTIP, ( "단일대상 회복\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0005__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0005__ID then
			set a=s__Ability0005_main__allocate()
			set s__Ability_prototype_id[a]=Ability0005__ID
			set s__Ability_prototype_name[a]=Ability0005__NAME
			set s__Ability_prototype_icon[a]=Ability0005__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0005__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0005__act))
		call SaveStr(Ability__HASH, (Ability0005__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0005__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0005__ID ), s__Ability_INDEX_NAME, ( Ability0005__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0005__ID ), s__Ability_INDEX_TIER, ( Ability0005__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0005__ID ), s__Ability_INDEX_COST, ( Ability0005__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0005__ID , 0 , Ability0005__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0005__ID , 1 , Ability0005__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0005 ends


// scope Ability0006 begins
//textmacro instance: abilityDataHeader("0006","점멸","BTNBlink","1","STAT_TYPE_EVASION","STAT_TYPE_ACCURACY")

		
//end of: abilityDataHeader("0006","점멸","BTNBlink","1","STAT_TYPE_EVASION","STAT_TYPE_ACCURACY")
	

	
   function s__Ability0006_main_getMaxCooldown takes integer this returns real
				return s__Ability_prototype_getMaxCooldownBySpellBoost(this) / ( 1 + ( s__Ability_prototype_level[this] - 1 ) * Ability0006__CDR_PER_LEVEL )
   endfunction

   function s__Ability0006_main_relativeTooltip takes integer this returns string
				return "선택한 지점으로 순간이동합니다.\n\n|cff999999다른 행동 중에 사용할 수 있습니다.|r"
   endfunction

   function s__Ability0006_main_beforePress takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=Ability0006__RANGE_MAX
   endfunction

   function s__Ability0006_main_beforeRelease takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=- 1.
   endfunction
	
   function s__Ability0006_main_execute takes integer this returns nothing
    local real d= s__Math_distancePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real a= s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				call s__Effect_setDuration(s__Effect_create(Ability0006__EFFECT_PATH1 , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , 5. , 270.),1.5)
				if d > Ability0006__RANGE_MAX then
					set s__Ability_prototype_command_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0006__RANGE_MAX )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Ability_prototype_command_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0006__RANGE_MAX )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
				endif
				call s__LocationEx_collisionProjection(s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				set s__Ability_prototype_command_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Ability_prototype_command_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
				call sc__Object__set_x(s__Ability_prototype_owner[this],s__Ability_prototype_command_x[this])
				call sc__Object__set_y(s__Ability_prototype_owner[this],s__Ability_prototype_command_y[this])
				call s__Effect_setDuration(s__Effect_create(Ability0006__EFFECT_PATH2 , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , 5. , 270.),1.5)
   endfunction
	
   function s__Ability0006_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=20
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_useable_cast[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=30.
				set s__Ability_prototype_cooldown_min[this]=0.
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0006_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0006__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0006__ID , ABILITY_TAG_MAGIC)
				call SaveStr(Ability__HASH, (Ability0006__ID ), s__Ability_INDEX_TOOLTIP, ( "순간이동\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0006__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0006__ID then
			set a=s__Ability0006_main__allocate()
			set s__Ability_prototype_id[a]=Ability0006__ID
			set s__Ability_prototype_name[a]=Ability0006__NAME
			set s__Ability_prototype_icon[a]=Ability0006__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0006__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0006__act))
		call SaveStr(Ability__HASH, (Ability0006__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0006__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0006__ID ), s__Ability_INDEX_NAME, ( Ability0006__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0006__ID ), s__Ability_INDEX_TIER, ( Ability0006__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0006__ID ), s__Ability_INDEX_COST, ( Ability0006__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0006__ID , 0 , Ability0006__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0006__ID , 1 , Ability0006__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0006 ends


// scope Ability0007 begins
//textmacro instance: abilityDataHeader("0007","순보","BTNSavageStrike","1","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")

		
//end of: abilityDataHeader("0007","순보","BTNSavageStrike","1","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")
	



   function s__Ability0007__exp_executeExplosion takes integer this,integer target returns nothing
    local integer ef= s__Effect_create(Ability0007__EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270.)
				call s__Effect_setScale(ef,2.)
				call s__Effect_setRoll(ef,45.)
				call s__Effect_setColor(ef,255 , 0 , 255)
				call s__Effect_setDuration(ef,1.0)
				set ef=s__Effect_setDuration(s__Effect_createAttatched(Ability0007__EFFECT_PATH3 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest"),1.5) // INLINED!!
				call s__Explosion_damageTarget(this,target)
				if not s__Ability0007__exp_b[this] then
					call s__Unit_prototype_restoreMP(s__Explosion_owner[this],Ability0007__MANA_RESTORE)
					set s__Ability0007__exp_b[this]=true
				endif
   endfunction

   function s__Ability0007__exp_create takes integer caster,real x1,real y1,real x2,real y2,integer level returns integer
    local integer this= s__Ability0007__exp__allocate(caster , x1 , y1 , x2 , y2 , Ability0007__EXPRAD)
    local integer ef= 0
				set s__Explosion_count[this]=1
				set s__Explosion_damage_id[this]=Ability0007__ID
				set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0007__DAMAGE_PER_ATTACK ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( level - 1 ) ) + ( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ACCURACY)) * Ability0007__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( level - 1 ) ) // INLINED!!
				set s__Explosion_weapon_type[this]=WEAPON_TYPE_METAL_MEDIUM_SLICE
				call s__Explosion_setDamageFlag((this),DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				
				set ef=s__Effect_create(Ability0007__EFFECT_PATH1 , x1 , y1 , 55 , sc__Object__get_yaw(s__Explosion_owner[this]))
				call sc__Object__set_pitch(ef,- 90)
				call s__Effect_setMatrixScale(ef,1 , 1 , 0.5)
				call s__Effect_setAnimSpeed(ef,2.)
				call s__Effect_setDuration(ef,1.5)
				set ef=s__Effect_create(Ability0007__EFFECT_PATH1 , x2 , y2 , 55 , sc__Object__get_yaw(s__Explosion_owner[this]))
				call sc__Object__set_pitch(ef,- 90)
				call s__Effect_setMatrixScale(ef,1 , 1 , 2.5)
				call s__Effect_setAnimSpeed(ef,2.)
				call s__Effect_setDuration(ef,1.5)
				return this
   endfunction



   function s__Ability0007__ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0007__RANGE_MAX
				set s__LineIndicator_width[this]=Ability0007__EXPRAD
   endfunction

   function s__Ability0007__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0007__ind__allocate(abil , owner)
				call s__Effect_setColor(s__LineIndicator_ef[this],255 , 0 , 255)
				call s__Effect_setColor(s__AbilityIndicator_circle[this],255 , 0 , 255)
				return this
   endfunction



   function s__Ability0007_main_relativeTooltip takes integer this returns string
				return "지정한 방향으로 짧은 거리 순간이동하며 경로 상의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0007__DAMAGE_PER_ATTACK ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0007__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다. 한 기 이상의 적에게 적중하면 마나를 " + STRING_COLOR_CONSTANT + I2S(Ability0007__MANA_RESTORE) + "|r 회복합니다." // INLINED!!
   endfunction

   function s__Ability0007_main_beforePress takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=Ability0007__RANGE_MAX
   endfunction

   function s__Ability0007_main_beforeRelease takes integer this returns nothing
				set s__Ability_prototype_cast_range[this]=- 1.
   endfunction
	
   function s__Ability0007_main_execute takes integer this returns nothing
    local real d= s__Math_distancePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real a= s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real bx= sc__Object__get_x(s__Ability_prototype_owner[this])
    local real by= sc__Object__get_y(s__Ability_prototype_owner[this])
    local integer ex= 0
				if d > Ability0007__RANGE_MAX then
					set s__Ability_prototype_command_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0007__RANGE_MAX )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Ability_prototype_command_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0007__RANGE_MAX )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
				endif
				call s__LocationEx_collisionProjection(s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				set s__Ability_prototype_command_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Ability_prototype_command_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
				call sc__Object__set_x(s__Ability_prototype_owner[this],s__Ability_prototype_command_x[this])
				call sc__Object__set_y(s__Ability_prototype_owner[this],s__Ability_prototype_command_y[this])
				call sc__Object__set_yaw(s__Ability_prototype_owner[this],s__Math_anglePoints(bx , by , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this])))
				
				set ex=s__Ability0007__exp_create(s__Ability_prototype_owner[this] , bx , by , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_level[this])
				call s__Explosion_activate(ex)
   endfunction
	
   function s__Ability0007_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=40
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=6.
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_indicator[this]=s__Ability0007__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0007_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0007__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0007__ID , ABILITY_TAG_ASSASSINATE)
				call SaveStr(Ability__HASH, (Ability0007__ID ), s__Ability_INDEX_TOOLTIP, ( "순간이동 및\n직선 범위공격")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0007__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0007__ID then
			set a=s__Ability0007_main__allocate()
			set s__Ability_prototype_id[a]=Ability0007__ID
			set s__Ability_prototype_name[a]=Ability0007__NAME
			set s__Ability_prototype_icon[a]=Ability0007__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0007__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0007__act))
		call SaveStr(Ability__HASH, (Ability0007__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0007__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0007__ID ), s__Ability_INDEX_NAME, ( Ability0007__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0007__ID ), s__Ability_INDEX_TIER, ( Ability0007__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0007__ID ), s__Ability_INDEX_COST, ( Ability0007__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0007__ID , 0 , Ability0007__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0007__ID , 1 , Ability0007__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0007 ends


// scope Abilityu000 begins
//textmacro instance: abilityDataHeader("u000","뛰어들기","BTNGhoulFrenzy","1","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")

		
//end of: abilityDataHeader("u000","뛰어들기","BTNGhoulFrenzy","1","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")
	



   function s__Abilityu000_actor_onComplete takes integer this returns nothing
				call s__UnitMovement_damageTarget(this,s__Abilityu000_actor_ability_target[this])
				call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Abilityu000_actor_ability_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
   endfunction
			
   function s__Abilityu000_actor_create takes integer caster,integer target,integer level returns integer
    local integer this= s__Abilityu000_actor__allocate(caster , Abilityu000__VELO , s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , sc__Object__get_x(target) , sc__Object__get_y(target)))
				set s__Abilityu000_actor_ability_target[this]=target
				set s__Actor_duration[this]=( s__Math_distancePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , sc__Object__get_x(target) , sc__Object__get_y(target)) + Abilityu000__RANGE_ADDITIONAL ) / Abilityu000__VELO
				set s__Movement_z_velo[this]=800.
				set s__Movement_gravity[this]=1600. / s__Actor_duration[this]
				set s__UnitMovement_level[this]=level
				set s__Movement_use_collision[this]=false
				set s__Abilityu000_actor_ability_target[this]=target
				set s__UnitMovement_damage_id[this]=Abilityu000__ID
				call s__UnitMovement_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__UnitMovement_damage_type[this]=DAMAGE_TYPE_PHYSICAL
				set s__UnitMovement_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Abilityu000__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu000__DAMAGE_PER_LEVEL * ( s__UnitMovement_level[this] - 1 ) ) // INLINED!!
				set s__UnitMovement_weapon_type[this]=WEAPON_TYPE_METAL_HEAVY_CHOP
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.5)*1.0)) // INLINED!!
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				return this
   endfunction

   function s__Abilityu000_actor_onDestroy takes integer this returns nothing
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
   endfunction

	
	
   function s__Abilityu000_main_relativeTooltip takes integer this returns string
				return "대상에게 뛰어들어 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Abilityu000__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다." // INLINED!!
   endfunction
	
   function s__Abilityu000_main_execute takes integer this returns nothing
				call s__Abilityu000_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
   endfunction
	
   function s__Abilityu000_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=20
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_cast_range[this]=Abilityu000__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=6.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Abilityu000_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Abilityu000__ID , ABILITY_STRING_TARGET_UNIT)
				call s__Ability_addTypeTag(Abilityu000__ID , ABILITY_TAG_BRAWL)
				call s__Ability_addTypeTag(Abilityu000__ID , ABILITY_TAG_UNDEAD)
				call SaveStr(Ability__HASH, (Abilityu000__ID ), s__Ability_INDEX_TOOLTIP, ( "대상에게 돌진\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Abilityu000__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Abilityu000__ID then
			set a=s__Abilityu000_main__allocate()
			set s__Ability_prototype_id[a]=Abilityu000__ID
			set s__Ability_prototype_name[a]=Abilityu000__NAME
			set s__Ability_prototype_icon[a]=Abilityu000__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Abilityu000__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Abilityu000__act))
		call SaveStr(Ability__HASH, (Abilityu000__ID ), s__Ability_INDEX_ICON_PATH, ( Abilityu000__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Abilityu000__ID ), s__Ability_INDEX_NAME, ( Abilityu000__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu000__ID ), s__Ability_INDEX_TIER, ( Abilityu000__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu000__ID ), s__Ability_INDEX_COST, ( Abilityu000__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Abilityu000__ID , 0 , Abilityu000__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Abilityu000__ID , 1 , Abilityu000__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Abilityu000 ends


// scope Buffu001 begins
//textmacro instance: buffHeader("끈적거미","u001","0","BTNMonsterSpiderCarapace_01")

//end of: buffHeader("끈적거미","u001","0","BTNMonsterSpiderCarapace_01")



  function s__Buffu001_main_addValue takes integer this returns nothing
			set s__Buffu001_main_val[this]=s__Buffu001_main_val[this] + s__Buffu001_main_SLOW
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , s__Buffu001_main_SLOW)
  endfunction

  function s__Buffu001_main_update takes integer this returns nothing
			call s__Buffu001_main_addValue(this)
  endfunction

  function s__Buffu001_main_init takes integer this returns nothing
			call s__Buffu001_main_addValue(this)
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu001_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest")) // INLINED!!
  endfunction

  function s__Buffu001_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , - s__Buffu001_main_val[this])
  endfunction


//textmacro instance: buffEnd()

   function Buffu001__new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if Buffu001__INDIVISUAL == 2 then
					set b=s__Buffu001_main__allocate(Buffu001__ID , caster , target , duration , Buffu001__NAME)
					set s__Buff_icon[b]=Buffu001__ICON_PATH
					call s__Buffu001_main_init(b)
				elseif Buffu001__INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , Buffu001__ID)
					if b == 0 then
						set b=s__Buffu001_main__allocate(Buffu001__ID , caster , target , duration , Buffu001__NAME)
						set s__Buff_icon[b]=Buffu001__ICON_PATH
						call s__Buffu001_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu001_main_addValue((b)) // INLINED!!
					endif
				elseif Buffu001__INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , Buffu001__ID)
					if b == 0 then
						set b=s__Buffu001_main__allocate(Buffu001__ID , caster , target , duration , Buffu001__NAME)
						set s__Buff_icon[b]=Buffu001__ICON_PATH
						call s__Buffu001_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu001_main_addValue((b)) // INLINED!!
					endif
				endif
				return b
			endfunction

   function Buffu001__cond takes nothing returns nothing
				if BUFF_CREATE_ID == Buffu001__ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=Buffu001__new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function Buffu001__init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu001__cond))
			endfunction

//end of: buffEnd()
// scope Buffu001 ends


// scope Abilityu001 begins
//textmacro instance: abilityDataHeader("u001","끈적거미","BTNMonsterSpiderCarapace_01","1","STAT_TYPE_ACCURACY","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("u001","끈적거미","BTNMonsterSpiderCarapace_01","1","STAT_TYPE_ACCURACY","STAT_TYPE_ATTACK")
	


   function s__Abilityu001__mss_executeTarget takes integer this,integer target returns nothing
				if s__Missile_damageTarget(this,target) > 0. then
					call s__Buff_add(s__Missile_owner[this] , target , Abilityu001__ID , Abilityu001__DURATION)
				endif
   endfunction

   function s__Abilityu001__mss_create takes integer caster,integer target,real x,real y,real z,real yaw,integer level returns integer
    local integer this= s__Abilityu001__mss__allocate(caster , Abilityu001__EFFECT_PATH1 , x , y , z , yaw)
				call s__Missile__set_target((this),(target)) // INLINED!!
				set s__Movement_velo[s__Object_movement[(this)]]=((Abilityu001__VELO)*1.0) // INLINED!!
				set s__Missile_damage_id[this]=Abilityu001__ID
				set s__Missile_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Missile_owner[this]),STAT_TYPE_ATTACK)) * Abilityu001__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu001__DAMAGE_PER_LEVEL * ( level - 1 ) ) // INLINED!!
				call s__Missile_setDamageFlag((this),DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				return this
   endfunction

	

   function s__Abilityu001_actor_onComplete takes integer this returns nothing
    local real a= s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this])) // INLINED!!
    local integer ms= s__Abilityu001__mss_create((s__Actor_actor[(this)]) , s__UnitActor_target[this] , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Abilityu001__STARTAT )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Abilityu001__STARTAT )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , a , s__UnitActor_level[this]) // INLINED!!
				call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
   endfunction
	
   function s__Abilityu001_actor_create takes integer caster,integer target,integer level returns integer
    local integer this= s__Abilityu001_actor__allocate(caster , target)
				set s__UnitActor_level[this]=level
				return this
   endfunction

	

   function s__Abilityu001_main_relativeTooltip takes integer this returns string
				return "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Abilityu001__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu001__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히고 " + STRING_COLOR_CONSTANT + R2SW(Abilityu001__DURATION, 1, 1) + "초|r 동안 " + s__STAT_TYPE_NAME[STAT_TYPE_MOVEMENT_SPEED] + "를 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu001_main_SLOW)) + "|r 감소시키는 거미떼를 날려보냅니다.\n\n|cff999999이동속도 감소효과는 중첩됩니다.|r" // INLINED!!
   endfunction

   function s__Abilityu001_main_basicAttack takes integer this,integer target returns nothing
    local integer ac= s__Abilityu001_actor_create(s__Ability_prototype_owner[this] , target , s__Ability_prototype_level[this])
   endfunction

   function s__Abilityu001_main_init takes integer this returns nothing
				set s__Ability_prototype_weapon_delay[this]=1.5
				set s__Ability_prototype_weapon_range[this]=500.
				set s__Ability_prototype_count[this]=0
				call s__Ability_plusStatValue(this,5)
   endfunction

   function s__Abilityu001_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Abilityu001__ID , ABILITY_STRING_WEAPON)
				call s__Ability_addTypeTag(Abilityu001__ID , ABILITY_TAG_BUG)
				call s__Ability_addTypeTag(Abilityu001__ID , ABILITY_TAG_UNDEAD)
				call SaveStr(Ability__HASH, (Abilityu001__ID ), s__Ability_INDEX_TOOLTIP, ( "거미떼 공격,\n대상 이동속도 감소")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Abilityu001__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Abilityu001__ID then
			set a=s__Abilityu001_main__allocate()
			set s__Ability_prototype_id[a]=Abilityu001__ID
			set s__Ability_prototype_name[a]=Abilityu001__NAME
			set s__Ability_prototype_icon[a]=Abilityu001__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Abilityu001__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Abilityu001__act))
		call SaveStr(Ability__HASH, (Abilityu001__ID ), s__Ability_INDEX_ICON_PATH, ( Abilityu001__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Abilityu001__ID ), s__Ability_INDEX_NAME, ( Abilityu001__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu001__ID ), s__Ability_INDEX_TIER, ( Abilityu001__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu001__ID ), s__Ability_INDEX_COST, ( Abilityu001__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Abilityu001__ID , 0 , Abilityu001__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Abilityu001__ID , 1 , Abilityu001__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Abilityu001 ends

// scope AddRandomAbility1 begins

 function AddRandomAbility1__init takes nothing returns nothing
		call s__Ability_addRandomAbility('0000' , 1)
		call s__Ability_addRandomAbility('0001' , 1)
		call s__Ability_addRandomAbility('0002' , 1)
		call s__Ability_addRandomAbility('0003' , 1)
		call s__Ability_addRandomAbility('0004' , 1)
		call s__Ability_addRandomAbility('0005' , 1)
		call s__Ability_addRandomAbility('0006' , 1)
		call s__Ability_addRandomAbility('0007' , 1)
	endfunction

// scope AddRandomAbility1 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier1.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier2.j

// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\Special\\MakePotion.j

// scope Ability0010 begins
//textmacro instance: abilityDataHeader("0010","물약 제조","BTNVialEmpty","2","STAT_TYPE_HPREGEN","STAT_TYPE_MPREGEN")

		
//end of: abilityDataHeader("0010","물약 제조","BTNVialEmpty","2","STAT_TYPE_HPREGEN","STAT_TYPE_MPREGEN")
	



   function s__Ability0010_potion_executeExplosion takes integer this,integer target returns nothing
				if s__Ability0010_potion_potion_index[this] == 0 then
					call s__Unit_prototype_restoreHP(target,s__Missile_damage[this] * Ability0010__HEAL_BAESU)
				elseif s__Ability0010_potion_potion_index[this] == 1 then
					call s__Unit_prototype_restoreMP(target,Ability0010__MANA_RESTORE + Ability0010__MANA_RESTORE_PER_LEVEL * ( s__Ability0010_potion_level[this] - 1 ))
				elseif s__Ability0010_potion_potion_index[this] == 2 or s__Ability0010_potion_potion_index[this] == 3 then
					call s__Missile_damageTarget(this,target)
				endif
   endfunction

   function s__Ability0010_potion_beforeExplosion takes integer this returns nothing
				call sc__Object__set_x(this,s__Ability0010_potion_tx[this])
				call sc__Object__set_y(this,s__Ability0010_potion_ty[this])
   endfunction

   function s__Ability0010_potion_afterExplosion takes integer this returns nothing
    local integer c= s__Circle_create(sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , Ability0010__EXPRAD)
    local real rd= 0.
    local real ra= 0.
    local integer i= 0
				
				if s__Ability0010_potion_potion_index[this] == 0 then
					call s__Effect_setColor(c,0 , 255 , 0)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH10 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),0.75)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH11 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),1.5)
				
				elseif s__Ability0010_potion_potion_index[this] == 1 then
					call s__Effect_setColor(c,0 , 153 , 255)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH7 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),0.75)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH8 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),1.5)
				
				elseif s__Ability0010_potion_potion_index[this] == 2 then
					call s__Effect_setColor(c,255 , 153 , 0)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH5 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.25),1.5)
					call s__Effect_kill(s__Effect_setAnimSpeed(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH6 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.25),0.66))
				
				elseif s__Ability0010_potion_potion_index[this] == 3 then
					call s__Effect_setColor(c,0 , 153 , 0)
					call s__Effect_kill(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH12 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65))
				endif
				call s__Effect_setScale(this,1.75)
				call s__Circle_setFadeOutPoint(c,0 , 1.25)
   endfunction

   function s__Ability0010_potion_create takes integer caster,real x,real y,integer level,integer potion_index returns integer
    local integer this= 0
				
				if potion_index == 0 then
					set this=s__Ability0010_potion__allocate(caster , Ability0010__EFFECT_PATH1 , sc__Object__get_x(caster) , sc__Object__get_y(caster) , 0. , s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , x , y))
					set s__Missile_affect_ally[this]=true
					set s__Missile_affect_enemy[this]=false
					set s__Missile_affect_invincible[this]=true
					set s__Missile_affect_self[this]=true
				
				elseif potion_index == 1 then
					set this=s__Ability0010_potion__allocate(caster , Ability0010__EFFECT_PATH2 , sc__Object__get_x(caster) , sc__Object__get_y(caster) , 0. , s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , x , y))
					set s__Missile_affect_ally[this]=true
					set s__Missile_affect_enemy[this]=false
					set s__Missile_affect_invincible[this]=true
				
				elseif potion_index == 2 then
					set this=s__Ability0010_potion__allocate(caster , Ability0010__EFFECT_PATH3 , sc__Object__get_x(caster) , sc__Object__get_y(caster) , 0. , s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , x , y))
					set s__Missile_damage_id[this]=Ability0010__ID2
					call s__Missile_setDamageFlag((this),DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				
				elseif potion_index == 3 then
					set this=s__Ability0010_potion__allocate(caster , Ability0010__EFFECT_PATH4 , sc__Object__get_x(caster) , sc__Object__get_y(caster) , 0. , s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , x , y))
					set s__Missile_damage_id[this]=Ability0010__ID3
					call s__Missile_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				endif
				set s__Missile_damage[this]=Ability0010__DAMAGE_BASE * ( 1 + ( s__Ability0010_potion_level[this] - 1 ) * Ability0010__DAMAGE_PER_LEVEL )
				set s__Movement_velo[s__Object_movement[(this)]]=((s__Math_distancePoints(sc__Object__get_x(s__Missile_owner[this]) , sc__Object__get_y(s__Missile_owner[this]) , x , y) / Ability0010__FLIGHT_DURATION)*1.0) // INLINED!!
				set s__Movement_z_velo[s__Object_movement[(this)]]=((2250.)*1.0) // INLINED!!
				set s__Movement_gravity[s__Object_movement[(this)]]=((( 2250. * 2 ) / Ability0010__FLIGHT_DURATION)*1.0) // INLINED!!
				set s__Ability0010_potion_potion_index[this]=potion_index
				set s__Ability0010_potion_level[this]=level
				set s__Ability0010_potion_tx[this]=x
				set s__Ability0010_potion_ty[this]=y
				call s__Missile__set_radius_explosion((this),((Ability0010__EXPRAD)*1.0)) // INLINED!!
				call s__Effect_setDuration(this,5.)
				return this
   endfunction






   function s__Ability0010_make_periodicAction takes integer this returns nothing
				call s__Effect_setPosition(s__Ability0010_make_ef[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 25.) // INLINED!!
   endfunction

   function s__Ability0010_make_onComplete takes integer this returns nothing
    local integer ta= s__Unit_prototype_getAbilityById((s__Actor_actor[(this)]),Ability0010__ID) // INLINED!!
				if ta > 0 then
					call s__Effect_setDuration(s__Effect_create(Ability0010__EFFECT_PATH9 , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 0. , 270.),1.5) // INLINED!!
					set Ability0010__POTION_ADD_ABILITY=ta
					set Ability0010__POTION_ADD_INDEX=s__Ability0010_make_potion_index[this]
					call TriggerEvaluate(Ability0010__POTION_ADD_TRIGGER)
				else

				endif
   endfunction

   function s__Ability0010_make_onSuspend takes integer this returns nothing
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) + s__Ability0010_make_mp[this])*1.0)) // INLINED!!
   endfunction

   function s__Ability0010_make_create takes integer caster,integer potion_index,real mp returns integer
    local integer this= s__Ability0010_make__allocate(caster , 0 , 0. , 0. , 0 , Ability0010__CHANNELING , true)
				set s__Ability0010_make_potion_index[this]=potion_index
				set s__Ability0010_make_mp[this]=mp
				set s__UnitActor_suspend_rclick[this]=true
				set s__UnitActor_suspend_stop[this]=true
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0010__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) - s__Ability0010_make_mp[this])*1.0)) // INLINED!!
				set s__Ability0010_make_ef[this]=s__Effect_create("Effects\\CircleIndicator00.mdl" , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 25. , 0.) // INLINED!!
				call s__Effect_setScale(s__Ability0010_make_ef[this],0.66)
				call s__Effect_setAnimSpeed(s__Ability0010_make_ef[this],1. / 3.)
				if potion_index == 0 then
					call s__Effect_setColor(s__Ability0010_make_ef[this],0 , 255 , 0)
				elseif potion_index == 1 then
					call s__Effect_setColor(s__Ability0010_make_ef[this],0 , 153 , 255)
				elseif potion_index == 2 then
					call s__Effect_setColor(s__Ability0010_make_ef[this],255 , 153 , 0)
				elseif potion_index == 3 then
					call s__Effect_setColor(s__Ability0010_make_ef[this],200 , 0 , 200)
				endif
				return this
   endfunction

   function s__Ability0010_make_onDestroy takes integer this returns nothing
				call sc__Object_deallocate(s__Ability0010_make_ef[this])
   endfunction


	

   function s__Ability0010_actor_onComplete takes integer this returns nothing
				call s__Ability0010_potion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitActor_level[this] , s__Ability0010_actor_potion_index[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0010__BACKSWING , true) // INLINED!!
   endfunction
	
   function s__Ability0010_actor_onSuspend takes integer this returns nothing
    local integer p= s__Ability0010_potion_create((s__Actor_actor[(this)]) , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , s__UnitActor_level[this] , s__Ability0010_actor_potion_index[this]) // INLINED!!
				set s__Missile_want_kill[p]=true
   endfunction

   function s__Ability0010_actor_create takes integer u,real x,real y,real delay,integer level,integer potion_index returns integer
    local integer this= s__Ability0010_actor__allocate(u , 0 , x , y , level , delay , true)
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.66)*1.0)) // INLINED!!
				set s__Ability0010_actor_potion_index[this]=potion_index
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create("물약 투척" , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				return this
   endfunction

   function s__Ability0010_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
	


   function s__Ability0010__ind_refresh takes integer this returns nothing
				call s__Effect_setPosition(s__Ability0010__ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
   endfunction

   function s__Ability0010__ind_show takes integer this,boolean flag returns nothing
				if flag then
					if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
						call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0010__ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
					endif
				else
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0010__ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
				endif
   endfunction

   function s__Ability0010__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0010__ind__allocate(abil , owner)
				set s__Ability0010__ind_c[this]=s__Effect_create("Effects\\RCircle.mdl" , 0. , 0. , 2. , 270.)
				call s__Effect_setScale(s__Ability0010__ind_c[this],Ability0010__EXPRAD / 100.)
				call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0010__ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
				return this
   endfunction

   function s__Ability0010__ind_onDestroy takes integer this returns nothing
				call sc__Object_deallocate(s__Ability0010__ind_c[this])
   endfunction







//Implemented from module GetSetFrame:

 function s__Ability0010_main_getFrame takes integer this,integer index returns framehandle
		if HaveSavedHandle(s__Ability0010_main_HASH, this, index) then
			return LoadFrameHandle(s__Ability0010_main_HASH, this, index)
		else
			return null
		endif
 endfunction

 function s__Ability0010_main_setFrame takes integer this,integer index,framehandle nf returns framehandle
		if nf == null then
			call BlzDestroyFrame(LoadFrameHandle(s__Ability0010_main_HASH, this, index))
			call RemoveSavedHandle(s__Ability0010_main_HASH, this, index)
		endif
		call SaveFrameHandle(s__Ability0010_main_HASH, this, index, nf)
		return nf
 endfunction


   function s__Ability0010_main_refreshTooltip takes integer this returns nothing
				call BlzFrameSetText(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + 0), "|cffffff00" + s__Ability0010_main_POTION_NAME[0] + "|r\n\n범위 내 아군의 체력을 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__DAMAGE_BASE * ( 1 + ( s__Ability_prototype_level[this] - 1 ) * Ability0010__DAMAGE_PER_LEVEL ) * Ability0010__HEAL_BAESU, 1, 1) + "|r 회복시킵니다.")
				call BlzFrameSetText(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + 1), "|cffffff00" + s__Ability0010_main_POTION_NAME[1] + "|r\n\n범위 내 아군의 마나를 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__MANA_RESTORE + Ability0010__MANA_RESTORE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ), 1, 1) + "|r 회복시킵니다.\n\n|cffff0000시전자에게는 효과가 없습니다.|r")
				call BlzFrameSetText(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + 2), "|cffffff00" + s__Ability0010_main_POTION_NAME[2] + "|r\n\n범위 내 적들에게 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__DAMAGE_BASE * ( 1 + ( s__Ability_prototype_level[this] - 1 ) * Ability0010__DAMAGE_PER_LEVEL ), 1, 1) + "|r의 " + ABILITY_TAG_DRUG + ", " + ABILITY_TAG_FIRE + "계열 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다.")
				call BlzFrameSetText(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + 3), "|cffffff00" + s__Ability0010_main_POTION_NAME[3] + "|r\n\n범위 내 적들에게 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__DAMAGE_BASE * ( 1 + ( s__Ability_prototype_level[this] - 1 ) * Ability0010__DAMAGE_PER_LEVEL ), 1, 1) + "|r의 " + ABILITY_TAG_DRUG + ", " + ABILITY_TAG_POISON + "계열 " + DAMAGE_STRING_MAGICAL + "를 입힙니다.")
   endfunction

   function s__Ability0010_main_refreshButton takes integer this returns nothing
    local integer i= 0
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					if i == s__Ability0010_main_potion_index[this] then
						call BlzFrameSetVisible(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_COUNT_TEXT + i), true)
					else
						call BlzFrameSetVisible(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_COUNT_TEXT + i), false)
					endif
					call BlzFrameSetText(BlzGetFrameByName("MakePotionCreateButtonText", this * s__Ability0010_main_POTION_TYPE_MAX + i), "|cff00cc00" + I2S(LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i)) + "|r")
					set i=i + 1
				endloop
				call s__Ability0010_main_refreshTooltip(this)
   endfunction

   function s__Ability0010_main_switchUI takes integer this returns nothing
				
				if s__Ability0010_main_visible_flag[this] then
					call BlzFrameSetVisible(s__Ability0010_main_container[this], false)
				
				else
					call BlzFrameSetVisible(s__Ability0010_main_container[this], GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				endif
				set s__Ability0010_main_visible_flag[this]=not s__Ability0010_main_visible_flag[this]
   endfunction

   function s__Ability0010_main_iconClick takes integer this returns nothing
				call s__Ability0010_main_switchUI(this)
   endfunction

   function s__Ability0010_main_relativeTooltip takes integer this returns string
				return "|cff00ffff아이콘 클릭 : |r물약 제조 UI를 열거나 닫습니다. 숫자가 표시된 버튼을 클릭하면 해당 물약을 제조하며, 물약 아이콘을 클릭하면 사용할 물약 종류를 해당 물약으로 설정합니다.\n물약 제조에는 " + STRING_COLOR_CONSTANT + I2S(Ability0010__MANACOST2) + "|r의 마나와 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__CHANNELING, 1, 1) + "초|r의 정신집중이 필요합니다.\n총 물약 소지 개수는 " + STRING_COLOR_CONSTANT + I2S(Ability0010__POTION_MAX + Ability0010__POTION_MAX_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 )) + "개|r를 초과할 수 없습니다.\n\n|cff00ffff사용 시 : |r물약 제조 UI에서 선택된 물약을 대상 지점으로 투척합니다. 물약 투척이 방해받으면 시전자의 위치에서 폭발합니다."
   endfunction
	
   function s__Ability0010_main_useFilterAdditional takes integer this returns boolean
				if LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this]) > 0 then
					return true
				else
					set ERROR_MESSAGE="선택된 종류의 물약을 가지고 있지 않습니다."
					return false
				endif
   endfunction

   function s__Ability0010_main_execute takes integer this returns nothing
				call s__Ability0010_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this] , s__Ability0010_main_potion_index[this])
				call SaveInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this], LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this]) - 1)
				call s__Ability0010_main_refreshButton(this)
   endfunction

   function s__Ability0010_main_makeFilter takes integer this returns boolean
    local integer i= 0
    local integer j= 0
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					set j=j + LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i)
					set i=i + 1
				endloop
				if Ability0010__POTION_MAX + Ability0010__POTION_MAX_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) > j then
					return true
				else
					set ERROR_MESSAGE="더 이상 물약을 제조할 수 없습니다."
					return false
				endif
   endfunction
	
   function s__Ability0010_main_click takes nothing returns nothing
    local integer this= 0
    local integer i= 0
				call BlzFrameSetEnable(BlzGetTriggerFrame(), false)
				call BlzFrameSetEnable(BlzGetTriggerFrame(), true)
				if BlzGetTriggerFrameEvent() == FRAMEEVENT_CONTROL_CLICK then
					
					set this=(LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
					loop
						exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
						if BlzGetTriggerFrame() == s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_CREATE + i) then
							
							set s__Ability_prototype_manacost[this]=Ability0010__MANACOST2
							set ERROR_MESSAGE=""
							if s__Ability_prototype_enableFilter(this) and s__Ability_prototype_costFilter(this) and s__Ability_prototype_castFilter(this) and s__Ability0010_main_makeFilter(this) then
								call s__Ability0010_make_create(s__Ability_prototype_owner[this] , i , (I2R(s__Ability_prototype_manacost[(this)]))) // INLINED!!
							else
								call s__Ability_prototype_sendError(this)
							endif
							set s__Ability_prototype_manacost[this]=0
							call s__Ability0010_main_refreshButton(this)
							return
						endif
						set i=i + 1
					endloop
					set i=0
					
					loop
						exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
						if BlzGetTriggerFrame() == s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i) then
							set s__Ability0010_main_potion_index[this]=i
							call s__Ability0010_main_refreshButton(this)
							return
						endif
						set i=i + 1
					endloop
				endif
   endfunction

   function s__Ability0010_main_update takes integer this returns nothing
				call s__Ability0010_main_refreshTooltip(this)
   endfunction

   function s__Ability0010_main_init takes integer this returns nothing
    local integer i= 0
    local framehandle f= null
    local framehandle bf= null
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=0.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0010__DELAY
				set s__Ability_prototype_cast_range[this]=Ability0010__RANGE
				set s__Ability_prototype_manacost[this]=0
				set s__Ability_prototype_indicator[this]=s__Ability0010__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
				
				
				set s__Ability0010_main_keypress[this]=s__Trigger_new(this)
				set s__Ability0010_main_keypress_cond[this]=TriggerAddCondition(s__Ability0010_main_keypress[this], Condition(function s__Ability0010_main_click))
				
				set s__Ability0010_main_container[this]=BlzCreateFrame("MBEdge", FRAME_MAKE_POTION, 0, 0)
				call BlzFrameSetPoint(s__Ability0010_main_container[this], FRAMEPOINT_BOTTOMRIGHT, FRAME_STAT2, FRAMEPOINT_TOPRIGHT, 0., 0.)
				call BlzFrameSetSize(s__Ability0010_main_container[this], (((( 80 * s__Ability0010_main_POTION_TYPE_MAX ) + 16)*1.0) / 1800.), (((144)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetVisible(s__Ability0010_main_container[this], false)
				
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					
					call SaveInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i, 0)
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_SET + i , BlzCreateFrame("MakePotionSetButton", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_TOPLEFT, s__Ability0010_main_container[this], FRAMEPOINT_TOPLEFT, (((16 + 80 * i)*1.0) / 1800.), (((- 16)*1.0) / 1800.)) // INLINED!!
					call BlzFrameSetSize(f, (((64)*1.0) / 1800.), (((64)*1.0) / 1800.)) // INLINED!!
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_CONTROL_CLICK)
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_MOUSE_LEAVE)
					set bf=f
					set f=BlzGetFrameByName("MakePotionSetButtonIcon", this * s__Ability0010_main_POTION_TYPE_MAX + i)
					call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, bf, FRAMEPOINT_CENTER, 0., 0.)
					call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
					call BlzFrameSetTexture(f, s__Ability0010_main_POTION_ICON_PATH[i], 0, true)
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_CREATE + i , BlzCreateFrame("MakePotionCreateButton", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_TOP, bf, FRAMEPOINT_BOTTOM, 0., 0.)
					call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_CONTROL_CLICK)
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_MOUSE_LEAVE)
					set bf=f
					set f=BlzGetFrameByName("MakePotionCreateButtonText", this * s__Ability0010_main_POTION_TYPE_MAX + i)
					call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, s__Ability0010_main_container[this], FRAMEPOINT_CENTER, 0., 0.)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetText(f, "|cff00cc000|r")
					set bf=f
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_COUNT_TEXT + i , BlzCreateFrame("MyText", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), FRAMEPOINT_TOP, 0., 0.)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetText(f, "|cffff0000▼|r")
					call BlzFrameSetVisible(f, false)
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_CONTAINER + i , BlzCreateFrameByType("FRAME", "", s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), "", 0))
					call BlzFrameSetAbsPoint(f, FRAMEPOINT_TOPLEFT, 0., 0.)
					call BlzFrameSetTooltip(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), f)
					set bf=f
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_BACKDROP + i , BlzCreateFrameByType("BACKDROP", "", bf, "", 0))
					call BlzFrameSetTexture(f, "Textures\\black32.blp", 0, true)
					call BlzFrameSetAlpha(f, 128)
					set bf=f
					
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + i , BlzCreateFrame("MyText", s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_CONTAINER + i), 0, 0))
					call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, s__Ability0010_main_container[this], FRAMEPOINT_TOP, 0., 0.005)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetPoint(bf, FRAMEPOINT_TOPRIGHT, f, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
					call BlzFrameSetPoint(bf, FRAMEPOINT_BOTTOMLEFT, f, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
					
					set i=i + 1
				endloop
				
				call s__Ability0010_main_refreshButton(this)
				
				set f=null
				set bf=null
   endfunction
	
   function s__Ability0010_main_deactivate takes integer this returns nothing
    local integer i= 0
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_CREATE + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_SET + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_BACKDROP + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + i , null)
					call RemoveSavedInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i)
					set i=i + 1
				endloop
//textmacro instance: destroyFrame(".container")
	call BlzDestroyFrame(s__Ability0010_main_container[this])
	set s__Ability0010_main_container[this]=null
//end of: destroyFrame(".container")
				call TriggerRemoveCondition(s__Ability0010_main_keypress[this], s__Ability0010_main_keypress_cond[this])
				call s__Trigger_remove(s__Ability0010_main_keypress[this])
				set s__Ability0010_main_keypress[this]=null
				set s__Ability0010_main_keypress_cond[this]=null
   endfunction

   function s__Ability0010_main_potionAddRequest takes nothing returns nothing
    local integer this= Ability0010__POTION_ADD_ABILITY
				call SaveInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + Ability0010__POTION_ADD_INDEX, LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + Ability0010__POTION_ADD_INDEX) + 1)
				call s__Ability0010_main_refreshButton(this)
				set Ability0010__POTION_ADD_ABILITY=0
				set Ability0010__POTION_ADD_INDEX=0
   endfunction

   function s__Ability0010_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0010__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0010__ID , ABILITY_TAG_PRODUCT)
				call s__Ability_addTypeTag(Ability0010__ID , ABILITY_TAG_DRUG)
				
				call s__Ability_addTypeTag(Ability0010__ID2 , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0010__ID2 , ABILITY_TAG_FIRE)
				call s__Ability_addTypeTag(Ability0010__ID2 , ABILITY_TAG_DRUG)
				
				call s__Ability_addTypeTag(Ability0010__ID3 , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0010__ID3 , ABILITY_TAG_POISON)
				call s__Ability_addTypeTag(Ability0010__ID3 , ABILITY_TAG_DRUG)
				
				call SaveStr(Ability__HASH, (Ability0010__ID ), s__Ability_INDEX_TOOLTIP, ( "여러 가지 물약 제조\n및 투척")) // INLINED!!
				
				set s__Ability0010_main_INDEX_BTN_CREATE=0 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_BTN_SET=1 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_POTION_COUNT=2 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_COUNT_TEXT=3 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_TOOLTIP_BACKDROP=4 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_TOOLTIP_TEXT=5 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_INDEX_TOOLTIP_CONTAINER=6 * s__Ability0010_main_POTION_TYPE_MAX
				set s__Ability0010_main_POTION_ICON_PATH[0]="ReplaceableTextures\\CommandButtons\\BTNPotionGreen.blp"
				set s__Ability0010_main_POTION_ICON_PATH[1]="ReplaceableTextures\\CommandButtons\\BTNPotionBlueBig.blp"
				set s__Ability0010_main_POTION_ICON_PATH[2]="ReplaceableTextures\\CommandButtons\\BTNLiquidFire.blp"
				set s__Ability0010_main_POTION_ICON_PATH[3]="ReplaceableTextures\\CommandButtons\\BTNAcidBomb.blp"
				set s__Ability0010_main_POTION_NAME[0]="치유 물약"
				set s__Ability0010_main_POTION_NAME[1]="마나 물약"
				set s__Ability0010_main_POTION_NAME[2]="폭발 물약"
				set s__Ability0010_main_POTION_NAME[3]="산성 물약"
				call TriggerAddCondition(Ability0010__POTION_ADD_TRIGGER, Condition(function s__Ability0010_main_potionAddRequest))
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0010__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0010__ID then
			set a=s__Ability0010_main__allocate()
			set s__Ability_prototype_id[a]=Ability0010__ID
			set s__Ability_prototype_name[a]=Ability0010__NAME
			set s__Ability_prototype_icon[a]=Ability0010__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0010__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0010__act))
		call SaveStr(Ability__HASH, (Ability0010__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0010__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0010__ID ), s__Ability_INDEX_NAME, ( Ability0010__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0010__ID ), s__Ability_INDEX_TIER, ( Ability0010__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0010__ID ), s__Ability_INDEX_COST, ( Ability0010__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0010__ID , 0 , Ability0010__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0010__ID , 1 , Ability0010__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0010 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\Special\\MakePotion.j


// scope Ability0013 begins
//textmacro instance: abilityDataHeader("0013","소용돌이","BTNWhirlwind","2","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")

		
//end of: abilityDataHeader("0013","소용돌이","BTNWhirlwind","2","STAT_TYPE_ATTACK","STAT_TYPE_ARMOR_PENET")
	



   function s__Ability0013__exp_executeExplosion takes integer this,integer target returns nothing
    local integer ef= 0
				if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
					set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability0013__exp_level[this] - 1 ) ) // INLINED!!
				else
					set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability0013__exp_level[this] - 1 ) ) // INLINED!!
				endif
				call s__Explosion_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0013__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest"),1.5) // INLINED!!
				set ef=s__Effect_create(Ability0013__EFFECT_PATH3 , sc__Object__get_x(target) + GetRandomReal(- 25, 25) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] + GetRandomReal(- 25, 25) , 270.)
				call s__Effect_setRoll(ef,GetRandomReal(0., 360.))
				call s__Effect_setMatrixScale(ef,1.25 , 1.25 , 2.)
				call s__Effect_setAlpha(ef,192)
				call s__Effect_setDuration(ef,1.0)
   endfunction

   function s__Ability0013__exp_beforeExplosion takes integer this returns nothing
				set s__Explosion_x[this]=sc__Object__get_x(s__Explosion_owner[this])
				set s__Explosion_y[this]=sc__Object__get_y(s__Explosion_owner[this])
   endfunction

   function s__Ability0013__exp_create takes integer caster,real x,real y,real rad,integer level returns integer
    local integer this= s__Ability0013__exp__allocate(caster , x , y , rad)
				set s__Ability0013__exp_level[this]=level
				set s__Explosion_damage_type[this]=DAMAGE_TYPE_PHYSICAL
				set s__Explosion_weapon_type[this]=WEAPON_TYPE_METAL_HEAVY_BASH
				set s__Explosion_is_ranged[this]=false
				set s__Explosion_damage_id[this]=Ability0013__ID
				set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability0013__exp_level[this] - 1 ) ) // INLINED!!
				return this
   endfunction


	

   function s__Ability0013_actor_periodicAction takes integer this returns nothing
				set s__Ability0013_actor_anim_progress[this]=s__Ability0013_actor_anim_progress[this] + TIMER_TICK
				call s__Effect_setPosition(s__Ability0013_actor_c[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 5.) // INLINED!!
				call sc__Object__set_yaw((s__Actor_actor[(this)]),sc__Object__get_yaw((s__Actor_actor[(this)])) + 360 * TIMER_TICK * Ability0013__ROTSPEED) // INLINED!!
				if s__Ability0013_actor_anim_progress[this] >= Ability0013__INTERVAL then
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((6.)*1.0)) // INLINED!!
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
					set s__Ability0013_actor_anim_progress[this]=s__Ability0013_actor_anim_progress[this] - Ability0013__INTERVAL
				endif
   endfunction
	
   function s__Ability0013_actor_create takes integer u,real x,real y,integer level returns integer
    local integer this= s__Ability0013_actor__allocate(u , 0 , x , y , level , Ability0013__INTERVAL * Ability0013__COUNT , true)
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((2.)*1.0)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0013__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__ProgressBar_reverse[s__Actor_progress_bar[this]]=true
				set s__Ability0013_actor_mover[this]=s__Mover_create((s__Actor_actor[(this)])) // INLINED!!
				set s__Mover_refresh_facing[s__Ability0013_actor_mover[this]]=false
				set s__Ability0013_actor_ex[this]=s__Ability0013__exp_create((s__Actor_actor[(this)]) , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , Ability0013__RAD , level) // INLINED!!
				set s__Explosion_count[s__Ability0013_actor_ex[this]]=- 1
				set s__Explosion_interval[s__Ability0013_actor_ex[this]]=Ability0013__INTERVAL
				call s__Explosion_activate(s__Ability0013_actor_ex[this])
				set s__Ability0013_actor_c[this]=s__Circle_create(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 5. , Ability0013__RAD) // INLINED!!
				set s__Circle_alpha_max[s__Ability0013_actor_c[this]]=0.45
				set s__Circle_alpha[s__Ability0013_actor_c[this]]=0.
				call s__Circle_fadeIn(s__Ability0013_actor_c[this],0.35)
				set s__Ability0013_actor_ef[this]=s__Effect_createAttatched(Ability0013__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin") // INLINED!!
				return this
   endfunction

   function s__Ability0013_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call s__Mover_deallocate(s__Ability0013_actor_mover[this])
				if s__Ability0013_actor_ex[this] > 0 then
					call sc__Explosion_deallocate(s__Ability0013_actor_ex[this])
				endif
				call sc__Object_deallocate(s__Ability0013_actor_c[this])
				call s__Effect_kill(s__Ability0013_actor_ef[this])
   endfunction
	
	
	
   function s__Ability0013_main_relativeTooltip takes integer this returns string
				return "주변의 적들을 무자비하게 강타하여 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다. 총 " + STRING_COLOR_CONSTANT + I2S(Ability0013__COUNT) + "회|r 공격합니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   endfunction

   function s__Ability0013_main_execute takes integer this returns nothing
    local integer a= s__Ability0013_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0013_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=0.
				set s__Ability_prototype_cooldown_min[this]=0.
				set s__Ability_prototype_manacost[this]=18
				set s__Ability_prototype_is_immediate[this]=true
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0013_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0013__ID , ABILITY_STRING_IMMEDIATE)
				call s__Ability_addTypeTag(Ability0013__ID , ABILITY_TAG_IRON)
				call SaveStr(Ability__HASH, (Ability0013__ID ), s__Ability_INDEX_TOOLTIP, ( "주변 적 연속공격\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0013__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0013__ID then
			set a=s__Ability0013_main__allocate()
			set s__Ability_prototype_id[a]=Ability0013__ID
			set s__Ability_prototype_name[a]=Ability0013__NAME
			set s__Ability_prototype_icon[a]=Ability0013__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0013__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0013__act))
		call SaveStr(Ability__HASH, (Ability0013__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0013__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0013__ID ), s__Ability_INDEX_NAME, ( Ability0013__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0013__ID ), s__Ability_INDEX_TIER, ( Ability0013__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0013__ID ), s__Ability_INDEX_COST, ( Ability0013__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0013__ID , 0 , Ability0013__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0013__ID , 1 , Ability0013__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0013 ends


// scope Ability0014 begins
//textmacro instance: abilityDataHeader("0014","카드 투척","BTNPickACard","2","STAT_TYPE_ACCURACY","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("0014","카드 투척","BTNPickACard","2","STAT_TYPE_ACCURACY","STAT_TYPE_ATTACK")
	



   function s__additional_onComplete takes integer this returns nothing
//textmacro instance: Ability0014_tm0()
    local integer rint= GetRandomInt(0, 3)
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= 0
				
				if rint == 0 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				
				elseif rint == 1 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH2 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				
				elseif rint == 2 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH3 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				
				else
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH4 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				endif
				set s__Missile_damage_id[ms]=Ability0014__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_radius_target[ms]=Ability0014__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0014__VELO)*1.0) // INLINED!!
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_WOOD_LIGHT_BASH
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
//end of: Ability0014_tm0()
   endfunction

   function s__additional_create takes integer caster,integer target,integer level returns integer
    local integer this= s__additional__allocate(caster , target , 0. , 0. , level , 0.15 , false)
				return this
   endfunction

	

   function s__Ability0014_actor_onComplete takes integer this returns nothing
    local integer a= s__Unit_prototype_getAbilityById((s__Actor_actor[(this)]),Ability0014__ID) // INLINED!!
//textmacro instance: Ability0014_tm0()
    local integer rint= GetRandomInt(0, 3)
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= 0
				
				if rint == 0 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				
				elseif rint == 1 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH2 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				
				elseif rint == 2 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH3 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				
				else
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH4 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				endif
				set s__Missile_damage_id[ms]=Ability0014__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_radius_target[ms]=Ability0014__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0014__VELO)*1.0) // INLINED!!
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_WOOD_LIGHT_BASH
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
//end of: Ability0014_tm0()
				if a > 0 then
					call sc__Ability_prototype_addValue(a,1)
					if s__Ability_prototype_value[a] >= Ability0014__NEED_TO then
						call s__additional_create((s__Actor_actor[(this)]) , s__UnitActor_target[this] , s__UnitActor_level[this]) // INLINED!!
						set s__Ability_prototype_value[a]=0
					endif
				endif
				call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
   endfunction
	
   function s__Ability0014_actor_create takes integer caster,integer target,integer level returns integer
    local integer this= s__Ability0014_actor__allocate(caster , target)
				set s__UnitActor_level[this]=level
				return this
   endfunction

	

   function s__Ability0014_main_relativeTooltip takes integer this returns string
				return "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 피해를 입히는 무작위 카드를 투척합니다. 카드의 공격유형과 피해유형은 카드의 색깔에 따라 달라집니다. " + "네 번째 공격 마다 한 장의 카드를 추가로 투척합니다." + "\n\n|cffff0000빨간색 카드 : |r" + DAMAGE_STRING_PHYSICAL + ", " + ATTACK_STRING_BASIC + "\n\n|cff0099ff파란색 카드 : |r" + DAMAGE_STRING_MAGICAL + ", " + ATTACK_STRING_BASIC + "\n\n|cffffff00황금색 카드 : |r" + DAMAGE_STRING_PHYSICAL + ", " + ATTACK_STRING_SPELL + "\n\n|cffcc00cc보라색 카드 : |r" + DAMAGE_STRING_MAGICAL + ", " + ATTACK_STRING_SPELL // INLINED!!
   endfunction

   function s__Ability0014_main_basicAttack takes integer this,integer target returns nothing
    local integer ac= s__Ability0014_actor_create(s__Ability_prototype_owner[this] , target , s__Ability_prototype_level[this])
   endfunction

   function s__Ability0014_main_init takes integer this returns nothing
				set s__Ability_prototype_weapon_delay[this]=1.
				set s__Ability_prototype_weapon_range[this]=550.
				set s__Ability_prototype_count[this]=0
				call s__Ability_plusStatValue(this,5)
   endfunction

   function s__Ability0014_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0014__ID , ABILITY_STRING_WEAPON)
				call s__Ability_addTypeTag(Ability0014__ID , ABILITY_TAG_CARDMAGIC)
				call s__Ability_addTypeTag(Ability0014__ID , ABILITY_TAG_THROW)
				call SaveStr(Ability__HASH, (Ability0014__ID ), s__Ability_INDEX_TOOLTIP, ( "무작위 피해유형을 가진\n카드 투척")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0014__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0014__ID then
			set a=s__Ability0014_main__allocate()
			set s__Ability_prototype_id[a]=Ability0014__ID
			set s__Ability_prototype_name[a]=Ability0014__NAME
			set s__Ability_prototype_icon[a]=Ability0014__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0014__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0014__act))
		call SaveStr(Ability__HASH, (Ability0014__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0014__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0014__ID ), s__Ability_INDEX_NAME, ( Ability0014__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0014__ID ), s__Ability_INDEX_TIER, ( Ability0014__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0014__ID ), s__Ability_INDEX_COST, ( Ability0014__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0014__ID , 0 , Ability0014__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0014__ID , 1 , Ability0014__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0014 ends


// scope Ability0015 begins
//textmacro instance: abilityDataHeader("0015","암흑비전파동","BTNArchonQ","2","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")

		
//end of: abilityDataHeader("0015","암흑비전파동","BTNArchonQ","2","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")
	



   function s__Ability0015__exp_executeExplosion takes integer this,integer target returns nothing
				call s__Explosion_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0015__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
   endfunction

   function s__Ability0015__exp_create takes integer caster,real x,real y,real x2,real y2,real rad,integer level returns integer
    local integer this= s__Ability0015__exp__allocate(caster , x , y , x2 , y2 , rad)
    local real angle= s__Math_anglePoints(s__Explosion_x[this] , s__Explosion_y[this] , s__LineExplosion_x2[this] , s__LineExplosion_y2[this])
    local integer lh= 0
				set s__Ability0015__exp_level[this]=level
				set s__Explosion_is_ranged[this]=false
				set s__Explosion_damage_id[this]=Ability0015__ID
				set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0015__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0015__DAMAGE_PER_LEVEL * ( s__Ability0015__exp_level[this] - 1 ) ) // INLINED!!
				call s__Effect_kill(s__Effect_setScale(s__Effect_create(Ability0015__EFFECT_PATH1 , s__Explosion_x[this] , s__Explosion_y[this] , 55. , 270.),2.5))
				call s__Effect_setDuration(s__Effect_create(Ability0015__EFFECT_PATH2 , s__Explosion_x[this] , s__Explosion_y[this] , 0. , 270.),1.5)
				call s__Effect_kill(s__Effect_setScale(s__Effect_create(Ability0015__EFFECT_PATH1 , s__LineExplosion_x2[this] , s__LineExplosion_y2[this] , 55. , 270.),2.5))
				set lh=s__Lightning_create("AFOD" , s__Explosion_x[this] , s__Explosion_y[this] , 55. , s__LineExplosion_x2[this] , s__LineExplosion_y2[this] , 55.)
				call s__Lightning_setDuration(lh,1.5)
				call s__Lightning_setFade(lh,- TIMER_TICK * 0.5)
				return this
   endfunction





   function s__Ability0015_actor_periodicAction takes integer this returns nothing
				if s__Ability0015_actor_sq[this] > 0 then
					call s__Line__Line_setPosition(s__Ability0015_actor_sq[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 2.) // INLINED!!
				endif
   endfunction

   function s__Ability0015_actor_onComplete takes integer this returns nothing
    local integer ex= s__Ability0015__exp_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0015__COLRAD )*1.0) * Cos((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0015__COLRAD )*1.0) * Sin((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( s__Ability0015_actor_range[this] - Ability0015__COLRAD )*1.0) * Cos((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( s__Ability0015_actor_range[this] - Ability0015__COLRAD )*1.0) * Sin((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , Ability0015__COLRAD , s__UnitActor_level[this]) // INLINED!!
				call s__Explosion_activate(ex)
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0015__BACKSWING , true) // INLINED!!
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				set s__Line__Line_alphaaxis[s__Ability0015_actor_sq[this]]=- 1. / 0.5
   endfunction
	
   function s__Ability0015_actor_create takes integer u,real x,real y,integer level,real range returns integer
    local integer this= s__Ability0015_actor__allocate(u , 0 , x , y , level , Ability0015__DELAY , true)
				set s__Ability0015_actor_angle[this]=s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)) // INLINED!!
				set s__Ability0015_actor_sq[this]=s__Square_create(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 2. , range , s__Ability0015_actor_angle[this] , Ability0015__COLRAD , null) // INLINED!!
				call s__Square_setColor(s__Ability0015_actor_sq[this],1. , 0. , 0. , 0.)
				set s__Line__Line_alphaaxis[s__Ability0015_actor_sq[this]]=1. / 0.35
				set s__Ability0015_actor_range[this]=range
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((0.66)*1.0)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0015__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Ability0015_actor_angle[this]) // INLINED!!
				return this
   endfunction

   function s__Ability0015_actor_onSuspend takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call sc__Line__Line_deallocate(s__Ability0015_actor_sq[this])
				set s__Ability0015_actor_sq[this]=0
   endfunction
	
   function s__Ability0015_actor_onDestroy takes integer this returns nothing
				set s__Ability0015_actor_sq[this]=0
   endfunction



   function s__Ability0015__ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]]
				set s__LineIndicator_width[this]=Ability0015__COLRAD
   endfunction

   function s__Ability0015__ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0015__ind__allocate(abil , owner)
				call s__Effect_setColor(s__LineIndicator_ef[this],255 , 0 , 0)
				call s__Effect_setColor(s__AbilityIndicator_circle[this],255 , 0 , 0)
				return this
   endfunction





   function s__Ability0015_charge_periodicAction takes integer this returns nothing
				call s__Effect_setPosition(s__Ability0015_charge_ef[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_z((s__Actor_actor[(this)])) + 125) // INLINED!!
				set s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]]=s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]] + ( ( Ability0015__RANGE_MAX - Ability0015__RANGE_INITIAL ) * TIMER_TICK ) / Ability0015__CHARGE_MAX_AT
				call s__Effect_setScale(s__Ability0015_charge_ef[this],(s__Effect_scale_true[(s__Ability0015_charge_ef[this])]) + TIMER_TICK) // INLINED!!
				if s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]] > Ability0015__RANGE_MAX then
					set s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]]=Ability0015__RANGE_MAX
					call s__Effect_setScale(s__Ability0015_charge_ef[this],3.0)
				endif
				if s__Actor_timeout[this] >= 0.25 and s__Actor_stage[this] == 0 then
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((0.)*1.0)) // INLINED!!
					set s__Actor_stage[this]=1
				endif
   endfunction

   function s__Ability0015_charge_create takes integer caster returns integer
    local integer this= s__Ability0015_charge__allocate(caster , 0 , 0. , 0. , 0 , Ability0015__CHARGE_TIMEOUT , true)
				set s__Ability0015_charge_mv[this]=s__Mover_create((s__Actor_actor[(this)])) // INLINED!!
				set s__Mover_refresh_facing[s__Ability0015_charge_mv[this]]=true
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"spell") // INLINED!!
				set s__Ability0015_charge_ef[this]=s__Effect_create(Ability0015__EFFECT_PATH1 , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_z((s__Actor_actor[(this)])) + 125. , 270.) // INLINED!!
				call s__Effect_setScale(s__Ability0015_charge_ef[this],2.0)
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0015__NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__ProgressBar_reverse[s__Actor_progress_bar[this]]=true
				return this
   endfunction

   function s__Ability0015_charge_onDestroy takes integer this returns nothing
				call s__Mover_deallocate(s__Ability0015_charge_mv[this])
				set s__Ability0015_charge_mv[this]=0
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
				call sc__Object_deallocate(s__Ability0015_charge_ef[this])
   endfunction

	


   function s__Ability0015_main_relativeTooltip takes integer this returns string
				return "직선 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0015__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0015__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히는 파동을 방출합니다. 스킬 버튼을 오래 누를 수록 사거리가 증가합니다." // INLINED!!
   endfunction

   function s__Ability0015_main_beforeRelease takes integer this returns nothing
				if s__Ability_prototype_pressing[this] then
					set s__Ability_prototype_command_x[this]=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability_prototype_command_y[this]=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability0015_main_range_temp[this]=s__Ability_prototype_cast_range[this]
					set s__Ability_prototype_cast_range[this]=- 1.
					if s__Ability_prototype_link_actor[this] > 0 then
						set s__Ability_prototype_useable_cast[this]=true
					endif
				endif
   endfunction

   function s__Ability0015_main_onRelease takes integer this returns nothing
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
				endif
				set s__Ability_prototype_cast_range[this]=- 1.
				set s__Ability_prototype_useable_cast[this]=false
   endfunction

			
   function s__Ability0015_main_onRightClick takes integer this returns nothing
				if s__Ability_prototype_link_actor[this] <= 0 then
					call s__Ability_prototype_setPressState(this,false)
				endif
   endfunction

   function s__Ability0015_main_execute takes integer this returns nothing
    local integer a= 0
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
					set s__Ability_prototype_link_actor[this]=0
				endif
				set a=s__Ability0015_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this] , s__Ability0015_main_range_temp[this])
				set s__Ability_prototype_cast_range[this]=- 1.
				set s__Ability_prototype_useable_cast[this]=false
   endfunction
	
   function s__Ability0015_main_onPress takes integer this returns nothing
    local integer a= 0
				set s__Ability_prototype_useable_cast[this]=false
				if s__Ability_prototype_costFilter(this) and s__Ability_prototype_enableFilter(this) then
					
					if s__Ability_prototype_castFilter(this) then
						set a=s__Ability0015_charge_create(s__Ability_prototype_owner[this])
						call s__Ability_prototype_linkActor(this,a)
					endif
					set s__Ability_prototype_cast_range[this]=Ability0015__RANGE_INITIAL
				else
					call s__Ability_prototype_sendError(this)
				endif
   endfunction

   function s__Ability0015_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=7.5
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_indicator[this]=s__Ability0015__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__Ability_prototype_drag_to_use[this]=true
				set s__Ability_prototype_cancle_rightclick[this]=false
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0015_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0015__ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0015__ID , ABILITY_TAG_MAGIC)
				call s__Ability_addTypeTag(Ability0015__ID , ABILITY_TAG_DARK)
				call SaveStr(Ability__HASH, (Ability0015__ID ), s__Ability_INDEX_TOOLTIP, ( "장거리 직선 범위공격\n")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0015__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0015__ID then
			set a=s__Ability0015_main__allocate()
			set s__Ability_prototype_id[a]=Ability0015__ID
			set s__Ability_prototype_name[a]=Ability0015__NAME
			set s__Ability_prototype_icon[a]=Ability0015__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0015__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0015__act))
		call SaveStr(Ability__HASH, (Ability0015__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0015__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0015__ID ), s__Ability_INDEX_NAME, ( Ability0015__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0015__ID ), s__Ability_INDEX_TIER, ( Ability0015__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0015__ID ), s__Ability_INDEX_COST, ( Ability0015__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0015__ID , 0 , Ability0015__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0015__ID , 1 , Ability0015__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0015 ends


// scope Ability0016 begins
//textmacro instance: abilityDataHeader("0016","수리검 투척","BTNShuriken","2","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")

		
//end of: abilityDataHeader("0016","수리검 투척","BTNShuriken","2","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")
	




   function s__Ability0016_actor_killFilter takes integer this returns boolean
				set s__Ability0016_actor_count[this]=s__Ability0016_actor_count[this] - 1
				if s__Ability0016_actor_count[this] > 0 then
					set s__Actor_duration[this]=Ability0016__INTERVAL
					set s__Actor_timeout[this]=0.
					return false
				else
					return true
				endif
   endfunction

   function s__Ability0016_actor_periodicAction takes integer this returns nothing
				call sc__Object__set_yaw((s__Actor_actor[(this)]),s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
   endfunction

   function s__Ability0016_actor_onComplete takes integer this returns nothing
    local real a= s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this])) // INLINED!!
    local integer ms= s__Missile_create((s__Actor_actor[(this)]) , Ability0016__EFFECT_PATH1 , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0016__STARTAT )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0016__STARTAT )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , a) // INLINED!!
				call s__Missile_setDamageFlag((ms),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_ATTACK)) * Ability0016__DAMAGE_PER_ATTACK ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) + ( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_ACCURACY)) * Ability0016__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_damage_id[ms]=Ability0016__ID
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_METAL_LIGHT_SLICE
				if s__Ability0016_actor_count[this] == Ability0016__COUNT then
					set s__Missile_is_onhit[ms]=true
				else
					set s__Missile_is_onhit[ms]=false
				endif
				if s__Ability0016_actor_count[this] == Ability0016__COUNT - 1 then
					
					call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
					call s__Mover_deallocate(s__Ability0016_actor_mv[this])
					set s__Ability0016_actor_mv[this]=0
					call s__UnitActor_resetChanneling(this)
				endif
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0016__VELO)*1.0) // INLINED!!
   endfunction

   function s__Ability0016_actor_onSuspend takes integer this returns nothing
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
   function s__Ability0016_actor_create takes integer u,integer target,integer level returns integer
    local integer this= s__Ability0016_actor__allocate(u , target , 0. , 0. , level , Ability0016__DELAY , true)
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.66)*1.0)) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
				set s__Ability0016_actor_mv[this]=s__Mover_create((s__Actor_actor[(this)])) // INLINED!!
				return this
   endfunction

   function s__Ability0016_actor_onDestroy takes integer this returns nothing
				if s__Ability0016_actor_mv[this] > 0 then
					call s__Mover_deallocate(s__Ability0016_actor_mv[this])
					set s__Ability0016_actor_mv[this]=0
				endif
   endfunction
	
	
	
   function s__Ability0016_main_relativeTooltip takes integer this returns string
				return "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0016__DAMAGE_PER_ATTACK ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0016__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히는 수리검을 " + STRING_COLOR_CONSTANT + I2S(Ability0016__COUNT) + "개|r 투척합니다. 최대 " + STRING_COLOR_CONSTANT + I2S(Ability0016__CHARGE) + "회|r 충전됩니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   endfunction
	
   function s__Ability0016_main_execute takes integer this returns nothing
				call s__Ability0016_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0016_main_init takes integer this returns nothing
				set s__Ability_prototype_manacost[this]=3
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0016__RANGE
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=1.5
				set s__Ability_prototype_cooldown_min[this]=1.5
				set s__Ability_prototype_count_max[this]=Ability0016__CHARGE
				set s__Ability_prototype_count[this]=Ability0016__CHARGE
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__Ability_prototype_smart[this]=2
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0016_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0016__ID , ABILITY_STRING_TARGET_UNIT)
				call s__Ability_addTypeTag(Ability0016__ID , ABILITY_TAG_IRON)
				call s__Ability_addTypeTag(Ability0016__ID , ABILITY_TAG_THROW)
				call SaveStr(Ability__HASH, (Ability0016__ID ), s__Ability_INDEX_TOOLTIP, ( "단일 대상에게\n수리검 투척")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0016__act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0016__ID then
			set a=s__Ability0016_main__allocate()
			set s__Ability_prototype_id[a]=Ability0016__ID
			set s__Ability_prototype_name[a]=Ability0016__NAME
			set s__Ability_prototype_icon[a]=Ability0016__ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0016__init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0016__act))
		call SaveStr(Ability__HASH, (Ability0016__ID ), s__Ability_INDEX_ICON_PATH, ( Ability0016__ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0016__ID ), s__Ability_INDEX_NAME, ( Ability0016__NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0016__ID ), s__Ability_INDEX_TIER, ( Ability0016__TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0016__ID ), s__Ability_INDEX_COST, ( Ability0016__COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0016__ID , 0 , Ability0016__STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0016__ID , 1 , Ability0016__STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0016 ends


// scope Buffu010 begins
//textmacro instance: buffHeader("광란","u010","0","BTNUnholyFrenzy")

//end of: buffHeader("광란","u010","0","BTNUnholyFrenzy")




  function s__Buffu010_main_getAdditionalDamage takes integer this returns real
			return (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST * ( 1 + s__Buffu010_main_DAMAGE_PER_LEVEL * ( s__Buff_level[this] - 1 ) ) // INLINED!!
  endfunction

  function s__Buffu010_main_reduceHP takes integer this,real val returns nothing
   local real th= (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_THRESHOLD // INLINED!!
			if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) <= th then // INLINED!!
				return
			endif
			if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) - val <= th then // INLINED!!
				call s__Unit_prototype__set_hp(s__Buff_target[this],th)
			else
				call s__Unit_prototype__set_hp(s__Buff_target[this],(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) - val) // INLINED!!
			endif
  endfunction

  function s__Buffu010_main_cond takes nothing returns nothing
   local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
			if DAMAGE_ATTACKER != s__Buff_target[this] then
				return
			endif
			if ATTACK_TYPE == ATTACK_TYPE_BASIC then
				set DAMAGE_AMOUNT=DAMAGE_AMOUNT + s__Buffu010_main_getAdditionalDamage(this)

				call s__Buffu010_main_reduceHP(this,(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Buff_target[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST) // INLINED!!
			endif
  endfunction

  function s__Buffu010_main_update takes integer this returns nothing

  endfunction

  function s__Buffu010_main_init takes integer this returns nothing
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu010_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "overhead")) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_ATTACK_SPEED , s__Buffu010_main_ATTACK_SPEED_BONUS)
			set s__Buffu010_main_main_trigger[this]=s__Trigger_new(this)
			set s__Buffu010_main_main_cond[this]=TriggerAddCondition(s__Buffu010_main_main_trigger[this], Condition(function s__Buffu010_main_cond))
			call TriggerRegisterVariableEvent((s__Buffu010_main_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_MODIFY_STAT)*1.0)) // INLINED!!
  endfunction

  function s__Buffu010_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_ATTACK_SPEED , - s__Buffu010_main_ATTACK_SPEED_BONUS)
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__Buffu010_main_main_trigger[this], s__Buffu010_main_main_cond[this])
		call s__Trigger_remove(s__Buffu010_main_main_trigger[this])
		set s__Buffu010_main_main_trigger[this]=null
		set s__Buffu010_main_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
  endfunction


//textmacro instance: buffEnd()

   function Buffu010___new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if Buffu010___INDIVISUAL == 2 then
					set b=s__Buffu010_main__allocate(Buffu010___ID , caster , target , duration , Buffu010___NAME)
					set s__Buff_icon[b]=Buffu010___ICON_PATH
					call s__Buffu010_main_init(b)
				elseif Buffu010___INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , Buffu010___ID)
					if b == 0 then
						set b=s__Buffu010_main__allocate(Buffu010___ID , caster , target , duration , Buffu010___NAME)
						set s__Buff_icon[b]=Buffu010___ICON_PATH
						call s__Buffu010_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu010_main_update(b)
					endif
				elseif Buffu010___INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , Buffu010___ID)
					if b == 0 then
						set b=s__Buffu010_main__allocate(Buffu010___ID , caster , target , duration , Buffu010___NAME)
						set s__Buff_icon[b]=Buffu010___ICON_PATH
						call s__Buffu010_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu010_main_update(b)
					endif
				endif
				return b
			endfunction

   function Buffu010___cond takes nothing returns nothing
				if BUFF_CREATE_ID == Buffu010___ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=Buffu010___new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function Buffu010___init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu010___cond))
			endfunction

//end of: buffEnd()
// scope Buffu010 ends


// scope Abilityu010 begins
//textmacro instance: abilityDataHeader("u010","광란","BTNUnholyFrenzy","2","STAT_TYPE_ATTACK","STAT_TYPE_MAXHP")

		
//end of: abilityDataHeader("u010","광란","BTNUnholyFrenzy","2","STAT_TYPE_ATTACK","STAT_TYPE_MAXHP")
	
	
	
   function s__Abilityu010_main_relativeTooltip takes integer this returns string
				return STRING_COLOR_CONSTANT + R2SW(Abilityu010___DURATION, 1, 1) + "초|r 동안 " + STAT_TYPE_COLOR[STAT_TYPE_ATTACK_SPEED] + s__STAT_TYPE_NAME[STAT_TYPE_ATTACK_SPEED] + "|r가 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu010_main_ATTACK_SPEED_BONUS * 100)) + "%|r 증가하며 " + ATTACK_STRING_BASIC + "의 피해량이 " + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST ) * ( 1 + s__Buffu010_main_DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 증가하는 대신 " + ATTACK_STRING_BASIC + " 적중 시 " + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST , 1) + "의 체력을 잃습니다.\n\n - 상기된 체력감소 효과로 보유한 체력이 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu010_main_HP_THRESHOLD * 100)) + "%|r 밑으로 내려가지 않습니다." // INLINED!!
   endfunction

   function s__Abilityu010_main_execute takes integer this returns nothing
    local integer b= s__Buff_add(s__Ability_prototype_owner[this] , s__Ability_prototype_owner[this] , Abilityu010___ID , Abilityu010___DURATION)
				set s__Buff_level[b]=s__Ability_prototype_level[this]
   endfunction
	
   function s__Abilityu010_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=5.
				set s__Ability_prototype_cooldown_min[this]=5.
				set s__Ability_prototype_manacost[this]=30
				set s__Ability_prototype_is_immediate[this]=true
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Abilityu010_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Abilityu010___ID , ABILITY_STRING_IMMEDIATE)
				call s__Ability_addTypeTag(Abilityu010___ID , ABILITY_TAG_UNDEAD)
				call SaveStr(Ability__HASH, (Abilityu010___ID ), s__Ability_INDEX_TOOLTIP, ( "공격속도 급증 및 체력 희생\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Abilityu010___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Abilityu010___ID then
			set a=s__Abilityu010_main__allocate()
			set s__Ability_prototype_id[a]=Abilityu010___ID
			set s__Ability_prototype_name[a]=Abilityu010___NAME
			set s__Ability_prototype_icon[a]=Abilityu010___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Abilityu010___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Abilityu010___act))
		call SaveStr(Ability__HASH, (Abilityu010___ID ), s__Ability_INDEX_ICON_PATH, ( Abilityu010___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Abilityu010___ID ), s__Ability_INDEX_NAME, ( Abilityu010___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu010___ID ), s__Ability_INDEX_TIER, ( Abilityu010___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu010___ID ), s__Ability_INDEX_COST, ( Abilityu010___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Abilityu010___ID , 0 , Abilityu010___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Abilityu010___ID , 1 , Abilityu010___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Abilityu010 ends


// scope Buffu011 begins
//textmacro instance: buffHeader("부패가스","u011","0","BTNPlagueCloud")

//end of: buffHeader("부패가스","u011","0","BTNPlagueCloud")



  function s__Buffu011_main_update takes integer this returns nothing

  endfunction

  function s__Buffu011_main_init takes integer this returns nothing
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu011_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "head")) // INLINED!!
			call s__Unit_prototype_divideStatValue(s__Buff_target[this],STAT_TYPE_HEAL_AMP , ( 1 / ( 1 - s__Buffu011_main_REDUCE ) ) - 1)
  endfunction

  function s__Buffu011_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_divideStatValue(s__Buff_target[this],STAT_TYPE_HEAL_AMP , - ( ( 1 / ( 1 - s__Buffu011_main_REDUCE ) ) - 1 ))
  endfunction


//textmacro instance: buffEnd()

   function Buffu011___new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if Buffu011___INDIVISUAL == 2 then
					set b=s__Buffu011_main__allocate(Buffu011___ID , caster , target , duration , Buffu011___NAME)
					set s__Buff_icon[b]=Buffu011___ICON_PATH
					call s__Buffu011_main_init(b)
				elseif Buffu011___INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , Buffu011___ID)
					if b == 0 then
						set b=s__Buffu011_main__allocate(Buffu011___ID , caster , target , duration , Buffu011___NAME)
						set s__Buff_icon[b]=Buffu011___ICON_PATH
						call s__Buffu011_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu011_main_update(b)
					endif
				elseif Buffu011___INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , Buffu011___ID)
					if b == 0 then
						set b=s__Buffu011_main__allocate(Buffu011___ID , caster , target , duration , Buffu011___NAME)
						set s__Buff_icon[b]=Buffu011___ICON_PATH
						call s__Buffu011_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buffu011_main_update(b)
					endif
				endif
				return b
			endfunction

   function Buffu011___cond takes nothing returns nothing
				if BUFF_CREATE_ID == Buffu011___ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=Buffu011___new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function Buffu011___init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu011___cond))
			endfunction

//end of: buffEnd()
// scope Buffu011 ends


// scope Abilityu011 begins
//textmacro instance: abilityDataHeader("u011","부패가스","BTNPlagueCloud","2","STAT_TYPE_HPREGEN","STAT_TYPE_RESISTANCE")

		
//end of: abilityDataHeader("u011","부패가스","BTNPlagueCloud","2","STAT_TYPE_HPREGEN","STAT_TYPE_RESISTANCE")
	



   function s__Abilityu011___exx_executeExplosion takes integer this,integer target returns nothing
				if s__Explosion_damageTarget(this,target) > 0. then
					call s__Buff_add(s__Explosion_owner[this] , target , Abilityu011___ID , Abilityu011___DURATION)
				endif
   endfunction

   function s__Abilityu011___exx_beforeExplosion takes integer this returns nothing
				set s__Explosion_x[this]=sc__Object__get_x(s__Explosion_owner[this])
				set s__Explosion_y[this]=sc__Object__get_y(s__Explosion_owner[this])
				set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_HPREGEN)) * Abilityu011___DAMAGE_PER_HPREGEN ) * ( 1 + Abilityu011___DAMAGE_PER_LEVEL * ( s__Abilityu011___exx_level[this] - 1 ) ) // INLINED!!
   endfunction

   function s__Abilityu011___exx_create takes integer caster returns integer
    local integer this= s__Abilityu011___exx__allocate(caster , 0. , 0. , Abilityu011___EXPRAD)
				set s__Explosion_activate_initial[this]=false
				set s__Explosion_count[this]=Abilityu011___COUNT
				set s__Explosion_interval[this]=Abilityu011___INTERVAL
				set s__Explosion_damage_id[this]=Abilityu011___ID
				call s__Explosion_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Explosion_is_onhit[this]=false
				set s__Explosion_interval_type[this]=INTERVAL_TYPE_PERIODIC
				
				set s__Abilityu011___exx_ef[this]=s__Effect_createAttatched(Abilityu011___EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Explosion_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin") // INLINED!!
				return this
   endfunction

   function s__Abilityu011___exx_onDestroy takes integer this returns nothing
				call s__Effect_kill(s__Abilityu011___exx_ef[this])
				set s__Abilityu011___exx_ef[this]=0
				set Abilityu011___DESTROY_REQUEST_ABILITY=s__Abilityu011___exx_a[this]
				call TriggerEvaluate(Abilityu011___DESTROY_REQUEST)
				set Abilityu011___DESTROY_REQUEST_ABILITY=0
   endfunction

	

	
   function s__Abilityu011_main_relativeTooltip takes integer this returns string
				return "적에게 피해를 입으면 매 " + STRING_COLOR_CONSTANT + R2SW(Abilityu011___INTERVAL, 1, 1) + "초|r 마다 주변 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_HPREGEN , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_HPREGEN)) * Abilityu011___DAMAGE_PER_HPREGEN ) * ( 1 + Abilityu011___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히며 " + STRING_COLOR_CONSTANT + STRING_COLOR_CONSTANT + R2SW(Abilityu011___DURATION, 1, 1) + "초|r 동안 대상의 " + STAT_TYPE_COLOR[STAT_TYPE_HEAL_AMP] + s__STAT_TYPE_NAME[STAT_TYPE_HEAL_AMP] + "|r을 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu011_main_REDUCE * 100)) + "%|r 감소시키는 부패가스를 분출합니다." // INLINED!!
   endfunction

   function s__Abilityu011_main_execute takes integer this returns nothing
				if s__Abilityu011_main_ex[this] > 0 then
					set s__Explosion_count[s__Abilityu011_main_ex[this]]=Abilityu011___COUNT
				else
					set s__Abilityu011_main_ex[this]=s__Abilityu011___exx_create(s__Ability_prototype_owner[this])
					set s__Abilityu011___exx_a[s__Abilityu011_main_ex[this]]=this
					call s__Explosion_activate(s__Abilityu011_main_ex[this])
				endif
				set s__Abilityu011___exx_level[s__Abilityu011_main_ex[this]]=s__Ability_prototype_level[this]
   endfunction

   function s__Abilityu011_main_damageAction takes nothing returns nothing
    local integer this= (LoadInteger(s__Trigger_HASH, GetHandleId((GetTriggeringTrigger())), 0)) // INLINED!!
				if this <= 0 or s__Ability_prototype_owner[this] != DAMAGE_TARGET then
					return
				endif
				call s__Abilityu011_main_execute(this)
   endfunction
	
   function s__Abilityu011_main_init takes integer this returns nothing
				set s__Ability_prototype_cooldown_max[this]=0.
				set s__Ability_prototype_cooldown_min[this]=0.
				call s__Ability_plusStatValue(this,5)
				
				set s__Abilityu011_main_main_trigger[this]=s__Trigger_new(this)
				set s__Abilityu011_main_main_cond[this]=TriggerAddCondition(s__Abilityu011_main_main_trigger[this], Condition(function s__Abilityu011_main_damageAction))
				call TriggerRegisterVariableEvent((s__Abilityu011_main_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_BEFORE_HPREDUCE)*1.0)) // INLINED!!
   endfunction

   function s__Abilityu011_main_onDestroy takes integer this returns nothing
				if s__Abilityu011_main_ex[this] > 0 then
					call sc__Explosion_deallocate(s__Abilityu011_main_ex[this])
					set s__Abilityu011_main_ex[this]=0
				endif
//textmacro instance: destroyTriggerAndCondition(".main_trigger",".main_cond")
		call TriggerRemoveCondition(s__Abilityu011_main_main_trigger[this], s__Abilityu011_main_main_cond[this])
		call s__Trigger_remove(s__Abilityu011_main_main_trigger[this])
		set s__Abilityu011_main_main_trigger[this]=null
		set s__Abilityu011_main_main_cond[this]=null
//end of: destroyTriggerAndCondition(".main_trigger",".main_cond")
   endfunction

   function s__Abilityu011_main_destroyRequest takes nothing returns nothing
				if Abilityu011___DESTROY_REQUEST_ABILITY <= 0 then
					return
				endif
				set s__Abilityu011_main_ex[(Abilityu011___DESTROY_REQUEST_ABILITY)]=0
   endfunction
	
   function s__Abilityu011_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Abilityu011___ID , ABILITY_STRING_PASSIVE)
				call s__Ability_addTypeTag(Abilityu011___ID , ABILITY_TAG_POISON)
				call s__Ability_addTypeTag(Abilityu011___ID , ABILITY_TAG_UNDEAD)
				call SaveStr(Ability__HASH, (Abilityu011___ID ), s__Ability_INDEX_TOOLTIP, ( "지속 범위피해 및\n대상 받는 치유량 감소")) // INLINED!!
				call TriggerAddCondition(Abilityu011___DESTROY_REQUEST, Condition(function s__Abilityu011_main_destroyRequest))
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Abilityu011___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Abilityu011___ID then
			set a=s__Abilityu011_main__allocate()
			set s__Ability_prototype_id[a]=Abilityu011___ID
			set s__Ability_prototype_name[a]=Abilityu011___NAME
			set s__Ability_prototype_icon[a]=Abilityu011___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Abilityu011___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Abilityu011___act))
		call SaveStr(Ability__HASH, (Abilityu011___ID ), s__Ability_INDEX_ICON_PATH, ( Abilityu011___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Abilityu011___ID ), s__Ability_INDEX_NAME, ( Abilityu011___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu011___ID ), s__Ability_INDEX_TIER, ( Abilityu011___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Abilityu011___ID ), s__Ability_INDEX_COST, ( Abilityu011___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Abilityu011___ID , 0 , Abilityu011___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Abilityu011___ID , 1 , Abilityu011___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Abilityu011 ends

// scope AddRandomAbility2 begins

 function AddRandomAbility2___init takes nothing returns nothing
		call s__Ability_addRandomAbility('0010' , 2)
		call s__Ability_addRandomAbility('0013' , 2)
		call s__Ability_addRandomAbility('0014' , 2)
		call s__Ability_addRandomAbility('0015' , 2)
		call s__Ability_addRandomAbility('0016' , 2)
	endfunction

// scope AddRandomAbility2 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier2.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier3.j

// scope Ability0020 begins
//textmacro instance: abilityDataHeader("0020","기관총 난사","BTNFlakCannons","3","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")

		
//end of: abilityDataHeader("0020","기관총 난사","BTNFlakCannons","3","STAT_TYPE_ATTACK","STAT_TYPE_ACCURACY")
	
	

   function s__Ability0020___bullet_executeTarget takes integer this,integer target returns nothing
				call s__Missile_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_create(Ability0020___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270),1.5)
   endfunction

   function s__Ability0020___bullet_create takes integer owner,real x,real y,real z,real yaw,integer level returns integer
    local integer this= s__Ability0020___bullet__allocate(owner , Ability0020___EFFECT_PATH1 , x , y , z , yaw)
    local integer ef
				set s__Movement_velo[s__Object_movement[(this)]]=((Ability0020___VELO)*1.0) // INLINED!!
				set s__Missile_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Missile_owner[this]),STAT_TYPE_ATTACK)) * Ability0020___DAMAGE_PER_ATTACK ) * ( 1 + Ability0020___DAMAGE_PER_LEVEL * ( level - 1 ) ) // INLINED!!
				set s__Missile_damage_id[this]=Ability0020___ID
				call s__Missile_setCollision(this,Ability0020___COLRAD)
				call s__Effect_setDuration(this,( Ability0020___RANGE - Ability0020___STARTAT ) / Ability0020___VELO)
				call s__Missile_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Missile_damage_type[this]=DAMAGE_TYPE_PHYSICAL
				set s__Missile_weapon_type[this]=WEAPON_TYPE_METAL_LIGHT_CHOP
				set ef=s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0020___EFFECT_PATH2 , (((sc__Object__get_x(this) )*1.0) + (( Ability0020___STARTAT )*1.0) * Cos((( yaw)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(this) )*1.0) + (( Ability0020___STARTAT )*1.0) * Sin((( yaw)*1.0) * bj_DEGTORAD)) , sc__Object__get_z(this) , 270),1.5),1.5) // INLINED!!
				set s__Object_movement[ef]=s__Movement_create(ef , Ability0020___VELO * 0.23 , yaw)
				return this
   endfunction


	

   function s__Ability0020_actor_onComplete takes integer this returns nothing
    local integer ms= 0
				if s__Ability0020_actor_count[this] > 0 then
					set ms=s__Ability0020___bullet_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Cos((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Sin((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0020_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				endif
   endfunction

   function s__Ability0020_actor_periodicAction takes integer this returns nothing
    local integer ms= 0
				set s__Ability0020_actor_shoot[this]=s__Ability0020_actor_shoot[this] + TIMER_TICK
				if s__Ability0020_actor_shoot[this] >= Ability0020___INTERVAL and s__Ability0020_actor_count[this] > 0 then
					set ms=s__Ability0020___bullet_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Cos((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Sin((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0020_actor_angle[this] + GetRandomReal(- 3, 3) , s__UnitActor_level[this]) // INLINED!!
					call sc__Object__set_yaw((s__Actor_actor[(this)]),s__Ability0020_actor_angle[this]) // INLINED!!
					set s__Ability0020_actor_count[this]=s__Ability0020_actor_count[this] - 1
					set s__Ability0020_actor_shoot[this]=s__Ability0020_actor_shoot[this] - Ability0020___INTERVAL
					if s__Ability0020_actor_count[this] > 0 then
						call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
						call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
						call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((3.)*1.0)) // INLINED!!
					endif
				endif
   endfunction
	
   function s__Ability0020_actor_create takes integer u,real x,real y,integer level returns integer
    local integer this= s__Ability0020_actor__allocate(u , 0 , x , y , level , Ability0020___INTERVAL * Ability0020___COUNT , true)
				set s__Ability0020_actor_angle[this]=s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y) // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((3.)*1.0)) // INLINED!!
				call sc__Object__set_yaw((s__Actor_actor[(this)]),s__Ability0020_actor_angle[this]) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0020___NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__ProgressBar_reverse[s__Actor_progress_bar[this]]=true
				set s__Ability0020_actor_mover[this]=s__Mover_create((s__Actor_actor[(this)])) // INLINED!!
				set s__Mover_refresh_facing[s__Ability0020_actor_mover[this]]=false
				return this
   endfunction

   function s__Ability0020_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call s__Mover_deallocate(s__Ability0020_actor_mover[this])
   endfunction
	


   function s__Ability0020___ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0020___RANGE
				set s__LineIndicator_width[this]=Ability0020___COLRAD
   endfunction

   function s__Ability0020___ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0020___ind__allocate(abil , owner)
				return this
   endfunction

	
	
   function s__Ability0020_main_relativeTooltip takes integer this returns string
				return "지정한 방향으로 " + STRING_COLOR_CONSTANT + I2S(Ability0020___COUNT) + "발|r의 총알을 난사하여 발 당 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0020___DAMAGE_PER_ATTACK ) * ( 1 + Ability0020___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   endfunction

   function s__Ability0020_main_execute takes integer this returns nothing
    local integer a= s__Ability0020_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0020_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=0.5 //8.
				set s__Ability_prototype_cooldown_min[this]=0.5 //1.5
				set s__Ability_prototype_manacost[this]=26
				set s__Ability_prototype_indicator[this]=s__Ability0020___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0020_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0020___ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0020___ID , ABILITY_TAG_FIREARM)
				call s__Ability_addTypeTag(Ability0020___ID , ABILITY_TAG_SHOOTING)
				call SaveStr(Ability__HASH, (Ability0020___ID ), s__Ability_INDEX_TOOLTIP, ( "지정한 방향으로\n다수의 투사체 발사")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0020___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0020___ID then
			set a=s__Ability0020_main__allocate()
			set s__Ability_prototype_id[a]=Ability0020___ID
			set s__Ability_prototype_name[a]=Ability0020___NAME
			set s__Ability_prototype_icon[a]=Ability0020___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0020___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0020___act))
		call SaveStr(Ability__HASH, (Ability0020___ID ), s__Ability_INDEX_ICON_PATH, ( Ability0020___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0020___ID ), s__Ability_INDEX_NAME, ( Ability0020___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0020___ID ), s__Ability_INDEX_TIER, ( Ability0020___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0020___ID ), s__Ability_INDEX_COST, ( Ability0020___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0020___ID , 0 , Ability0020___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0020___ID , 1 , Ability0020___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0020 ends


// scope Buff0021 begins
//textmacro instance: buffHeader("감속","0021","1","BTNSlow")

//end of: buffHeader("감속","0021","1","BTNSlow")




  function s__Buff0021_main_addValue takes integer this,integer level returns nothing
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , s__Buff0021_main_SLOW)
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_EVASION , ( (s__Unit_prototype_getCarculatedStatValue((s__Buff_caster[this]),STAT_TYPE_MAGICPOWER)) * s__Buff0021_main_DAMAGE_PER_MAGICPOWER ) * ( 1 + s__Buff0021_main_DAMAGE_PER_LEVEL * ( level - 1 ) ) * s__Buff0021_main_REDUCE_VAL) // INLINED!!
			set s__Buff0021_main_val1[this]=s__Buff0021_main_val1[this] + s__Buff0021_main_SLOW
			set s__Buff0021_main_val2[this]=s__Buff0021_main_val2[this] + ( (s__Unit_prototype_getCarculatedStatValue((s__Buff_caster[this]),STAT_TYPE_MAGICPOWER)) * s__Buff0021_main_DAMAGE_PER_MAGICPOWER ) * ( 1 + s__Buff0021_main_DAMAGE_PER_LEVEL * ( level - 1 ) ) * s__Buff0021_main_REDUCE_VAL // INLINED!!
  endfunction

  function s__Buff0021_main_update takes integer this returns nothing

  endfunction

  function s__Buff0021_main_init takes integer this returns nothing
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buff0021_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin")) // INLINED!!
  endfunction

  function s__Buff0021_main_onDestroy takes integer this returns nothing
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , - s__Buff0021_main_val1[this])
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_EVASION , - s__Buff0021_main_val2[this])
  endfunction


//textmacro instance: buffEnd()

   function Buff0021___new takes integer caster,integer target,real duration returns integer
    local integer b= 0
				if Buff0021___INDIVISUAL == 2 then
					set b=s__Buff0021_main__allocate(Buff0021___ID , caster , target , duration , Buff0021___NAME)
					set s__Buff_icon[b]=Buff0021___ICON_PATH
					call s__Buff0021_main_init(b)
				elseif Buff0021___INDIVISUAL == 1 then
					set b=s__Buff_getMatchingCasterAndTarget(caster , target , Buff0021___ID)
					if b == 0 then
						set b=s__Buff0021_main__allocate(Buff0021___ID , caster , target , duration , Buff0021___NAME)
						set s__Buff_icon[b]=Buff0021___ICON_PATH
						call s__Buff0021_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buff0021_main_update(b)
					endif
				elseif Buff0021___INDIVISUAL == 0 then
					set b=s__Buff_getUnitBuffById(target , Buff0021___ID)
					if b == 0 then
						set b=s__Buff0021_main__allocate(Buff0021___ID , caster , target , duration , Buff0021___NAME)
						set s__Buff_icon[b]=Buff0021___ICON_PATH
						call s__Buff0021_main_init(b)
					else
						if duration > (s__Buff_duration_true[(b)]) then // INLINED!!
							call s__Buff__set_duration(b,duration)
							if s__Buff_duration_max[b] < duration then
								set s__Buff_duration_max[b]=duration
							endif
						endif
						set s__Buff_caster[b]=caster
						call s__Buff0021_main_update(b)
					endif
				endif
				return b
			endfunction

   function Buff0021___cond takes nothing returns nothing
				if BUFF_CREATE_ID == Buff0021___ID and BUFF_CREATE_TARGET > 0 then
					set BUFF_LAST_CREATED=Buff0021___new(BUFF_CREATE_CASTER , BUFF_CREATE_TARGET , BUFF_CREATE_DURATION)
				endif
			endfunction

   function Buff0021___init takes nothing returns nothing
				call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buff0021___cond))
			endfunction

//end of: buffEnd()
// scope Buff0021 ends


// scope Ability0021 begins
//textmacro instance: abilityDataHeader("0021","감속","BTNSlow","3","STAT_TYPE_MAGICPOWER","STAT_TYPE_MPREGEN")

		
//end of: abilityDataHeader("0021","감속","BTNSlow","3","STAT_TYPE_MAGICPOWER","STAT_TYPE_MPREGEN")





  function s__Ability0021_explosion_beforeExplosion takes integer this returns nothing
   local integer e= s__Effect_create(Ability0021___EFFECT_PATH3 , s__Explosion_x[this] , s__Explosion_y[this] , GetRandomReal(2, 55) , 270)
			call s__Effect_setDuration(e,1.25)
			call s__Effect_setScale(e,GetRandomReal(1.5, 3))
  endfunction

  function s__Ability0021_explosion_executeExplosion takes integer this,integer target returns nothing
   local integer e= s__Effect_create(Ability0021___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270)
   local integer bf= 0
			call s__Effect_setDuration(e,1.5)
			if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
				set s__Explosion_is_onhit[this]=false
			else
				set s__Explosion_is_onhit[this]=true
			endif
			set bf=s__Buff_add(s__Explosion_owner[this] , target , Ability0021___ID , Ability0021___DURATION)
			call sc__Buff_addValue(bf,s__Ability0021_explosion_level[this])
			call s__Explosion_damageTarget(this,target)
  endfunction

  function s__Ability0021_explosion_create takes integer caster,real x,real y,real rad,integer level returns integer
   local integer this= s__Ability0021_explosion__allocate(caster , x , y , rad)
			set s__Ability0021_explosion_level[this]=level
			set s__Explosion_interval_type[this]=INTERVAL_TYPE_PERIODIC
			set s__Explosion_interval[this]=Ability0021___INTERVAL
			set s__Explosion_damage_id[this]=Ability0021___ID
			set s__Explosion_count[this]=Ability0021___COUNT
			set s__Ability0021_explosion_c[this]=s__Circle_create(s__Explosion_x[this] , s__Explosion_y[this] , 2. , Ability0021___EXPRAD)
			call s__Effect_setColor(s__Ability0021_explosion_c[this],255 , R2I(255 * 0.9) , 0)
			call s__Effect_setAlpha(s__Ability0021_explosion_c[this],0)
			call s__Circle_fadeIn(s__Ability0021_explosion_c[this],0.45)
			set s__Ability0021_explosion_ef[this]=s__Effect_create(Ability0021___EFFECT_PATH1 , s__Explosion_x[this] , s__Explosion_y[this] , 2. , 270)
			call s__Effect_setScale(s__Ability0021_explosion_ef[this],2.5)
			return this
  endfunction

  function s__Ability0021_explosion_onDestroy takes integer this returns nothing
			call s__Circle_setFadeOutPoint(s__Ability0021_explosion_c[this],0.01 , 0.75)
			set s__Ability0021_explosion_c[this]=0
			call s__Effect_kill(s__Ability0021_explosion_ef[this])
  endfunction



  function s__Ability0021_actor_onComplete takes integer this returns nothing
   local integer ex= s__Ability0021_explosion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , Ability0021___EXPRAD , s__UnitActor_level[this]) // INLINED!!
			set s__Explosion_damage[ex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
			call s__Explosion_activate(ex)
  endfunction

  function s__Ability0021_actor_create takes integer caster,real x,real y,integer level returns integer
   local integer this= s__Ability0021_actor__allocate(caster , 0 , x , y , level , Ability0021___CAST , true)
			call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y)) // INLINED!!
			call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
			call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((2.)*1.0)) // INLINED!!
			set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0021___NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
			return this
  endfunction

  function s__Ability0021_actor_onDestroy takes integer this returns nothing
			call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
  endfunction




  function s__Ability0021___ind_refresh takes integer this returns nothing
			call s__Effect_setPosition(s__Ability0021___ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
  endfunction

  function s__Ability0021___ind_show takes integer this,boolean flag returns nothing
			if flag then
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0021___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
				endif
			else
				call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0021___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			endif
  endfunction

  function s__Ability0021___ind_create takes integer abil,player owner returns integer
   local integer this= s__Ability0021___ind__allocate(abil , owner)
			set s__Ability0021___ind_c[this]=s__Effect_create("Effects\\RCircle.mdl" , 0. , 0. , 2. , 270.)
			call s__Effect_setScale(s__Ability0021___ind_c[this],Ability0021___EXPRAD / 100.)
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0021___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			return this
  endfunction

  function s__Ability0021___ind_onDestroy takes integer this returns nothing
			call sc__Object_deallocate(s__Ability0021___ind_c[this])
  endfunction



  function s__Ability0021_main_relativeTooltip takes integer this returns string
			return "매 " + STRING_COLOR_CONSTANT + R2SW(Ability0021___INTERVAL, 1, 1) + "초|r마다 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히는 영역을 전개합니다. 대상은 피해를 입을 때 마다 " + STRING_COLOR_CONSTANT + R2SW(Ability0021___DURATION, 1, 1) + "초|r 동안 " + s__STAT_TYPE_NAME[STAT_TYPE_MOVEMENT_SPEED] + "가 " + STRING_COLOR_CONSTANT + I2S(Ability0021___SLOW) + "|r, " + s__STAT_TYPE_NAME[STAT_TYPE_EVASION] + "가 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) * Ability0021___REDUCE_VAL , 1) + " 감소합니다. 총 " + STRING_COLOR_CONSTANT + I2S(Ability0021___COUNT) + "회|r 공격합니다." // INLINED!!
  endfunction

  function s__Ability0021_main_execute takes integer this returns nothing
   local integer a= s__Ability0021_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
  endfunction

  function s__Ability0021_main_init takes integer this returns nothing
			set s__Ability_prototype_is_active[this]=true
			set s__Ability_prototype_cast_range[this]=Ability0021___RANGE
			set s__Ability_prototype_preserve_order[this]=false
			set s__Ability_prototype_cooldown_max[this]=10.
			set s__Ability_prototype_cooldown_min[this]=4.
			set s__Ability_prototype_manacost[this]=30
			set s__Ability_prototype_indicator[this]=s__Ability0021___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
			call s__Ability_plusStatValue(this,5)
  endfunction

  function s__Ability0021_main_onInit takes nothing returns nothing
			call s__Ability_addTypeTag(Ability0021___ID , ABILITY_STRING_TARGET_LOCATION)
			call s__Ability_addTypeTag(Ability0021___ID , ABILITY_TAG_MAGIC)
			call SaveStr(Ability__HASH, (Ability0021___ID ), s__Ability_INDEX_TOOLTIP, ( "이동속도, 회피치\n감소 영역 전개")) // INLINED!!
  endfunction

	
//textmacro instance: abilityDataEnd()
 function Ability0021___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0021___ID then
			set a=s__Ability0021_main__allocate()
			set s__Ability_prototype_id[a]=Ability0021___ID
			set s__Ability_prototype_name[a]=Ability0021___NAME
			set s__Ability_prototype_icon[a]=Ability0021___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0021___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0021___act))
		call SaveStr(Ability__HASH, (Ability0021___ID ), s__Ability_INDEX_ICON_PATH, ( Ability0021___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0021___ID ), s__Ability_INDEX_NAME, ( Ability0021___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0021___ID ), s__Ability_INDEX_TIER, ( Ability0021___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0021___ID ), s__Ability_INDEX_COST, ( Ability0021___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0021___ID , 0 , Ability0021___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0021___ID , 1 , Ability0021___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0021 ends

// scope AddRandomAbility3 begins

 function AddRandomAbility3___init takes nothing returns nothing
		call s__Ability_addRandomAbility('0020' , 3)
		call s__Ability_addRandomAbility('0021' , 3)
	endfunction

// scope AddRandomAbility3 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier3.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier4.j

// scope Ability0030 begins
//textmacro instance: abilityDataHeader("0030","미사일 컨테이너","BTNClusterRockets","4","STAT_TYPE_ATTACK","STAT_TYPE_SPELL_BOOST")

		
//end of: abilityDataHeader("0030","미사일 컨테이너","BTNClusterRockets","4","STAT_TYPE_ATTACK","STAT_TYPE_SPELL_BOOST")
	


   function s__Ability0030___mss_executeTarget takes integer this,integer target returns nothing
				if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Missile_group_wave[this]) then // INLINED!!
					set s__Missile_damage[this]=s__Missile_damage[this] * Ability0030___DAMAGE_SECONDARY
					set s__Missile_is_onhit[this]=false
				endif
				call s__Missile_damageTarget(this,target)
   endfunction

   function s__Ability0030___mss_create takes integer caster,integer target,real x,real y,real z,integer level returns integer
    local real a= GetRandomReal(45, 135)
    local integer this= s__Ability0030___mss__allocate(caster , Ability0030___EFFECT_PATH2 , x , y , z , s__Math_anglePoints(x , y , sc__Object__get_x(target) , sc__Object__get_y(target)))
    local integer bz= 0
				call s__Missile__set_target((this),(target)) // INLINED!!
				call sc__Movement__set_curve(s__Object_movement[(this)],(s__Bezier3__allocate(x , y , z , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target]))) // INLINED!!
				set s__Curve_overtime[(s__Movement_curve_true[(s__Object_movement[(this)])])]=0.75 // INLINED!!
				set bz=(s__Movement_curve_true[(s__Object_movement[(this)])]) // INLINED!!
				call s__Bezier_setProjectedControlPoint(bz,0 , - 800 , 300 , a)
				call s__Bezier_setProjectedControlPoint(bz,1 , 0 , 800 , a)
				set s__Missile_damage_id[this]=Ability0030___ID
				set s__Missile_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Missile_owner[this]),STAT_TYPE_ATTACK)) * Ability0030___DAMAGE_PER_ATTACK ) * ( 1 + Ability0030___DAMAGE_PER_LEVEL * ( level - 1 ) ) // INLINED!!
				call s__Missile_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Missile_damage_type[this]=DAMAGE_TYPE_PHYSICAL
				set s__Missile_weapon_type[this]=WEAPON_TYPE_METAL_MEDIUM_BASH
				set s__Movement_refresh_facing[s__Object_movement[this]]=true
				return this
   endfunction

   function s__Ability0030___mss_onDestroy takes integer this returns nothing
				call sc__Object__set_pitch(this,0.)
   endfunction





   function s__Ability0030___ball_periodicAction takes integer this returns nothing
				call s__Effect_setPosition(s__Ability0030___ball_c[this],sc__Object__get_x(this) , sc__Object__get_y(this) , 2.)
   endfunction

   function s__Ability0030___ball_executeWave takes integer this,integer target returns nothing

   endfunction

   function s__Ability0030___ball_beforeWave takes integer this returns nothing
				call GroupClear(s__Missile_group_wave[this])
   endfunction

   function s__Ability0030___ball_afterWave takes integer this returns nothing
    local integer u= s__Unit_prototype_get(s__Group_getRandomUnit(s__Missile_group_wave[this]))
    local integer ms= 0
    local integer ef= 0
				if u > 0 then
					set ms=s__Ability0030___mss_create(s__Missile_owner[this] , u , sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_z(this) , s__Ability0030___ball_level[this])
					call s__MissileGroup_add(s__Ability0030___ball_mg[this],ms)
					set s__Ability0030___ball_count_true[this]=s__Ability0030___ball_count_true[this] - 1
					if s__Ability0030___ball_count_true[this] <= 0 then
						set s__Missile_want_kill[this]=true
					endif
					set s__Movement_velo[s__Object_movement[(this)]]=((Ability0030___VELO * 0.5)*1.0) // INLINED!!
					set ef=s__Effect_create(Ability0030___EFFECT_PATH3 , (((sc__Object__get_x(this) )*1.0) + (( Ability0030___STARTAT * - 1 )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(this) )*1.0) + (( Ability0030___STARTAT * - 1 )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u)))*1.0) * bj_DEGTORAD)) , sc__Object__get_z(this) , s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u))) // INLINED!!
					call sc__Object__set_pitch(ef,- 90.)
					call s__Effect_kill(ef)
				else
					set s__Movement_velo[s__Object_movement[(this)]]=((Ability0030___VELO)*1.0) // INLINED!!
				endif
   endfunction

   function s__Ability0030___ball_create takes integer caster,real x,real y,real z,real yaw,integer level returns integer
    local integer this= s__Ability0030___ball__allocate(caster , Ability0030___EFFECT_PATH1 , x , y , z , yaw)
				call s__Effect_setScale(this,3.)
				set s__Ability0030___ball_level[this]=level
				set s__Movement_velo[s__Object_movement[(this)]]=((Ability0030___VELO)*1.0) // INLINED!!
				set s__Ability0030___ball_mg[this]=s__MissileGroup_create()
				call s__MissileGroup_setDuration(s__Ability0030___ball_mg[this],15.)
				call s__Missile__set_radius_wave((this),((Ability0030___EXPRAD)*1.0)) // INLINED!!
				set s__Missile_wave_interval[this]=Ability0030___INTERVAL
				call s__Effect_setDuration(this,Ability0030___RANGE / Ability0030___VELO)
				set s__Ability0030___ball_c[this]=s__Circle_createSpecific("Effects\\CastRangeCircle.mdl" , x , y , 2. , 0.)
				call s__Effect_setScale(s__Ability0030___ball_c[this],Ability0030___EXPRAD / 100.)
				call s__Effect_setAlpha(s__Ability0030___ball_c[this],192)
				return this
   endfunction

   function s__Ability0030___ball_onDestroy takes integer this returns nothing
				call s__MissileGroup_setDuration(s__Ability0030___ball_mg[this],15.)
				set s__Ability0030___ball_mg[this]=0
				call s__Circle_setFadeOutPoint(s__Ability0030___ball_c[this],0. , 0.75)
   endfunction


	

   function s__Ability0030_actor_onComplete takes integer this returns nothing
    local integer ms= s__Ability0030___ball_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0030___STARTAT )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0030___STARTAT )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , 75. , s__Ability0030_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0030___BACKSWING , true) // INLINED!!
   endfunction
	
   function s__Ability0030_actor_create takes integer u,real x,real y,real delay,integer level returns integer
    local integer this= s__Ability0030_actor__allocate(u , 0 , x , y , level , delay , true)
				set s__Ability0030_actor_angle[this]=s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)) // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
				call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"spell") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.66)*1.0)) // INLINED!!
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , x , y)) // INLINED!!
				set s__Actor_progress_bar[this]=s__ProgressBar_create(Ability0030___NAME , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				return this
   endfunction

   function s__Ability0030_actor_onDestroy takes integer this returns nothing
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   endfunction
	
	

   function s__Ability0030___ind_beforeRefresh takes integer this returns nothing
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) )*1.0) + (( - Ability0030___EXPRAD )*1.0) * Cos((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) )*1.0) + (( - Ability0030___EXPRAD )*1.0) * Sin((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_range[this]=Ability0030___RANGE + Ability0030___EXPRAD * 2
				set s__LineIndicator_width[this]=Ability0030___EXPRAD
   endfunction

   function s__Ability0030___ind_create takes integer abil,player owner returns integer
    local integer this= s__Ability0030___ind__allocate(abil , owner)
				return this
   endfunction


	
   function s__Ability0030_main_relativeTooltip takes integer this returns string
				return "지정한 방향으로 이동하는 미사일 컨테이너를 소환합니다. 미사일 컨테이너는 매 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___INTERVAL, 3, 3) + "초|r 마다 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0030___DAMAGE_PER_ATTACK ) * ( 1 + Ability0030___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히는 미사일을 발사합니다. 적을 " + STRING_COLOR_CONSTANT + I2S(Ability0030___COUNT) + "회|r 공격하거나 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___RANGE / Ability0030___VELO, 1, 1) + "초|r가 경과하면 미사일 컨테이너는 소멸됩니다.\n\n - 미사일 발사 시 미사일 컨테이너의 이동속도가 감소합니다.\n - 미사일은 같은 대상 공격 시 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___DAMAGE_SECONDARY * 100, 1, 1) + "%|r의 피해를 입힙니다." // INLINED!!
   endfunction
	
   function s__Ability0030_main_execute takes integer this returns nothing
				call s__Ability0030_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   endfunction
	
   function s__Ability0030_main_init takes integer this returns nothing
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=12.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=Ability0030___DELAY
				set s__Ability_prototype_manacost[this]=50
				set s__Ability_prototype_indicator[this]=s__Ability0030___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   endfunction
	
   function s__Ability0030_main_onInit takes nothing returns nothing
				call s__Ability_addTypeTag(Ability0030___ID , ABILITY_STRING_TARGET_LOCATION)
				call s__Ability_addTypeTag(Ability0030___ID , ABILITY_TAG_FIREARM)
				call SaveStr(Ability__HASH, (Ability0030___ID ), s__Ability_INDEX_TOOLTIP, ( "연발 미사일 컨테이너 소환\n ")) // INLINED!!
   endfunction
	
	
//textmacro instance: abilityDataEnd()
 function Ability0030___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0030___ID then
			set a=s__Ability0030_main__allocate()
			set s__Ability_prototype_id[a]=Ability0030___ID
			set s__Ability_prototype_name[a]=Ability0030___NAME
			set s__Ability_prototype_icon[a]=Ability0030___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0030___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0030___act))
		call SaveStr(Ability__HASH, (Ability0030___ID ), s__Ability_INDEX_ICON_PATH, ( Ability0030___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0030___ID ), s__Ability_INDEX_NAME, ( Ability0030___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0030___ID ), s__Ability_INDEX_TIER, ( Ability0030___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0030___ID ), s__Ability_INDEX_COST, ( Ability0030___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0030___ID , 0 , Ability0030___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0030___ID , 1 , Ability0030___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0030 ends

// scope AddRandomAbility4 begins

 function AddRandomAbility4___init takes nothing returns nothing
		call s__Ability_addRandomAbility('0030' , 4)
	endfunction

// scope AddRandomAbility4 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier4.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier5.j

// scope Ability0040 begins
//textmacro instance: abilityDataHeader("0040","화룡의 숨결","BTNstorm_ui_icon_deathwing_molten_flame","5","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")

		
//end of: abilityDataHeader("0040","화룡의 숨결","BTNstorm_ui_icon_deathwing_molten_flame","5","STAT_TYPE_MAGICPOWER","STAT_TYPE_MAGIC_PENET")





  function s__Ability0040___mystruct_act takes nothing returns nothing
   local integer this= (sg__TimerUtils__Data_get(GetHandleId(((GetExpiredTimer()))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
			set s__Ability0040___mystruct_timeout[this]=s__Ability0040___mystruct_timeout[this] + TIMER_TICK
			call sc__Object__set_z(s__Ability0040___mystruct_ef[this],sc__Object__get_z(s__Ability0040___mystruct_ef[this]) + 500 * TIMER_TICK)
			call s__Effect_setAlpha(s__Ability0040___mystruct_ef[this],R2I(Ability0040___ALPHA * ( s__Ability0040___mystruct_DURATION - s__Ability0040___mystruct_timeout[this] )))
			if s__Ability0040___mystruct_timeout[this] >= 0.6 and not s__Ability0040___mystruct_b[this] then
				call s__Effect_setAnim(s__Ability0040___mystruct_ef[this],ANIM_TYPE_STAND)
				set s__Ability0040___mystruct_b[this]=true
			endif
			if s__Ability0040___mystruct_timeout[this] >= s__Ability0040___mystruct_DURATION then
				call sc__Ability0040___mystruct_deallocate(this)
			endif
  endfunction

  function s__Ability0040___mystruct_create takes integer ef returns integer
   local integer this= s__Ability0040___mystruct__allocate()
			set s__Ability0040___mystruct_ef[this]=ef
			set s__Ability0040___mystruct_t[this]=s__Timer_new(this)
			call s__Effect_setAnimSpeed(s__Ability0040___mystruct_ef[this],1.)
			call TimerStart((s__Ability0040___mystruct_t[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Ability0040___mystruct_act)) // INLINED!!
			return this
  endfunction

  function s__Ability0040___mystruct_onDestroy takes integer this returns nothing
			set s__Effect_want_remove[s__Ability0040___mystruct_ef[this]]=true
			call sc__Object_deallocate(s__Ability0040___mystruct_ef[this])
			call ReleaseTimer((s__Ability0040___mystruct_t[this])) // INLINED!!
			set s__Ability0040___mystruct_ef[this]=0
			set s__Ability0040___mystruct_t[this]=null
  endfunction

//Generated destructor of Ability0040___mystruct
function s__Ability0040___mystruct_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ability0040___mystruct_V[this]!=-1) then
        return
    endif
    call s__Ability0040___mystruct_onDestroy(this)
    set si__Ability0040___mystruct_V[this]=si__Ability0040___mystruct_F
    set si__Ability0040___mystruct_F=this
endfunction





  function s__Ability0040_explosion_beforeExplosion takes integer this returns nothing
   local integer e= s__Effect_create(Ability0040___EFFECT_PATH3 , (((s__Explosion_x[this] )*1.0) + (( Ability0040___EXPRAD / 2 )*1.0) * Cos((( GetRandomReal(0, 360))*1.0) * bj_DEGTORAD)) , (((s__Explosion_y[this] )*1.0) + (( Ability0040___EXPRAD / 2 )*1.0) * Sin((( GetRandomReal(0, 360))*1.0) * bj_DEGTORAD)) , GetRandomReal(2, 55) , 270) // INLINED!!
			call s__Effect_setDuration(e,1.25)
			call s__Effect_setScale(e,GetRandomReal(0.25, 0.75))
			set e=0
			set e=s__Effect_create(Ability0040___EFFECT_PATH4 , (((sc__Object__get_x(s__Ability0040_explosion_ef[this]) )*1.0) + (( Ability0040___FIRE_OFFSET )*1.0) * Cos((( sc__Object__get_yaw(s__Ability0040_explosion_ef[this]))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(s__Ability0040_explosion_ef[this]) )*1.0) + (( Ability0040___FIRE_OFFSET )*1.0) * Sin((( sc__Object__get_yaw(s__Ability0040_explosion_ef[this]))*1.0) * bj_DEGTORAD)) , Ability0040___DRAGON_DIST - Ability0040___FIRE_OFFSET , sc__Object__get_yaw(s__Ability0040_explosion_ef[this])) // INLINED!!
			call s__Effect_setPitch(e,135)
			call s__Effect_setDuration(e,1.5)
			call s__Effect_setAnimSpeed(e,2.)
			call s__Effect_setMatrixScale(e,1. , 1. , 3.5)
  endfunction

  function s__Ability0040_explosion_executeExplosion takes integer this,integer target returns nothing
   local integer e= s__Effect_create(Ability0040___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270)
   local integer bf= 0
			call s__Effect_kill(e)
			if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
				set s__Explosion_is_onhit[this]=false
			else
				set s__Explosion_is_onhit[this]=true
			endif
			call s__Unit_prototype_divideStatValue(target,STAT_TYPE_RESISTANCE , 1)
			call s__Explosion_damageTarget(this,target)
			call s__Unit_prototype_divideStatValue(target,STAT_TYPE_RESISTANCE , - 1)
  endfunction

  function s__Ability0040_explosion_create takes integer caster,real x,real y,real rad,integer level,integer ef returns integer
   local integer this= s__Ability0040_explosion__allocate(caster , x , y , rad)
			set s__Ability0040_explosion_level[this]=level
			set s__Explosion_interval_type[this]=INTERVAL_TYPE_PERIODIC
			set s__Explosion_interval[this]=Ability0040___INTERVAL
			set s__Explosion_damage_id[this]=Ability0040___ID
			set s__Explosion_count[this]=Ability0040___COUNT
			set s__Ability0040_explosion_c[this]=s__Circle_create(s__Explosion_x[this] , s__Explosion_y[this] , 2. , Ability0040___EXPRAD)
			call s__Effect_setColor(s__Ability0040_explosion_c[this],255 , R2I(255 * 0.65) , 0)
			call s__Effect_setAlpha(s__Ability0040_explosion_c[this],0)
			call s__Circle_fadeIn(s__Ability0040_explosion_c[this],0.45)
			set s__Ability0040_explosion_ef[this]=ef
			call s__Effect_setAnimSpeed(s__Ability0040_explosion_ef[this],0.)
			set s__Ability0040_explosion_ef2[this]=s__Effect_create(Ability0040___EFFECT_PATH5 , s__Explosion_x[this] , s__Explosion_y[this] , 0. , 0.)
			call s__Effect_setScale(s__Ability0040_explosion_ef2[this],0.75)
			call s__Effect_setAnimSpeed(s__Ability0040_explosion_ef2[this],2.)
			return this
  endfunction

  function s__Ability0040_explosion_onDestroy takes integer this returns nothing
			call s__Circle_setFadeOutPoint(s__Ability0040_explosion_c[this],0.01 , 0.75)
			set s__Ability0040_explosion_c[this]=0
			call s__Ability0040___mystruct_create(s__Ability0040_explosion_ef[this])
			set s__Ability0040_explosion_ef[this]=0
			call s__Effect_kill(s__Ability0040_explosion_ef2[this])
  endfunction




  function s__Ability0040_actor_periodicAction takes integer this returns nothing
   local integer ex= 0
			if s__Actor_stage[this] == 0 then
				call sc__Object__set_z(s__Ability0040_actor_ef[this],Ability0040___DRAGON_DIST + ( 500. - ( 500. * s__Actor_timeout[this] / Ability0040___CAST ) ))
				if s__Actor_timeout[this] >= Ability0040___CAST then
					set ex=s__Ability0040_explosion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , Ability0040___EXPRAD , s__UnitActor_level[this] , s__Ability0040_actor_ef[this]) // INLINED!!
					set s__Explosion_damage[ex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0040___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0040___DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
					call s__Explosion_activate(ex)
					set s__Actor_stage[this]=1
					set s__Actor_timeout[this]=0.
				endif
			elseif s__Actor_stage[this] == 1 then
				if s__Ability0040_actor_b[this] then
					call sc__Object__set_offset_z(s__Ability0040_actor_ef[this],2.5)
				else
					call sc__Object__set_offset_z(s__Ability0040_actor_ef[this],- 2.5)
				endif
				set s__Ability0040_actor_b[this]=not s__Ability0040_actor_b[this]
				if s__Actor_timeout[this] >= Ability0040___COUNT * Ability0040___INTERVAL then
					set s__Actor_want_destroy[this]=true
				endif
			endif
  endfunction

  function s__Ability0040_actor_create takes integer caster,real x,real y,integer level returns integer
   local real a= s__Math_anglePoints(sc__Object__get_x(caster) , sc__Object__get_y(caster) , x , y)
   local integer this= s__Ability0040_actor__allocate(caster , 0 , x , y , level , - 1 , false)
			call s__UnitActor_suspendFree(this)
			set s__Ability0040_actor_ef[this]=s__Effect_create(Ability0040___EFFECT_PATH1 , (((x )*1.0) + (( - Ability0040___DRAGON_DIST )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) , (((y )*1.0) + (( - Ability0040___DRAGON_DIST )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) , Ability0040___DRAGON_DIST + ( 500. ) , a) // INLINED!!
			call s__Effect_setAlpha(s__Ability0040_actor_ef[this],Ability0040___ALPHA)
			call s__Effect_setAnim(s__Ability0040_actor_ef[this],ANIM_TYPE_ATTACK)
			call s__Effect_setScale(s__Ability0040_actor_ef[this],3.)
			call s__Effect_setAnimSpeed(s__Ability0040_actor_ef[this],1.2)
			call s__Effect_setColor(s__Ability0040_actor_ef[this],255 , R2I(255 * 0.65) , 0)
			return this
  endfunction

  function s__Ability0040_actor_onDestroy takes integer this returns nothing
			set s__Ability0040_actor_ef[this]=0
  endfunction




  function s__Ability0040___ind_refresh takes integer this returns nothing
			call s__Effect_setPosition(s__Ability0040___ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
  endfunction

  function s__Ability0040___ind_show takes integer this,boolean flag returns nothing
			if flag then
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0040___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
				endif
			else
				call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0040___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			endif
  endfunction

  function s__Ability0040___ind_create takes integer abil,player owner returns integer
   local integer this= s__Ability0040___ind__allocate(abil , owner)
			set s__Ability0040___ind_c[this]=s__Effect_create("Effects\\RCircle.mdl" , 0. , 0. , 2. , 270.)
			call s__Effect_setScale(s__Ability0040___ind_c[this],Ability0040___EXPRAD / 100.)
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0040___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			call s__Effect_setColor(s__Ability0040___ind_c[this],255 , R2I(255 * 0.65) , 0)
			call s__Effect_setColor(s__AbilityIndicator_circle[this],255 , R2I(255 * 0.65) , 0)
			return this
  endfunction

  function s__Ability0040___ind_onDestroy takes integer this returns nothing
			call sc__Object_deallocate(s__Ability0040___ind_c[this])
  endfunction



  function s__Ability0040_main_relativeTooltip takes integer this returns string
			return "매 " + STRING_COLOR_CONSTANT + R2SW(Ability0040___INTERVAL, 1, 1) + "초|r마다 지정 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0040___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0040___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다. 해당 공격은 대상의 저항력을 " + STRING_COLOR_CONSTANT + R2SW(Ability0040___IGNORE_GUARD * 100, 1, 1) + "%|r 무시하며 총 " + STRING_COLOR_CONSTANT + I2S(Ability0040___COUNT) + "회|r 공격합니다.\n\n|cff999999다른 행동 중에 사용할 수 있습니다.|r" // INLINED!!
  endfunction

  function s__Ability0040_main_execute takes integer this returns nothing
   local integer a= s__Ability0040_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
  endfunction

  function s__Ability0040_main_init takes integer this returns nothing
			set s__Ability_prototype_is_active[this]=true
			set s__Ability_prototype_cast_range[this]=Ability0040___RANGE
			set s__Ability_prototype_preserve_order[this]=true
			set s__Ability_prototype_useable_cast[this]=true
			set s__Ability_prototype_cooldown_max[this]=25.
			set s__Ability_prototype_cooldown_min[this]=5.
			set s__Ability_prototype_manacost[this]=100
			set s__Ability_prototype_indicator[this]=s__Ability0040___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
			call s__Ability_plusStatValue(this,5)
  endfunction

  function s__Ability0040_main_onInit takes nothing returns nothing
			call s__Ability_addTypeTag(Ability0040___ID , ABILITY_STRING_TARGET_LOCATION)
			call s__Ability_addTypeTag(Ability0040___ID , ABILITY_TAG_FIRE)
			call s__Ability_addTypeTag(Ability0040___ID , ABILITY_TAG_DRAGON)
			call SaveStr(Ability__HASH, (Ability0040___ID ), s__Ability_INDEX_TOOLTIP, ( "지정 범위 초토화\n ")) // INLINED!!
  endfunction

	
//textmacro instance: abilityDataEnd()
 function Ability0040___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == Ability0040___ID then
			set a=s__Ability0040_main__allocate()
			set s__Ability_prototype_id[a]=Ability0040___ID
			set s__Ability_prototype_name[a]=Ability0040___NAME
			set s__Ability_prototype_icon[a]=Ability0040___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function Ability0040___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function Ability0040___act))
		call SaveStr(Ability__HASH, (Ability0040___ID ), s__Ability_INDEX_ICON_PATH, ( Ability0040___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (Ability0040___ID ), s__Ability_INDEX_NAME, ( Ability0040___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0040___ID ), s__Ability_INDEX_TIER, ( Ability0040___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (Ability0040___ID ), s__Ability_INDEX_COST, ( Ability0040___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(Ability0040___ID , 0 , Ability0040___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(Ability0040___ID , 1 , Ability0040___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope Ability0040 ends

// scope AddRandomAbility5 begins

 function AddRandomAbility5___init takes nothing returns nothing
		call s__Ability_addRandomAbility('0040' , 5)
	endfunction

// scope AddRandomAbility5 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\tier5.j

// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\AbilityData.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\Chingho.j


// scope AbilityC000 begins
//textmacro instance: abilityDataHeader("C000","새내기","BTNMurgalSlave","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C000","새내기","BTNMurgalSlave","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC000_main_init takes integer this returns nothing
				
   endfunction

   function s__AbilityC000_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC000_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC000___ID ), s__Ability_INDEX_TOOLTIP, ( "아직은 풋풋한 느낌")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC000___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC000___ID then
			set a=s__AbilityC000_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC000___ID
			set s__Ability_prototype_name[a]=AbilityC000___NAME
			set s__Ability_prototype_icon[a]=AbilityC000___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC000___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC000___act))
		call SaveStr(Ability__HASH, (AbilityC000___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC000___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC000___ID ), s__Ability_INDEX_NAME, ( AbilityC000___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC000___ID ), s__Ability_INDEX_TIER, ( AbilityC000___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC000___ID ), s__Ability_INDEX_COST, ( AbilityC000___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC000___ID , 0 , AbilityC000___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC000___ID , 1 , AbilityC000___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC000 ends


// scope AbilityC001 begins
//textmacro instance: abilityDataHeader("C001","동인천 역가드","BTNSacrifice","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C001","동인천 역가드","BTNSacrifice","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC001_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC001_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC001_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC001___ID ), s__Ability_INDEX_TOOLTIP, ( "나의 역가드를 알까?")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC001___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC001___ID then
			set a=s__AbilityC001_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC001___ID
			set s__Ability_prototype_name[a]=AbilityC001___NAME
			set s__Ability_prototype_icon[a]=AbilityC001___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC001___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC001___act))
		call SaveStr(Ability__HASH, (AbilityC001___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC001___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC001___ID ), s__Ability_INDEX_NAME, ( AbilityC001___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC001___ID ), s__Ability_INDEX_TIER, ( AbilityC001___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC001___ID ), s__Ability_INDEX_COST, ( AbilityC001___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC001___ID , 0 , AbilityC001___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC001___ID , 1 , AbilityC001___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC001 ends


// scope AbilityC002 begins
//textmacro instance: abilityDataHeader("C002","가짜광기","BTNBerserkForTrolls","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C002","가짜광기","BTNBerserkForTrolls","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC002_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC002_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC002_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC002___ID ), s__Ability_INDEX_TOOLTIP, ( "어중간하게 미쳐있는 사람")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC002___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC002___ID then
			set a=s__AbilityC002_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC002___ID
			set s__Ability_prototype_name[a]=AbilityC002___NAME
			set s__Ability_prototype_icon[a]=AbilityC002___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC002___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC002___act))
		call SaveStr(Ability__HASH, (AbilityC002___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC002___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC002___ID ), s__Ability_INDEX_NAME, ( AbilityC002___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC002___ID ), s__Ability_INDEX_TIER, ( AbilityC002___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC002___ID ), s__Ability_INDEX_COST, ( AbilityC002___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC002___ID , 0 , AbilityC002___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC002___ID , 1 , AbilityC002___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC002 ends


// scope AbilityC003 begins
//textmacro instance: abilityDataHeader("C003","꿈나무","BTNAcorn","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C003","꿈나무","BTNAcorn","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC003_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC003_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC003_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC003___ID ), s__Ability_INDEX_TOOLTIP, ( "무럭무럭 자라나는 DreamTree")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC003___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC003___ID then
			set a=s__AbilityC003_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC003___ID
			set s__Ability_prototype_name[a]=AbilityC003___NAME
			set s__Ability_prototype_icon[a]=AbilityC003___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC003___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC003___act))
		call SaveStr(Ability__HASH, (AbilityC003___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC003___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC003___ID ), s__Ability_INDEX_NAME, ( AbilityC003___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC003___ID ), s__Ability_INDEX_TIER, ( AbilityC003___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC003___ID ), s__Ability_INDEX_COST, ( AbilityC003___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC003___ID , 0 , AbilityC003___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC003___ID , 1 , AbilityC003___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC003 ends


// scope AbilityC004 begins
//textmacro instance: abilityDataHeader("C004","아이돌","BTNSorceress","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C004","아이돌","BTNSorceress","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC004_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC004_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC004_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC004___ID ), s__Ability_INDEX_TOOLTIP, ( "어떠한 역경도 이겨낼 준비가 되어있는 자")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC004___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC004___ID then
			set a=s__AbilityC004_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC004___ID
			set s__Ability_prototype_name[a]=AbilityC004___NAME
			set s__Ability_prototype_icon[a]=AbilityC004___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC004___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC004___act))
		call SaveStr(Ability__HASH, (AbilityC004___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC004___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC004___ID ), s__Ability_INDEX_NAME, ( AbilityC004___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC004___ID ), s__Ability_INDEX_TIER, ( AbilityC004___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC004___ID ), s__Ability_INDEX_COST, ( AbilityC004___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC004___ID , 0 , AbilityC004___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC004___ID , 1 , AbilityC004___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC004 ends


// scope AbilityC005 begins
//textmacro instance: abilityDataHeader("C005","정의의 사도","BTNRacoon","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C005","정의의 사도","BTNRacoon","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC005_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC005_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC005_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC005___ID ), s__Ability_INDEX_TOOLTIP, ( "불순한 것들은 전부 내가 처리할테니 안심하라구")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC005___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC005___ID then
			set a=s__AbilityC005_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC005___ID
			set s__Ability_prototype_name[a]=AbilityC005___NAME
			set s__Ability_prototype_icon[a]=AbilityC005___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC005___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC005___act))
		call SaveStr(Ability__HASH, (AbilityC005___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC005___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC005___ID ), s__Ability_INDEX_NAME, ( AbilityC005___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC005___ID ), s__Ability_INDEX_TIER, ( AbilityC005___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC005___ID ), s__Ability_INDEX_COST, ( AbilityC005___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC005___ID , 0 , AbilityC005___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC005___ID , 1 , AbilityC005___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC005 ends


// scope AbilityC006 begins
//textmacro instance: abilityDataHeader("C006","치유계","BTNFountainOfLife","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C006","치유계","BTNFountainOfLife","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC006_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC006_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC006_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC006___ID ), s__Ability_INDEX_TOOLTIP, ( "모두가 어리광부리고싶어하는 스타일")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC006___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC006___ID then
			set a=s__AbilityC006_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC006___ID
			set s__Ability_prototype_name[a]=AbilityC006___NAME
			set s__Ability_prototype_icon[a]=AbilityC006___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC006___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC006___act))
		call SaveStr(Ability__HASH, (AbilityC006___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC006___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC006___ID ), s__Ability_INDEX_NAME, ( AbilityC006___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC006___ID ), s__Ability_INDEX_TIER, ( AbilityC006___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC006___ID ), s__Ability_INDEX_COST, ( AbilityC006___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC006___ID , 0 , AbilityC006___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC006___ID , 1 , AbilityC006___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC006 ends


// scope AbilityC007 begins
//textmacro instance: abilityDataHeader("C007","패셔니스타","BTNRobeOfTheMagi","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C007","패셔니스타","BTNRobeOfTheMagi","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC007_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC007_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC007_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC007___ID ), s__Ability_INDEX_TOOLTIP, ( "최신 유행을 선도하는 자들")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC007___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC007___ID then
			set a=s__AbilityC007_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC007___ID
			set s__Ability_prototype_name[a]=AbilityC007___NAME
			set s__Ability_prototype_icon[a]=AbilityC007___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC007___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC007___act))
		call SaveStr(Ability__HASH, (AbilityC007___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC007___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC007___ID ), s__Ability_INDEX_NAME, ( AbilityC007___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC007___ID ), s__Ability_INDEX_TIER, ( AbilityC007___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC007___ID ), s__Ability_INDEX_COST, ( AbilityC007___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC007___ID , 0 , AbilityC007___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC007___ID , 1 , AbilityC007___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC007 ends


// scope AbilityC008 begins
//textmacro instance: abilityDataHeader("C008","밤의 일족","BTNElunesBlessing","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")

		
//end of: abilityDataHeader("C008","밤의 일족","BTNElunesBlessing","0","STAT_TYPE_ATTACK","STAT_TYPE_ATTACK")
		

   function s__AbilityC008_main_init takes integer this returns nothing

   endfunction

   function s__AbilityC008_main_onDestroy takes integer this returns nothing
				
   endfunction
	
   function s__AbilityC008_main_onInit takes nothing returns nothing
				call SaveStr(Ability__HASH, (AbilityC008___ID ), s__Ability_INDEX_TOOLTIP, ( "태양보다 뜨거운 밤의 열기를 만끽하라")) // INLINED!!
   endfunction

	
//textmacro instance: abilityDataEnd()
 function AbilityC008___act takes nothing returns nothing
  local integer a= 0
		if ABILITY_CREATE_ID == AbilityC008___ID then
			set a=s__AbilityC008_main__allocate()
			set s__Ability_prototype_id[a]=AbilityC008___ID
			set s__Ability_prototype_name[a]=AbilityC008___NAME
			set s__Ability_prototype_icon[a]=AbilityC008___ICON_PATH
			set ABILITY_LAST_CREATED=a
		endif
	endfunction

 function AbilityC008___init takes nothing returns nothing
		call TriggerAddCondition(ABILITY_CREATE_TRIGGER, Condition(function AbilityC008___act))
		call SaveStr(Ability__HASH, (AbilityC008___ID ), s__Ability_INDEX_ICON_PATH, ( AbilityC008___ICON_PATH)) // INLINED!!
		call SaveStr(Ability__HASH, (AbilityC008___ID ), s__Ability_INDEX_NAME, ( AbilityC008___NAME)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC008___ID ), s__Ability_INDEX_TIER, ( AbilityC008___TIER)) // INLINED!!
		call SaveInteger(Ability__HASH, (AbilityC008___ID ), s__Ability_INDEX_COST, ( AbilityC008___COST)) // INLINED!!
		call s__Ability_setTypeBonusStatIndex(AbilityC008___ID , 0 , AbilityC008___STAT_INDEX1)
		call s__Ability_setTypeBonusStatIndex(AbilityC008___ID , 1 , AbilityC008___STAT_INDEX2)
	endfunction
//end of: abilityDataEnd()
// scope AbilityC008 ends
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\AbilityData\\Chingho.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Ability\Ability.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Game.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Camera.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Camera.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\ConstantString.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\ConstantString.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Tip.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Tip.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\CharacterSelect.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\CharacterSelect.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Wave.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Wave.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Guardians.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Guardians.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\Round.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Round.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\Game\TreeOfLife.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\TreeOfLife.j

// END IMPORT OF C:\war3lib\maps\SkillArchive\Game\Game.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\UI\UI.j

// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\UI\SkillShop.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\UI\SkillShop.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\UI\CloseUI.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\UI\CloseUI.j
// BEGIN IMPORT OF C:\war3lib\maps\SkillArchive\UI\SlotChanger.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\UI\SlotChanger.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\UI\UI.j
// END IMPORT OF C:\war3lib\maps\SkillArchive\main.j

//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_BigButtonClick=CreateSound("Sound/Interface/BigButtonClick.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_BigButtonClick, "GlueScreenClick")
    call SetSoundDuration(gg_snd_BigButtonClick, 390)
    call SetSoundVolume(gg_snd_BigButtonClick, 100)
    set gg_snd_Error=CreateSound("Sound/Interface/Error.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_Error, "ErrorMessage")
    call SetSoundDuration(gg_snd_Error, 614)
    call SetSoundVolume(gg_snd_Error, 127)
    set gg_snd_MetalHeavyChopFlesh3=CreateSound("Sound/Units/Combat/MetalHeavyChopFlesh3.flac", false, false, true, 1, 1, "CombatSoundsEAX")
    call SetSoundParamsFromLabel(gg_snd_MetalHeavyChopFlesh3, "MetalHeavyChopFlesh")
    call SetSoundDuration(gg_snd_MetalHeavyChopFlesh3, 757)
    call SetSoundVolume(gg_snd_MetalHeavyChopFlesh3, 95)
    set gg_snd_HeroDropItem1=CreateSound("Sound/Interface/HeroDropItem1.flac", false, true, true, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_HeroDropItem1, "ItemDrop")
    call SetSoundDuration(gg_snd_HeroDropItem1, 486)
    call SetSoundVolume(gg_snd_HeroDropItem1, 60)
    set gg_snd_Tomes=CreateSound("Abilities/Spells/Items/AIam/Tomes.flac", false, false, true, 1, 1, "SpellsEAX")
    call SetSoundParamsFromLabel(gg_snd_Tomes, "Tome")
    call SetSoundDuration(gg_snd_Tomes, 1770)
    call SetSoundVolume(gg_snd_Tomes, 127)
    set gg_snd_MouseClick1=CreateSound("Sound/Interface/MouseClick1.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_MouseClick1, "InterfaceClick")
    call SetSoundDuration(gg_snd_MouseClick1, 239)
    call SetSoundVolume(gg_snd_MouseClick1, 127)
    set gg_snd_Hint=CreateSound("Sound/Interface/Hint.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_Hint, "Hint")
    call SetSoundDuration(gg_snd_Hint, 2005)
    call SetSoundVolume(gg_snd_Hint, 80)
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_c1=Rect(- 6016.0, - 1984.0, - 5760.0, - 1728.0)
    set gg_rct_spawn=Rect(- 128.0, - 128.0, 128.0, 128.0)
    set gg_rct_c2=Rect(- 5760.0, - 1984.0, - 5504.0, - 1728.0)
    set gg_rct_GateWest=Rect(- 5760.0, - 128.0, - 5504.0, 128.0)
    set gg_rct_GateEast=Rect(5504.0, - 128.0, 5760.0, 128.0)
    set gg_rct_GateNorth=Rect(- 128.0, 5504.0, 128.0, 5760.0)
    set gg_rct_GateSouth=Rect(- 128.0, - 5760.0, 128.0, - 5504.0)
    set gg_rct_GuardianWest=Rect(- 1920.0, - 128.0, - 1664.0, 128.0)
    set gg_rct_GuardianNorth=Rect(- 128.0, 1664.0, 128.0, 1920.0)
    set gg_rct_GuardianEast=Rect(1664.0, - 128.0, 1920.0, 128.0)
    set gg_rct_GuardianSouth=Rect(- 128.0, - 1920.0, 128.0, - 1664.0)
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_Cam00=CreateCameraSetup()
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_ROTATION, 90.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_TARGET_DISTANCE, 2000.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_ROLL, 0.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_FARZ, 5000.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_NEARZ, 16.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0)
    call CameraSetupSetField(gg_cam_Cam00, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0)
    call CameraSetupSetDestPosition(gg_cam_Cam00, 0.0, 0.0, 0.0)

endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************


//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation(Player(0), 0)
    call SetPlayerColor(Player(0), ConvertPlayerColor(0))
    call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(0), false)
    call SetPlayerController(Player(0), MAP_CONTROL_USER)

    // Player 1
    call SetPlayerStartLocation(Player(1), 1)
    call SetPlayerColor(Player(1), ConvertPlayerColor(1))
    call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(1), false)
    call SetPlayerController(Player(1), MAP_CONTROL_USER)

    // Player 2
    call SetPlayerStartLocation(Player(2), 2)
    call SetPlayerColor(Player(2), ConvertPlayerColor(2))
    call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(2), false)
    call SetPlayerController(Player(2), MAP_CONTROL_USER)

    // Player 3
    call SetPlayerStartLocation(Player(3), 3)
    call SetPlayerColor(Player(3), ConvertPlayerColor(3))
    call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(3), false)
    call SetPlayerController(Player(3), MAP_CONTROL_USER)

    // Player 4
    call SetPlayerStartLocation(Player(4), 4)
    call SetPlayerColor(Player(4), ConvertPlayerColor(4))
    call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(4), false)
    call SetPlayerController(Player(4), MAP_CONTROL_USER)

    // Player 5
    call SetPlayerStartLocation(Player(5), 5)
    call SetPlayerColor(Player(5), ConvertPlayerColor(5))
    call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(5), false)
    call SetPlayerController(Player(5), MAP_CONTROL_USER)

    // Player 6
    call SetPlayerStartLocation(Player(6), 6)
    call SetPlayerColor(Player(6), ConvertPlayerColor(6))
    call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(6), false)
    call SetPlayerController(Player(6), MAP_CONTROL_USER)

    // Player 7
    call SetPlayerStartLocation(Player(7), 7)
    call SetPlayerColor(Player(7), ConvertPlayerColor(7))
    call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(7), false)
    call SetPlayerController(Player(7), MAP_CONTROL_USER)

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_1809
    call SetPlayerTeam(Player(0), 0)
    call SetPlayerTeam(Player(1), 0)
    call SetPlayerTeam(Player(2), 0)
    call SetPlayerTeam(Player(3), 0)
    call SetPlayerTeam(Player(4), 0)
    call SetPlayerTeam(Player(5), 0)
    call SetPlayerTeam(Player(6), 0)
    call SetPlayerTeam(Player(7), 0)

    //   Allied
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(6), true)

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount(0, 7)
    call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(1, 7)
    call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(2, 7)
    call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(3, 7)
    call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(4, 7)
    call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(5, 7)
    call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(6, 7)
    call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(7, 7)
    call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    local weathereffect we
    call SetCameraBounds(- 6656.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), - 6656.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 6656.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 6656.0 - GetCameraMargin(CAMERA_MARGIN_TOP), - 6656.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 6656.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 6656.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), - 6656.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
    call SetDayNightModels("Environment\\DNC\\DNCDalaran\\DNCDalaranTerrain\\DNCDalaranTerrain.mdl", "Environment\\DNC\\DNCDalaran\\DNCDalaranUnit\\DNCDalaranUnit.mdl")
    set we=AddWeatherEffect(Rect(- 8192.0, - 8192.0, 8192.0, 8192.0), 'LRma')
    call EnableWeatherEffect(we, true)
    call NewSoundEnvironment("Default")
    call SetAmbientDaySound("DalaranDay")
    call SetAmbientNightSound("DalaranNight")
    call SetMapMusic("Music", true, 0)
    call InitSounds()
    call CreateRegions()
    call CreateCameras()
    call InitBlizzard()

call ExecuteFunc("jasshelper__initstructs1564173265")
call ExecuteFunc("Base64__init")
call ExecuteFunc("FixCam__main")
call ExecuteFunc("TimerUtils__init")
call ExecuteFunc("YouCantAttackAlly__init")
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function BuffStun__cond)) // INLINED!!
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function BuffEnsn__cond)) // INLINED!!
call UnitHR00__init()
call UnitHR09__init()
call UnitHR07__init()
call UnitG000__init()
call UnitG001__init()
call UnitU000__init()
call UnitU001__init()
call UnitU002__init()
call UnitU003__init()
call UnitU004__init()
call Ability0000__init()
call Ability0001__init()
call Ability0002__init()
call Ability0003__init()
call Ability0004__init()
call Ability0005__init()
call Ability0006__init()
call Ability0007__init()
call Abilityu000__init()
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu001__cond)) // INLINED!!
call Abilityu001__init()
call AddRandomAbility1__init()
call Ability0010__init()
call Ability0013__init()
call Ability0014__init()
call Ability0015__init()
call Ability0016__init()
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu010___cond)) // INLINED!!
call Abilityu010___init()
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buffu011___cond)) // INLINED!!
call Abilityu011___init()
call AddRandomAbility2___init()
call Ability0020___init()
call TriggerAddCondition(BUFF_CREATE_TRIGGER, Condition(function Buff0021___cond)) // INLINED!!
call Ability0021___init()
call AddRandomAbility3___init()
call Ability0030___init()
call s__Ability_addRandomAbility('0030' , 4) // INLINED!!
call Ability0040___init()
call s__Ability_addRandomAbility('0040' , 5) // INLINED!!
call AbilityC000___init()
call AbilityC001___init()
call AbilityC002___init()
call AbilityC003___init()
call AbilityC004___init()
call AbilityC005___init()
call AbilityC006___init()
call AbilityC007___init()
call AbilityC008___init()

    set udg_EVENT_VALUE=0.00 // INLINED!!

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName("TRIGSTR_2207")
    call SetMapDescription("TRIGSTR_2209")
    call SetPlayers(8)
    call SetTeams(8)
    call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)

    call DefineStartLocation(0, 0.0, 0.0)
    call DefineStartLocation(1, 0.0, 0.0)
    call DefineStartLocation(2, 0.0, 0.0)
    call DefineStartLocation(3, 0.0, 0.0)
    call DefineStartLocation(4, 0.0, 0.0)
    call DefineStartLocation(5, 0.0, 0.0)
    call DefineStartLocation(6, 0.0, 0.0)
    call DefineStartLocation(7, 0.0, 0.0)

    // Player setup
    call InitCustomPlayerSlots()
    call InitCustomTeams()
    call InitAllyPriorities()
endfunction




//Struct method generated initializers/callers:

//Functions for BigArrays:
function sa__AbilityIndicator_setColor takes nothing returns boolean
local integer this=f__arg_this
local integer r=f__arg_integer1
local integer g=f__arg_integer2
local integer b=f__arg_integer3
			call sc__Effect_setColor(s__AbilityIndicator_circle[this],r , g , b)
   return true
endfunction
function sa__AbilityIndicator_refresh takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityIndicator_show takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
   return true
endfunction
function sa__AbilityIndicator_create takes nothing returns boolean
local integer abil=f__arg_integer1
local player owner=f__arg_player1
   local integer this= s__AbilityIndicator__allocate()
			set s__AbilityIndicator_abil[this]=abil
			set s__AbilityIndicator_owner[this]=owner
			set s__AbilityIndicator_circle[this]=sc__Effect_create(s__AbilityIndicator_CIRCLE_PATH , 0. , 0. , 2. , 270.)
			call sc__Effect_setAlpha(s__AbilityIndicator_circle[this],0)
set f__result_integer= this
   return true
endfunction
function sa__AbilityIndicator_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			set s__AbilityIndicator_owner[this]=null
			call sc__Object_deallocate(s__AbilityIndicator_circle[this])
   return true
endfunction
function sa__LineIndicator_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__LineIndicator_refresh takes nothing returns boolean
local integer this=f__arg_this
			call sc__LineIndicator_beforeRefresh(this)
			call sc__Object__set_yaw(s__LineIndicator_ef[this],s__LineIndicator_yaw[this])
			call sc__Effect_setPosition(s__LineIndicator_ef[this],s__LineIndicator_x[this] , s__LineIndicator_y[this] , 2.)
			call BlzSetSpecialEffectMatrixScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__LineIndicator_ef[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), s__LineIndicator_range[this] / 100., s__LineIndicator_width[this] / 50., 1.) // INLINED!!
   return true
endfunction
function sa__LineIndicator_show takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
			if flag then
				call sc__AbilityIndicator_refresh(this)
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],255)
				endif
			else
				call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],0)
			endif
   return true
endfunction
function sa__LineIndicator_create takes nothing returns boolean
local integer abil=f__arg_integer1
local player owner=f__arg_player1
   local integer this= s__LineIndicator__allocate(abil , owner)
			set s__LineIndicator_ef[this]=sc__Effect_create("Effects\\RLine.mdl" , 0. , 0. , 2. , 0.)
			call sc__Effect_setLocalAlpha(s__LineIndicator_ef[this],0)
set f__result_integer= this
   return true
endfunction
function sa__LineIndicator_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Object_deallocate(s__LineIndicator_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Buff_addValue takes nothing returns boolean
local integer this=f__arg_this
local integer level=f__arg_integer1
   return true
endfunction
function sa__Buff_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buff_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buff_intervalAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buff_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buff_create takes nothing returns boolean
local integer id=f__arg_integer1
local integer caster=f__arg_integer2
local integer target=f__arg_integer3
local real duration=f__arg_real1
local string name=f__arg_string1
   local integer this= s__Buff__allocate()
			set s__Buff_id[this]=id
			set s__Buff_caster[this]=caster
			set s__Buff_target[this]=target
			call s__Buff__set_duration(this,duration)
			set s__Buff_duration_max[this]=duration
			call s__Buff_linkNode(this)
set f__result_integer= this
   return true
endfunction
function sa__Buff_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			if s__Buff_buff_effect[this] > 0 then
				call sc__Effect_kill(s__Buff_buff_effect[this])
				set s__Buff_buff_effect[this]=0
			endif
			call s__Buff_unlinkNode(this)
			if s__Buff_main_timer[this] != null then
				call sc__Timer_release(s__Buff_main_timer[this])
			endif
			set s__Buff_main_timer[this]=null
   return true
endfunction
function sa__Explosion_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= sc__Unit_prototype_inRange(target,s__Explosion_x[this] , s__Explosion_y[this] , s__Explosion_radius_explosion[this])
   return true
endfunction
function sa__Explosion_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Explosion_afterExplosion takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Explosion_explosionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Explosion_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__Explosion_damageTarget(this,target)
   return true
endfunction
function sa__Explosion_create takes nothing returns boolean
local integer owner=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real radius=f__arg_real3
   local integer this= s__Explosion__allocate()
			set s__Explosion_owner[this]=owner
			set s__Explosion_x[this]=x
			set s__Explosion_y[this]=y
			set s__Explosion_radius_explosion[this]=radius
			set s__Explosion_main_timer[this]=sc__Timer_new(this)
			set s__Explosion_group_wave[this]=sc__Group_new()
			call s__Explosion_setDamageFlag((this),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Explosion_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Timer_release(s__Explosion_main_timer[this])
			set s__Explosion_main_timer[this]=null
			call sc__Group_release(s__Explosion_group_wave[this])
			set s__Explosion_group_wave[this]=null
   return true
endfunction
function sa__LineExplosion_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= sc__Unit_prototype_inLine(target,s__Explosion_x[this] , s__Explosion_y[this] , s__LineExplosion_x2[this] , s__LineExplosion_y2[this] , s__Explosion_radius_explosion[this])
   return true
endfunction
function sa__LineExplosion_create takes nothing returns boolean
local integer owner=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real x2=f__arg_real3
local real y2=f__arg_real4
local real radius=f__arg_real5
   local integer this= s__LineExplosion__allocate(owner , x , y , radius)
			set s__LineExplosion_x2[this]=x2
			set s__LineExplosion_y2[this]=y2
set f__result_integer= this
   return true
endfunction
function sa__SectorExplosion_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= sc__Unit_prototype_inSector(target,s__Explosion_x[this] , s__Explosion_y[this] , s__Explosion_radius_explosion[this] , s__SectorExplosion_angle[this] , s__SectorExplosion_width[this])
   return true
endfunction
function sa__Ability0040___ind_refresh takes nothing returns boolean
local integer this=f__arg_this
			call s__Effect_setPosition(s__Ability0040___ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
   return true
endfunction
function sa__Ability0040___ind_show takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
			if flag then
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0040___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
				endif
			else
				call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0040___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			endif
   return true
endfunction
function sa__Ability0040___ind_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Object_deallocate(s__Ability0040___ind_c[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0040_explosion_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
   local integer e= s__Effect_create(Ability0040___EFFECT_PATH3 , (((s__Explosion_x[this] )*1.0) + (( Ability0040___EXPRAD / 2 )*1.0) * Cos((( GetRandomReal(0, 360))*1.0) * bj_DEGTORAD)) , (((s__Explosion_y[this] )*1.0) + (( Ability0040___EXPRAD / 2 )*1.0) * Sin((( GetRandomReal(0, 360))*1.0) * bj_DEGTORAD)) , GetRandomReal(2, 55) , 270) // INLINED!!
			call s__Effect_setDuration(e,1.25)
			call s__Effect_setScale(e,GetRandomReal(0.25, 0.75))
			set e=0
			set e=s__Effect_create(Ability0040___EFFECT_PATH4 , (((sc__Object__get_x(s__Ability0040_explosion_ef[this]) )*1.0) + (( Ability0040___FIRE_OFFSET )*1.0) * Cos((( sc__Object__get_yaw(s__Ability0040_explosion_ef[this]))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(s__Ability0040_explosion_ef[this]) )*1.0) + (( Ability0040___FIRE_OFFSET )*1.0) * Sin((( sc__Object__get_yaw(s__Ability0040_explosion_ef[this]))*1.0) * bj_DEGTORAD)) , Ability0040___DRAGON_DIST - Ability0040___FIRE_OFFSET , sc__Object__get_yaw(s__Ability0040_explosion_ef[this])) // INLINED!!
			call s__Effect_setPitch(e,135)
			call s__Effect_setDuration(e,1.5)
			call s__Effect_setAnimSpeed(e,2.)
			call s__Effect_setMatrixScale(e,1. , 1. , 3.5)
   return true
endfunction
function sa__Ability0040_explosion_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
   local integer e= s__Effect_create(Ability0040___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270)
   local integer bf= 0
			call s__Effect_kill(e)
			if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
				set s__Explosion_is_onhit[this]=false
			else
				set s__Explosion_is_onhit[this]=true
			endif
			call s__Unit_prototype_divideStatValue(target,STAT_TYPE_RESISTANCE , 1)
			call s__Explosion_damageTarget(this,target)
			call s__Unit_prototype_divideStatValue(target,STAT_TYPE_RESISTANCE , - 1)
   return true
endfunction
function sa__Ability0040_explosion_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Circle_setFadeOutPoint(s__Ability0040_explosion_c[this],0.01 , 0.75)
			set s__Ability0040_explosion_c[this]=0
			call s__Ability0040___mystruct_create(s__Ability0040_explosion_ef[this])
			set s__Ability0040_explosion_ef[this]=0
			call s__Effect_kill(s__Ability0040_explosion_ef2[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0040___mystruct_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			set s__Effect_want_remove[s__Ability0040___mystruct_ef[this]]=true
			call sc__Object_deallocate(s__Ability0040___mystruct_ef[this])
			call ReleaseTimer((s__Ability0040___mystruct_t[this])) // INLINED!!
			set s__Ability0040___mystruct_ef[this]=0
			set s__Ability0040___mystruct_t[this]=null
   return true
endfunction
function sa__Ability0030___ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) )*1.0) + (( - Ability0030___EXPRAD )*1.0) * Cos((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]]) )*1.0) + (( - Ability0030___EXPRAD )*1.0) * Sin((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_range[this]=Ability0030___RANGE + Ability0030___EXPRAD * 2
				set s__LineIndicator_width[this]=Ability0030___EXPRAD
   return true
endfunction
function sa__Math_distancePoints takes nothing returns boolean
local real x1=f__arg_real1
local real y1=f__arg_real2
local real x2=f__arg_real3
local real y2=f__arg_real4
   local real dx= x2 - x1
   local real dy= y2 - y1
set f__result_real= SquareRoot(dx * dx + dy * dy)
   return true
endfunction
function sa__MissileGroup_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Group_release(s__MissileGroup_group_wave[this])
			set s__MissileGroup_group_wave[this]=null
			if s__MissileGroup_main_timer[this] != null then
				call sc__Timer_release(s__MissileGroup_main_timer[this])
			endif
			set s__MissileGroup_main_timer[this]=null
   return true
endfunction
function sa__Mover_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__LocationEx_collisionProjection(sc__Object__get_x(s__Mover_owner[this]) , sc__Object__get_y(s__Mover_owner[this]))
			call SetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocationX(LocationEx__LOC))) // INLINED!!
			call SetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocationY(LocationEx__LOC))) // INLINED!!
			call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Mover_owner[this])]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
			call sc__Timer_release(s__Mover_main_timer[this])
			call TriggerRemoveCondition(s__Mover_main_trigger[this], s__Mover_main_cond[this])
			call sc__Trigger_remove(s__Mover_main_trigger[this])
			set s__Mover_main_trigger[this]=null
			set s__Mover_main_cond[this]=null
			set s__Mover_main_timer[this]=null
			call SetUnitMoveSpeed(s__Mover_dummy[this], 10.)
			set s__Mover_dummy[this]=null
			call RemoveSavedInteger(s__Mover_HASH, s__Mover_owner[this], 0)
   return true
endfunction
function sa__Object__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_x_true[this]
   return true
endfunction
function sa__Object__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_y_true[this]
   return true
endfunction
function sa__Object__get_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_z_true[this]
   return true
endfunction
function sa__Object__get_yaw takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_yaw_true[this]
   return true
endfunction
function sa__Object__get_pitch takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_pitch_true[this]
   return true
endfunction
function sa__Object__get_roll takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_roll_true[this]
   return true
endfunction
function sa__Object__set_x takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_x_true[this]=nv
   return true
endfunction
function sa__Object__set_y takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_y_true[this]=nv
   return true
endfunction
function sa__Object__set_z takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_z_true[this]=nv
   return true
endfunction
function sa__Object__set_yaw takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_yaw_true[this]=nv
   return true
endfunction
function sa__Object__set_pitch takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_pitch_true[this]=nv
   return true
endfunction
function sa__Object__set_roll takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_roll_true[this]=nv
   return true
endfunction
function sa__Object__get_offset_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_x_true[this]
   return true
endfunction
function sa__Object__get_offset_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_y_true[this]
   return true
endfunction
function sa__Object__get_offset_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_z_true[this]
   return true
endfunction
function sa__Object__get_offset_yaw takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_yaw_true[this]
   return true
endfunction
function sa__Object__get_offset_pitch takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_pitch_true[this]
   return true
endfunction
function sa__Object__get_offset_roll takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_roll_true[this]
   return true
endfunction
function sa__Object__set_offset_x takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_x_true[this]=nv
   return true
endfunction
function sa__Object__set_offset_y takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_y_true[this]=nv
   return true
endfunction
function sa__Object__set_offset_z takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_z_true[this]=nv
   return true
endfunction
function sa__Object__set_offset_yaw takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_yaw_true[this]=nv
   return true
endfunction
function sa__Object__set_offset_pitch takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_pitch_true[this]=nv
   return true
endfunction
function sa__Object__set_offset_roll takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_roll_true[this]=nv
   return true
endfunction
function sa__Object_setOrientation takes nothing returns boolean
local integer this=f__arg_this
local real yaw=f__arg_real1
local real pitch=f__arg_real2
local real roll=f__arg_real3
			call sc__Object__set_yaw(this,yaw)
			call sc__Object__set_pitch(this,pitch)
			call sc__Object__set_roll(this,roll)
   return true
endfunction
function sa__Object_move takes nothing returns boolean
local integer this=f__arg_this
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
			call sc__Object__set_x(this,x)
			call sc__Object__set_y(this,y)
			call sc__Object__set_z(this,z)
   return true
endfunction
function sa__Object_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			if s__Object_movement[this] != 0 then
				call sc__Actor_deallocate(s__Object_movement[this])
			endif
   return true
endfunction
function sa__Ability0021___ind_refresh takes nothing returns boolean
local integer this=f__arg_this
			call s__Effect_setPosition(s__Ability0021___ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
   return true
endfunction
function sa__Ability0021___ind_show takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
			if flag then
				if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0021___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
				endif
			else
				call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0021___ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
			endif
   return true
endfunction
function sa__Ability0021___ind_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Object_deallocate(s__Ability0021___ind_c[this])
    set f__arg_this=this
   return true
endfunction
function sa__ProgressBar_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__ProgressBar_backdrop[this])
	set s__ProgressBar_backdrop[this]=null
	call BlzDestroyFrame(s__ProgressBar_fill[this])
	set s__ProgressBar_fill[this]=null
	call BlzDestroyFrame(s__ProgressBar_text[this])
	set s__ProgressBar_text[this]=null
   return true
endfunction
function sa__Ability0021_explosion_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
   local integer e= s__Effect_create(Ability0021___EFFECT_PATH3 , s__Explosion_x[this] , s__Explosion_y[this] , GetRandomReal(2, 55) , 270)
			call s__Effect_setDuration(e,1.25)
			call s__Effect_setScale(e,GetRandomReal(1.5, 3))
   return true
endfunction
function sa__Ability0021_explosion_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
   local integer e= s__Effect_create(Ability0021___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270)
   local integer bf= 0
			call s__Effect_setDuration(e,1.5)
			if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
				set s__Explosion_is_onhit[this]=false
			else
				set s__Explosion_is_onhit[this]=true
			endif
			set bf=s__Buff_add(s__Explosion_owner[this] , target , Ability0021___ID , Ability0021___DURATION)
			call sc__Buff_addValue(bf,s__Ability0021_explosion_level[this])
			call s__Explosion_damageTarget(this,target)
   return true
endfunction
function sa__Ability0021_explosion_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Circle_setFadeOutPoint(s__Ability0021_explosion_c[this],0.01 , 0.75)
			set s__Ability0021_explosion_c[this]=0
			call s__Effect_kill(s__Ability0021_explosion_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Buff0021_main_addValue takes nothing returns boolean
local integer this=f__arg_this
local integer level=f__arg_integer1
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , s__Buff0021_main_SLOW)
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_EVASION , ( (s__Unit_prototype_getCarculatedStatValue((s__Buff_caster[this]),STAT_TYPE_MAGICPOWER)) * s__Buff0021_main_DAMAGE_PER_MAGICPOWER ) * ( 1 + s__Buff0021_main_DAMAGE_PER_LEVEL * ( level - 1 ) ) * s__Buff0021_main_REDUCE_VAL) // INLINED!!
			set s__Buff0021_main_val1[this]=s__Buff0021_main_val1[this] + s__Buff0021_main_SLOW
			set s__Buff0021_main_val2[this]=s__Buff0021_main_val2[this] + ( (s__Unit_prototype_getCarculatedStatValue((s__Buff_caster[this]),STAT_TYPE_MAGICPOWER)) * s__Buff0021_main_DAMAGE_PER_MAGICPOWER ) * ( 1 + s__Buff0021_main_DAMAGE_PER_LEVEL * ( level - 1 ) ) * s__Buff0021_main_REDUCE_VAL // INLINED!!
   return true
endfunction
function sa__Buff0021_main_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buff0021_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buff0021_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin")) // INLINED!!
   return true
endfunction
function sa__Buff0021_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , - s__Buff0021_main_val1[this])
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_EVASION , - s__Buff0021_main_val2[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0020___ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0020___RANGE
				set s__LineIndicator_width[this]=Ability0020___COLRAD
   return true
endfunction
function sa__Tombstone_onDestroy takes nothing returns boolean
local integer this=f__arg_this
   local integer eff= sc__Effect_setDuration(sc__Effect_setAnim(sc__Effect_create(s__Tombstone_EFFECT_PATH2 , sc__Object__get_x(s__Tombstone_owner[this]) , sc__Object__get_y(s__Tombstone_owner[this]) , 0. , 270.),ANIM_TYPE_DEATH),3.33)
			set s__Effect_want_remove[eff]=true
			call sc__Timer_release(s__Tombstone_main_timer[this])
			set s__Tombstone_main_timer[this]=null
			set s__Effect_want_remove[s__Tombstone_ef[this]]=true
			call sc__Object_deallocate(s__Tombstone_ef[this])
			set s__Tombstone_ef[this]=0
	call BlzDestroyFrame(s__Tombstone_text[this])
	set s__Tombstone_text[this]=null
			set s__Tombstone_THIS[s__Tombstone_owner[this]]=0
   return true
endfunction
function sa__TreeOfLife_addLevel takes nothing returns boolean

			call sc__Unit_prototype__set_level(s__TreeOfLife_UNIT,(s__Unit_prototype_level_true[(s__TreeOfLife_UNIT)]) + 1) // INLINED!!
   return true
endfunction
function sa__TreeOfLife_end takes nothing returns boolean

			call sc__Unit_prototype_plusStatus(s__TreeOfLife_UNIT,STATUS_DEAD)
			call PauseTimer((s__TreeOfLife_MAIN_TIMER)) // INLINED!!
			call s__TreeOfLife__set_HP(0.)
			call TriggerEvaluate(st__Game_defeat) // INLINED!!
   return true
endfunction
function sa__Abilityu011___exx_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				if s__Explosion_damageTarget(this,target) > 0. then
					call s__Buff_add(s__Explosion_owner[this] , target , Abilityu011___ID , Abilityu011___DURATION)
				endif
   return true
endfunction
function sa__Abilityu011___exx_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
				set s__Explosion_x[this]=sc__Object__get_x(s__Explosion_owner[this])
				set s__Explosion_y[this]=sc__Object__get_y(s__Explosion_owner[this])
				set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_HPREGEN)) * Abilityu011___DAMAGE_PER_HPREGEN ) * ( 1 + Abilityu011___DAMAGE_PER_LEVEL * ( s__Abilityu011___exx_level[this] - 1 ) ) // INLINED!!
   return true
endfunction
function sa__Abilityu011___exx_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_kill(s__Abilityu011___exx_ef[this])
				set s__Abilityu011___exx_ef[this]=0
				set Abilityu011___DESTROY_REQUEST_ABILITY=s__Abilityu011___exx_a[this]
				call TriggerEvaluate(Abilityu011___DESTROY_REQUEST)
				set Abilityu011___DESTROY_REQUEST_ABILITY=0
    set f__arg_this=this
   return true
endfunction
function sa__Buffu011_main_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buffu011_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu011_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "head")) // INLINED!!
			call s__Unit_prototype_divideStatValue(s__Buff_target[this],STAT_TYPE_HEAL_AMP , ( 1 / ( 1 - s__Buffu011_main_REDUCE ) ) - 1)
   return true
endfunction
function sa__Buffu011_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_divideStatValue(s__Buff_target[this],STAT_TYPE_HEAL_AMP , - ( ( 1 / ( 1 - s__Buffu011_main_REDUCE ) ) - 1 ))
    set f__arg_this=this
   return true
endfunction
function sa__Trigger_getData takes nothing returns boolean
    set f__result_integer=(LoadInteger(s__Trigger_HASH, GetHandleId((f__arg_trigger1)), 0)) // INLINED!!
   return true
endfunction
function sa__Trigger_new takes nothing returns boolean
local integer data=f__arg_integer1
			set Trigger__GENERIC=null
			set Trigger__GENERIC=CreateTrigger()
			call SaveInteger(s__Trigger_HASH, GetHandleId((Trigger__GENERIC )), 0, ( data)) // INLINED!!
set f__result_trigger= Trigger__GENERIC
   return true
endfunction
function sa__Trigger_remove takes nothing returns boolean
    call s__Trigger_remove(f__arg_trigger1)
   return true
endfunction
function sa__Buffu010_main_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Buffu010_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu010_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "overhead")) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_ATTACK_SPEED , s__Buffu010_main_ATTACK_SPEED_BONUS)
			set s__Buffu010_main_main_trigger[this]=s__Trigger_new(this)
			set s__Buffu010_main_main_cond[this]=TriggerAddCondition(s__Buffu010_main_main_trigger[this], Condition(function s__Buffu010_main_cond))
			call TriggerRegisterVariableEvent((s__Buffu010_main_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_MODIFY_STAT)*1.0)) // INLINED!!
   return true
endfunction
function sa__Buffu010_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_plusStatValue(s__Buff_target[this],STAT_TYPE_ATTACK_SPEED , - s__Buffu010_main_ATTACK_SPEED_BONUS)
		call TriggerRemoveCondition(s__Buffu010_main_main_trigger[this], s__Buffu010_main_main_cond[this])
		call s__Trigger_remove(s__Buffu010_main_main_trigger[this])
		set s__Buffu010_main_main_trigger[this]=null
		set s__Buffu010_main_main_cond[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__ChinghoFrame_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__ChinghoFrame_backdrop[this])
	set s__ChinghoFrame_backdrop[this]=null
	call BlzDestroyFrame(s__ChinghoFrame_icon1[this])
	set s__ChinghoFrame_icon1[this]=null
	call BlzDestroyFrame(s__ChinghoFrame_icon2[this])
	set s__ChinghoFrame_icon2[this]=null
	call BlzDestroyFrame(s__ChinghoFrame_name[this])
	set s__ChinghoFrame_name[this]=null
   return true
endfunction
function sa__AbilityIcon_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__AbilityIcon_icon_container[this])
	set s__AbilityIcon_icon_container[this]=null
	call BlzDestroyFrame(s__AbilityIcon_icon_backdrop[this])
	set s__AbilityIcon_icon_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_nem_backdrop[this])
	set s__AbilityIcon_nem_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_cooldown_backdrop[this])
	set s__AbilityIcon_cooldown_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_cooldown_text_backdrop[this])
	set s__AbilityIcon_cooldown_text_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_cooldown_text[this])
	set s__AbilityIcon_cooldown_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_hotkey_backdrop[this])
	set s__AbilityIcon_hotkey_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_hotkey_text[this])
	set s__AbilityIcon_hotkey_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_gauge_backdrop[this])
	set s__AbilityIcon_gauge_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_gauge_fill[this])
	set s__AbilityIcon_gauge_fill[this]=null
	call BlzDestroyFrame(s__AbilityIcon_extra_backdrop[this])
	set s__AbilityIcon_extra_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_extra_text[this])
	set s__AbilityIcon_extra_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_weapon_particle[this])
	set s__AbilityIcon_weapon_particle[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_container[this])
	set s__AbilityIcon_tooltip_container[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_outline[this])
	set s__AbilityIcon_tooltip_outline[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_backdrop[this])
	set s__AbilityIcon_tooltip_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_header[this])
	set s__AbilityIcon_tooltip_header[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_text[this])
	set s__AbilityIcon_tooltip_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_icon[this])
	set s__AbilityIcon_tooltip_icon[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_name[this])
	set s__AbilityIcon_tooltip_name[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_tag[this])
	set s__AbilityIcon_tooltip_tag[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_casttype[this])
	set s__AbilityIcon_tooltip_casttype[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_manacost_backdrop[this])
	set s__AbilityIcon_tooltip_manacost_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_manacost_text[this])
	set s__AbilityIcon_tooltip_manacost_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_cooldown_backdrop[this])
	set s__AbilityIcon_tooltip_cooldown_backdrop[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_cooldown_text[this])
	set s__AbilityIcon_tooltip_cooldown_text[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_icon1[this])
	set s__AbilityIcon_tooltip_stat_bonus_icon1[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_icon2[this])
	set s__AbilityIcon_tooltip_stat_bonus_icon2[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_text1[this])
	set s__AbilityIcon_tooltip_stat_bonus_text1[this]=null
	call BlzDestroyFrame(s__AbilityIcon_tooltip_stat_bonus_text2[this])
	set s__AbilityIcon_tooltip_stat_bonus_text2[this]=null
	call BlzDestroyFrame(s__AbilityIcon_unique[this])
	set s__AbilityIcon_unique[this]=null
			call TriggerRemoveCondition(s__AbilityIcon_btn_trigger[this], s__AbilityIcon_btn_cond[this])
			call s__Trigger_remove(s__AbilityIcon_btn_trigger[this])
			set s__AbilityIcon_btn_trigger[this]=null
			set s__AbilityIcon_btn_cond[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Ability0015__ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=s__Ability_prototype_cast_range[s__AbilityIndicator_abil[this]]
				set s__LineIndicator_width[this]=Ability0015__COLRAD
   return true
endfunction
function sa__StatIcon_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__StatIcon_backdrop[this])
	set s__StatIcon_backdrop[this]=null
	call BlzDestroyFrame(s__StatIcon_mouseover[this])
	set s__StatIcon_mouseover[this]=null
	call BlzDestroyFrame(s__StatIcon_text[this])
	set s__StatIcon_text[this]=null
	call BlzDestroyFrame(s__StatIcon_tooltip_container[this])
	set s__StatIcon_tooltip_container[this]=null
	call BlzDestroyFrame(s__StatIcon_tooltip_backdrop[this])
	set s__StatIcon_tooltip_backdrop[this]=null
	call BlzDestroyFrame(s__StatIcon_tooltip_text[this])
	set s__StatIcon_tooltip_text[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Ability0015__exp_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				call s__Explosion_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0015__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
   return true
endfunction
function sa__Closeable_close takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= true
   return true
endfunction
function sa__UI_onDestroy takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
   local integer ii= 0
			loop
				exitwhen i >= 10
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_ABILITY_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_ABILITY_ICON + i)
				set i=i + 1
			endloop
			set i=0
			loop
				exitwhen i >= 16
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_STAT_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_STAT_ICON + i)
				set i=i + 1
			endloop
			if s__UI_chingho[this] > 0 then
				call s__ChinghoFrame_deallocate(s__UI_chingho[this])
			endif
			set i=0
			loop
				exitwhen i >= 8
				set ii=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_BUFF_ICON + i))) // INLINED!!
				call sc__IconFrame_deallocate(ii)
				call RemoveSavedInteger(s__UI_HASH, this, s__UI_INDEX_BUFF_ICON + i)
				set i=i + 1
			endloop
	call BlzDestroyFrame(s__UI_container[this])
	set s__UI_container[this]=null
	call BlzDestroyFrame(s__UI_hp_fill[this])
	set s__UI_hp_fill[this]=null
	call BlzDestroyFrame(s__UI_hp_text[this])
	set s__UI_hp_text[this]=null
	call BlzDestroyFrame(s__UI_hp_icon[this])
	set s__UI_hp_icon[this]=null
	call BlzDestroyFrame(s__UI_mp_fill[this])
	set s__UI_mp_fill[this]=null
	call BlzDestroyFrame(s__UI_mp_text[this])
	set s__UI_mp_text[this]=null
	call BlzDestroyFrame(s__UI_mp_icon[this])
	set s__UI_mp_icon[this]=null
	call BlzDestroyFrame(s__UI_level_backdrop[this])
	set s__UI_level_backdrop[this]=null
	call BlzDestroyFrame(s__UI_level_text[this])
	set s__UI_level_text[this]=null
	call BlzDestroyFrame(s__UI_exp_fill[this])
	set s__UI_exp_fill[this]=null
	call BlzDestroyFrame(s__UI_exp_text[this])
	set s__UI_exp_text[this]=null
	call BlzDestroyFrame(s__UI_name[this])
	set s__UI_name[this]=null
	call BlzDestroyFrame(s__UI_ability_error[this])
	set s__UI_ability_error[this]=null
			call sc__Timer_release(s__UI_main_timer[this])
			set s__UI_main_timer[this]=null
   return true
endfunction
function sa__Ability_prototype_addValue takes nothing returns boolean
local integer this=f__arg_this
local integer v=f__arg_integer1
			set s__Ability_prototype_value[this]=s__Ability_prototype_value[this] + v
   return true
endfunction
function sa__Ability_prototype_addLevel takes nothing returns boolean
local integer this=f__arg_this
local integer v=f__arg_integer1
			set s__Ability_prototype_level[this]=s__Ability_prototype_level[this] + v
   return true
endfunction
function sa__Ability_prototype_addCount takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_count[this]=s__Ability_prototype_count[this] + 1
   return true
endfunction
function sa__Ability_prototype_useCount takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_count[this]=s__Ability_prototype_count[this] - 1
   return true
endfunction
function sa__Ability_prototype_getCarculatedManacost takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= I2R(s__Ability_prototype_manacost[this])
   return true
endfunction
function sa__Ability_prototype_getMaxCooldown takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Ability_prototype_getMaxCooldownBySpellBoost(this)
   return true
endfunction
function sa__Ability_prototype_getCarculatedMaxCooldown takes nothing returns boolean
local integer this=f__arg_this
   local real v= sc__Ability_prototype_getMaxCooldown(this)
			if v < s__Ability_prototype_cooldown_min[this] then
set f__result_real= s__Ability_prototype_cooldown_min[this]
return true
			else
set f__result_real= v
return true
			endif
   return true
endfunction
function sa__Ability_prototype_iconClick takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "MissingTooltip"
   return true
endfunction
function sa__Ability_prototype_onUnlink takes nothing returns boolean
local integer this=f__arg_this
			call sc__Ability_prototype_setPressState(this,false)
   return true
endfunction
function sa__Ability_prototype_basicAttack takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
   return true
endfunction
function sa__Ability_prototype_execute takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_cancleFollow takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_is_following[this]=false
			call PauseTimer((s__Ability_prototype_command_timer[this])) // INLINED!!
   return true
endfunction
function sa__Ability_prototype_cancleReservation takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_is_reserving[this]=false
			call PauseTimer((s__Ability_prototype_command_timer[this])) // INLINED!!
   return true
endfunction
function sa__Ability_prototype_targetFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Ability_prototype_useFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= true
   return true
endfunction
function sa__Ability_prototype_useRequest takes nothing returns boolean
    set f__result_boolean=s__Ability_prototype_useRequest(f__arg_this,f__arg_real1,f__arg_real2,f__arg_unit1,f__arg_boolean1)
   return true
endfunction
function sa__Ability_prototype_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_pressRequest takes nothing returns boolean
local integer this=f__arg_this
   local real mx= 0.
   local real my= 0.
			if not s__Ability_prototype_is_target[this] and not s__Ability_prototype_is_freetarget[this] then
				call s__Unit_prototype_cancleAbilityReservation(s__Ability_prototype_owner[this])
				call s__Unit_prototype_cancleAbilityFollow(s__Ability_prototype_owner[this])
				if s__Ability_prototype_drag_to_use[this] then
					set mx=s__Ability_prototype_command_x[this]
					set my=s__Ability_prototype_command_y[this]
				else
					if s__Ability_prototype_is_ai[this] then
						set mx=s__Ability_prototype_ai_mouse_x[this]
						set my=s__Ability_prototype_ai_mouse_y[this]
					else
						set mx=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
						set my=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					endif
				endif
				if not s__Ability_prototype_useRequest(this,mx , my , null , true) then
					call s__Ability_prototype_sendError(this)
set f__result_boolean= false
return true
				else
set f__result_boolean= true
return true
				endif
			else
				if s__Ability_prototype_is_ai[this] then
					if s__Ability_prototype_ai_target[this] != null then
set f__result_boolean= s__Ability_prototype_useRequest(this,s__Ability_prototype_ai_mouse_x[this] , s__Ability_prototype_ai_mouse_y[this] , s__Ability_prototype_ai_target[this] , true)
return true
					else
set f__result_boolean= false
return true
					endif
				else
					call sc__Ability_prototype_sendSyncTarget(this)
set f__result_boolean= true
return true
				endif
			endif
   return true
endfunction
function sa__Ability_prototype_setPressState takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
			if s__Ability_prototype_indicator[this] > 0 then
				call sc__AbilityIndicator_show(s__Ability_prototype_indicator[this],flag)
				call s__AbilityIndicator_showEssencial(s__Ability_prototype_indicator[this],flag)
				if flag then
					call sc__AbilityIndicator_refresh(s__Ability_prototype_indicator[this])
					call s__AbilityIndicator_refreshEssencial(s__Ability_prototype_indicator[this])
					call TimerStart((s__Ability_prototype_indicator_timer[this] ), (( 0.025 )*1.0), ( true ), ( function s__Ability_prototype_refreshIndicatorTimer)) // INLINED!!
				else
					call PauseTimer((s__Ability_prototype_indicator_timer[this])) // INLINED!!
				endif
			endif
			set s__Ability_prototype_pressing[this]=flag
   return true
endfunction
function sa__Ability_prototype_onRelease takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_beforeRelease takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_onKeyboard takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_onPress takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_beforePress takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_getAttackSpeedValue takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
set f__result_real= v
   return true
endfunction
function sa__Ability_prototype_leftClick takes nothing returns boolean
local integer this=f__arg_this
			call s__Ability_prototype_release(this)
   return true
endfunction
function sa__Ability_prototype_onRightClick takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_onStop takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_stopButton takes nothing returns boolean
local integer this=f__arg_this
			call s__Ability_prototype_cancleFollow(this)
			call s__Ability_prototype_cancleReservation(this)
			call sc__Ability_prototype_onStop(this)
   return true
endfunction
function sa__Ability_prototype_essentialInit takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_cooldown_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_command_trigger[this]=s__Trigger_new(this)
			set s__Ability_prototype_command_condition[this]=TriggerAddCondition(s__Ability_prototype_command_trigger[this], Condition(function s__Ability_prototype_commandAction))
			set s__Ability_prototype_command_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_decay_timer[this]=sc__Timer_new(this)
			set s__Ability_prototype_indicator_timer[this]=sc__Timer_new(this)
			call BlzTriggerRegisterPlayerKeyEvent(s__Ability_prototype_command_trigger[this], (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))), OSKEY_S, 0, true) // INLINED!!
			call TriggerRegisterPlayerEvent(s__Ability_prototype_command_trigger[this], (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))), EVENT_PLAYER_MOUSE_DOWN) // INLINED!!
   return true
endfunction
function sa__Ability_prototype_create takes nothing returns boolean

   local integer this= s__Ability_prototype__allocate()
set f__result_integer= this
   return true
endfunction
function sa__Ability_prototype_onDeath takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_prototype_kill takes nothing returns boolean
local integer this=f__arg_this
			if not s__Ability_prototype_dead[this] then
				if s__Unit_prototype_weapon_ability[s__Ability_prototype_owner[this]] == this then
					call s__Unit_prototype_setWeaponAbility(s__Ability_prototype_owner[this],0)
				endif
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
				endif
				set s__Ability_prototype_link_actor[this]=0
				call sc__Ability_prototype_onDeath(this)
				call sc__Timer_release(s__Ability_prototype_cooldown_timer[this])
				set s__Ability_prototype_cooldown_timer[this]=null
				call TriggerRemoveCondition(s__Ability_prototype_command_trigger[this], s__Ability_prototype_command_condition[this])
				call s__Trigger_remove(s__Ability_prototype_command_trigger[this])
				set s__Ability_prototype_command_trigger[this]=null
				set s__Ability_prototype_command_condition[this]=null
				call sc__Timer_release(s__Ability_prototype_command_timer[this])
				set s__Ability_prototype_command_timer[this]=null
				set s__Ability_prototype_command_target[this]=null
				call sc__Timer_release(s__Ability_prototype_indicator_timer[this])
				set s__Ability_prototype_indicator_timer[this]=null
				set s__Ability_prototype_ai_target[this]=null
				if s__Ability_prototype_indicator[this] > 0 then
					call sc__AbilityIndicator_deallocate(s__Ability_prototype_indicator[this])
					set s__Ability_prototype_indicator[this]=0
				endif
				call TimerStart((s__Ability_prototype_decay_timer[this] ), (( 1.25 )*1.0), ( false ), ( function s__Ability_prototype_decay)) // INLINED!!
			endif
			set s__Ability_prototype_dead[this]=true
   return true
endfunction
function sa__Ability_prototype_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Timer_release(s__Ability_prototype_decay_timer[this])
			set s__Ability_prototype_decay_timer[this]=null
   return true
endfunction
function sa__Ability_prototype_new takes nothing returns boolean
local integer aid=f__arg_integer1
			set ABILITY_LAST_CREATED=- 1
			set ABILITY_CREATE_ID=aid
			call TriggerEvaluate(ABILITY_CREATE_TRIGGER)
set f__result_integer= ABILITY_LAST_CREATED
   return true
endfunction
function sa__Ability_prototype_sendSyncTarget takes nothing returns boolean
local integer this=f__arg_this
			if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
				call BlzSendSyncData("SA", I2S(this) + "#" + I2S(GetHandleId(BlzGetMouseFocusUnit())))
			endif
   return true
endfunction
function sa__Actor__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Actor_x_true[this]
   return true
endfunction
function sa__Actor__set_x takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Actor_x_true[this]=nv
   return true
endfunction
function sa__Actor__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Actor_y_true[this]
   return true
endfunction
function sa__Actor__set_y takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Actor_y_true[this]=nv
   return true
endfunction
function sa__Actor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Actor_suspendFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= false
   return true
endfunction
function sa__Actor_killFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= true
   return true
endfunction
function sa__Actor_create takes nothing returns boolean
local integer actor=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real duration=f__arg_real3
   local integer this= s__Actor__allocate()
			set s__Actor_actor[this]=actor
			call sc__Actor__set_x(this,x)
			call sc__Actor__set_y(this,y)
			set s__Actor_duration[this]=duration
			set s__Actor_duration_max[this]=duration
			set s__Actor_main_timer[this]=sc__Timer_new(this)
			call TimerStart((s__Actor_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Actor_timerAction)) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Timer_release(s__Actor_main_timer[this])
			set s__Actor_main_timer[this]=null
			if s__Actor_progress_bar[this] != 0 then
				call s__ProgressBar_deallocate(s__Actor_progress_bar[this])
			endif
   return true
endfunction
function sa__CloseUI_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call TriggerRemoveCondition(s__CloseUI_esc_trigger[this], s__CloseUI_esc_cond[this])
			call s__Trigger_remove(s__CloseUI_esc_trigger[this])
			set s__CloseUI_esc_trigger[this]=null
			set s__CloseUI_esc_cond[this]=null
			set s__CloseUI_owner[this]=null
   return true
endfunction
function sa__Ability0013__exp_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
    local integer ef= 0
				if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Explosion_group_wave[this]) then // INLINED!!
					set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability0013__exp_level[this] - 1 ) ) // INLINED!!
				else
					set s__Explosion_damage[this]=( (s__Unit_prototype_getCarculatedStatValue((s__Explosion_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability0013__exp_level[this] - 1 ) ) // INLINED!!
				endif
				call s__Explosion_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0013__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest"),1.5) // INLINED!!
				set ef=s__Effect_create(Ability0013__EFFECT_PATH3 , sc__Object__get_x(target) + GetRandomReal(- 25, 25) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] + GetRandomReal(- 25, 25) , 270.)
				call s__Effect_setRoll(ef,GetRandomReal(0., 360.))
				call s__Effect_setMatrixScale(ef,1.25 , 1.25 , 2.)
				call s__Effect_setAlpha(ef,192)
				call s__Effect_setDuration(ef,1.0)
   return true
endfunction
function sa__Ability0013__exp_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
				set s__Explosion_x[this]=sc__Object__get_x(s__Explosion_owner[this])
				set s__Explosion_y[this]=sc__Object__get_y(s__Explosion_owner[this])
   return true
endfunction
function sa__Curve_getCarculatedX takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
set f__result_real= s__Object_x_true[this]
   return true
endfunction
function sa__Curve_getCarculatedY takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
set f__result_real= s__Object_y_true[this]
   return true
endfunction
function sa__Curve_getCarculatedZ takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
set f__result_real= s__Object_z_true[this]
   return true
endfunction
function sa__Curve__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Curve_getCarculatedX(this,s__Curve_value[this])
   return true
endfunction
function sa__Curve__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Curve_getCarculatedY(this,s__Curve_value[this])
   return true
endfunction
function sa__Curve__get_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Curve_getCarculatedZ(this,s__Curve_value[this])
   return true
endfunction
function sa__Curve_create takes nothing returns boolean
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
   local integer this= s__Curve__allocate()
			call s__Curve_setX(this,0 , x)
			call s__Curve_setY(this,0 , y)
			call s__Curve_setZ(this,0 , z)
set f__result_integer= this
   return true
endfunction
function sa__Curve_onDestroy takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
			loop
				exitwhen i > s__Curve_index_max[this]
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_X)
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_Y)
				call RemoveSavedReal(Curve__HASH, this, ( INDEX_POSITION_SIZE * i ) + INDEX_POSITION_Z)
				set i=i + 1
			endloop
    set f__arg_this=this
   return true
endfunction
function sa__Ability0010__ind_refresh takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_setPosition(s__Ability0010__ind_c[this],(s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))]) , 2.) // INLINED!!
   return true
endfunction
function sa__Ability0010__ind_show takes nothing returns boolean
local integer this=f__arg_this
local boolean flag=f__arg_boolean1
				if flag then
					if GetLocalPlayer() == s__AbilityIndicator_owner[this] then
						call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0010__ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (192)) // INLINED!!
					endif
				else
					call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability0010__ind_c[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), (0)) // INLINED!!
				endif
   return true
endfunction
function sa__Ability0010__ind_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call sc__Object_deallocate(s__Ability0010__ind_c[this])
    set f__arg_this=this
   return true
endfunction
function sa__Bezier_create takes nothing returns boolean
local real x1=f__arg_real1
local real y1=f__arg_real2
local real z1=f__arg_real3
local real x2=f__arg_real4
local real y2=f__arg_real5
local real z2=f__arg_real6
   local integer this= s__Bezier__allocate(x1 , y1 , z1)
			call s__Curve_setX(this,INDEX_POINT_LAST , x2)
			call s__Curve_setY(this,INDEX_POINT_LAST , y2)
			call s__Curve_setZ(this,INDEX_POINT_LAST , z2)
set f__result_integer= this
   return true
endfunction
function sa__Bezier2_getCarculatedX takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real x1= s__Curve_getX(this,INDEX_POINT_ORIGIN) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) * v
   local real x2= s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) ) * v
set f__result_real= x1 + ( x2 - x1 ) * v + sc__Object__get_offset_x(this)
   return true
endfunction
function sa__Bezier2_getCarculatedY takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real y1= s__Curve_getY(this,INDEX_POINT_ORIGIN) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getY(this,INDEX_POINT_ORIGIN) ) * v
   local real y2= s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) ) * v
set f__result_real= y1 + ( y2 - y1 ) * v + sc__Object__get_offset_y(this)
   return true
endfunction
function sa__Bezier2_getCarculatedZ takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real z1= s__Curve_getZ(this,INDEX_POINT_ORIGIN) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getZ(this,INDEX_POINT_ORIGIN) ) * v
   local real z2= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getZ(this,INDEX_POINT_LAST) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) ) * v
set f__result_real= z1 + ( z2 - z1 ) * v + sc__Object__get_offset_z(this)
   return true
endfunction
function sa__Bezier3_getCarculatedX takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real hx1= s__Curve_getX(this,INDEX_POINT_ORIGIN) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getX(this,INDEX_POINT_ORIGIN) ) * v
   local real hx2= s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hx3= s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getX(this,INDEX_POINT_LAST) - s__Curve_getX(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real x1= hx1 + ( hx2 - hx1 ) * v
   local real x2= hx2 + ( hx3 - hx2 ) * v
set f__result_real= x1 + ( x2 - x1 ) * v + sc__Object__get_offset_x(this)
   return true
endfunction
function sa__Bezier3_getCarculatedY takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real hy1= s__Curve_getY(this,INDEX_POINT_ORIGIN) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getY(this,INDEX_POINT_ORIGIN) ) * v
   local real hy2= s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hy3= s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getY(this,INDEX_POINT_LAST) - s__Curve_getY(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real y1= hy1 + ( hy2 - hy1 ) * v
   local real y2= hy2 + ( hy3 - hy2 ) * v
set f__result_real= y1 + ( y2 - y1 ) * v + sc__Object__get_offset_y(this)
   return true
endfunction
function sa__Bezier3_getCarculatedZ takes nothing returns boolean
local integer this=f__arg_this
local real v=f__arg_real1
   local real hz1= s__Curve_getZ(this,INDEX_POINT_ORIGIN) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) - s__Curve_getZ(this,INDEX_POINT_ORIGIN) ) * v
   local real hz2= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) + ( s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 0) ) * v
   local real hz3= s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) + ( s__Curve_getZ(this,INDEX_POINT_LAST) - s__Curve_getZ(this,INDEX_POINT_MIDDLE + 1) ) * v
   local real z1= hz1 + ( hz2 - hz1 ) * v
   local real z2= hz2 + ( hz3 - hz2 ) * v
set f__result_real= z1 + ( z2 - z1 ) * v + sc__Object__get_offset_z(this)
   return true
endfunction
function sa__Group_new takes nothing returns boolean

			set Group__RETURNGROUP=null
			set Group__RETURNGROUP=NewGroup()
set f__result_group= Group__RETURNGROUP
   return true
endfunction
function sa__Group_release takes nothing returns boolean
    call ReleaseGroup((f__arg_group1)) // INLINED!!
   return true
endfunction
function sa__Group_clear takes nothing returns boolean
    call GroupClear((f__arg_group1)) // INLINED!!
   return true
endfunction
function sa__Group_getNearest takes nothing returns boolean
    set f__result_unit=s__Group_getNearest(f__arg_group1,f__arg_real1,f__arg_real2,f__arg_unit1)
   return true
endfunction
function sa__Lightning_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer(s__Lightning_t[this])
			call DestroyLightning(s__Lightning_l[this])
			set s__Lightning_t[this]=null
			set s__Lightning_l[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Buffu001_main_addValue takes nothing returns boolean
local integer this=f__arg_this
			set s__Buffu001_main_val[this]=s__Buffu001_main_val[this] + s__Buffu001_main_SLOW
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , s__Buffu001_main_SLOW)
   return true
endfunction
function sa__Buffu001_main_update takes nothing returns boolean
local integer this=f__arg_this
			call s__Buffu001_main_addValue(this)
   return true
endfunction
function sa__Buffu001_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Buffu001_main_addValue(this)
			call s__Buff_addEffect(this,s__Effect_createAttatched(s__Buffu001_main_EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest")) // INLINED!!
   return true
endfunction
function sa__Buffu001_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_minusStatValue(s__Buff_target[this],STAT_TYPE_MOVEMENT_SPEED , - s__Buffu001_main_val[this])
    set f__arg_this=this
   return true
endfunction
function sa__Line__Line_setColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
set f__result_integer= this
   return true
endfunction
function sa__Line__Line_setLocalColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
   return true
endfunction
function sa__Line__Line_refreshPosition takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Line__Line_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Line__Line_create takes nothing returns boolean

  local integer this= s__Line__Line__allocate()
		set s__Line__Line_t[this]=sc__Timer_new(this)
		set s__Line__Line_pointtimer[this]=sc__Timer_new(this)
		call TimerStart((s__Line__Line_t[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Line__Line_tA)) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Line__Line_onDestroy takes nothing returns boolean
local integer this=f__arg_this
		call ReleaseTimer(s__Line__Line_t[this])
		set s__Line__Line_t[this]=null
		call ReleaseTimer(s__Line__Line_pointtimer[this])
		set s__Line__Line_pointtimer[this]=null
		set s__Line__Line_visible_player[this]=null
   return true
endfunction
function sa__Square_setLocalColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (2))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (3))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
   return true
endfunction
function sa__Square_setColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__Square_setLocalColor(this,r , g , b , a)
set f__result_integer= this
   return true
endfunction
function sa__Square_refreshPosition takes nothing returns boolean
local integer this=f__arg_this
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), false, 0., 0., 0., 0., 0., 0.) // INLINED!!
		endif
   return true
endfunction
function sa__Square_onDestroy takes nothing returns boolean
local integer this=f__arg_this
  local integer i= 0
		loop
			exitwhen i >= 4
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
    set f__arg_this=this
   return true
endfunction
function sa__DoubleLine_setLocalColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
   return true
endfunction
function sa__DoubleLine_setColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__DoubleLine_setLocalColor(this,r , g , b , a)
set f__result_integer= this
   return true
endfunction
function sa__DoubleLine_refreshPosition takes nothing returns boolean
local integer this=f__arg_this
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
		endif
   return true
endfunction
function sa__DoubleLine_onDestroy takes nothing returns boolean
local integer this=f__arg_this
  local integer i= 0
		loop
			exitwhen i >= 2
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
    set f__arg_this=this
   return true
endfunction
function sa__Ability0007__ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0007__RANGE_MAX
				set s__LineIndicator_width[this]=Ability0007__EXPRAD
   return true
endfunction
function sa__Ability0007__exp_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
    local integer ef= s__Effect_create(Ability0007__EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270.)
				call s__Effect_setScale(ef,2.)
				call s__Effect_setRoll(ef,45.)
				call s__Effect_setColor(ef,255 , 0 , 255)
				call s__Effect_setDuration(ef,1.0)
				set ef=s__Effect_setDuration(s__Effect_createAttatched(Ability0007__EFFECT_PATH3 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest"),1.5) // INLINED!!
				call s__Explosion_damageTarget(this,target)
				if not s__Ability0007__exp_b[this] then
					call s__Unit_prototype_restoreMP(s__Explosion_owner[this],Ability0007__MANA_RESTORE)
					set s__Ability0007__exp_b[this]=true
				endif
   return true
endfunction
function sa__Arrow_refreshPosition takes nothing returns boolean
local integer this=f__arg_this
		if s__Line__Line_visible_player[this] == null or GetLocalPlayer() == s__Line__Line_visible_player[this] then
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), true, (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.25 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (4))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] + 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (5))), true, ((((((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Cos((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), ((((((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_length[this] * 0.75 )*1.0) * Sin((( s__Line__Line_angle[this])*1.0) * bj_DEGTORAD)) )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this], (((s__Line__Line_x[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Cos((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), (((s__Line__Line_y[this] )*1.0) + (( s__Line__Line_width[this] )*1.0) * Sin((( s__Line__Line_angle[this] - 90)*1.0) * bj_DEGTORAD)), s__Line__Line_z[this]) // INLINED!!
		else
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (0))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (1))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (2))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (3))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (4))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
			call MoveLightningEx((LoadLightningHandle(Line__HASH, (this), (5))), false, 0, 0, 0, 0, 0, 0) // INLINED!!
		endif
   return true
endfunction
function sa__Arrow_setLocalColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (0))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (1))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (2))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (3))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (4))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
		call SetLightningColor((LoadLightningHandle(Line__HASH, (this), (5))), r, g, b, a * s__Line__Line_alpha_max[this]) // INLINED!!
   return true
endfunction
function sa__Arrow_setColor takes nothing returns boolean
local integer this=f__arg_this
local real r=f__arg_real1
local real g=f__arg_real2
local real b=f__arg_real3
local real a=f__arg_real4
		set s__Line__Line_r[this]=r
		set s__Line__Line_g[this]=g
		set s__Line__Line_b[this]=b
		set s__Line__Line_a[this]=a
		call s__Arrow_setLocalColor(this,r , g , b , a)
set f__result_integer= this
   return true
endfunction
function sa__Arrow_onDestroy takes nothing returns boolean
local integer this=f__arg_this
  local integer i= 0
		loop
			exitwhen i >= 6
			call DestroyLightning((LoadLightningHandle(Line__HASH, (this), (i)))) // INLINED!!
			call RemoveSavedHandle(Line__HASH, this, i)
			set i=i + 1
		endloop
    set f__arg_this=this
   return true
endfunction
function sa__SkillShopWidget_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__SkillShopWidget_container[this])
	set s__SkillShopWidget_container[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_icon[this])
	set s__SkillShopWidget_icon[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_name[this])
	set s__SkillShopWidget_name[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_tag[this])
	set s__SkillShopWidget_tag[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_btn[this])
	set s__SkillShopWidget_btn[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_bonus_stat1[this])
	set s__SkillShopWidget_bonus_stat1[this]=null
	call BlzDestroyFrame(s__SkillShopWidget_bonus_stat2[this])
	set s__SkillShopWidget_bonus_stat2[this]=null
			call TriggerRemoveCondition(s__SkillShopWidget_btn_trigger[this], s__SkillShopWidget_btn_cond[this])
			call s__Trigger_remove(s__SkillShopWidget_btn_trigger[this])
			set s__SkillShopWidget_btn_trigger[this]=null
			set s__SkillShopWidget_btn_cond[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__SkillShop_addLevel takes nothing returns boolean

   local integer i= 0
			loop
				exitwhen i >= PLAYER_MAX
				if s__SkillShop_THIS[i] > 0 then
					call s__SkillShop_addExp(s__SkillShop_THIS[i],2)
				endif
				set i=i + 1
			endloop
   return true
endfunction
function sa__SkillShop_close takes nothing returns boolean
local integer this=f__arg_this
			if s__SkillShop_visible_flag[this] then
				call s__SkillShop_visibleForPlayer(this,false)
set f__result_boolean= true
return true
			else
set f__result_boolean= false
return true
			endif
   return true
endfunction
function sa__SkillShop_onDestroy takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
   local integer ia= 0
			loop
				exitwhen i >= 5
				set ia=(LoadInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SKILL_SHOP_WIDGET + i))) // INLINED!!
				call sc__IconFrame_deallocate(ia)
				set i=i + 1
			endloop
	call BlzDestroyFrame(s__SkillShop_container[this])
	set s__SkillShop_container[this]=null
	call BlzDestroyFrame(s__SkillShop_btn_autorefresh[this])
	set s__SkillShop_btn_autorefresh[this]=null
	call BlzDestroyFrame(s__SkillShop_btn_refresh[this])
	set s__SkillShop_btn_refresh[this]=null
	call BlzDestroyFrame(s__SkillShop_btn_donate[this])
	set s__SkillShop_btn_donate[this]=null
	call BlzDestroyFrame(s__SkillShop_exp_outline[this])
	set s__SkillShop_exp_outline[this]=null
	call BlzDestroyFrame(s__SkillShop_exp_backdrop[this])
	set s__SkillShop_exp_backdrop[this]=null
	call BlzDestroyFrame(s__SkillShop_exp_fill[this])
	set s__SkillShop_exp_fill[this]=null
	call BlzDestroyFrame(s__SkillShop_exp_text[this])
	set s__SkillShop_exp_text[this]=null
	call BlzDestroyFrame(s__SkillShop_level_backdrop[this])
	set s__SkillShop_level_backdrop[this]=null
	call BlzDestroyFrame(s__SkillShop_level_text[this])
	set s__SkillShop_level_text[this]=null
	call BlzDestroyFrame(s__SkillShop_autorefresh_text_backdrop[this])
	set s__SkillShop_autorefresh_text_backdrop[this]=null
	call BlzDestroyFrame(s__SkillShop_autorefresh_text[this])
	set s__SkillShop_autorefresh_text[this]=null
	call BlzDestroyFrame(s__SkillShop_gold_backdrop[this])
	set s__SkillShop_gold_backdrop[this]=null
	call BlzDestroyFrame(s__SkillShop_gold_icon[this])
	set s__SkillShop_gold_icon[this]=null
	call BlzDestroyFrame(s__SkillShop_gold_text[this])
	set s__SkillShop_gold_text[this]=null
	call BlzDestroyFrame(s__SkillShop_chance_backdrop[this])
	set s__SkillShop_chance_backdrop[this]=null
	call BlzDestroyFrame(s__SkillShop_chance_text[this])
	set s__SkillShop_chance_text[this]=null
			call TriggerRemoveCondition(s__SkillShop_keypress[this], s__SkillShop_keypress_cond[this])
			call s__Trigger_remove(s__SkillShop_keypress[this])
			set s__SkillShop_keypress[this]=null
			set s__SkillShop_keypress_cond[this]=null
			set s__SkillShop_owner[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__SkillShop_getTierChance takes nothing returns boolean
local integer level=f__arg_integer1
local integer tier=f__arg_integer2
   local integer i= level
			if i > CHANCE_LEVEL_MAX then
				set i=CHANCE_LEVEL_MAX
			endif
			if tier == 1 then
set f__result_integer= CHANCE_TIER1[i]
return true
			elseif tier == 2 then
set f__result_integer= CHANCE_TIER2[i]
return true
			elseif tier == 3 then
set f__result_integer= CHANCE_TIER3[i]
return true
			elseif tier == 4 then
set f__result_integer= CHANCE_TIER4[i]
return true
			elseif tier == 5 then
set f__result_integer= CHANCE_TIER5[i]
return true
			endif
set f__result_integer= 0
   return true
endfunction
function sa__SlotChanger_stateDefault takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
			set s__SlotChanger_state[this]=0
			set s__SlotChanger_first_index[this]=- 1
			loop
				exitwhen i >= 10
				call SaveInteger(s__UI_HASH, (this ), ( s__UI_INDEX_SLOT_CHANGER_INDEX + i ), ( i)) // INLINED!!
				set i=i + 1
			endloop
			call s__SlotChanger_refresh(this)
   return true
endfunction
function sa__SlotChanger_close takes nothing returns boolean
local integer this=f__arg_this
			if s__SlotChanger_visible_flag[this] then
				call s__SlotChanger_visibleForPlayer(this,false)
set f__result_boolean= true
return true
			else
set f__result_boolean= false
return true
			endif
   return true
endfunction
function sa__SlotChanger_onDestroy takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
			loop
				exitwhen i >= 10
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_ICON + i))
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_BUTTON + i))
				call BlzDestroyFrame(LoadFrameHandle(s__UI_HASH, this, s__UI_INDEX_SLOT_CHANGER_HOTKEY + i))
				set i=i + 1
			endloop
	call BlzDestroyFrame(s__SlotChanger_container[this])
	set s__SlotChanger_container[this]=null
	call BlzDestroyFrame(s__SlotChanger_confirm_button[this])
	set s__SlotChanger_confirm_button[this]=null
			call TriggerRemoveCondition(s__SlotChanger_keypress[this], s__SlotChanger_keypress_cond[this])
			call s__Trigger_remove(s__SlotChanger_keypress[this])
			set s__SlotChanger_keypress[this]=null
			set s__SlotChanger_keypress_cond[this]=null
			set s__SlotChanger_owner[this]=null
   return true
endfunction
function sa__InstantText_setColor takes nothing returns boolean
local integer r=f__arg_integer1
local integer g=f__arg_integer2
local integer b=f__arg_integer3
			set s__InstantText_R=r
			set s__InstantText_G=g
			set s__InstantText_B=b
   return true
endfunction
function sa__InstantText_createForBothPlayer takes nothing returns boolean
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
local string val=f__arg_string1
local player forplayer=f__arg_player1
local player forplayer2=f__arg_player2
			set bj_lastCreatedTextTag=CreateTextTag()
			call SetTextTagText(bj_lastCreatedTextTag, val, TextTagSize2Height(s__InstantText_SIZE))
			call SetTextTagPos(bj_lastCreatedTextTag, x - ( StringLength(val) * s__InstantText_SIZE ), y, z)
			call SetTextTagColor(bj_lastCreatedTextTag, s__InstantText_R, s__InstantText_G, s__InstantText_B, 255)
			call SetTextTagPermanent(bj_lastCreatedTextTag, false)
			call SetTextTagVelocity(bj_lastCreatedTextTag, 0, 0.04)
			call SetTextTagFadepoint(bj_lastCreatedTextTag, 0)
			call SetTextTagLifespan(bj_lastCreatedTextTag, 1.5)
			call SetTextTagVisibility(bj_lastCreatedTextTag, GetLocalPlayer() == forplayer or GetLocalPlayer() == forplayer2)
			call s__InstantText_clearFlag()
   return true
endfunction
function sa__Timer_getData takes nothing returns boolean
    set f__result_integer=(sg__TimerUtils__Data_get(GetHandleId(((f__arg_timer1))) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
   return true
endfunction
function sa__Timer_getDataEx takes nothing returns boolean

set f__result_integer= (sg__TimerUtils__Data_get(GetHandleId((GetExpiredTimer())) * HASH_UP / HASH_DOWN + HASH_BIAS)) // INLINED!!
   return true
endfunction
function sa__Timer_pause takes nothing returns boolean
    call PauseTimer((f__arg_timer1)) // INLINED!!
   return true
endfunction
function sa__Timer_start takes nothing returns boolean
    call TimerStart((f__arg_timer1), ((f__arg_real1)*1.0), (f__arg_boolean1), (f__arg_code1)) // INLINED!!
   return true
endfunction
function sa__Timer_release takes nothing returns boolean
    call ReleaseTimer((f__arg_timer1)) // INLINED!!
   return true
endfunction
function sa__Timer_new takes nothing returns boolean
local integer data=f__arg_integer1
			set Timer__NEWTIMER=null
			set Timer__NEWTIMER=NewTimer()
			call sg__TimerUtils__Data_set(GetHandleId((Timer__NEWTIMER )) * HASH_UP / HASH_DOWN + HASH_BIAS,( data)) // INLINED!!
set f__result_timer= Timer__NEWTIMER
   return true
endfunction
function sa__Ability0003__ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=Ability0003__RANGE
				set s__LineIndicator_width[this]=Ability0003__COLRAD
   return true
endfunction
function sa__User_oskeyIndex2String takes nothing returns boolean
local integer index=f__arg_integer1
set f__result_string= s__User_OSKEY_INDEX_TO_STRING[index]
   return true
endfunction
function sa__User_getGold takes nothing returns boolean
local player p=f__arg_player1
set f__result_integer= GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
   return true
endfunction
function sa__User_addGold takes nothing returns boolean
local player p=f__arg_player1
local integer nv=f__arg_integer1
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + nv)
		set GOLD_REFRESH_PLAYER=null
		set GOLD_REFRESH_PLAYER=p
		call TriggerEvaluate(GOLD_REFRESH_TRIGGER)
   return true
endfunction
function sa__User_getFocusUnit takes nothing returns boolean
local player p=f__arg_player1
set f__result_integer= s__User_FOCUSUNIT[GetPlayerId(p)]
   return true
endfunction
function sa__Ability_getTypeTier takes nothing returns boolean
local integer id=f__arg_integer1
set f__result_integer= LoadInteger(Ability__HASH, id, s__Ability_INDEX_TIER)
   return true
endfunction
function sa__Ability_getRandomAbility takes nothing returns boolean
local integer table_num=f__arg_integer1
   local integer i= GetRandomInt(0, s__Ability_TABLE_INDEX[table_num] - 1)
set f__result_integer= LoadInteger(Ability__HASH, table_num, i)
   return true
endfunction
function sa__Ability_getTypeTooltip takes nothing returns boolean
local integer id=f__arg_integer1
			if HaveSavedString(Ability__HASH, id, s__Ability_INDEX_TOOLTIP) then
set f__result_string= LoadStr(Ability__HASH, id, s__Ability_INDEX_TOOLTIP)
return true
			else
set f__result_string= "ToolTip Missing"
return true
			endif
   return true
endfunction
function sa__Ability_getTypeCost takes nothing returns boolean
local integer id=f__arg_integer1
set f__result_integer= LoadInteger(Ability__HASH, id, s__Ability_INDEX_COST)
   return true
endfunction
function sa__Ability_getTypeName takes nothing returns boolean
local integer id=f__arg_integer1
set f__result_string= LoadStr(Ability__HASH, id, s__Ability_INDEX_NAME)
   return true
endfunction
function sa__Ability_getTypeIconPath takes nothing returns boolean
local integer id=f__arg_integer1
set f__result_string= LoadStr(Ability__HASH, id, s__Ability_INDEX_ICON_PATH)
   return true
endfunction
function sa__Ability_getTypeBonusStatIndex takes nothing returns boolean
local integer id=f__arg_integer1
local integer slot=f__arg_integer2
set f__result_integer= LoadInteger(Ability__HASH, id, s__Ability_INDEX_BONUS_STAT + slot)
   return true
endfunction
function sa__Ability_getTypeTag takes nothing returns boolean
local integer id=f__arg_integer1
local integer index=f__arg_integer2
			if HaveSavedString(Ability__HASH, id, index) and index < s__Ability_INDEX_ICON_PATH then
set f__result_string= LoadStr(Ability__HASH, id, index)
return true
			else
set f__result_string= ""
return true
			endif
   return true
endfunction
function sa__Ability_iconClick takes nothing returns boolean
local integer this=f__arg_this
			if s__Ability_getTypeTag(s__Ability_prototype_id[this] , 0) == ABILITY_STRING_WEAPON then
				call s__Unit_prototype_setWeaponAbility(s__Ability_prototype_owner[this],this)
			endif
   return true
endfunction
function sa__Ability_addLevel takes nothing returns boolean
local integer this=f__arg_this
local integer v=f__arg_integer1
			set s__Ability_prototype_level[this]=s__Ability_prototype_level[this] + v
			call s__Ability_plusStatValue(this,v)
   return true
endfunction
function sa__Ability_deactivate takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability_onDeath takes nothing returns boolean
local integer this=f__arg_this
   local integer ui= s__UI_THIS[GetPlayerId((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)))))] // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],(LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 0))) , - s__Ability_stat_bonus1[this]) // INLINED!!
			call s__Unit_prototype_plusStatValue(s__Ability_prototype_owner[this],(LoadInteger(Ability__HASH, (s__Ability_prototype_id[this] ), s__Ability_INDEX_BONUS_STAT + ( 1))) , - s__Ability_stat_bonus2[this]) // INLINED!!
			call sc__Ability_deactivate(this)
			if ui > 0 then
				call s__UI_refreshAbilityIconsTarget(ui)
			endif
   return true
endfunction
function sa__ChinghoWidget_onDestroy takes nothing returns boolean
local integer this=f__arg_this
		call TriggerRemoveCondition(s__ChinghoWidget_main_trigger[this], s__ChinghoWidget_main_cond[this])
		call s__Trigger_remove(s__ChinghoWidget_main_trigger[this])
		set s__ChinghoWidget_main_trigger[this]=null
		set s__ChinghoWidget_main_cond[this]=null
	call BlzDestroyFrame(s__ChinghoWidget_btn[this])
	set s__ChinghoWidget_btn[this]=null
   return true
endfunction
function sa__Ability0001_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "직선 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0001__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0001__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다." // INLINED!!
   return true
endfunction
function sa__Ability0001_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0001_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_command_x2[this] , s__Ability_prototype_command_y2[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0001_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=27
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0001__RANGE
				set s__Ability_prototype_cooldown_max[this]=6.7
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_drag_to_use[this]=true
				set s__Ability_prototype_indicator[this]=s__Ability0001__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0001__ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__Ability_prototype_command_x_temp[s__AbilityIndicator_abil[this]] , s__Ability_prototype_command_y_temp[s__AbilityIndicator_abil[this]] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_x[this]=(((s__Ability_prototype_command_x_temp[s__AbilityIndicator_abil[this]] )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Cos((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_y[this]=(((s__Ability_prototype_command_y_temp[s__AbilityIndicator_abil[this]] )*1.0) + (( - Ability0001__BALL_RADIUS )*1.0) * Sin((( s__LineIndicator_yaw[this])*1.0) * bj_DEGTORAD)) // INLINED!!
				set s__LineIndicator_range[this]=Ability0001__BALL_DISTANCE + Ability0001__BALL_RADIUS * 2
				set s__LineIndicator_width[this]=Ability0001__BALL_RADIUS
   return true
endfunction
function sa__CharacterWidget_onDestroy takes nothing returns boolean
local integer this=f__arg_this
		call TriggerRemoveCondition(s__CharacterWidget_main_trigger[this], s__CharacterWidget_main_cond[this])
		call s__Trigger_remove(s__CharacterWidget_main_trigger[this])
		set s__CharacterWidget_main_trigger[this]=null
		set s__CharacterWidget_main_cond[this]=null
	call BlzDestroyFrame(s__CharacterWidget_btn[this])
	set s__CharacterWidget_btn[this]=null
   return true
endfunction
function sa__CharacterInfoPanel_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__CharacterInfoPanel_container[this])
	set s__CharacterInfoPanel_container[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_character[this])
	set s__CharacterInfoPanel_character[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_a1[this])
	set s__CharacterInfoPanel_a1[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_a2[this])
	set s__CharacterInfoPanel_a2[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_a_title[this])
	set s__CharacterInfoPanel_a_title[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_name[this])
	set s__CharacterInfoPanel_name[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_tool_backdrop[this])
	set s__CharacterInfoPanel_tool_backdrop[this]=null
	call BlzDestroyFrame(s__CharacterInfoPanel_tool_text[this])
	set s__CharacterInfoPanel_tool_text[this]=null
			call s__ChinghoFrame_deallocate(s__CharacterInfoPanel_cf[this])
   return true
endfunction
function sa__Ability0001_explosion_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				set s__Explosion_damage_id[this]=Ability0001__ID
				call s__Explosion_damageTarget(this,target)
				call s__Effect_kill(s__Effect_createAttatched(Ability0001__EFFECT_PATH2 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin")) // INLINED!!
   return true
endfunction
function sa__Ability0000_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "지정한 방향으로 약진하여 충돌하는 대상과 대상 주변의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히고 밀쳐냅니다.\n가장 가까운 적은 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK_ALTERNATE ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 피해량이 대신 적용됩니다." // INLINED!!
   return true
endfunction
function sa__Ability0000_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0000_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_getCarculatedCastDelayByAttackSpeed(this) , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0000_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=8.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=0.25
				set s__Ability_prototype_indicator[this]=s__Ability0000__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0000__ind_beforeRefresh takes nothing returns boolean
local integer this=f__arg_this
				set s__LineIndicator_x[this]=sc__Object__get_x(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_y[this]=sc__Object__get_y(s__Ability_prototype_owner[s__AbilityIndicator_abil[this]])
				set s__LineIndicator_yaw[this]=s__Math_anglePoints(s__LineIndicator_x[this] , s__LineIndicator_y[this] , (s__s__Mouse_X[GetPlayerId((s__AbilityIndicator_owner[this]))]) , (s__s__Mouse_Y[GetPlayerId((s__AbilityIndicator_owner[this]))])) // INLINED!!
				set s__LineIndicator_range[this]=( Ability0000__CHARGE_SPEED * Ability0000__CHARGE_DURATION )
				set s__LineIndicator_width[this]=Ability0000__COLRAD
   return true
endfunction
function sa__CharacterSelect_finish takes nothing returns boolean

   local trigger t= CreateTrigger()
		call TriggerRemoveCondition(CharacterSelect___MAIN_TRIGGER, CharacterSelect___MAIN_COND)
		call s__Trigger_remove(CharacterSelect___MAIN_TRIGGER)
		set CharacterSelect___MAIN_TRIGGER=null
		set CharacterSelect___MAIN_COND=null
			call TriggerRegisterTimerEvent(t, 2., false)
			call TriggerAddCondition(t, Condition(function s__CharacterSelect_end))
			set CharacterSelect___FADE=BlzCreateFrameByType("SPRITE", "", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
			call BlzFrameSetModel(CharacterSelect___FADE, "ui\\characterselectfade.mdl", 0)
			call BlzFrameSetAbsPoint(CharacterSelect___FADE, FRAMEPOINT_BOTTOMLEFT, 0., 0.)
			call BlzFrameSetSize(CharacterSelect___FADE, 1., 1.)
			set t=null
   return true
endfunction
function sa__GuardianFrame_onDestroy takes nothing returns boolean
local integer this=f__arg_this
	call BlzDestroyFrame(s__GuardianFrame_container[this])
	set s__GuardianFrame_container[this]=null
	call BlzDestroyFrame(s__GuardianFrame_icon[this])
	set s__GuardianFrame_icon[this]=null
	call BlzDestroyFrame(s__GuardianFrame_gauge_backdrop[this])
	set s__GuardianFrame_gauge_backdrop[this]=null
	call BlzDestroyFrame(s__GuardianFrame_gauge_fill[this])
	set s__GuardianFrame_gauge_fill[this]=null
	call BlzDestroyFrame(s__GuardianFrame_position[this])
	set s__GuardianFrame_position[this]=null
	call BlzDestroyFrame(s__GuardianFrame_death[this])
	set s__GuardianFrame_death[this]=null
		call TriggerRemoveCondition(s__GuardianFrame_main_trigger[this], s__GuardianFrame_main_cond[this])
		call s__Trigger_remove(s__GuardianFrame_main_trigger[this])
		set s__GuardianFrame_main_trigger[this]=null
		set s__GuardianFrame_main_cond[this]=null
			set s__GuardianFrame_THIS[s__GuardianFrame_index[this]]=0
   return true
endfunction
function sa__BuffEnsn_main_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__BuffEnsn_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_plusStatus(s__Buff_target[this],STATUS_ENSNARE)
   return true
endfunction
function sa__BuffEnsn_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_minusStatus(s__Buff_target[this],STATUS_ENSNARE)
    set f__arg_this=this
   return true
endfunction
function sa__BuffStun_main_update takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__BuffStun_main_init takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_plusStatus(s__Buff_target[this],STATUS_STUN)
			set s__BuffStun_main_ef[this]=s__Effect_createAttatched("Abilities\\Spells\\Human\\Thunderclap\\ThunderclapTarget.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Buff_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "overhead") // INLINED!!
   return true
endfunction
function sa__BuffStun_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_minusStatus(s__Buff_target[this],STATUS_STUN)
			call s__Effect_kill(s__BuffStun_main_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Mouse_triggerRegisterGenericRightClick takes nothing returns boolean
    call TriggerRegisterVariableEvent((f__arg_trigger1), "udg_EVENT_VALUE", EQUAL, RIGHT_CLICK_EVENT) // INLINED!!
   return true
endfunction
function sa__Mouse_getX takes nothing returns boolean
local player p=f__arg_player1
set f__result_real= s__s__Mouse_X[GetPlayerId(p)]
   return true
endfunction
function sa__Mouse_getY takes nothing returns boolean
local player p=f__arg_player1
set f__result_real= s__s__Mouse_Y[GetPlayerId(p)]
   return true
endfunction
function sa__Mouse_activateRefresher takes nothing returns boolean
local player p=f__arg_player1
  local integer i= GetPlayerId(p)
		set s__s__Mouse_MOVE[i]= null
		set s__s__Mouse_MOVE[i]= CreateTrigger()
		call TriggerRegisterPlayerEvent(s__s__Mouse_MOVE[i], p, EVENT_PLAYER_MOUSE_MOVE)
		call TriggerAddCondition(s__s__Mouse_MOVE[i], Condition(function s__Mouse_move))
		set s__s__Mouse_X[i]= 0.
		set s__s__Mouse_Y[i]= 0.
		call TriggerRegisterPlayerEvent(RIGHT_CLICK, p, EVENT_PLAYER_MOUSE_DOWN)
		call BlzTriggerRegisterPlayerSyncEvent(RIGHT_CLICK_RECEIVE, p, "GRM", false)
   return true
endfunction
function sa__Wave_spawn takes nothing returns boolean

   local integer i= 0
   local integer j= 0
   local integer random= GetRandomInt(0, s__Wave_MAX_INDEX)
   local integer u= 0
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 0)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 1)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 2)
			call s__Wave___spawner_create(random , s__Round_ROUND + 1 , 3)
   return true
endfunction
function sa__Wave___spawner_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer((s__Wave___spawner_main_timer[this])) // INLINED!!
			set s__Wave___spawner_main_timer[this]=null
   return true
endfunction
function sa__Guardians_addLevel takes nothing returns boolean

   local integer ef= 0
   local integer i= 0
			loop
				exitwhen i >= 4
				call s__Unit_prototype__set_level(s__Guardians_GUARDIAN[i],(s__Unit_prototype_level_true[(s__Guardians_GUARDIAN[i])]) + 1) // INLINED!!
				set ef=s__Effect_setDuration(s__Effect_createAttatched("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Guardians_GUARDIAN[i])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
				set i=i + 1
			endloop
   return true
endfunction
function sa__Game_defeat takes nothing returns boolean

   local integer i= 0
   local integer u= 0
			set s__Tombstone_GAME_OVER=true
			call s__Guardians_kill()
			loop
				exitwhen i >= 4
				set u=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				call s__Unit_prototype_kill(u)
				call s__Unit_prototype__set_hp(u,1.)
				set i=i + 1
			endloop
			call PauseTimer((s__Round_TIMER)) // INLINED!!
   return true
endfunction
function sa__Game_addLevel takes nothing returns boolean

   local integer i= 0
   local integer u= 0
			loop
				exitwhen i >= 4
				call s__User_addGold(Player(i) , 5)
				set u=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				call s__Effect_setDuration(s__Effect_createAttatched("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(u)]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
				if u > 0 then
					call s__Unit_prototype__set_level(u,(s__Unit_prototype_level_true[(u)]) + 1) // INLINED!!
				endif
				set i=i + 1
			endloop
   return true
endfunction
function sa__Game_endSelect takes nothing returns boolean

   local integer i= 0
			call s__Tip_init()
			call s__UI_init()
			loop
				exitwhen i >= PLAYER_MAX
				if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
					call s__Game_initForPlayer(Player(i) , CharacterSelect_ID[i] , CharacterSelect_CHINGHO_ID[i])
					call TriggerRegisterPlayerEventLeave(Game___LEAVE_TRIGGER, Player(i))
				endif
				set i=i + 1
			endloop
			call s__TreeOfLife_init()
			call s__Guardians_init()
			call s__Round_init()
			call TriggerAddCondition(Game___LEAVE_TRIGGER, Condition(function s__Game_playerLeave))
   return true
endfunction
function sa__Movement__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Object__get_x(s__Actor_actor[this])
   return true
endfunction
function sa__Movement__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Object__get_y(s__Actor_actor[this])
   return true
endfunction
function sa__Movement__get_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= sc__Object__get_z(s__Actor_actor[this])
   return true
endfunction
function sa__Movement__get_target takes nothing returns boolean
local integer this=f__arg_this
set f__result_integer= s__Movement_target_true[this]
   return true
endfunction
function sa__Movement__set_target takes nothing returns boolean
local integer this=f__arg_this
local integer nt=f__arg_integer1
			set s__Movement_target_true[this]=nt
			set s__Movement_flag_target[this]=nt != 0
   return true
endfunction
function sa__Movement__get_curve takes nothing returns boolean
local integer this=f__arg_this
set f__result_integer= s__Movement_curve_true[this]
   return true
endfunction
function sa__Movement__set_curve takes nothing returns boolean
local integer this=f__arg_this
local integer cv=f__arg_integer1
			set s__Movement_curve_true[this]=cv
			set s__Movement_flag_curve[this]=cv > 0
   return true
endfunction
function sa__Movement_setTargetLocation takes nothing returns boolean
local integer this=f__arg_this
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
			set s__Movement_flag_target_location[this]=true
			set s__Movement_target_x[this]=x
			set s__Movement_target_y[this]=y
			set s__Movement_target_z[this]=z
   return true
endfunction
function sa__Movement_onSuspend takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Movement_onComplete takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Movement_onCollision takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Movement_moveAction takes nothing returns boolean
local integer this=f__arg_this
			call s__Movement_carculateNextPosition(this)
			if s__Movement_use_collision[this] then
				if s__LocationEx_collisionProjection(s__Movement_next_x[this] , s__Movement_next_y[this]) > 3.0 then
					call sc__Movement_onCollision(this)
				endif
				set s__Movement_next_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Movement_next_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
			endif
			call sc__Object_move(s__Actor_actor[this],s__Movement_next_x[this] , s__Movement_next_y[this] , s__Movement_next_z[this])
   return true
endfunction
function sa__Movement_suspendFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= false
   return true
endfunction
function sa__Movement_periodicAction takes nothing returns boolean
local integer this=f__arg_this
			call sc__Movement_moveAction(this)
			if s__Movement_friction[this] > 0. then
				set s__Movement_velo[this]=s__Movement_velo[this] - ( s__Movement_friction[this] * TIMER_TICK )
				if s__Movement_velo[this] <= 0. then
					set s__Actor_duration[this]=0.
				endif
			endif
   return true
endfunction
function sa__Movement_create takes nothing returns boolean
local integer actor=f__arg_integer1
local real velo=f__arg_real1
local real angle=f__arg_real2
   local integer this= s__Movement__allocate(actor , 0 , 0 , - 1.)
			set s__Movement_velo[this]=velo
			set s__Movement_yaw[this]=angle
set f__result_integer= this
   return true
endfunction
function sa__Movement_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			if (s__Movement_curve_true[(this)]) != 0 then // INLINED!!
				call sc__Object_deallocate((s__Movement_curve_true[(this)])) // INLINED!!
				call s__Movement__set_curve(this,0)
			endif
    set f__arg_this=this
   return true
endfunction
function sa__Agent_create takes nothing returns boolean
local agent a=f__arg_agent1
   local integer this= s__Agent__allocate()
			set s__Agent_origin_agent[this]=a
			call SaveAgentHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE, s__Agent_origin_agent[this])
			call SaveInteger(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_INSTANCE_ID, this)
set f__result_integer= this
   return true
endfunction
function sa__Agent_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call RemoveSavedHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
			call RemoveSavedInteger(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_INSTANCE_ID)
			set s__Agent_origin_agent[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC003_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC003_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC002_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC002_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC001_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC001_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC000_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC000_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__Ability0040_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "매 " + STRING_COLOR_CONSTANT + R2SW(Ability0040___INTERVAL, 1, 1) + "초|r마다 지정 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0040___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0040___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다. 해당 공격은 대상의 저항력을 " + STRING_COLOR_CONSTANT + R2SW(Ability0040___IGNORE_GUARD * 100, 1, 1) + "%|r 무시하며 총 " + STRING_COLOR_CONSTANT + I2S(Ability0040___COUNT) + "회|r 공격합니다.\n\n|cff999999다른 행동 중에 사용할 수 있습니다.|r" // INLINED!!
   return true
endfunction
function sa__Ability0040_main_execute takes nothing returns boolean
local integer this=f__arg_this
   local integer a= s__Ability0040_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0040_main_init takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_is_active[this]=true
			set s__Ability_prototype_cast_range[this]=Ability0040___RANGE
			set s__Ability_prototype_preserve_order[this]=true
			set s__Ability_prototype_useable_cast[this]=true
			set s__Ability_prototype_cooldown_max[this]=25.
			set s__Ability_prototype_cooldown_min[this]=5.
			set s__Ability_prototype_manacost[this]=100
			set s__Ability_prototype_indicator[this]=s__Ability0040___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
			call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0030_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "지정한 방향으로 이동하는 미사일 컨테이너를 소환합니다. 미사일 컨테이너는 매 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___INTERVAL, 3, 3) + "초|r 마다 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0030___DAMAGE_PER_ATTACK ) * ( 1 + Ability0030___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히는 미사일을 발사합니다. 적을 " + STRING_COLOR_CONSTANT + I2S(Ability0030___COUNT) + "회|r 공격하거나 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___RANGE / Ability0030___VELO, 1, 1) + "초|r가 경과하면 미사일 컨테이너는 소멸됩니다.\n\n - 미사일 발사 시 미사일 컨테이너의 이동속도가 감소합니다.\n - 미사일은 같은 대상 공격 시 " + STRING_COLOR_CONSTANT + R2SW(Ability0030___DAMAGE_SECONDARY * 100, 1, 1) + "%|r의 피해를 입힙니다." // INLINED!!
   return true
endfunction
function sa__Ability0030_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0030_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0030_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=12.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=Ability0030___DELAY
				set s__Ability_prototype_manacost[this]=50
				set s__Ability_prototype_indicator[this]=s__Ability0030___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0021_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "매 " + STRING_COLOR_CONSTANT + R2SW(Ability0021___INTERVAL, 1, 1) + "초|r마다 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히는 영역을 전개합니다. 대상은 피해를 입을 때 마다 " + STRING_COLOR_CONSTANT + R2SW(Ability0021___DURATION, 1, 1) + "초|r 동안 " + s__STAT_TYPE_NAME[STAT_TYPE_MOVEMENT_SPEED] + "가 " + STRING_COLOR_CONSTANT + I2S(Ability0021___SLOW) + "|r, " + s__STAT_TYPE_NAME[STAT_TYPE_EVASION] + "가 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) * Ability0021___REDUCE_VAL , 1) + " 감소합니다. 총 " + STRING_COLOR_CONSTANT + I2S(Ability0021___COUNT) + "회|r 공격합니다." // INLINED!!
   return true
endfunction
function sa__Ability0021_main_execute takes nothing returns boolean
local integer this=f__arg_this
   local integer a= s__Ability0021_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0021_main_init takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability_prototype_is_active[this]=true
			set s__Ability_prototype_cast_range[this]=Ability0021___RANGE
			set s__Ability_prototype_preserve_order[this]=false
			set s__Ability_prototype_cooldown_max[this]=10.
			set s__Ability_prototype_cooldown_min[this]=4.
			set s__Ability_prototype_manacost[this]=30
			set s__Ability_prototype_indicator[this]=s__Ability0021___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
			call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0020_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "지정한 방향으로 " + STRING_COLOR_CONSTANT + I2S(Ability0020___COUNT) + "발|r의 총알을 난사하여 발 당 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0020___DAMAGE_PER_ATTACK ) * ( 1 + Ability0020___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   return true
endfunction
function sa__Ability0020_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local integer a= s__Ability0020_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0020_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=0.5 //8.
				set s__Ability_prototype_cooldown_min[this]=0.5 //1.5
				set s__Ability_prototype_manacost[this]=26
				set s__Ability_prototype_indicator[this]=s__Ability0020___ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Abilityu011_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "적에게 피해를 입으면 매 " + STRING_COLOR_CONSTANT + R2SW(Abilityu011___INTERVAL, 1, 1) + "초|r 마다 주변 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_HPREGEN , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_HPREGEN)) * Abilityu011___DAMAGE_PER_HPREGEN ) * ( 1 + Abilityu011___DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히며 " + STRING_COLOR_CONSTANT + STRING_COLOR_CONSTANT + R2SW(Abilityu011___DURATION, 1, 1) + "초|r 동안 대상의 " + STAT_TYPE_COLOR[STAT_TYPE_HEAL_AMP] + s__STAT_TYPE_NAME[STAT_TYPE_HEAL_AMP] + "|r을 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu011_main_REDUCE * 100)) + "%|r 감소시키는 부패가스를 분출합니다." // INLINED!!
   return true
endfunction
function sa__Abilityu011_main_execute takes nothing returns boolean
local integer this=f__arg_this
				if s__Abilityu011_main_ex[this] > 0 then
					set s__Explosion_count[s__Abilityu011_main_ex[this]]=Abilityu011___COUNT
				else
					set s__Abilityu011_main_ex[this]=s__Abilityu011___exx_create(s__Ability_prototype_owner[this])
					set s__Abilityu011___exx_a[s__Abilityu011_main_ex[this]]=this
					call s__Explosion_activate(s__Abilityu011_main_ex[this])
				endif
				set s__Abilityu011___exx_level[s__Abilityu011_main_ex[this]]=s__Ability_prototype_level[this]
   return true
endfunction
function sa__Abilityu011_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_cooldown_max[this]=0.
				set s__Ability_prototype_cooldown_min[this]=0.
				call s__Ability_plusStatValue(this,5)
				set s__Abilityu011_main_main_trigger[this]=s__Trigger_new(this)
				set s__Abilityu011_main_main_cond[this]=TriggerAddCondition(s__Abilityu011_main_main_trigger[this], Condition(function s__Abilityu011_main_damageAction))
				call TriggerRegisterVariableEvent((s__Abilityu011_main_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_BEFORE_HPREDUCE)*1.0)) // INLINED!!
   return true
endfunction
function sa__Abilityu011_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				if s__Abilityu011_main_ex[this] > 0 then
					call sc__Explosion_deallocate(s__Abilityu011_main_ex[this])
					set s__Abilityu011_main_ex[this]=0
				endif
		call TriggerRemoveCondition(s__Abilityu011_main_main_trigger[this], s__Abilityu011_main_main_cond[this])
		call s__Trigger_remove(s__Abilityu011_main_main_trigger[this])
		set s__Abilityu011_main_main_trigger[this]=null
		set s__Abilityu011_main_main_cond[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Abilityu010_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= STRING_COLOR_CONSTANT + R2SW(Abilityu010___DURATION, 1, 1) + "초|r 동안 " + STAT_TYPE_COLOR[STAT_TYPE_ATTACK_SPEED] + s__STAT_TYPE_NAME[STAT_TYPE_ATTACK_SPEED] + "|r가 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu010_main_ATTACK_SPEED_BONUS * 100)) + "%|r 증가하며 " + ATTACK_STRING_BASIC + "의 피해량이 " + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST ) * ( 1 + s__Buffu010_main_DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 증가하는 대신 " + ATTACK_STRING_BASIC + " 적중 시 " + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * s__Buffu010_main_HP_COST , 1) + "의 체력을 잃습니다.\n\n - 상기된 체력감소 효과로 보유한 체력이 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu010_main_HP_THRESHOLD * 100)) + "%|r 밑으로 내려가지 않습니다." // INLINED!!
   return true
endfunction
function sa__Abilityu010_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local integer b= s__Buff_add(s__Ability_prototype_owner[this] , s__Ability_prototype_owner[this] , Abilityu010___ID , Abilityu010___DURATION)
				set s__Buff_level[b]=s__Ability_prototype_level[this]
   return true
endfunction
function sa__Abilityu010_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=5.
				set s__Ability_prototype_cooldown_min[this]=5.
				set s__Ability_prototype_manacost[this]=30
				set s__Ability_prototype_is_immediate[this]=true
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0002_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "정신집중 후 대상에게 강력한 탄환을 발사하여 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0002__DAMAGE_PER_ATTACK ) * ( 1 + Ability0002__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다." // INLINED!!
   return true
endfunction
function sa__Ability0002_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local integer ac= s__Ability0002_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
				set s__Ability0002_actor_mana[ac]=(I2R(s__Ability_prototype_manacost[(this)])) // INLINED!!
   return true
endfunction
function sa__Ability0002_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=15
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_cast_range[this]=600.
				set s__Ability_prototype_cooldown_max[this]=0.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_delay[this]=Ability0002__DELAY
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0016_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0016__DAMAGE_PER_ATTACK ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0016__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히는 수리검을 " + STRING_COLOR_CONSTANT + I2S(Ability0016__COUNT) + "개|r 투척합니다. 최대 " + STRING_COLOR_CONSTANT + I2S(Ability0016__CHARGE) + "회|r 충전됩니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   return true
endfunction
function sa__Ability0016_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0016_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0016_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=3
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0016__RANGE
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=1.5
				set s__Ability_prototype_cooldown_min[this]=1.5
				set s__Ability_prototype_count_max[this]=Ability0016__CHARGE
				set s__Ability_prototype_count[this]=Ability0016__CHARGE
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__Ability_prototype_smart[this]=2
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0015_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "직선 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0015__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0015__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입히는 파동을 방출합니다. 스킬 버튼을 오래 누를 수록 사거리가 증가합니다." // INLINED!!
   return true
endfunction
function sa__Ability0015_main_beforeRelease takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability_prototype_pressing[this] then
					set s__Ability_prototype_command_x[this]=(s__s__Mouse_X[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability_prototype_command_y[this]=(s__s__Mouse_Y[GetPlayerId(((GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))))]) // INLINED!!
					set s__Ability0015_main_range_temp[this]=s__Ability_prototype_cast_range[this]
					set s__Ability_prototype_cast_range[this]=- 1.
					if s__Ability_prototype_link_actor[this] > 0 then
						set s__Ability_prototype_useable_cast[this]=true
					endif
				endif
   return true
endfunction
function sa__Ability0015_main_onRelease takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
				endif
				set s__Ability_prototype_cast_range[this]=- 1.
				set s__Ability_prototype_useable_cast[this]=false
   return true
endfunction
function sa__Ability0015_main_onRightClick takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability_prototype_link_actor[this] <= 0 then
					call s__Ability_prototype_setPressState(this,false)
				endif
   return true
endfunction
function sa__Ability0015_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local integer a= 0
				if s__Ability_prototype_link_actor[this] > 0 then
					call sc__Actor_deallocate(s__Ability_prototype_link_actor[this])
					set s__Ability_prototype_link_actor[this]=0
				endif
				set a=s__Ability0015_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this] , s__Ability0015_main_range_temp[this])
				set s__Ability_prototype_cast_range[this]=- 1.
				set s__Ability_prototype_useable_cast[this]=false
   return true
endfunction
function sa__Ability0015_main_onPress takes nothing returns boolean
local integer this=f__arg_this
    local integer a= 0
				set s__Ability_prototype_useable_cast[this]=false
				if s__Ability_prototype_costFilter(this) and s__Ability_prototype_enableFilter(this) then
					if s__Ability_prototype_castFilter(this) then
						set a=s__Ability0015_charge_create(s__Ability_prototype_owner[this])
						call s__Ability_prototype_linkActor(this,a)
					endif
					set s__Ability_prototype_cast_range[this]=Ability0015__RANGE_INITIAL
				else
					call s__Ability_prototype_sendError(this)
				endif
   return true
endfunction
function sa__Ability0015_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=7.5
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_indicator[this]=s__Ability0015__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				set s__Ability_prototype_drag_to_use[this]=true
				set s__Ability_prototype_cancle_rightclick[this]=false
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0003_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "지정한 방향으로 화염구를 발사하여 적과 닿으면 범위 내의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0003__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0003__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다." // INLINED!!
   return true
endfunction
function sa__Ability0003_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0003_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0003_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=5.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0003__DELAY
				set s__Ability_prototype_manacost[this]=25
				set s__Ability_prototype_indicator[this]=s__Ability0003__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0014_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 피해를 입히는 무작위 카드를 투척합니다. 카드의 공격유형과 피해유형은 카드의 색깔에 따라 달라집니다. " + "네 번째 공격 마다 한 장의 카드를 추가로 투척합니다." + "\n\n|cffff0000빨간색 카드 : |r" + DAMAGE_STRING_PHYSICAL + ", " + ATTACK_STRING_BASIC + "\n\n|cff0099ff파란색 카드 : |r" + DAMAGE_STRING_MAGICAL + ", " + ATTACK_STRING_BASIC + "\n\n|cffffff00황금색 카드 : |r" + DAMAGE_STRING_PHYSICAL + ", " + ATTACK_STRING_SPELL + "\n\n|cffcc00cc보라색 카드 : |r" + DAMAGE_STRING_MAGICAL + ", " + ATTACK_STRING_SPELL // INLINED!!
   return true
endfunction
function sa__Ability0014_main_basicAttack takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
    local integer ac= s__Ability0014_actor_create(s__Ability_prototype_owner[this] , target , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0014_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_weapon_delay[this]=1.
				set s__Ability_prototype_weapon_range[this]=550.
				set s__Ability_prototype_count[this]=0
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__UnitActor_rightClick takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitActor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitActor_onComplete takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitActor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitActor_suspendFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= false
   return true
endfunction
function sa__UnitActor_suspendFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= ( s__UnitActor_suspend_stun[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_STUN) > 0 ) or ( s__UnitActor_suspend_ensnare[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_ENSNARE) > 0 ) or ( s__UnitActor_suspend_silence[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_SILENCE) > 0 ) or ( s__UnitActor_suspend_dead[this] and sc__Unit_prototype_isUnitType((s__Actor_actor[(this)]),UNIT_TYPE_DEAD) ) or sc__UnitActor_suspendFilterAdditional(this) // INLINED!!
   return true
endfunction
function sa__UnitActor_create takes nothing returns boolean
local integer caster=f__arg_integer1
local integer target=f__arg_integer2
local real x=f__arg_real1
local real y=f__arg_real2
local integer level=f__arg_integer3
local real duration=f__arg_real3
local boolean channeling=f__arg_boolean1
   local integer this= s__UnitActor__allocate(caster , x , y , duration)
			set s__UnitActor_target[this]=target
			set s__UnitActor_level[this]=level
			set s__UnitActor_suspend_trigger[this]=s__Trigger_new(this)
			set s__UnitActor_suspend_condition[this]=TriggerAddCondition(s__UnitActor_suspend_trigger[this], Condition(function s__UnitActor_suspendAction))
			call BlzTriggerRegisterPlayerKeyEvent(s__UnitActor_suspend_trigger[this], sc__Unit_prototype__get_owner((s__Actor_actor[(this)])), OSKEY_S, 0, true) // INLINED!!
			call TriggerRegisterVariableEvent((s__UnitActor_suspend_trigger[this]), "udg_EVENT_VALUE", EQUAL, RIGHT_CLICK_EVENT) // INLINED!!
			set s__UnitActor_channeling[this]=channeling
			if s__UnitActor_channeling[this] then
				call sc__Unit_prototype_plusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			endif
set f__result_integer= this
   return true
endfunction
function sa__UnitActor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__UnitActor_resetChanneling(this)
			call TriggerRemoveCondition(s__UnitActor_suspend_trigger[this], s__UnitActor_suspend_condition[this])
			call s__Trigger_remove(s__UnitActor_suspend_trigger[this])
			set s__UnitActor_suspend_trigger[this]=null
			set s__UnitActor_suspend_condition[this]=null
			call s__UnitActor_unlinkAbility(this)
    set f__arg_this=this
   return true
endfunction
function sa__Ability0004_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상을 포함한 최대 " + STRING_COLOR_CONSTANT + I2S(Ability0004__TARGET_MAX) + "기|r의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0004__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_MAGICAL + "를 입힙니다.\n첫 대상에게는 피해량이 " + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0004__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 만큼 증가합니다." // INLINED!!
   return true
endfunction
function sa__Ability0004_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0004_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0004_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=22
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0004__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=5.3
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0004__INTERVAL
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0005_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_restoreHP(s__UnitActor_target[this],( ( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_MAGICPOWER)) * Ability0005__HEAL_PER_MAGICPOWER ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) ) + ( ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[((this))])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * Ability0005__HEAL_PER_MAXHP ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) )) // INLINED!!
				call s__Effect_setDuration(s__Effect_createAttatched(Ability0005__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "origin"),1.5) // INLINED!!
   return true
endfunction
function sa__Ability0005_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0005_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상 아군 유닛의 체력을 " + s__ConstantString_statStringReal(STAT_TYPE_MAGICPOWER , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_MAGICPOWER)) * Ability0005__HEAL_PER_MAGICPOWER ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_MAXHP , ( (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * Ability0005__HEAL_PER_MAXHP ) * ( 1 + Ability0005__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + " 만큼 회복시킵니다." // INLINED!!
   return true
endfunction
function sa__Ability0005_main_targetFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) < (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) then // INLINED!!
set f__result_boolean= true
return true
				else
					set ERROR_MESSAGE="대상의 체력이 가득 찼습니다."
set f__result_boolean= false
return true
				endif
   return true
endfunction
function sa__Ability0005_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0005_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0005_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_target_useable_enemy[this]=false
				set s__Ability_prototype_target_useable_ally[this]=true
				set s__Ability_prototype_target_useable_self[this]=true
				set s__Ability_prototype_manacost[this]=35
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_cast_range[this]=Ability0005__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=8.
				set s__Ability_prototype_cooldown_min[this]=2.
				set s__Ability_prototype_cast_delay[this]=Ability0005__DELAY
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0006_main_getMaxCooldown takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Ability_prototype_getMaxCooldownBySpellBoost(this) / ( 1 + ( s__Ability_prototype_level[this] - 1 ) * Ability0006__CDR_PER_LEVEL )
   return true
endfunction
function sa__Ability0006_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "선택한 지점으로 순간이동합니다.\n\n|cff999999다른 행동 중에 사용할 수 있습니다.|r"
   return true
endfunction
function sa__Ability0006_main_beforePress takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_cast_range[this]=Ability0006__RANGE_MAX
   return true
endfunction
function sa__Ability0006_main_beforeRelease takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_cast_range[this]=- 1.
   return true
endfunction
function sa__Ability0006_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local real d= s__Math_distancePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real a= s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				call s__Effect_setDuration(s__Effect_create(Ability0006__EFFECT_PATH1 , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , 5. , 270.),1.5)
				if d > Ability0006__RANGE_MAX then
					set s__Ability_prototype_command_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0006__RANGE_MAX )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Ability_prototype_command_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0006__RANGE_MAX )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
				endif
				call s__LocationEx_collisionProjection(s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				set s__Ability_prototype_command_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Ability_prototype_command_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
				call sc__Object__set_x(s__Ability_prototype_owner[this],s__Ability_prototype_command_x[this])
				call sc__Object__set_y(s__Ability_prototype_owner[this],s__Ability_prototype_command_y[this])
				call s__Effect_setDuration(s__Effect_create(Ability0006__EFFECT_PATH2 , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , 5. , 270.),1.5)
   return true
endfunction
function sa__Ability0006_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=20
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_useable_cast[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=30.
				set s__Ability_prototype_cooldown_min[this]=0.
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Ability0007_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "지정한 방향으로 짧은 거리 순간이동하며 경로 상의 적들에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0007__DAMAGE_PER_ATTACK ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "+" + s__ConstantString_statStringReal(STAT_TYPE_ACCURACY , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ACCURACY)) * Ability0007__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0007__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다. 한 기 이상의 적에게 적중하면 마나를 " + STRING_COLOR_CONSTANT + I2S(Ability0007__MANA_RESTORE) + "|r 회복합니다." // INLINED!!
   return true
endfunction
function sa__Ability0007_main_beforePress takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_cast_range[this]=Ability0007__RANGE_MAX
   return true
endfunction
function sa__Ability0007_main_beforeRelease takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_cast_range[this]=- 1.
   return true
endfunction
function sa__Ability0007_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local real d= s__Math_distancePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real a= s__Math_anglePoints(sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
    local real bx= sc__Object__get_x(s__Ability_prototype_owner[this])
    local real by= sc__Object__get_y(s__Ability_prototype_owner[this])
    local integer ex= 0
				if d > Ability0007__RANGE_MAX then
					set s__Ability_prototype_command_x[this]=(((sc__Object__get_x(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0007__RANGE_MAX )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
					set s__Ability_prototype_command_y[this]=(((sc__Object__get_y(s__Ability_prototype_owner[this]) )*1.0) + (( Ability0007__RANGE_MAX )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) // INLINED!!
				endif
				call s__LocationEx_collisionProjection(s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this])
				set s__Ability_prototype_command_x[this]=(GetLocationX(LocationEx__LOC)) // INLINED!!
				set s__Ability_prototype_command_y[this]=(GetLocationY(LocationEx__LOC)) // INLINED!!
				call sc__Object__set_x(s__Ability_prototype_owner[this],s__Ability_prototype_command_x[this])
				call sc__Object__set_y(s__Ability_prototype_owner[this],s__Ability_prototype_command_y[this])
				call sc__Object__set_yaw(s__Ability_prototype_owner[this],s__Math_anglePoints(bx , by , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this])))
				set ex=s__Ability0007__exp_create(s__Ability_prototype_owner[this] , bx , by , sc__Object__get_x(s__Ability_prototype_owner[this]) , sc__Object__get_y(s__Ability_prototype_owner[this]) , s__Ability_prototype_level[this])
				call s__Explosion_activate(ex)
   return true
endfunction
function sa__Ability0007_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=40
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=6.
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_indicator[this]=s__Ability0007__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Abilityu000_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상에게 뛰어들어 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Abilityu000__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu000__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다." // INLINED!!
   return true
endfunction
function sa__Abilityu000_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Abilityu000_actor_create(s__Ability_prototype_owner[this] , s__Unit_prototype_get(s__Ability_prototype_command_target[this]) , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Abilityu000_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_manacost[this]=20
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_is_target[this]=true
				set s__Ability_prototype_useable_ensnare[this]=false
				set s__Ability_prototype_cast_range[this]=Abilityu000__RANGE
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=6.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_indicator[this]=s__AbilityIndicator_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__MeleeAttack_onSuspend takes nothing returns boolean
local integer this=f__arg_this
			call sc__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0) // INLINED!!
   return true
endfunction
function sa__MeleeAttack_onComplete takes nothing returns boolean
local integer this=f__arg_this
   local integer ef= 0
			call s__Damage_setFlag(DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_BASIC , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , false) // INLINED!!
			set DAMAGE_ID='Aatk'
			call sc__Unit_prototype_damageTarget((s__Actor_actor[(this)]),s__UnitActor_target[this] , sc__Unit_prototype__get_attack((s__Actor_actor[(this)])) , WEAPON_TYPE_METAL_MEDIUM_BASH) // INLINED!!
			call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
   return true
endfunction
function sa__MeleeAttack_create takes nothing returns boolean
local integer caster=f__arg_integer1
local integer target=f__arg_integer2
   local integer this= s__MeleeAttack__allocate(caster , target , 0 , 0 , 0 , s__MeleeAttack_DAMAGE_POINT_DEFAULT / sc__Unit_prototype__get_attack_speed(caster) , true)
			set s__UnitActor_suspend_rclick[this]=true
			set s__UnitActor_suspend_stop[this]=true
			call sc__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
			call sc__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0 * sc__Unit_prototype__get_attack_speed((s__Actor_actor[(this)]))) // INLINED!!
			call sc__Unit_prototype_issueTargetOrder((s__Actor_actor[(this)]),"attack" , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__MeleeAttack_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call sc__Unit_prototype_setAnimSpeed((s__Actor_actor[(this)]),1.0) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Effect__get_origin_effect takes nothing returns boolean
local integer this=f__arg_this
set f__result_effect= LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
   return true
endfunction
function sa__Effect__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_x_true[this]
   return true
endfunction
function sa__Effect__get_offset_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_x_true[this]
   return true
endfunction
function sa__Effect__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_y_true[this]
   return true
endfunction
function sa__Effect__get_offset_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_y_true[this]
   return true
endfunction
function sa__Effect__get_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_z_true[this]
   return true
endfunction
function sa__Effect__get_offset_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_z_true[this]
   return true
endfunction
function sa__Effect__get_yaw takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_yaw_true[this]
   return true
endfunction
function sa__Effect__get_offset_yaw takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_yaw_true[this]
   return true
endfunction
function sa__Effect__get_pitch takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_pitch_true[this]
   return true
endfunction
function sa__Effect__get_offset_pitch takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_pitch_true[this]
   return true
endfunction
function sa__Effect__get_roll takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_roll_true[this]
   return true
endfunction
function sa__Effect__get_offset_roll takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_offset_roll_true[this]
   return true
endfunction
function sa__Effect__set_x takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_x_true[this]=nv
			call s__Effect_refreshX(this)
   return true
endfunction
function sa__Effect__set_offset_x takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_x_true[this]=nv
			call s__Effect_refreshX(this)
   return true
endfunction
function sa__Effect__set_y takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_y_true[this]=nv
			call s__Effect_refreshY(this)
   return true
endfunction
function sa__Effect__set_offset_y takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_y_true[this]=nv
			call s__Effect_refreshY(this)
   return true
endfunction
function sa__Effect__set_z takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_z_true[this]=nv
			call s__Effect_refreshZ(this)
   return true
endfunction
function sa__Effect__set_offset_z takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_z_true[this]=nv
			call s__Effect_refreshZ(this)
   return true
endfunction
function sa__Effect__set_yaw takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_yaw_true[this]=nv
			call s__Effect_refreshYaw(this)
   return true
endfunction
function sa__Effect__set_offset_yaw takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_yaw_true[this]=nv
			call s__Effect_refreshYaw(this)
   return true
endfunction
function sa__Effect__set_pitch takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			if Cos(Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) < 0. then
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
			else
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(nv + s__Object_offset_pitch_true[this])) // INLINED!!
			endif
			set s__Object_pitch_true[this]=nv
   return true
endfunction
function sa__Effect__set_offset_pitch takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			if Cos(Deg2Rad(s__Object_pitch_true[this] + s__Object_offset_pitch_true[this])) < 0. then
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
			else
				call BlzSetSpecialEffectPitch((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), Deg2Rad(s__Object_pitch_true[this] + nv)) // INLINED!!
			endif
			set s__Object_offset_pitch_true[this]=nv
   return true
endfunction
function sa__Effect__set_roll takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_roll_true[this]=nv
			call s__Effect_refreshRoll(this)
   return true
endfunction
function sa__Effect__set_offset_roll takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			set s__Object_offset_roll_true[this]=nv
			call s__Effect_refreshRoll(this)
   return true
endfunction
function sa__Effect_setScale takes nothing returns boolean
local integer this=f__arg_this
local real ns=f__arg_real1
			set s__Effect_scale_true[this]=ns
			if ns < 0 then
				call BlzSetSpecialEffectScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0) // INLINED!!
			else
				call BlzSetSpecialEffectScale((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), ns) // INLINED!!
			endif
set f__result_integer= this
   return true
endfunction
function sa__Effect_setAlpha takes nothing returns boolean
local integer this=f__arg_this
local integer nv=f__arg_integer1
			set s__Effect_a_true[this]=nv
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Effect_setColor takes nothing returns boolean
local integer this=f__arg_this
local integer r=f__arg_integer1
local integer g=f__arg_integer2
local integer b=f__arg_integer3
			set s__Effect_r_true[this]=r
			set s__Effect_g_true[this]=g
			set s__Effect_b_true[this]=b
			call s__Effect_colorRefresh(this)
set f__result_integer= this
   return true
endfunction
function sa__Effect_setPosition takes nothing returns boolean
local integer this=f__arg_this
local real nx=f__arg_real1
local real ny=f__arg_real2
local real nz=f__arg_real3
			call sc__Object__set_x(this,nx)
			call sc__Object__set_y(this,ny)
			call sc__Object__set_z(this,nz)
set f__result_integer= this
   return true
endfunction
function sa__Effect_setDuration takes nothing returns boolean
local integer this=f__arg_this
local real timeout=f__arg_real1
			call s__Effect__set_duration(this,timeout)
set f__result_integer= this
   return true
endfunction
function sa__Effect_kill takes nothing returns boolean
local integer this=f__arg_this
			if not s__Effect_permanant[this] then
				set s__Effect_want_remove[this]=false
				call sc__Object_deallocate(this)
			endif
   return true
endfunction
function sa__Effect_setAnim takes nothing returns boolean
local integer this=f__arg_this
local animtype at=f__arg_animtype1
			call BlzPlaySpecialEffect((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), at) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Effect_setLocalAlpha takes nothing returns boolean
local integer this=f__arg_this
local integer nv=f__arg_integer1
			call BlzSetSpecialEffectAlpha((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
   return true
endfunction
function sa__Effect_setLocalColor takes nothing returns boolean
local integer this=f__arg_this
local integer r=f__arg_integer1
local integer g=f__arg_integer2
local integer b=f__arg_integer3
			call BlzSetSpecialEffectColor((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), r, g, b) // INLINED!!
   return true
endfunction
function sa__Effect_create takes nothing returns boolean
local string path=f__arg_string1
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
local real ya=f__arg_real4
   local integer this= s__Effect__allocate(AddSpecialEffect(path, x, y))
			set s__Effect_decay_timer[this]=null
			call s__Effect_initializeOffset(this)
			call sc__Object__set_x(this,x)
			call sc__Object__set_y(this,y)
			call sc__Object__set_z(this,z)
			call s__Effect_setScale(this,1.)
			call s__Effect_setYaw(this,ya)
			call s__Effect_setPitch(this,0)
			call s__Effect_setRoll(this,0)
			call s__Effect_setR(this,255)
			call s__Effect_setG(this,255)
			call s__Effect_setB(this,255)
			call s__Effect_setAlpha(this,255)
			set s__Effect_want_remove[this]=false
			set s__Effect_permanant[this]=false
set f__result_integer= this
   return true
endfunction
function sa__Effect_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			if s__Effect_decay_timer[this] != null then
				call ReleaseTimer(s__Effect_decay_timer[this])
			endif
			if s__Effect_want_remove[this] then
				call DestroyEffect((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			else
				call s__EffectDecay_create((LoadEffectHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			endif
			set s__Effect_decay_timer[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Abilityu001_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local real a= s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this])) // INLINED!!
    local integer ms= s__Abilityu001__mss_create((s__Actor_actor[(this)]) , s__UnitActor_target[this] , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Abilityu001__STARTAT )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Abilityu001__STARTAT )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , a , s__UnitActor_level[this]) // INLINED!!
				call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
   return true
endfunction
function sa__Abilityu001_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "대상에게 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Abilityu001__DAMAGE_PER_ATTACK ) * ( 1 + Abilityu001__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입히고 " + STRING_COLOR_CONSTANT + R2SW(Abilityu001__DURATION, 1, 1) + "초|r 동안 " + s__STAT_TYPE_NAME[STAT_TYPE_MOVEMENT_SPEED] + "를 " + STRING_COLOR_CONSTANT + I2S(R2I(s__Buffu001_main_SLOW)) + "|r 감소시키는 거미떼를 날려보냅니다.\n\n|cff999999이동속도 감소효과는 중첩됩니다.|r" // INLINED!!
   return true
endfunction
function sa__Abilityu001_main_basicAttack takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
    local integer ac= s__Abilityu001_actor_create(s__Ability_prototype_owner[this] , target , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Abilityu001_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_weapon_delay[this]=1.5
				set s__Ability_prototype_weapon_range[this]=500.
				set s__Ability_prototype_count[this]=0
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__UnitMovement__get_target takes nothing returns boolean
local integer this=f__arg_this
set f__result_integer= s__Movement_target_true[this]
   return true
endfunction
function sa__UnitMovement_explosionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__UnitMovement_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call sc__UnitMovement_damageTarget(this,target)
   return true
endfunction
function sa__UnitMovement_damageTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__UnitMovement_applyDamageFlag(this)
set f__result_real= sc__Unit_prototype_damageTarget((s__Actor_actor[(this)]),target , s__UnitMovement_damage[this] , s__UnitMovement_weapon_type[this]) // INLINED!!
   return true
endfunction
function sa__UnitMovement_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= sc__Unit_prototype_inRange(target,sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitMovement_radius_explosion[this])
   return true
endfunction
function sa__UnitMovement_waveFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__UnitMovement_waveRangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= sc__Unit_prototype_inRange(target,sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitMovement_radius_wave[this])
   return true
endfunction
function sa__UnitMovement_executeWave takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__UnitMovement_damageTarget(this,target)
   return true
endfunction
function sa__UnitMovement_collisionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__UnitMovement_targetFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__UnitMovement_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__UnitMovement_damageTarget(this,target)
   return true
endfunction
function sa__UnitMovement_suspendFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= ( s__UnitMovement_suspend_stun[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_STUN) > 0 ) or ( s__UnitMovement_suspend_ensnare[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_ENSNARE) > 0 ) or ( s__UnitMovement_suspend_silence[this] and sc__Unit_prototype_getStatus((s__Actor_actor[(this)]),STATUS_SILENCE) > 0 ) or ( s__UnitMovement_suspend_dead[this] and sc__Unit_prototype_isUnitType((s__Actor_actor[(this)]),UNIT_TYPE_DEAD) ) // INLINED!!
   return true
endfunction
function sa__UnitMovement_onSuspend takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitMovement_onComplete takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitMovement_onCollision takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__UnitMovement_periodicAction takes nothing returns boolean
local integer this=f__arg_this
			call sc__Movement_moveAction(this)
			if s__Movement_friction[this] > 0. then
				set s__Movement_velo[this]=s__Movement_velo[this] - ( s__Movement_friction[this] * TIMER_TICK )
				if s__Movement_velo[this] <= 0. then
					set s__Actor_duration[this]=0.
				endif
			endif
			if s__UnitMovement_flag_collision[this] and not s__Actor_want_destroy[this] then
				call s__UnitMovement_collisionAction(this)
			endif
			if s__UnitMovement_flag_wave[this] and not s__Actor_want_destroy[this] then
				call s__UnitMovement_waveAction(this)
			endif
   return true
endfunction
function sa__UnitMovement_create takes nothing returns boolean
local integer u=f__arg_integer1
local real velo=f__arg_real1
local real angle=f__arg_real2
   local integer this= s__UnitMovement__allocate(u , velo , angle)
			call sc__Unit_prototype_plusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			if s__Object_movement[(s__Actor_actor[(this)])] != 0 then // INLINED!!
				call sc__Actor_onSuspend(s__Object_movement[(s__Actor_actor[(this)])]) // INLINED!!
				call sc__Actor_deallocate(s__Object_movement[(s__Actor_actor[(this)])]) // INLINED!!
			endif
			call sc__Unit_prototype__set_collision((s__Actor_actor[(this)]),true) // INLINED!!
			set s__Object_movement[(s__Actor_actor[(this)])]=this // INLINED!!
			set s__UnitMovement_group_wave[this]=sc__Group_new()
			set s__UnitMovement_group_collision[this]=sc__Group_new()
set f__result_integer= this
   return true
endfunction
function sa__UnitMovement_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call sc__Unit_prototype_minusStatus((s__Actor_actor[(this)]),STATUS_CAST) // INLINED!!
			if not s__Movement_use_collision[this] then
				call s__LocationEx_collisionProjection(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)]))) // INLINED!!
				call sc__Object_move((s__Actor_actor[(this)]),(GetLocationX(LocationEx__LOC)) , (GetLocationY(LocationEx__LOC)) , sc__Object__get_z((s__Actor_actor[(this)]))) // INLINED!!
			endif
			set s__Unit_prototype_gravity[(s__Actor_actor[(this)])]=GRAVITY_DEFAULT // INLINED!!
			call sc__Unit_prototype__set_collision((s__Actor_actor[(this)]),false) // INLINED!!
			set s__Object_movement[(s__Actor_actor[(this)])]=0 // INLINED!!
			call sc__Group_release(s__UnitMovement_group_wave[this])
			call sc__Group_release(s__UnitMovement_group_collision[this])
			set s__UnitMovement_group_wave[this]=null
			set s__UnitMovement_group_collision[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Ability0010_make_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_setPosition(s__Ability0010_make_ef[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 25.) // INLINED!!
   return true
endfunction
function sa__Ability0010_make_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer ta= s__Unit_prototype_getAbilityById((s__Actor_actor[(this)]),Ability0010__ID) // INLINED!!
				if ta > 0 then
					call s__Effect_setDuration(s__Effect_create(Ability0010__EFFECT_PATH9 , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 0. , 270.),1.5) // INLINED!!
					set Ability0010__POTION_ADD_ABILITY=ta
					set Ability0010__POTION_ADD_INDEX=s__Ability0010_make_potion_index[this]
					call TriggerEvaluate(Ability0010__POTION_ADD_TRIGGER)
				else
				endif
   return true
endfunction
function sa__Ability0010_make_onSuspend takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) + s__Ability0010_make_mp[this])*1.0)) // INLINED!!
   return true
endfunction
function sa__Ability0010_make_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call sc__Object_deallocate(s__Ability0010_make_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0010_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0010_potion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__UnitActor_level[this] , s__Ability0010_actor_potion_index[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0010__BACKSWING , true) // INLINED!!
   return true
endfunction
function sa__Ability0010_actor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
    local integer p= s__Ability0010_potion_create((s__Actor_actor[(this)]) , sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , s__UnitActor_level[this] , s__Ability0010_actor_potion_index[this]) // INLINED!!
				set s__Missile_want_kill[p]=true
   return true
endfunction
function sa__Ability0010_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0010_main_iconClick takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0010_main_switchUI(this)
   return true
endfunction
function sa__Ability0010_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "|cff00ffff아이콘 클릭 : |r물약 제조 UI를 열거나 닫습니다. 숫자가 표시된 버튼을 클릭하면 해당 물약을 제조하며, 물약 아이콘을 클릭하면 사용할 물약 종류를 해당 물약으로 설정합니다.\n물약 제조에는 " + STRING_COLOR_CONSTANT + I2S(Ability0010__MANACOST2) + "|r의 마나와 " + STRING_COLOR_CONSTANT + R2SW(Ability0010__CHANNELING, 1, 1) + "초|r의 정신집중이 필요합니다.\n총 물약 소지 개수는 " + STRING_COLOR_CONSTANT + I2S(Ability0010__POTION_MAX + Ability0010__POTION_MAX_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 )) + "개|r를 초과할 수 없습니다.\n\n|cff00ffff사용 시 : |r물약 제조 UI에서 선택된 물약을 대상 지점으로 투척합니다. 물약 투척이 방해받으면 시전자의 위치에서 폭발합니다."
   return true
endfunction
function sa__Ability0010_main_useFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
				if LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this]) > 0 then
set f__result_boolean= true
return true
				else
					set ERROR_MESSAGE="선택된 종류의 물약을 가지고 있지 않습니다."
set f__result_boolean= false
return true
				endif
   return true
endfunction
function sa__Ability0010_main_execute takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0010_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_cast_delay[this] , s__Ability_prototype_level[this] , s__Ability0010_main_potion_index[this])
				call SaveInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this], LoadInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + s__Ability0010_main_potion_index[this]) - 1)
				call s__Ability0010_main_refreshButton(this)
   return true
endfunction
function sa__Ability0010_main_update takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0010_main_refreshTooltip(this)
   return true
endfunction
function sa__Ability0010_main_init takes nothing returns boolean
local integer this=f__arg_this
    local integer i= 0
    local framehandle f= null
    local framehandle bf= null
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=false
				set s__Ability_prototype_cooldown_max[this]=0.5
				set s__Ability_prototype_cooldown_min[this]=0.5
				set s__Ability_prototype_cast_delay[this]=Ability0010__DELAY
				set s__Ability_prototype_cast_range[this]=Ability0010__RANGE
				set s__Ability_prototype_manacost[this]=0
				set s__Ability_prototype_indicator[this]=s__Ability0010__ind_create(this , (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Ability_prototype_owner[this]))]), s__Agent_INDEX_ORIGIN_HANDLE))))) // INLINED!!
				call s__Ability_plusStatValue(this,5)
				set s__Ability0010_main_keypress[this]=s__Trigger_new(this)
				set s__Ability0010_main_keypress_cond[this]=TriggerAddCondition(s__Ability0010_main_keypress[this], Condition(function s__Ability0010_main_click))
				set s__Ability0010_main_container[this]=BlzCreateFrame("MBEdge", FRAME_MAKE_POTION, 0, 0)
				call BlzFrameSetPoint(s__Ability0010_main_container[this], FRAMEPOINT_BOTTOMRIGHT, FRAME_STAT2, FRAMEPOINT_TOPRIGHT, 0., 0.)
				call BlzFrameSetSize(s__Ability0010_main_container[this], (((( 80 * s__Ability0010_main_POTION_TYPE_MAX ) + 16)*1.0) / 1800.), (((144)*1.0) / 1800.)) // INLINED!!
				call BlzFrameSetVisible(s__Ability0010_main_container[this], false)
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					call SaveInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i, 0)
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_SET + i , BlzCreateFrame("MakePotionSetButton", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_TOPLEFT, s__Ability0010_main_container[this], FRAMEPOINT_TOPLEFT, (((16 + 80 * i)*1.0) / 1800.), (((- 16)*1.0) / 1800.)) // INLINED!!
					call BlzFrameSetSize(f, (((64)*1.0) / 1800.), (((64)*1.0) / 1800.)) // INLINED!!
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_CONTROL_CLICK)
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_MOUSE_LEAVE)
					set bf=f
					set f=BlzGetFrameByName("MakePotionSetButtonIcon", this * s__Ability0010_main_POTION_TYPE_MAX + i)
					call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, bf, FRAMEPOINT_CENTER, 0., 0.)
					call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
					call BlzFrameSetTexture(f, s__Ability0010_main_POTION_ICON_PATH[i], 0, true)
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_CREATE + i , BlzCreateFrame("MakePotionCreateButton", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_TOP, bf, FRAMEPOINT_BOTTOM, 0., 0.)
					call BlzFrameSetSize(f, (((48)*1.0) / 1800.), (((48)*1.0) / 1800.)) // INLINED!!
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_CONTROL_CLICK)
					call BlzTriggerRegisterFrameEvent(s__Ability0010_main_keypress[this], f, FRAMEEVENT_MOUSE_LEAVE)
					set bf=f
					set f=BlzGetFrameByName("MakePotionCreateButtonText", this * s__Ability0010_main_POTION_TYPE_MAX + i)
					call BlzFrameSetPoint(f, FRAMEPOINT_CENTER, s__Ability0010_main_container[this], FRAMEPOINT_CENTER, 0., 0.)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetText(f, "|cff00cc000|r")
					set bf=f
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_COUNT_TEXT + i , BlzCreateFrame("MyText", s__Ability0010_main_container[this], 0, this * s__Ability0010_main_POTION_TYPE_MAX + i))
					call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), FRAMEPOINT_TOP, 0., 0.)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetText(f, "|cffff0000▼|r")
					call BlzFrameSetVisible(f, false)
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_CONTAINER + i , BlzCreateFrameByType("FRAME", "", s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), "", 0))
					call BlzFrameSetAbsPoint(f, FRAMEPOINT_TOPLEFT, 0., 0.)
					call BlzFrameSetTooltip(s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_BTN_SET + i), f)
					set bf=f
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_BACKDROP + i , BlzCreateFrameByType("BACKDROP", "", bf, "", 0))
					call BlzFrameSetTexture(f, "Textures\\black32.blp", 0, true)
					call BlzFrameSetAlpha(f, 128)
					set bf=f
					set f=s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + i , BlzCreateFrame("MyText", s__Ability0010_main_getFrame(this,s__Ability0010_main_INDEX_TOOLTIP_CONTAINER + i), 0, 0))
					call BlzFrameSetPoint(f, FRAMEPOINT_BOTTOM, s__Ability0010_main_container[this], FRAMEPOINT_TOP, 0., 0.005)
					call BlzFrameSetTextAlignment(f, TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_CENTER)
					call BlzFrameSetPoint(bf, FRAMEPOINT_TOPRIGHT, f, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
					call BlzFrameSetPoint(bf, FRAMEPOINT_BOTTOMLEFT, f, FRAMEPOINT_BOTTOMLEFT, - 0.005, - 0.005)
					set i=i + 1
				endloop
				call s__Ability0010_main_refreshButton(this)
				set f=null
				set bf=null
   return true
endfunction
function sa__Ability0010_main_deactivate takes nothing returns boolean
local integer this=f__arg_this
    local integer i= 0
				loop
					exitwhen i >= s__Ability0010_main_POTION_TYPE_MAX
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_CREATE + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_BTN_SET + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_BACKDROP + i , null)
					call s__Ability0010_main_setFrame(this,s__Ability0010_main_INDEX_TOOLTIP_TEXT + i , null)
					call RemoveSavedInteger(s__Ability0010_main_HASH, this, s__Ability0010_main_INDEX_POTION_COUNT + i)
					set i=i + 1
				endloop
	call BlzDestroyFrame(s__Ability0010_main_container[this])
	set s__Ability0010_main_container[this]=null
				call TriggerRemoveCondition(s__Ability0010_main_keypress[this], s__Ability0010_main_keypress_cond[this])
				call s__Trigger_remove(s__Ability0010_main_keypress[this])
				set s__Ability0010_main_keypress[this]=null
				set s__Ability0010_main_keypress_cond[this]=null
   return true
endfunction
function sa__Ability0013_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability0013_actor_anim_progress[this]=s__Ability0013_actor_anim_progress[this] + TIMER_TICK
				call s__Effect_setPosition(s__Ability0013_actor_c[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 5.) // INLINED!!
				call sc__Object__set_yaw((s__Actor_actor[(this)]),sc__Object__get_yaw((s__Actor_actor[(this)])) + 360 * TIMER_TICK * Ability0013__ROTSPEED) // INLINED!!
				if s__Ability0013_actor_anim_progress[this] >= Ability0013__INTERVAL then
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((6.)*1.0)) // INLINED!!
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
					set s__Ability0013_actor_anim_progress[this]=s__Ability0013_actor_anim_progress[this] - Ability0013__INTERVAL
				endif
   return true
endfunction
function sa__Ability0013_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call s__Mover_deallocate(s__Ability0013_actor_mover[this])
				if s__Ability0013_actor_ex[this] > 0 then
					call sc__Explosion_deallocate(s__Ability0013_actor_ex[this])
				endif
				call sc__Object_deallocate(s__Ability0013_actor_c[this])
				call s__Effect_kill(s__Ability0013_actor_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0013_main_relativeTooltip takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= "주변의 적들을 무자비하게 강타하여 " + s__ConstantString_statStringReal(STAT_TYPE_ATTACK , ( (s__Unit_prototype_getCarculatedStatValue((s__Ability_prototype_owner[this]),STAT_TYPE_ATTACK)) * Ability0013__DAMAGE_PER_ATTACK ) * ( 1 + Ability0013__DAMAGE_PER_LEVEL * ( s__Ability_prototype_level[this] - 1 ) ) , 1) + "의 " + DAMAGE_STRING_PHYSICAL + "를 입힙니다. 총 " + STRING_COLOR_CONSTANT + I2S(Ability0013__COUNT) + "회|r 공격합니다.\n\n|cff999999사용하면서 움직일 수 있습니다.|r" // INLINED!!
   return true
endfunction
function sa__Ability0013_main_execute takes nothing returns boolean
local integer this=f__arg_this
    local integer a= s__Ability0013_actor_create(s__Ability_prototype_owner[this] , s__Ability_prototype_command_x[this] , s__Ability_prototype_command_y[this] , s__Ability_prototype_level[this])
   return true
endfunction
function sa__Ability0013_main_init takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability_prototype_is_active[this]=true
				set s__Ability_prototype_preserve_order[this]=true
				set s__Ability_prototype_cooldown_max[this]=0.
				set s__Ability_prototype_cooldown_min[this]=0.
				set s__Ability_prototype_manacost[this]=18
				set s__Ability_prototype_is_immediate[this]=true
				call s__Ability_plusStatValue(this,5)
   return true
endfunction
function sa__Unit_prototype__get_origin_unit takes nothing returns boolean
local integer this=f__arg_this
set f__result_unit= LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[this]), s__Agent_INDEX_ORIGIN_HANDLE)
   return true
endfunction
function sa__Unit_prototype__get_level takes nothing returns boolean
local integer this=f__arg_this
set f__result_integer= s__Unit_prototype_level_true[this]
   return true
endfunction
function sa__Unit_prototype__set_level takes nothing returns boolean
local integer this=f__arg_this
local integer v=f__arg_integer1
   local integer diff= 0
			if v <= s__Unit_prototype_level_true[this] then
return true
			endif
			set diff=v - s__Unit_prototype_level_true[this]
			set s__Unit_prototype_level_true[this]=v
			if IsUnitType((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_TYPE_HERO) then // INLINED!!
				call SetHeroLevel((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), v, false) // INLINED!!
			endif
			call sc__Unit_prototype_refreshLevelStatValue(this)
			set LEVEL_UNIT=this
			set LEVEL_LEVEL=diff
			call TriggerEvaluate(LEVEL_TRIGGER)
			set LEVEL_UNIT=0
			set LEVEL_LEVEL=0
   return true
endfunction
function sa__Unit_prototype_getCarculatedStatValue takes nothing returns boolean
local integer this=f__arg_this
local integer stattype=f__arg_integer1
   local real nv= ( ( ( (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_BASE))) + (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_LEVEL))) * ( (s__Unit_prototype_level_true[(this)]) - 1 ) + (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_PLUS))) ) * (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MULTIPLY))) ) / (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_DIVIDE))) ) - (LoadReal(s__Agent_HASH, (this), INDEX_STAT + ( (stattype ) * STAT_INDEX_SIZE ) + ( STAT_INDEX_MINUS))) // INLINED!!
			if s__STAT_TYPE_CLAMP[stattype] then
				if nv <= 0. then
					if stattype != STAT_TYPE_MAXHP then
set f__result_real= 0.
return true
					else
set f__result_real= 0.01
return true
					endif
				else
set f__result_real= nv
return true
				endif
			else
set f__result_real= nv
return true
			endif
   return true
endfunction
function sa__Unit_prototype_refreshLevelStatValue takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MAXHP)
			call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MAXMP)
   return true
endfunction
function sa__Unit_prototype__get_owner takes nothing returns boolean
local integer this=f__arg_this
set f__result_player= GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_x takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_y takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_z takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Object_z_true[this]
   return true
endfunction
function sa__Unit_prototype__get_yaw takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_x takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			call SetUnitX((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np) // INLINED!!
			call SetUnitX(s__Unit_prototype_mover_unit[this], np)
   return true
endfunction
function sa__Unit_prototype__set_y takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			call SetUnitY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np) // INLINED!!
			call SetUnitY(s__Unit_prototype_mover_unit[this], np)
   return true
endfunction
function sa__Unit_prototype__set_z takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			set s__Object_z_true[this]=np
			call SetUnitFlyHeight((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), sc__Object__get_z(this) + sc__Object__get_offset_z(this), 0.) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_yaw takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			call BlzSetUnitFacingEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), np + sc__Object__get_offset_yaw(this)) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_offset_z takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			set s__Object_offset_z_true[this]=np
			call SetUnitFlyHeight((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), sc__Object__get_z(this) + sc__Object__get_offset_z(this), 0.) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_name takes nothing returns boolean
local integer this=f__arg_this
set f__result_string= GetUnitName((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_hp takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_hp takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
			if np >= 0. then
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE, np) // INLINED!!
				if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) == sc__Unit_prototype__get_maxhp(this) then // INLINED!!
					if sc__Unit_prototype_getStatus(this,STATUS_DEAD) > 0 and s__Unit_prototype_is_revive[this] then
						call sc__Unit_prototype_minusStatus(this,STATUS_DEAD)
					endif
				endif
			else
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE, np) // INLINED!!
			endif
   return true
endfunction
function sa__Unit_prototype__get_hpregen takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_HPREGEN)
   return true
endfunction
function sa__Unit_prototype_restoreHP takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			call s__Unit_prototype__set_hp(this,(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) + ( nv * s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_HEAL_AMP) )) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_maxhp takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_maxhp takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
   local real v= (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_LIFE)) / (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) // INLINED!!
			if np <= 1. then
				call BlzSetUnitMaxHP((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(1.)) // INLINED!!
			else
				call BlzSetUnitMaxHP((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(np)) // INLINED!!
			endif
			call s__Unit_prototype__set_hp(this,(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_LIFE)) * v) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_mp takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_mpregen takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MPREGEN)
   return true
endfunction
function sa__Unit_prototype__get_maxmp takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__set_maxmp takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
   local real v= 0.
			if (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) > 0. then // INLINED!!
				set v=(GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) / (GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) // INLINED!!
			endif
			call BlzSetUnitMaxMana((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), R2I(np)) // INLINED!!
			call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MAX_MANA)) * v)*1.0)) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_attack takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK)
   return true
endfunction
function sa__Unit_prototype__get_attack_speed takes nothing returns boolean
local integer this=f__arg_this
   local real v= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_SPEED)
			if v >= 5. then
set f__result_real= 5.
return true
			else
set f__result_real= v
return true
			endif
   return true
endfunction
function sa__Unit_prototype__get_attack_range takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ATTACK_RANGE)
   return true
endfunction
function sa__Unit_prototype__set_attack_range takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
   local real a= BlzGetUnitWeaponRealField((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 1) // INLINED!!
   local real r= BlzGetUnitWeaponRealField((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 0) // INLINED!!
			call BlzSetUnitWeaponRealFieldBJ((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_WEAPON_RF_ATTACK_RANGE, 1, np - r + a) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_movement_speed takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
   return true
endfunction
function sa__Unit_prototype__set_movement_speed takes nothing returns boolean
local integer this=f__arg_this
local real np=f__arg_real1
   local real nv= 0.
			if np > 1000. then
				set nv=1000.
			elseif np <= 1. then
				set nv=1.
			else
				set nv=np
			endif
			call SetUnitMoveSpeed((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
   return true
endfunction
function sa__Unit_prototype__get_accuracy takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_ACCURACY)
   return true
endfunction
function sa__Unit_prototype__get_evasion takes nothing returns boolean
local integer this=f__arg_this
set f__result_real= s__Unit_prototype_getCarculatedStatValue(this,STAT_TYPE_EVASION)
   return true
endfunction
function sa__Unit_prototype__set_collision takes nothing returns boolean
local integer this=f__arg_this
local boolean b=f__arg_boolean1
			if b then
				set s__Unit_prototype_collision_true[this]=s__Unit_prototype_collision_true[this] + 1
			else
				set s__Unit_prototype_collision_true[this]=s__Unit_prototype_collision_true[this] - 1
			endif
			call SetUnitPathing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Unit_prototype_collision_true[this] > 0) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_damageTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
local real damage=f__arg_real1
local weapontype wt=f__arg_weapontype1
set f__result_real= s__Damage_unitDamageTarget(this , target , damage , wt)
   return true
endfunction
function sa__Unit_prototype_getAbility takes nothing returns boolean
local integer this=f__arg_this
local integer index=f__arg_integer1
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_ABILITY + index) then
set f__result_integer= LoadInteger(s__Agent_HASH, this, INDEX_ABILITY + index)
return true
			else
set f__result_integer= 0
return true
			endif
   return true
endfunction
function sa__Unit_prototype_getStatus takes nothing returns boolean
local integer this=f__arg_this
local integer index=f__arg_integer1
			if HaveSavedInteger(s__Agent_HASH, this, INDEX_STATUS + index) then
set f__result_integer= LoadInteger(s__Agent_HASH, this, INDEX_STATUS + index)
return true
			else
set f__result_integer= 0
return true
			endif
   return true
endfunction
function sa__Unit_prototype_plusStatus takes nothing returns boolean
local integer this=f__arg_this
local integer index=f__arg_integer1
			call SaveInteger(s__Agent_HASH, (this), INDEX_STATUS + (index ), ( s__Unit_prototype_getStatus(this,index) + 1)) // INLINED!!
			if index == STATUS_STUN then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_CAST then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_GRABBED then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
			elseif index == STATUS_INVINCIBLE then
				call s__Unit_prototype_plusAvul(this)
			elseif index == STATUS_DEAD then
				call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), true) // INLINED!!
				if s__Unit_prototype_getStatus(this,index) == 1 then
					call sc__Effect_setAlpha(s__Unit_prototype_facing_circle[this],0)
					if s__Unit_prototype_is_revive[this] then
						call s__Unit_prototype_plusAvul(this)
						call SetUnitVertexColor((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 0, 0, 0, 255) // INLINED!!
					else
						call s__Unit_prototype__set_hp(this,- 1)
						if s__Unit_prototype_decay_timer[this] == null then
							set s__Unit_prototype_decay_timer[this]=sc__Timer_new(this)
						endif
						call TimerStart((s__Unit_prototype_decay_timer[this] ), (( 10. )*1.0), ( false ), ( function s__Unit_prototype_decay)) // INLINED!!
					endif
					set DEATH_UNIT=this
					call TriggerEvaluate(DEATH_TRIGGER)
					set DEATH_UNIT=0
					set DEATH_KILLER=0
				endif
				call sc__Unit_prototype_resetAnim(this)
				call sc__Unit_prototype_setAnim(this,"death")
			elseif index == STATUS_ENSNARE then
				call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
			endif
   return true
endfunction
function sa__Unit_prototype_minusStatus takes nothing returns boolean
local integer this=f__arg_this
local integer index=f__arg_integer1
			if s__Unit_prototype_getStatus(this,index) > 0 then
				call SaveInteger(s__Agent_HASH, (this), INDEX_STATUS + (index ), ( s__Unit_prototype_getStatus(this,index) - 1)) // INLINED!!
				if index == STATUS_STUN then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_CAST then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_GRABBED then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
				elseif index == STATUS_INVINCIBLE then
					call s__Unit_prototype_minusAvul(this)
				elseif index == STATUS_DEAD then
					call BlzPauseUnitEx((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), false) // INLINED!!
					if s__Unit_prototype_getStatus(this,index) == 0 then
						call sc__Unit_prototype_setAnim(this,"stand")
						call sc__Unit_prototype_queueAnim(this,"stand")
						call sc__Effect_setAlpha(s__Unit_prototype_facing_circle[this],255)
						call s__Unit_prototype_minusAvul(this)
						call SetUnitVertexColor((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), 255, 255, 255, 255) // INLINED!!
						set REVIVE_UNIT=this
						call TriggerEvaluate(REVIVE_TRIGGER)
						set REVIVE_UNIT=0
					endif
				elseif index == STATUS_ENSNARE then
					call s__Unit_prototype_refreshStatValue(this,STAT_TYPE_MOVEMENT_SPEED)
				endif
			endif
   return true
endfunction
function sa__Unit_prototype_resetAnim takes nothing returns boolean
local integer this=f__arg_this
			call ResetUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_setAnim takes nothing returns boolean
local integer this=f__arg_this
local string anim=f__arg_string1
			if s__Unit_prototype_getStatus(this,STATUS_DEAD) <= 0 or anim == "death" then
				call SetUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), anim) // INLINED!!
			endif
   return true
endfunction
function sa__Unit_prototype_queueAnim takes nothing returns boolean
local integer this=f__arg_this
local string anim=f__arg_string1
			if s__Unit_prototype_getStatus(this,STATUS_DEAD) <= 0 or anim == "death" then
				call QueueUnitAnimation((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), anim) // INLINED!!
			endif
   return true
endfunction
function sa__Unit_prototype_setAnimSpeed takes nothing returns boolean
local integer this=f__arg_this
local real nv=f__arg_real1
			call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), nv) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_isMoveable takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= s__Unit_prototype_getStatus(this,STATUS_STUN) <= 0 and s__Unit_prototype_getStatus(this,STATUS_ENSNARE) <= 0 and s__Unit_prototype_getStatus(this,STATUS_GRABBED) <= 0
   return true
endfunction
function sa__Unit_prototype_inRange takes nothing returns boolean
local integer this=f__arg_this
local real x=f__arg_real1
local real y=f__arg_real2
local real radius=f__arg_real3
set f__result_boolean= IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), x, y, radius) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_inLine takes nothing returns boolean
local integer this=f__arg_this
local real x1=f__arg_real1
local real y1=f__arg_real2
local real x2=f__arg_real3
local real y2=f__arg_real4
local real radius=f__arg_real5
set f__result_boolean= IsUnitInLine((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) , x1 , y1 , x2 , y2 , radius) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_inSector takes nothing returns boolean
local integer this=f__arg_this
local real x=f__arg_real1
local real y=f__arg_real2
local real radius=f__arg_real3
local real angle=f__arg_real4
local real width=f__arg_real5
set f__result_boolean= IsUnitInSector((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) , x , y , radius , angle , width) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_isEnemy takes nothing returns boolean
local integer this=f__arg_this
local player p=f__arg_player1
set f__result_boolean= IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_isAlly takes nothing returns boolean
local integer this=f__arg_this
local player p=f__arg_player1
set f__result_boolean= IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)), p) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_isUnitType takes nothing returns boolean
    set f__result_boolean=s__Unit_prototype_isUnitType(f__arg_this,f__arg_unittype1)
   return true
endfunction
function sa__Unit_prototype_issueTargetOrder takes nothing returns boolean
    call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((f__arg_this))]), s__Agent_INDEX_ORIGIN_HANDLE)), (f__arg_string1), (f__arg_widget1)) // INLINED!!
   return true
endfunction
function sa__Unit_prototype_get takes nothing returns boolean
    set f__result_integer=s__Unit_prototype_get(f__arg_unit1)
   return true
endfunction
function sa__Unit_prototype_create takes nothing returns boolean
local player p=f__arg_player1
local integer uid=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real facing=f__arg_real3
   local integer this= s__Unit_prototype__allocate(CreateUnit(p, uid, x, y, facing))
			set s__Unit_prototype_origin_player[this]=p
			set s__Unit_prototype_main_timer[this]=sc__Timer_new(this)
			call GroupAddUnit(UnitPrototype_GROUP, (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			call s__Unit_prototype_essentialInit(this)
			call s__Unit_prototype_initStatValue(this)
			call TimerStart((s__Unit_prototype_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Unit_prototype_timerAction)) // INLINED!!
			set s__Unit_prototype_mover_unit[this]=CreateUnit(p, 'dumm', x, y, facing)
			if not UnitAddAbility(s__Unit_prototype_mover_unit[this], 'Axx3') then
				call BJDebugMsg("|cffff0000어빌리티 'Axx3'(윈드워크) 이/가 정의되지 않았습니다.")
			endif
			call IssueImmediateOrder(s__Unit_prototype_mover_unit[this], "windwalk")
			call UnitAddAbility(s__Unit_prototype_mover_unit[this], 'Axx1')
			call ShowUnit(s__Unit_prototype_mover_unit[this], false)
			call SetUnitMoveSpeed(s__Unit_prototype_mover_unit[this], 10.)
			set s__Unit_prototype_facing_circle[this]=sc__Effect_create("Effects\\FacingCircle.mdl" , x , y , 0. , facing)
			call sc__Effect_setScale(s__Unit_prototype_facing_circle[this],BlzGetUnitCollisionSize((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) / 100.) // INLINED!!
			if GetLocalPlayer() == (GetOwningPlayer((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)))) then // INLINED!!
			elseif (IsUnitEnemy((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],255 , 0 , 0)
			elseif (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],0 , 255 , 0)
			else
				call sc__Effect_setColor(s__Unit_prototype_facing_circle[this],255 , 255 , 0)
			endif
			set s__Effect_want_remove[s__Unit_prototype_facing_circle[this]]=true
set f__result_integer= this
   return true
endfunction
function sa__Unit_prototype_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				set UNREGISTER_GROUP_UNIT=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
				call TriggerEvaluate(UNREGISTER_GROUP)
				set UNREGISTER_GROUP_UNIT=null
			call s__Unit_prototype_clearAbility(this)
			call s__Unit_prototype_clearItem(this)
			call s__Unit_prototype_clearStatus(this)
			call s__Buff_unitDestroyBuffs(this)
			call sc__Object_deallocate(s__Unit_prototype_facing_circle[this])
			if s__Mover_getUnitMover(this) > 0 then
				call s__Mover_deallocate(s__Mover_getUnitMover(this))
			endif
			if s__Object_movement[this] != 0 then
				call sc__Actor_deallocate(s__Object_movement[this])
			endif
			if s__Unit_prototype_main_timer[this] != null then
				call sc__Timer_release(s__Unit_prototype_main_timer[this])
			endif
			if s__Unit_prototype_decay_timer[this] != null then
				call sc__Timer_release(s__Unit_prototype_decay_timer[this])
			endif
			set s__Unit_prototype_main_timer[this]=null
			set s__Unit_prototype_decay_timer[this]=null
			set s__Unit_prototype_origin_player[this]=null
			call RemoveUnit(s__Unit_prototype_mover_unit[this])
			set s__Unit_prototype_mover_unit[this]=null
			call RemoveUnit((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC008_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC008_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC007_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC007_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__Missile_explosionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Missile_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call sc__Missile_damageTarget(this,target)
   return true
endfunction
function sa__Missile_damageTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__Missile_applyDamageFlag(this)
set f__result_real= (s__Damage_unitDamageTarget((s__Missile_owner[this]) , (target ) , (( s__Missile_damage[this] )*1.0) , ( s__Missile_weapon_type[this]))) // INLINED!!
   return true
endfunction
function sa__Missile_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( (s__Missile_radius_explosion_true[(this)]))*1.0))) // INLINED!!
   return true
endfunction
function sa__Missile_waveFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Missile_waveRangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Object__get_x(this) )*1.0), (( sc__Object__get_y(this) )*1.0), (( (s__Missile_radius_wave_true[(this)]))*1.0))) // INLINED!!
   return true
endfunction
function sa__Missile_executeWave takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__Missile_damageTarget(this,target)
   return true
endfunction
function sa__Missile_collisionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Missile_targetFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= true
   return true
endfunction
function sa__Missile_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
			call s__Missile_damageTarget(this,target)
   return true
endfunction
function sa__Missile_killFilter takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= true
   return true
endfunction
function sa__Missile_onBound takes nothing returns boolean
local integer this=f__arg_this
			set s__Missile_want_kill[this]=true
   return true
endfunction
function sa__Missile_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Missile_afterExplosion takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Missile_beforeWave takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Missile_afterWave takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Missile_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Missile_create takes nothing returns boolean
local integer owner=f__arg_integer1
local string path=f__arg_string1
local real x=f__arg_real1
local real y=f__arg_real2
local real z=f__arg_real3
local real yaw=f__arg_real4
   local integer this= s__Missile__allocate(path , x , y , z , yaw)
			set s__Object_movement[this]=sc__Movement_create(this , 0. , yaw)
			set s__Missile_owner[this]=owner
			set s__Missile_main_timer[this]=s__Timer_new(this)
			set s__Missile_group_wave[this]=s__Group_new()
			set s__Missile_group_collision[this]=s__Group_new()
			call TimerStart((s__Missile_main_timer[this] ), (( TIMER_TICK )*1.0), ( true ), ( function s__Missile_timerAction)) // INLINED!!
set f__result_integer= this
   return true
endfunction
function sa__Missile_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer((s__Missile_main_timer[this])) // INLINED!!
			if s__Missile_group_link[this] > 0 then
				call s__MissileGroup_remove(s__Missile_group_link[this],this)
			else
				if s__Missile_group_wave[this] != null then
					call ReleaseGroup((s__Missile_group_wave[this])) // INLINED!!
				endif
			endif
			call ReleaseGroup((s__Missile_group_collision[this])) // INLINED!!
			set s__Missile_main_timer[this]=null
			set s__Missile_group_wave[this]=null
			set s__Missile_group_collision[this]=null
			set s__Missile_group_link[this]=0
    set f__arg_this=this
   return true
endfunction
function sa__Abilityu000_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
				call s__UnitMovement_damageTarget(this,s__Abilityu000_actor_ability_target[this])
				call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Abilityu000_actor_ability_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
   return true
endfunction
function sa__Abilityu000_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC006_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC006_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC005_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC005_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__AbilityC004_main_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__AbilityC004_main_onDestroy takes nothing returns boolean
local integer this=f__arg_this
    set f__arg_this=this
   return true
endfunction
function sa__Unit_create takes nothing returns boolean
local player p=f__arg_player1
local integer uid=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real yaw=f__arg_real3
   local integer this= s__Unit__allocate(p , uid , x , y , yaw)
			call s__Unit_copyStats(this)
			call s__Unit_loadAbility(this)
			set s__Unit_prototype_class[this]="Unit"
set f__result_integer= this
   return true
endfunction
function sa__Unit_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			if s__Unit_chingho[this] > 0 then
				call sc__Ability_prototype_deallocate(s__Unit_chingho[this])
			endif
    set f__arg_this=this
   return true
endfunction
function sa__Undead_isGuardianAlive takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= not s__Unit_prototype_isUnitType(s__Guardians_GUARDIAN[s__Undead_position[this]],UNIT_TYPE_DEAD) and s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , GetRectCenterX(gg_rct_spawn) , GetRectCenterY(gg_rct_spawn)) > 768.
   return true
endfunction
function sa__Undead_getNearestHero takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
   local integer g= 0
   local integer r= 0
   local real dist= 0.
			loop
				exitwhen i >= 4
				set g=(s__User_FOCUSUNIT[GetPlayerId((Player(i)))]) // INLINED!!
				if s__Undead_unitCondition(this,g) then
					if i == 0 or r == 0 then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					elseif s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g)) < dist then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					endif
				endif
				set i=i + 1
			endloop
set f__result_integer= r
   return true
endfunction
function sa__Undead_getNearestGuardian takes nothing returns boolean
local integer this=f__arg_this
   local integer i= 0
   local integer g= 0
   local integer r= 0
   local real dist= 0.
			loop
				exitwhen i >= 4
				set g=s__Guardians_GUARDIAN[i]
				if s__Undead_unitCondition(this,g) then
					if i == 0 or r == 0 then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					elseif s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g)) < dist then
						set r=g
						set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(g) , sc__Object__get_y(g))
					endif
				endif
				set i=i + 1
			endloop
set f__result_integer= r
   return true
endfunction
function sa__Undead_onSetTarget takes nothing returns boolean
local integer this=f__arg_this
				call IssueTargetOrder((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((this))]), s__Agent_INDEX_ORIGIN_HANDLE)), ("attack" ), ( (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)))) // INLINED!!
   return true
endfunction
function sa__Undead_onFreeTarget takes nothing returns boolean
local integer this=f__arg_this
			call s__Undead_goToSpawnLocation(this)
   return true
endfunction
function sa__Undead_refreshTarget takes nothing returns boolean
local integer this=f__arg_this
   local integer u= 0
			set u=sc__Undead_getNearestGuardian(this)
			if u == 0 then
				set u=sc__Undead_getNearestHero(this)
				if u == 0 then
					if sc__Undead_isGuardianAlive(this) then
						call s__Undead_setTarget(this,s__Guardians_GUARDIAN[s__Undead_position[this]])
					else
						call s__Undead_setTarget(this,0)
					endif
				else
					call s__Undead_setTarget(this,u)
				endif
			else
				call s__Undead_setTarget(this,u)
			endif
   return true
endfunction
function sa__Undead_getTarget takes nothing returns boolean
local integer this=f__arg_this
   local integer u= 0
			if s__Undead_target[this] != 0 then
				if not s__Undead_unitCondition(this,s__Undead_target[this]) then
					call sc__Undead_refreshTarget(this)
				elseif s__Unit_prototype_class[s__Undead_target[this]] != "Guardian" then
					set u=sc__Undead_getNearestGuardian(this)
					if u > 0 then
						call s__Undead_setTarget(this,u)
					endif
				endif
			else
				call sc__Undead_refreshTarget(this)
			endif
set f__result_integer= s__Undead_target[this]
   return true
endfunction
function sa__Undead_periodicAction takes nothing returns boolean
local integer this=f__arg_this
			call s__Undead_getTarget(this)
   return true
endfunction
function sa__Undead_onDamaged takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Undead_encount takes nothing returns boolean
local integer this=f__arg_this
			if not s__Undead_running[this] then
				call sc__Undead_refreshTarget(this)
				set s__Undead_running[this]=true
				call TimerStart((s__Undead_ai_timer[this] ), (( s__Undead_AI_TICK )*1.0), ( true ), ( function s__Undead_timerAction)) // INLINED!!
			endif
   return true
endfunction
function sa__Undead_init takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Undead_create takes nothing returns boolean
local integer uid=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real yaw=f__arg_real3
local integer position=f__arg_integer2
   local integer this= s__Undead__allocate(PLAYER_UNDEAD , uid , x , y , yaw)
   local integer i= 0
   local integer a= 0
			call GroupAddUnit(Undead_GROUP, (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(this)]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
			set s__Undead_position[this]=position
			set s__Undead_ai_timer[this]=s__Timer_new(this)
			set s__Undead_main_trigger[this]=s__Trigger_new(this)
			set s__Undead_main_cond[this]=TriggerAddCondition(s__Undead_main_trigger[this], Condition(function s__Undead_cond))
			call TriggerRegisterVariableEvent((s__Undead_main_trigger[this] ), "udg_EVENT_VALUE", EQUAL, (( DAMAGE_EVENT_BEFORE_HPREDUCE)*1.0)) // INLINED!!
			set s__Unit_prototype_class[this]="Undead"
			loop
				exitwhen s__Unit_prototype_getAbility(this,i) <= 0
				set a=s__Unit_prototype_getAbility(this,i)
				set s__Ability_prototype_is_ai[a]=true
				set i=i + 1
			endloop
set f__result_integer= this
   return true
endfunction
function sa__Undead_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer((s__Undead_ai_timer[this])) // INLINED!!
			set s__Undead_ai_timer[this]=null
		call TriggerRemoveCondition(s__Undead_main_trigger[this], s__Undead_main_cond[this])
		call s__Trigger_remove(s__Undead_main_trigger[this])
		set s__Undead_main_trigger[this]=null
		set s__Undead_main_cond[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__additional_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer rint= GetRandomInt(0, 3)
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= 0
				if rint == 0 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				elseif rint == 1 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH2 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				elseif rint == 2 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH3 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				else
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH4 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				endif
				set s__Missile_damage_id[ms]=Ability0014__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_radius_target[ms]=Ability0014__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0014__VELO)*1.0) // INLINED!!
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_WOOD_LIGHT_BASH
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
   return true
endfunction
function sa__Ability0014_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer a= s__Unit_prototype_getAbilityById((s__Actor_actor[(this)]),Ability0014__ID) // INLINED!!
    local integer rint= GetRandomInt(0, 3)
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0014__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= 0
				if rint == 0 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				elseif rint == 1 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH2 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_BASIC
				elseif rint == 2 then
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH3 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				else
					set ms=s__Missile_create((s__Actor_actor[(this)]) , Ability0014__EFFECT_PATH4 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
					set s__Missile_damage_type[ms]=DAMAGE_TYPE_MAGICAL
					set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				endif
				set s__Missile_damage_id[ms]=Ability0014__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0014__DAMAGE_PER_ATTACK ) * ( 1 + Ability0014__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_radius_target[ms]=Ability0014__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0014__VELO)*1.0) // INLINED!!
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_WOOD_LIGHT_BASH
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
				if a > 0 then
					call sc__Ability_prototype_addValue(a,1)
					if s__Ability_prototype_value[a] >= Ability0014__NEED_TO then
						call s__additional_create((s__Actor_actor[(this)]) , s__UnitActor_target[this] , s__UnitActor_level[this]) // INLINED!!
						set s__Ability_prototype_value[a]=0
					endif
				endif
				call s__Backswing_create((s__Actor_actor[(this)])) // INLINED!!
   return true
endfunction
function sa__Ability0004_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0015_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability0015_actor_sq[this] > 0 then
					call s__Line__Line_setPosition(s__Ability0015_actor_sq[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , 2.) // INLINED!!
				endif
   return true
endfunction
function sa__Ability0015_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer ex= s__Ability0015__exp_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0015__COLRAD )*1.0) * Cos((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0015__COLRAD )*1.0) * Sin((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( s__Ability0015_actor_range[this] - Ability0015__COLRAD )*1.0) * Cos((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( s__Ability0015_actor_range[this] - Ability0015__COLRAD )*1.0) * Sin((( s__Ability0015_actor_angle[this])*1.0) * bj_DEGTORAD)) , Ability0015__COLRAD , s__UnitActor_level[this]) // INLINED!!
				call s__Explosion_activate(ex)
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0015__BACKSWING , true) // INLINED!!
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				set s__Line__Line_alphaaxis[s__Ability0015_actor_sq[this]]=- 1. / 0.5
   return true
endfunction
function sa__Ability0015_actor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call sc__Line__Line_deallocate(s__Ability0015_actor_sq[this])
				set s__Ability0015_actor_sq[this]=0
   return true
endfunction
function sa__Ability0015_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability0015_actor_sq[this]=0
    set f__arg_this=this
   return true
endfunction
function sa__Ability0015_charge_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_setPosition(s__Ability0015_charge_ef[this],sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_z((s__Actor_actor[(this)])) + 125) // INLINED!!
				set s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]]=s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]] + ( ( Ability0015__RANGE_MAX - Ability0015__RANGE_INITIAL ) * TIMER_TICK ) / Ability0015__CHARGE_MAX_AT
				call s__Effect_setScale(s__Ability0015_charge_ef[this],(s__Effect_scale_true[(s__Ability0015_charge_ef[this])]) + TIMER_TICK) // INLINED!!
				if s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]] > Ability0015__RANGE_MAX then
					set s__Ability_prototype_cast_range[s__UnitActor_link_ability[this]]=Ability0015__RANGE_MAX
					call s__Effect_setScale(s__Ability0015_charge_ef[this],3.0)
				endif
				if s__Actor_timeout[this] >= 0.25 and s__Actor_stage[this] == 0 then
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((0.)*1.0)) // INLINED!!
					set s__Actor_stage[this]=1
				endif
   return true
endfunction
function sa__Ability0015_charge_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Mover_deallocate(s__Ability0015_charge_mv[this])
				set s__Ability0015_charge_mv[this]=0
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
				call sc__Object_deallocate(s__Ability0015_charge_ef[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0004__chain_rangeFilter takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= (IsUnitInRangeXY((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((target))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((sc__Actor__get_x(this) )*1.0), (( sc__Actor__get_y(this) )*1.0), (( s__Ability0004__chain_radius_explosion[this])*1.0))) // INLINED!!
   return true
endfunction
function sa__Ability0004__chain_explosionFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
set f__result_boolean= not IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Ability0004__chain_already[this]) // INLINED!!
   return true
endfunction
function sa__Ability0004__chain_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				call DoNothing()
   return true
endfunction
function sa__Ability0004__chain_killFilter takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability0004__chain_count[this] <= 0 then
set f__result_boolean= true
return true
				else
					set s__Ability0004__chain_target_previous[this]=s__UnitActor_target[this]
					set s__UnitActor_target[this]=s__Unit_prototype_get(s__Group_getNearest(s__Ability0004__chain_group_wave[this] , sc__Actor__get_x(this) , sc__Actor__get_y(this) , null))
					if s__UnitActor_target[this] != 0 then
						set s__Actor_timeout[this]=0.
						set s__Actor_duration[this]=Ability0004__INTERVAL
						call sc__Actor__set_x(this,sc__Object__get_x(s__UnitActor_target[this]))
						call sc__Actor__set_y(this,sc__Object__get_y(s__UnitActor_target[this]))
set f__result_boolean= false
return true
					else
set f__result_boolean= true
return true
					endif
				endif
   return true
endfunction
function sa__Ability0004__chain_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer l= s__Lightning_createOO("CLPB" , s__Ability0004__chain_target_previous[this] , s__UnitActor_target[this])
				set s__Lightning_oz1[l]=s__Object_pivot_z[s__Ability0004__chain_target_previous[this]]
				set s__Lightning_oz2[l]=s__Object_pivot_z[s__UnitActor_target[this]]
				set s__Lightning_duration[l]=0.45
				set s__Lightning_alpha[l]=1.5
				set s__Lightning_fade[l]=1.
				call s__Ability0004__chain_damageTarget(this,s__UnitActor_target[this])
				set s__Ability0004__chain_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_MAGICPOWER)) * Ability0004__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0004__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				call s__Effect_kill(s__Effect_createAttatched(Ability0004__EFFECT_PATH1 , (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) , "chest")) // INLINED!!
				if s__Actor_progress_bar[this] != 0 then
					call s__ProgressBar_deallocate(s__Actor_progress_bar[this])
					set s__Actor_progress_bar[this]=0
				endif
				set s__Ability0004__chain_count[this]=s__Ability0004__chain_count[this] - 1
				call GroupAddUnit(s__Ability0004__chain_already[this], (LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__UnitActor_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE))) // INLINED!!
				call GroupClear(s__Ability0004__chain_group_wave[this])
				call s__Ability0004__chain_explosionAction(this)
   return true
endfunction
function sa__Ability0004__chain_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call ReleaseGroup((s__Ability0004__chain_group_wave[this])) // INLINED!!
				call ReleaseGroup((s__Ability0004__chain_already[this])) // INLINED!!
				set s__Ability0004__chain_group_wave[this]=null
				set s__Ability0004__chain_already[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Ability0016_actor_killFilter takes nothing returns boolean
local integer this=f__arg_this
				set s__Ability0016_actor_count[this]=s__Ability0016_actor_count[this] - 1
				if s__Ability0016_actor_count[this] > 0 then
					set s__Actor_duration[this]=Ability0016__INTERVAL
					set s__Actor_timeout[this]=0.
set f__result_boolean= false
return true
				else
set f__result_boolean= true
return true
				endif
   return true
endfunction
function sa__Ability0016_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call sc__Object__set_yaw((s__Actor_actor[(this)]),s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
   return true
endfunction
function sa__Ability0016_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local real a= s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this])) // INLINED!!
    local integer ms= s__Missile_create((s__Actor_actor[(this)]) , Ability0016__EFFECT_PATH1 , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0016__STARTAT )*1.0) * Cos((( a)*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0016__STARTAT )*1.0) * Sin((( a)*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , a) // INLINED!!
				call s__Missile_setDamageFlag((ms),DAMAGE_TYPE_MAGICAL , ATTACK_TYPE_SPELL , true , false , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				set s__Missile_damage_type[ms]=DAMAGE_TYPE_PHYSICAL
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_ATTACK)) * Ability0016__DAMAGE_PER_ATTACK ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) + ( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[((this))])),STAT_TYPE_ACCURACY)) * Ability0016__DAMAGE_PER_ACCURACY ) * ( 1 + Ability0016__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_damage_id[ms]=Ability0016__ID
				set s__Missile_weapon_type[ms]=WEAPON_TYPE_METAL_LIGHT_SLICE
				if s__Ability0016_actor_count[this] == Ability0016__COUNT then
					set s__Missile_is_onhit[ms]=true
				else
					set s__Missile_is_onhit[ms]=false
				endif
				if s__Ability0016_actor_count[this] == Ability0016__COUNT - 1 then
					call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
					call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
					call s__Mover_deallocate(s__Ability0016_actor_mv[this])
					set s__Ability0016_actor_mv[this]=0
					call s__UnitActor_resetChanneling(this)
				endif
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0016__VELO)*1.0) // INLINED!!
   return true
endfunction
function sa__Ability0016_actor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
   return true
endfunction
function sa__Ability0016_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability0016_actor_mv[this] > 0 then
					call s__Mover_deallocate(s__Ability0016_actor_mv[this])
					set s__Ability0016_actor_mv[this]=0
				endif
    set f__arg_this=this
   return true
endfunction
function sa__Ability0003_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer ms= s__Ability0003__ball_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0003__STARTAT )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0003__STARTAT )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0003_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0003__BACKSWING , true) // INLINED!!
   return true
endfunction
function sa__Ability0003_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0003__ball_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_setPosition(s__Ability0003__ball_l[this],sc__Object__get_x(this) , sc__Object__get_y(this) , 5.)
   return true
endfunction
function sa__Ability0003__ball_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				call DoNothing()
   return true
endfunction
function sa__Ability0003__ball_afterExplosion takes nothing returns boolean
local integer this=f__arg_this
    local integer c= s__Circle_create(sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , Ability0003__EXPRAD)
				call s__Effect_setColor(c,255 , 153 , 0)
				set s__Circle_alpha[c]=0.66
				call s__Circle_setFadeOutPoint(c,0.25 , 0.75)
				call s__Effect_setDuration(s__Effect_create(Ability0003__EFFECT_PATH2 , sc__Object__get_x(this) , sc__Object__get_y(this) , 0. , 0.),1.5)
				call sc__Object_deallocate(s__Ability0003__ball_l[this])
				set s__Ability0003__ball_l[this]=0
   return true
endfunction
function sa__Ability0003__ball_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				if s__Ability0003__ball_l[this] != 0 then
					call s__Circle_setFadeOutPoint(s__Ability0003__ball_l[this],0. , 1.5)
					set s__Ability0003__ball_l[this]=0
				endif
    set f__arg_this=this
   return true
endfunction
function sa__Ability0002_actor_suspendFilterAdditional takes nothing returns boolean
local integer this=f__arg_this
set f__result_boolean= s__Unit_prototype_isUnitType(s__UnitActor_target[this],UNIT_TYPE_DEAD)
   return true
endfunction
function sa__Ability0002_actor_onSuspend takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA, (((GetUnitState((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), UNIT_STATE_MANA)) + R2I(s__Ability0002_actor_mana[this]))*1.0)) // INLINED!!
   return true
endfunction
function sa__Ability0002_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local real nx= (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0002__STARTAT )*1.0) * Cos((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local real ny= (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0002__STARTAT )*1.0) * Sin((( sc__Object__get_yaw((s__Actor_actor[(this)])))*1.0) * bj_DEGTORAD)) // INLINED!!
    local integer ms= s__Missile_create((s__Actor_actor[(this)]) , Ability0002__EFFECT_PATH1 , nx , ny , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
				set s__Missile_damage_id[ms]=Ability0002__ID
				set s__Missile_damage[ms]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0002__DAMAGE_PER_ATTACK ) * ( 1 + Ability0002__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				set s__Missile_attack_type[ms]=ATTACK_TYPE_SPELL
				set s__Missile_radius_target[ms]=Ability0002__VELO * TIMER_TICK * 0.5
				set s__Movement_velo[s__Object_movement[(ms)]]=((Ability0002__VELO)*1.0) // INLINED!!
				call s__Missile__set_target((ms),(s__UnitActor_target[this])) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0002__BACKSWING , true) // INLINED!!
   return true
endfunction
function sa__Ability0002_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitFacing((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[((s__Actor_actor[(this)]))]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Object__get_x(s__UnitActor_target[this]) , sc__Object__get_y(s__UnitActor_target[this]))) // INLINED!!
				if s__Actor_duration_max[this] - s__Actor_timeout[this] < 0.25 and not s__Ability0002_actor_play[this] then
					call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
					set s__Ability0002_actor_play[this]=true
				endif
   return true
endfunction
function sa__Ability0002_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0020___bullet_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				call s__Missile_damageTarget(this,target)
				call s__Effect_setDuration(s__Effect_create(Ability0020___EFFECT_PATH2 , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 270),1.5)
   return true
endfunction
function sa__Ability0020_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer ms= 0
				if s__Ability0020_actor_count[this] > 0 then
					set ms=s__Ability0020___bullet_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Cos((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Sin((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0020_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				endif
   return true
endfunction
function sa__Ability0020_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
    local integer ms= 0
				set s__Ability0020_actor_shoot[this]=s__Ability0020_actor_shoot[this] + TIMER_TICK
				if s__Ability0020_actor_shoot[this] >= Ability0020___INTERVAL and s__Ability0020_actor_count[this] > 0 then
					set ms=s__Ability0020___bullet_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Cos((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0020___STARTAT )*1.0) * Sin((( s__Ability0020_actor_angle[this])*1.0) * bj_DEGTORAD)) , sc__Object__get_z((s__Actor_actor[(this)])) + s__Object_pivot_z[(s__Actor_actor[(this)])] , s__Ability0020_actor_angle[this] + GetRandomReal(- 3, 3) , s__UnitActor_level[this]) // INLINED!!
					call sc__Object__set_yaw((s__Actor_actor[(this)]),s__Ability0020_actor_angle[this]) // INLINED!!
					set s__Ability0020_actor_count[this]=s__Ability0020_actor_count[this] - 1
					set s__Ability0020_actor_shoot[this]=s__Ability0020_actor_shoot[this] - Ability0020___INTERVAL
					if s__Ability0020_actor_count[this] > 0 then
						call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"stand") // INLINED!!
						call s__Unit_prototype_setAnim((s__Actor_actor[(this)]),"attack") // INLINED!!
						call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((3.)*1.0)) // INLINED!!
					endif
				endif
   return true
endfunction
function sa__Ability0020_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
				call s__Mover_deallocate(s__Ability0020_actor_mover[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0001_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0001_a2_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__Math_anglePoints(sc__Actor__get_x(this) , sc__Actor__get_y(this) , s__Actor_x2[this] , s__Actor_y2[this]) , s__UnitActor_level[this]) // INLINED!!
   return true
endfunction
function sa__Ability0001_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0021_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
   local integer ex= s__Ability0021_explosion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , Ability0021___EXPRAD , s__UnitActor_level[this]) // INLINED!!
			set s__Explosion_damage[ex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0021___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0021___DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
			call s__Explosion_activate(ex)
   return true
endfunction
function sa__Ability0021_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
			call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0001_a2_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer lh= s__Lightning_create("CLSB" , sc__Object__get_x(s__Ability0001_a2_effect_1[this]) , sc__Object__get_y(s__Ability0001_a2_effect_1[this]) , sc__Object__get_z(s__Ability0001_a2_effect_1[this]) , sc__Object__get_x(s__Ability0001_a2_effect_2[this]) , sc__Object__get_y(s__Ability0001_a2_effect_2[this]) , sc__Object__get_z(s__Ability0001_a2_effect_2[this]))
    local integer lex= s__Ability0001_explosion__allocate((s__Actor_actor[((this))]) , sc__Object__get_x(s__Ability0001_a2_effect_1[this]) , sc__Object__get_y(s__Ability0001_a2_effect_1[this]) , sc__Object__get_x(s__Ability0001_a2_effect_2[this]) , sc__Object__get_y(s__Ability0001_a2_effect_2[this]) , Ability0001__BALL_RADIUS) // INLINED!!
				call s__Lightning_setDuration(lh,0.25)
				set s__Lightning_fade[lh]=3.
				set s__Explosion_damage[lex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0001__DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0001__DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
				call s__Explosion_activate(lex)
   return true
endfunction
function sa__Ability0001_a2_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				if s__Actor_stage[this] == 0 then
					if (IsUnitAlly((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), (GetLocalPlayer()))) then // INLINED!!
						call s__Square_setLocalColor(s__Ability0001_a2_sq[this],0. , 1. , 0. , s__Line__Line_a[s__Ability0001_a2_sq[this]])
					else
						call s__Square_setLocalColor(s__Ability0001_a2_sq[this],1. , 0. , 0. , s__Line__Line_a[s__Ability0001_a2_sq[this]])
					endif
					call sc__Object__set_z(s__Ability0001_a2_effect_1[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]) + ( Ability0001__BALL_HEIGHT / Ability0001__BALL_UP ) * TIMER_TICK)
					call sc__Object__set_z(s__Ability0001_a2_effect_2[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]))
					call s__Effect_setAlpha(s__Ability0001_a2_effect_1[this],R2I(( s__Actor_timeout[this] / Ability0001__BALL_UP ) * 255))
					call s__Effect_setAlpha(s__Ability0001_a2_effect_2[this],R2I(( s__Actor_timeout[this] / Ability0001__BALL_UP ) * 255))
					if s__Actor_timeout[this] >= Ability0001__BALL_UP then
						call s__Effect_setAlpha(s__Ability0001_a2_effect_1[this],255)
						call s__Effect_setAlpha(s__Ability0001_a2_effect_2[this],255)
						call sc__Object__set_z(s__Ability0001_a2_effect_1[this],Ability0001__BALL_HEIGHT)
						call sc__Object__set_z(s__Ability0001_a2_effect_2[this],sc__Object__get_z(s__Ability0001_a2_effect_1[this]))
						call s__Actor_stageNext(this)
					endif
				endif
   return true
endfunction
function sa__Ability0001_a2_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_kill(s__Ability0001_a2_effect_1[this])
				call s__Effect_kill(s__Ability0001_a2_effect_2[this])
				call sc__Line__Line_deallocate(s__Ability0001_a2_sq[this])
    set f__arg_this=this
   return true
endfunction
function sa__Ability0030___mss_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				if IsUnitInGroup((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(target)]), s__Agent_INDEX_ORIGIN_HANDLE)), s__Missile_group_wave[this]) then // INLINED!!
					set s__Missile_damage[this]=s__Missile_damage[this] * Ability0030___DAMAGE_SECONDARY
					set s__Missile_is_onhit[this]=false
				endif
				call s__Missile_damageTarget(this,target)
   return true
endfunction
function sa__Ability0030___mss_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call sc__Object__set_pitch(this,0.)
    set f__arg_this=this
   return true
endfunction
function sa__Ability0030___ball_periodicAction takes nothing returns boolean
local integer this=f__arg_this
				call s__Effect_setPosition(s__Ability0030___ball_c[this],sc__Object__get_x(this) , sc__Object__get_y(this) , 2.)
   return true
endfunction
function sa__Ability0030___ball_executeWave takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
   return true
endfunction
function sa__Ability0030___ball_beforeWave takes nothing returns boolean
local integer this=f__arg_this
				call GroupClear(s__Missile_group_wave[this])
   return true
endfunction
function sa__Ability0030___ball_afterWave takes nothing returns boolean
local integer this=f__arg_this
    local integer u= s__Unit_prototype_get(s__Group_getRandomUnit(s__Missile_group_wave[this]))
    local integer ms= 0
    local integer ef= 0
				if u > 0 then
					set ms=s__Ability0030___mss_create(s__Missile_owner[this] , u , sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_z(this) , s__Ability0030___ball_level[this])
					call s__MissileGroup_add(s__Ability0030___ball_mg[this],ms)
					set s__Ability0030___ball_count_true[this]=s__Ability0030___ball_count_true[this] - 1
					if s__Ability0030___ball_count_true[this] <= 0 then
						set s__Missile_want_kill[this]=true
					endif
					set s__Movement_velo[s__Object_movement[(this)]]=((Ability0030___VELO * 0.5)*1.0) // INLINED!!
					set ef=s__Effect_create(Ability0030___EFFECT_PATH3 , (((sc__Object__get_x(this) )*1.0) + (( Ability0030___STARTAT * - 1 )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y(this) )*1.0) + (( Ability0030___STARTAT * - 1 )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u)))*1.0) * bj_DEGTORAD)) , sc__Object__get_z(this) , s__Math_anglePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(u) , sc__Object__get_y(u))) // INLINED!!
					call sc__Object__set_pitch(ef,- 90.)
					call s__Effect_kill(ef)
				else
					set s__Movement_velo[s__Object_movement[(this)]]=((Ability0030___VELO)*1.0) // INLINED!!
				endif
   return true
endfunction
function sa__Ability0030___ball_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__MissileGroup_setDuration(s__Ability0030___ball_mg[this],15.)
				set s__Ability0030___ball_mg[this]=0
				call s__Circle_setFadeOutPoint(s__Ability0030___ball_c[this],0. , 0.75)
    set f__arg_this=this
   return true
endfunction
function sa__Ability0030_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
    local integer ms= s__Ability0030___ball_create((s__Actor_actor[(this)]) , (((sc__Object__get_x((s__Actor_actor[(this)])) )*1.0) + (( Ability0030___STARTAT )*1.0) * Cos((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , (((sc__Object__get_y((s__Actor_actor[(this)])) )*1.0) + (( Ability0030___STARTAT )*1.0) * Sin((( s__Math_anglePoints(sc__Object__get_x((s__Actor_actor[(this)])) , sc__Object__get_y((s__Actor_actor[(this)])) , sc__Actor__get_x(this) , sc__Actor__get_y(this)))*1.0) * bj_DEGTORAD)) , 75. , s__Ability0030_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0030___BACKSWING , true) // INLINED!!
   return true
endfunction
function sa__Ability0030_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call s__Unit_prototype_queueAnim((s__Actor_actor[(this)]),"stand ready") // INLINED!!
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Ability0000_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   return true
endfunction
function sa__Ability0000_actor_onComplete takes nothing returns boolean
local integer this=f__arg_this
				call s__Ability0000_mv_create((s__Actor_actor[(this)]) , s__Ability0000_actor_angle[this] , s__UnitActor_level[this]) // INLINED!!
   return true
endfunction
function sa__Ability0040_actor_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   local integer ex= 0
			if s__Actor_stage[this] == 0 then
				call sc__Object__set_z(s__Ability0040_actor_ef[this],Ability0040___DRAGON_DIST + ( 500. - ( 500. * s__Actor_timeout[this] / Ability0040___CAST ) ))
				if s__Actor_timeout[this] >= Ability0040___CAST then
					set ex=s__Ability0040_explosion_create((s__Actor_actor[(this)]) , sc__Actor__get_x(this) , sc__Actor__get_y(this) , Ability0040___EXPRAD , s__UnitActor_level[this] , s__Ability0040_actor_ef[this]) // INLINED!!
					set s__Explosion_damage[ex]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_MAGICPOWER)) * Ability0040___DAMAGE_PER_MAGICPOWER ) * ( 1 + Ability0040___DAMAGE_PER_LEVEL * ( s__UnitActor_level[this] - 1 ) ) // INLINED!!
					call s__Explosion_activate(ex)
					set s__Actor_stage[this]=1
					set s__Actor_timeout[this]=0.
				endif
			elseif s__Actor_stage[this] == 1 then
				if s__Ability0040_actor_b[this] then
					call sc__Object__set_offset_z(s__Ability0040_actor_ef[this],2.5)
				else
					call sc__Object__set_offset_z(s__Ability0040_actor_ef[this],- 2.5)
				endif
				set s__Ability0040_actor_b[this]=not s__Ability0040_actor_b[this]
				if s__Actor_timeout[this] >= Ability0040___COUNT * Ability0040___INTERVAL then
					set s__Actor_want_destroy[this]=true
				endif
			endif
   return true
endfunction
function sa__Ability0040_actor_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			set s__Ability0040_actor_ef[this]=0
    set f__arg_this=this
   return true
endfunction
function sa__Ability0000_mv_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
    local integer kn= s__knockback_create(target , Ability0000__KNOCKBACK_DISTANCE / Ability0000__KNOCKABCK_DURATION , sc__Object__get_yaw((s__Actor_actor[(this)]))) // INLINED!!
				set s__Movement_z_velo[kn]=300.
				set s__Movement_gravity[kn]=( 300. * 2 ) / Ability0000__KNOCKABCK_DURATION
				set s__Actor_duration[kn]=Ability0000__KNOCKABCK_DURATION
				set s__UnitMovement_damage_id[this]=Ability0000__ID
				call s__UnitMovement_setDamageFlag((this),DAMAGE_TYPE_PHYSICAL , ATTACK_TYPE_SPELL , false , true , INTERVAL_TYPE_SINGLE , VECTOR_TYPE_OUTTER , true , true) // INLINED!!
				if target == sc__Movement__get_target(this) then
					set s__UnitMovement_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK_ALTERNATE ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__UnitMovement_level[this] - 1 ) ) // INLINED!!
				else
					set s__UnitMovement_damage[this]=( (s__Unit_prototype_getCarculatedStatValue(((s__Actor_actor[(this)])),STAT_TYPE_ATTACK)) * Ability0000__DAMAGE_PER_ATTACK ) * ( 1 + Ability0000__DAMAGE_PER_LEVEL * ( s__UnitMovement_level[this] - 1 ) ) // INLINED!!
				endif
				call s__UnitMovement_damageTarget(this,target)
				call s__Effect_kill(s__Effect_setScale(s__Effect_create(EF_ROCK , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + s__Object_pivot_z[target] , 0),2.5))
				call s__Buff_add(0 , target , 'Stun' , 0.5)
   return true
endfunction
function sa__Ability0000_mv_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				call s__Movement__set_target(this,target)
				call s__UnitMovement_explosionAction(this)
				set s__Actor_want_destroy[this]=true
				call s__UnitActor_create((s__Actor_actor[(this)]) , 0 , 0. , 0. , 0 , Ability0000__BACKSWING , true) // INLINED!!
   return true
endfunction
function sa__Ability0000_mv_onDestroy takes nothing returns boolean
local integer this=f__arg_this
				call SetUnitTimeScale((LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(((s__Actor_actor[(this)])))]), s__Agent_INDEX_ORIGIN_HANDLE)), ((1.0)*1.0)) // INLINED!!
    set f__arg_this=this
   return true
endfunction
function sa__Circle_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer((s__Circle_main_timer[this])) // INLINED!!
			set s__Circle_main_timer[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__TargetCircle_create takes nothing returns boolean
local integer target=f__arg_integer1
local player owner=f__arg_player1
   local integer this= s__TargetCircle__allocate("UI\\Feedback\\Target\\Target.mdl" , sc__Object__get_x(target) , sc__Object__get_y(target) , sc__Object__get_z(target) + 2.0 , 270.)
			set s__Object_movement[this]=sc__Movement_create(this , 0 , 0)
			call sc__Movement__set_target(s__Object_movement[this],target)
			set s__Movement_flag_target_attatch[s__Object_movement[this]]=true
			call s__Effect_setScale(this,1.5)
			call s__Effect_setDuration(this,1.5)
set f__result_integer= this
   return true
endfunction
function sa__TargetCircle_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			set s__TargetCircle_owner[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Guardian_onDestroy takes nothing returns boolean
local integer this=f__arg_this
			call ReleaseTimer((s__Unit_prototype_main_timer[this])) // INLINED!!
			set s__Unit_prototype_main_timer[this]=null
    set f__arg_this=this
   return true
endfunction
function sa__Ability0010_potion_executeExplosion takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				if s__Ability0010_potion_potion_index[this] == 0 then
					call s__Unit_prototype_restoreHP(target,s__Missile_damage[this] * Ability0010__HEAL_BAESU)
				elseif s__Ability0010_potion_potion_index[this] == 1 then
					call s__Unit_prototype_restoreMP(target,Ability0010__MANA_RESTORE + Ability0010__MANA_RESTORE_PER_LEVEL * ( s__Ability0010_potion_level[this] - 1 ))
				elseif s__Ability0010_potion_potion_index[this] == 2 or s__Ability0010_potion_potion_index[this] == 3 then
					call s__Missile_damageTarget(this,target)
				endif
   return true
endfunction
function sa__Ability0010_potion_beforeExplosion takes nothing returns boolean
local integer this=f__arg_this
				call sc__Object__set_x(this,s__Ability0010_potion_tx[this])
				call sc__Object__set_y(this,s__Ability0010_potion_ty[this])
   return true
endfunction
function sa__Ability0010_potion_afterExplosion takes nothing returns boolean
local integer this=f__arg_this
    local integer c= s__Circle_create(sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , Ability0010__EXPRAD)
    local real rd= 0.
    local real ra= 0.
    local integer i= 0
				if s__Ability0010_potion_potion_index[this] == 0 then
					call s__Effect_setColor(c,0 , 255 , 0)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH10 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),0.75)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH11 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),1.5)
				elseif s__Ability0010_potion_potion_index[this] == 1 then
					call s__Effect_setColor(c,0 , 153 , 255)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH7 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),0.75)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH8 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65),1.5)
				elseif s__Ability0010_potion_potion_index[this] == 2 then
					call s__Effect_setColor(c,255 , 153 , 0)
					call s__Effect_setDuration(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH5 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.25),1.5)
					call s__Effect_kill(s__Effect_setAnimSpeed(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH6 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.25),0.66))
				elseif s__Ability0010_potion_potion_index[this] == 3 then
					call s__Effect_setColor(c,0 , 153 , 0)
					call s__Effect_kill(s__Effect_setScale(s__Effect_create(Ability0010__EFFECT_PATH12 , sc__Object__get_x(this) , sc__Object__get_y(this) , 5. , 270.),1.65))
				endif
				call s__Effect_setScale(this,1.75)
				call s__Circle_setFadeOutPoint(c,0 , 1.25)
   return true
endfunction
function sa__UndeadU000_periodicAction takes nothing returns boolean
local integer this=f__arg_this
   local integer a= 0
   local real dist= 0.
			if sc__Undead_getTarget(this) > 0 then
				set dist=s__Math_distancePoints(sc__Object__get_x(this) , sc__Object__get_y(this) , sc__Object__get_x(s__Undead_target[this]) , sc__Object__get_y(s__Undead_target[this]))
				set a=sc__Unit_prototype_getAbility(this,0)
				if s__Ability_prototype_count[a] > 0 and dist <= s__Ability_prototype_cast_range[a] and dist > 100. then
					set s__Ability_prototype_ai_target[a]=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
					if sc__Ability_prototype_pressRequest(a) then
return true
					endif
				endif
				set a=sc__Unit_prototype_getAbility(this,1)
				if s__Ability_prototype_count[a] > 0 and dist <= sc__Unit_prototype__get_attack_range(this) + 100. then
					if sc__Ability_prototype_pressRequest(a) then
return true
					endif
				endif
				set a=sc__Unit_prototype_getAbility(this,0)
				if s__Ability_prototype_count[a] > 0 and dist <= s__Ability_prototype_cast_range[a] then
					set s__Ability_prototype_ai_target[a]=(LoadUnitHandle(s__Agent_HASH, GetHandleId(s__Agent_origin_agent[(s__Undead_target[this])]), s__Agent_INDEX_ORIGIN_HANDLE)) // INLINED!!
					if sc__Ability_prototype_pressRequest(a) then
return true
					endif
				endif
			endif
   return true
endfunction
function sa__UndeadU001_init takes nothing returns boolean
local integer this=f__arg_this
			set s__Undead_acquire_range[this]=750.
   return true
endfunction
function sa__UndeadU002_init takes nothing returns boolean
local integer this=f__arg_this
			set s__Undead_acquire_range[this]=750.
   return true
endfunction
function sa__UndeadU003_init takes nothing returns boolean
local integer this=f__arg_this
			set s__Undead_acquire_range[this]=750.
   return true
endfunction
function sa__Abilityu001__mss_executeTarget takes nothing returns boolean
local integer this=f__arg_this
local integer target=f__arg_integer1
				if s__Missile_damageTarget(this,target) > 0. then
					call s__Buff_add(s__Missile_owner[this] , target , Abilityu001__ID , Abilityu001__DURATION)
				endif
   return true
endfunction

function jasshelper__initstructs1564173265 takes nothing returns nothing
    set st__AbilityIndicator_setColor[1]=CreateTrigger()
    set st__AbilityIndicator_setColor[2]=st__AbilityIndicator_setColor[1]
    set st__AbilityIndicator_setColor[89]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[94]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[100]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[109]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[130]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[142]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[152]=st__AbilityIndicator_setColor[2]
    set st__AbilityIndicator_setColor[120]=st__AbilityIndicator_setColor[1]
    set st__AbilityIndicator_setColor[147]=st__AbilityIndicator_setColor[1]
    set st__AbilityIndicator_setColor[157]=st__AbilityIndicator_setColor[1]
    call TriggerAddCondition(st__AbilityIndicator_setColor[1],Condition( function sa__AbilityIndicator_setColor))
    call TriggerAddAction(st__AbilityIndicator_setColor[1], function sa__AbilityIndicator_setColor)
    set st__AbilityIndicator_refresh[1]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_refresh[1],Condition( function sa__AbilityIndicator_refresh))
    call TriggerAddAction(st__AbilityIndicator_refresh[1], function sa__AbilityIndicator_refresh)
    set st__AbilityIndicator_show[1]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_show[1],Condition( function sa__AbilityIndicator_show))
    call TriggerAddAction(st__AbilityIndicator_show[1], function sa__AbilityIndicator_show)
    set st__AbilityIndicator_create=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_create,Condition( function sa__AbilityIndicator_create))
    set st__AbilityIndicator_onDestroy[1]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[1],Condition( function sa__AbilityIndicator_onDestroy))
    set st__LineIndicator_beforeRefresh[2]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[2],Condition( function sa__LineIndicator_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[2], function sa__LineIndicator_beforeRefresh)
    set st__AbilityIndicator_refresh[2]=CreateTrigger()
    set st__AbilityIndicator_refresh[89]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[94]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[100]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[109]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[130]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[142]=st__AbilityIndicator_refresh[2]
    set st__AbilityIndicator_refresh[152]=st__AbilityIndicator_refresh[2]
    call TriggerAddCondition(st__AbilityIndicator_refresh[2],Condition( function sa__LineIndicator_refresh))
    call TriggerAddAction(st__AbilityIndicator_refresh[2], function sa__LineIndicator_refresh)
    set st__AbilityIndicator_show[2]=CreateTrigger()
    set st__AbilityIndicator_show[89]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[94]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[100]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[109]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[130]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[142]=st__AbilityIndicator_show[2]
    set st__AbilityIndicator_show[152]=st__AbilityIndicator_show[2]
    call TriggerAddCondition(st__AbilityIndicator_show[2],Condition( function sa__LineIndicator_show))
    call TriggerAddAction(st__AbilityIndicator_show[2], function sa__LineIndicator_show)
    set st__LineIndicator_create=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_create,Condition( function sa__LineIndicator_create))
    set st__AbilityIndicator_onDestroy[2]=CreateTrigger()
    set st__AbilityIndicator_onDestroy[89]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[94]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[100]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[109]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[130]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[142]=st__AbilityIndicator_onDestroy[2]
    set st__AbilityIndicator_onDestroy[152]=st__AbilityIndicator_onDestroy[2]
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[2],Condition( function sa__LineIndicator_onDestroy))
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[2],Condition( function sa__AbilityIndicator_onDestroy))
    set st__Buff_addValue[5]=CreateTrigger()
    set st__Buff_addValue[85]=st__Buff_addValue[5]
    set st__Buff_addValue[86]=st__Buff_addValue[5]
    set st__Buff_addValue[135]=st__Buff_addValue[5]
    set st__Buff_addValue[137]=st__Buff_addValue[5]
    call TriggerAddCondition(st__Buff_addValue[5],Condition( function sa__Buff_addValue))
    call TriggerAddAction(st__Buff_addValue[5], function sa__Buff_addValue)
    set st__Buff_init[5]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[5],Condition( function sa__Buff_init))
    call TriggerAddAction(st__Buff_init[5], function sa__Buff_init)
    set st__Buff_update[5]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[5],Condition( function sa__Buff_update))
    call TriggerAddAction(st__Buff_update[5], function sa__Buff_update)
    set st__Buff_intervalAction[5]=CreateTrigger()
    set st__Buff_intervalAction[85]=st__Buff_intervalAction[5]
    set st__Buff_intervalAction[86]=st__Buff_intervalAction[5]
    set st__Buff_intervalAction[113]=st__Buff_intervalAction[5]
    set st__Buff_intervalAction[135]=st__Buff_intervalAction[5]
    set st__Buff_intervalAction[137]=st__Buff_intervalAction[5]
    set st__Buff_intervalAction[144]=st__Buff_intervalAction[5]
    call TriggerAddCondition(st__Buff_intervalAction[5],Condition( function sa__Buff_intervalAction))
    call TriggerAddAction(st__Buff_intervalAction[5], function sa__Buff_intervalAction)
    set st__Buff_periodicAction[5]=CreateTrigger()
    set st__Buff_periodicAction[85]=st__Buff_periodicAction[5]
    set st__Buff_periodicAction[86]=st__Buff_periodicAction[5]
    set st__Buff_periodicAction[113]=st__Buff_periodicAction[5]
    set st__Buff_periodicAction[135]=st__Buff_periodicAction[5]
    set st__Buff_periodicAction[137]=st__Buff_periodicAction[5]
    set st__Buff_periodicAction[144]=st__Buff_periodicAction[5]
    call TriggerAddCondition(st__Buff_periodicAction[5],Condition( function sa__Buff_periodicAction))
    call TriggerAddAction(st__Buff_periodicAction[5], function sa__Buff_periodicAction)
    set st__Buff_create=CreateTrigger()
    call TriggerAddCondition(st__Buff_create,Condition( function sa__Buff_create))
    set st__Buff_onDestroy[5]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[5],Condition( function sa__Buff_onDestroy))
    set st__Explosion_rangeFilter[11]=CreateTrigger()
    set st__Explosion_rangeFilter[122]=st__Explosion_rangeFilter[11]
    set st__Explosion_rangeFilter[138]=st__Explosion_rangeFilter[11]
    set st__Explosion_rangeFilter[145]=st__Explosion_rangeFilter[11]
    set st__Explosion_rangeFilter[155]=st__Explosion_rangeFilter[11]
    call TriggerAddCondition(st__Explosion_rangeFilter[11],Condition( function sa__Explosion_rangeFilter))
    call TriggerAddAction(st__Explosion_rangeFilter[11], function sa__Explosion_rangeFilter)
    set st__Explosion_beforeExplosion[11]=CreateTrigger()
    set st__Explosion_beforeExplosion[12]=st__Explosion_beforeExplosion[11]
    set st__Explosion_beforeExplosion[91]=st__Explosion_beforeExplosion[12]
    set st__Explosion_beforeExplosion[108]=st__Explosion_beforeExplosion[12]
    set st__Explosion_beforeExplosion[128]=st__Explosion_beforeExplosion[12]
    set st__Explosion_beforeExplosion[13]=st__Explosion_beforeExplosion[11]
    call TriggerAddCondition(st__Explosion_beforeExplosion[11],Condition( function sa__Explosion_beforeExplosion))
    call TriggerAddAction(st__Explosion_beforeExplosion[11], function sa__Explosion_beforeExplosion)
    set st__Explosion_afterExplosion[11]=CreateTrigger()
    set st__Explosion_afterExplosion[12]=st__Explosion_afterExplosion[11]
    set st__Explosion_afterExplosion[91]=st__Explosion_afterExplosion[12]
    set st__Explosion_afterExplosion[108]=st__Explosion_afterExplosion[12]
    set st__Explosion_afterExplosion[128]=st__Explosion_afterExplosion[12]
    set st__Explosion_afterExplosion[13]=st__Explosion_afterExplosion[11]
    set st__Explosion_afterExplosion[122]=st__Explosion_afterExplosion[11]
    set st__Explosion_afterExplosion[138]=st__Explosion_afterExplosion[11]
    set st__Explosion_afterExplosion[145]=st__Explosion_afterExplosion[11]
    set st__Explosion_afterExplosion[155]=st__Explosion_afterExplosion[11]
    call TriggerAddCondition(st__Explosion_afterExplosion[11],Condition( function sa__Explosion_afterExplosion))
    call TriggerAddAction(st__Explosion_afterExplosion[11], function sa__Explosion_afterExplosion)
    set st__Explosion_explosionFilterAdditional[11]=CreateTrigger()
    set st__Explosion_explosionFilterAdditional[12]=st__Explosion_explosionFilterAdditional[11]
    set st__Explosion_explosionFilterAdditional[91]=st__Explosion_explosionFilterAdditional[12]
    set st__Explosion_explosionFilterAdditional[108]=st__Explosion_explosionFilterAdditional[12]
    set st__Explosion_explosionFilterAdditional[128]=st__Explosion_explosionFilterAdditional[12]
    set st__Explosion_explosionFilterAdditional[13]=st__Explosion_explosionFilterAdditional[11]
    set st__Explosion_explosionFilterAdditional[122]=st__Explosion_explosionFilterAdditional[11]
    set st__Explosion_explosionFilterAdditional[138]=st__Explosion_explosionFilterAdditional[11]
    set st__Explosion_explosionFilterAdditional[145]=st__Explosion_explosionFilterAdditional[11]
    set st__Explosion_explosionFilterAdditional[155]=st__Explosion_explosionFilterAdditional[11]
    call TriggerAddCondition(st__Explosion_explosionFilterAdditional[11],Condition( function sa__Explosion_explosionFilterAdditional))
    call TriggerAddAction(st__Explosion_explosionFilterAdditional[11], function sa__Explosion_explosionFilterAdditional)
    set st__Explosion_executeExplosion[11]=CreateTrigger()
    set st__Explosion_executeExplosion[12]=st__Explosion_executeExplosion[11]
    set st__Explosion_executeExplosion[13]=st__Explosion_executeExplosion[11]
    call TriggerAddCondition(st__Explosion_executeExplosion[11],Condition( function sa__Explosion_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[11], function sa__Explosion_executeExplosion)
    set st__Explosion_create=CreateTrigger()
    call TriggerAddCondition(st__Explosion_create,Condition( function sa__Explosion_create))
    set st__Explosion_onDestroy[11]=CreateTrigger()
    set st__Explosion_onDestroy[12]=st__Explosion_onDestroy[11]
    set st__Explosion_onDestroy[91]=st__Explosion_onDestroy[12]
    set st__Explosion_onDestroy[108]=st__Explosion_onDestroy[12]
    set st__Explosion_onDestroy[128]=st__Explosion_onDestroy[12]
    set st__Explosion_onDestroy[13]=st__Explosion_onDestroy[11]
    set st__Explosion_onDestroy[122]=st__Explosion_onDestroy[11]
    call TriggerAddCondition(st__Explosion_onDestroy[11],Condition( function sa__Explosion_onDestroy))
    set st__Explosion_rangeFilter[12]=CreateTrigger()
    set st__Explosion_rangeFilter[91]=st__Explosion_rangeFilter[12]
    set st__Explosion_rangeFilter[108]=st__Explosion_rangeFilter[12]
    set st__Explosion_rangeFilter[128]=st__Explosion_rangeFilter[12]
    call TriggerAddCondition(st__Explosion_rangeFilter[12],Condition( function sa__LineExplosion_rangeFilter))
    call TriggerAddAction(st__Explosion_rangeFilter[12], function sa__LineExplosion_rangeFilter)
    set st__LineExplosion_create=CreateTrigger()
    call TriggerAddCondition(st__LineExplosion_create,Condition( function sa__LineExplosion_create))
    set st__Explosion_rangeFilter[13]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_rangeFilter[13],Condition( function sa__SectorExplosion_rangeFilter))
    call TriggerAddAction(st__Explosion_rangeFilter[13], function sa__SectorExplosion_rangeFilter)
    set st__AbilityIndicator_refresh[157]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_refresh[157],Condition( function sa__Ability0040___ind_refresh))
    call TriggerAddAction(st__AbilityIndicator_refresh[157], function sa__Ability0040___ind_refresh)
    set st__AbilityIndicator_show[157]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_show[157],Condition( function sa__Ability0040___ind_show))
    call TriggerAddAction(st__AbilityIndicator_show[157], function sa__Ability0040___ind_show)
    set st__AbilityIndicator_onDestroy[157]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[157],Condition( function sa__Ability0040___ind_onDestroy))
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[157],Condition( function sa__AbilityIndicator_onDestroy))
    set st__Explosion_beforeExplosion[155]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_beforeExplosion[155],Condition( function sa__Ability0040_explosion_beforeExplosion))
    call TriggerAddAction(st__Explosion_beforeExplosion[155], function sa__Ability0040_explosion_beforeExplosion)
    set st__Explosion_executeExplosion[155]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[155],Condition( function sa__Ability0040_explosion_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[155], function sa__Ability0040_explosion_executeExplosion)
    set st__Explosion_onDestroy[155]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_onDestroy[155],Condition( function sa__Ability0040_explosion_onDestroy))
    call TriggerAddCondition(st__Explosion_onDestroy[155],Condition( function sa__Explosion_onDestroy))
    set st__Ability0040___mystruct_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__Ability0040___mystruct_onDestroy,Condition( function sa__Ability0040___mystruct_onDestroy))
    set st__LineIndicator_beforeRefresh[152]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[152],Condition( function sa__Ability0030___ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[152], function sa__Ability0030___ind_beforeRefresh)
    set st__Math_distancePoints=CreateTrigger()
    call TriggerAddCondition(st__Math_distancePoints,Condition( function sa__Math_distancePoints))
    set st__MissileGroup_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__MissileGroup_onDestroy,Condition( function sa__MissileGroup_onDestroy))
    set st__Mover_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__Mover_onDestroy,Condition( function sa__Mover_onDestroy))
    set st__Object__get_x[19]=CreateTrigger()
    set st__Object__get_x[3]=st__Object__get_x[19]
    set st__Object__get_x[54]=st__Object__get_x[19]
    call TriggerAddCondition(st__Object__get_x[19],Condition( function sa__Object__get_x))
    call TriggerAddAction(st__Object__get_x[19], function sa__Object__get_x)
    set st__Object__get_y[19]=CreateTrigger()
    set st__Object__get_y[3]=st__Object__get_y[19]
    set st__Object__get_y[54]=st__Object__get_y[19]
    call TriggerAddCondition(st__Object__get_y[19],Condition( function sa__Object__get_y))
    call TriggerAddAction(st__Object__get_y[19], function sa__Object__get_y)
    set st__Object__get_z[19]=CreateTrigger()
    set st__Object__get_z[3]=st__Object__get_z[19]
    set st__Object__get_z[54]=st__Object__get_z[19]
    call TriggerAddCondition(st__Object__get_z[19],Condition( function sa__Object__get_z))
    call TriggerAddAction(st__Object__get_z[19], function sa__Object__get_z)
    set st__Object__get_yaw[19]=CreateTrigger()
    set st__Object__get_yaw[3]=st__Object__get_yaw[19]
    set st__Object__get_yaw[47]=st__Object__get_yaw[19]
    set st__Object__get_yaw[48]=st__Object__get_yaw[47]
    set st__Object__get_yaw[49]=st__Object__get_yaw[48]
    set st__Object__get_yaw[50]=st__Object__get_yaw[48]
    set st__Object__get_yaw[54]=st__Object__get_yaw[19]
    call TriggerAddCondition(st__Object__get_yaw[19],Condition( function sa__Object__get_yaw))
    call TriggerAddAction(st__Object__get_yaw[19], function sa__Object__get_yaw)
    set st__Object__get_pitch[19]=CreateTrigger()
    set st__Object__get_pitch[3]=st__Object__get_pitch[19]
    set st__Object__get_pitch[43]=st__Object__get_pitch[3]
    set st__Object__get_pitch[79]=st__Object__get_pitch[43]
    set st__Object__get_pitch[74]=st__Object__get_pitch[79]
    set st__Object__get_pitch[81]=st__Object__get_pitch[79]
    set st__Object__get_pitch[33]=st__Object__get_pitch[81]
    set st__Object__get_pitch[34]=st__Object__get_pitch[81]
    set st__Object__get_pitch[35]=st__Object__get_pitch[81]
    set st__Object__get_pitch[36]=st__Object__get_pitch[81]
    set st__Object__get_pitch[37]=st__Object__get_pitch[81]
    set st__Object__get_pitch[47]=st__Object__get_pitch[19]
    set st__Object__get_pitch[48]=st__Object__get_pitch[47]
    set st__Object__get_pitch[49]=st__Object__get_pitch[48]
    set st__Object__get_pitch[50]=st__Object__get_pitch[48]
    set st__Object__get_pitch[54]=st__Object__get_pitch[19]
    call TriggerAddCondition(st__Object__get_pitch[19],Condition( function sa__Object__get_pitch))
    call TriggerAddAction(st__Object__get_pitch[19], function sa__Object__get_pitch)
    set st__Object__get_roll[19]=CreateTrigger()
    set st__Object__get_roll[3]=st__Object__get_roll[19]
    set st__Object__get_roll[43]=st__Object__get_roll[3]
    set st__Object__get_roll[79]=st__Object__get_roll[43]
    set st__Object__get_roll[74]=st__Object__get_roll[79]
    set st__Object__get_roll[81]=st__Object__get_roll[79]
    set st__Object__get_roll[33]=st__Object__get_roll[81]
    set st__Object__get_roll[34]=st__Object__get_roll[81]
    set st__Object__get_roll[35]=st__Object__get_roll[81]
    set st__Object__get_roll[36]=st__Object__get_roll[81]
    set st__Object__get_roll[37]=st__Object__get_roll[81]
    set st__Object__get_roll[47]=st__Object__get_roll[19]
    set st__Object__get_roll[48]=st__Object__get_roll[47]
    set st__Object__get_roll[49]=st__Object__get_roll[48]
    set st__Object__get_roll[50]=st__Object__get_roll[48]
    set st__Object__get_roll[54]=st__Object__get_roll[19]
    call TriggerAddCondition(st__Object__get_roll[19],Condition( function sa__Object__get_roll))
    call TriggerAddAction(st__Object__get_roll[19], function sa__Object__get_roll)
    set st__Object__set_x[19]=CreateTrigger()
    set st__Object__set_x[3]=st__Object__set_x[19]
    set st__Object__set_x[47]=st__Object__set_x[19]
    set st__Object__set_x[48]=st__Object__set_x[47]
    set st__Object__set_x[49]=st__Object__set_x[48]
    set st__Object__set_x[50]=st__Object__set_x[48]
    set st__Object__set_x[54]=st__Object__set_x[19]
    call TriggerAddCondition(st__Object__set_x[19],Condition( function sa__Object__set_x))
    call TriggerAddAction(st__Object__set_x[19], function sa__Object__set_x)
    set st__Object__set_y[19]=CreateTrigger()
    set st__Object__set_y[3]=st__Object__set_y[19]
    set st__Object__set_y[47]=st__Object__set_y[19]
    set st__Object__set_y[48]=st__Object__set_y[47]
    set st__Object__set_y[49]=st__Object__set_y[48]
    set st__Object__set_y[50]=st__Object__set_y[48]
    set st__Object__set_y[54]=st__Object__set_y[19]
    call TriggerAddCondition(st__Object__set_y[19],Condition( function sa__Object__set_y))
    call TriggerAddAction(st__Object__set_y[19], function sa__Object__set_y)
    set st__Object__set_z[19]=CreateTrigger()
    set st__Object__set_z[3]=st__Object__set_z[19]
    set st__Object__set_z[47]=st__Object__set_z[19]
    set st__Object__set_z[48]=st__Object__set_z[47]
    set st__Object__set_z[49]=st__Object__set_z[48]
    set st__Object__set_z[50]=st__Object__set_z[48]
    set st__Object__set_z[54]=st__Object__set_z[19]
    call TriggerAddCondition(st__Object__set_z[19],Condition( function sa__Object__set_z))
    call TriggerAddAction(st__Object__set_z[19], function sa__Object__set_z)
    set st__Object__set_yaw[19]=CreateTrigger()
    set st__Object__set_yaw[3]=st__Object__set_yaw[19]
    set st__Object__set_yaw[47]=st__Object__set_yaw[19]
    set st__Object__set_yaw[48]=st__Object__set_yaw[47]
    set st__Object__set_yaw[49]=st__Object__set_yaw[48]
    set st__Object__set_yaw[50]=st__Object__set_yaw[48]
    set st__Object__set_yaw[54]=st__Object__set_yaw[19]
    call TriggerAddCondition(st__Object__set_yaw[19],Condition( function sa__Object__set_yaw))
    call TriggerAddAction(st__Object__set_yaw[19], function sa__Object__set_yaw)
    set st__Object__set_pitch[19]=CreateTrigger()
    set st__Object__set_pitch[3]=st__Object__set_pitch[19]
    set st__Object__set_pitch[43]=st__Object__set_pitch[3]
    set st__Object__set_pitch[79]=st__Object__set_pitch[43]
    set st__Object__set_pitch[74]=st__Object__set_pitch[79]
    set st__Object__set_pitch[81]=st__Object__set_pitch[79]
    set st__Object__set_pitch[33]=st__Object__set_pitch[81]
    set st__Object__set_pitch[34]=st__Object__set_pitch[81]
    set st__Object__set_pitch[35]=st__Object__set_pitch[81]
    set st__Object__set_pitch[36]=st__Object__set_pitch[81]
    set st__Object__set_pitch[37]=st__Object__set_pitch[81]
    set st__Object__set_pitch[47]=st__Object__set_pitch[19]
    set st__Object__set_pitch[48]=st__Object__set_pitch[47]
    set st__Object__set_pitch[49]=st__Object__set_pitch[48]
    set st__Object__set_pitch[50]=st__Object__set_pitch[48]
    set st__Object__set_pitch[54]=st__Object__set_pitch[19]
    call TriggerAddCondition(st__Object__set_pitch[19],Condition( function sa__Object__set_pitch))
    call TriggerAddAction(st__Object__set_pitch[19], function sa__Object__set_pitch)
    set st__Object__set_roll[19]=CreateTrigger()
    set st__Object__set_roll[3]=st__Object__set_roll[19]
    set st__Object__set_roll[43]=st__Object__set_roll[3]
    set st__Object__set_roll[79]=st__Object__set_roll[43]
    set st__Object__set_roll[74]=st__Object__set_roll[79]
    set st__Object__set_roll[81]=st__Object__set_roll[79]
    set st__Object__set_roll[33]=st__Object__set_roll[81]
    set st__Object__set_roll[34]=st__Object__set_roll[81]
    set st__Object__set_roll[35]=st__Object__set_roll[81]
    set st__Object__set_roll[36]=st__Object__set_roll[81]
    set st__Object__set_roll[37]=st__Object__set_roll[81]
    set st__Object__set_roll[47]=st__Object__set_roll[19]
    set st__Object__set_roll[48]=st__Object__set_roll[47]
    set st__Object__set_roll[49]=st__Object__set_roll[48]
    set st__Object__set_roll[50]=st__Object__set_roll[48]
    set st__Object__set_roll[54]=st__Object__set_roll[19]
    call TriggerAddCondition(st__Object__set_roll[19],Condition( function sa__Object__set_roll))
    call TriggerAddAction(st__Object__set_roll[19], function sa__Object__set_roll)
    set st__Object__get_offset_x[19]=CreateTrigger()
    set st__Object__get_offset_x[3]=st__Object__get_offset_x[19]
    set st__Object__get_offset_x[43]=st__Object__get_offset_x[3]
    set st__Object__get_offset_x[79]=st__Object__get_offset_x[43]
    set st__Object__get_offset_x[74]=st__Object__get_offset_x[79]
    set st__Object__get_offset_x[81]=st__Object__get_offset_x[79]
    set st__Object__get_offset_x[33]=st__Object__get_offset_x[81]
    set st__Object__get_offset_x[34]=st__Object__get_offset_x[81]
    set st__Object__get_offset_x[35]=st__Object__get_offset_x[81]
    set st__Object__get_offset_x[36]=st__Object__get_offset_x[81]
    set st__Object__get_offset_x[37]=st__Object__get_offset_x[81]
    set st__Object__get_offset_x[47]=st__Object__get_offset_x[19]
    set st__Object__get_offset_x[48]=st__Object__get_offset_x[47]
    set st__Object__get_offset_x[49]=st__Object__get_offset_x[48]
    set st__Object__get_offset_x[50]=st__Object__get_offset_x[48]
    set st__Object__get_offset_x[54]=st__Object__get_offset_x[19]
    call TriggerAddCondition(st__Object__get_offset_x[19],Condition( function sa__Object__get_offset_x))
    call TriggerAddAction(st__Object__get_offset_x[19], function sa__Object__get_offset_x)
    set st__Object__get_offset_y[19]=CreateTrigger()
    set st__Object__get_offset_y[3]=st__Object__get_offset_y[19]
    set st__Object__get_offset_y[43]=st__Object__get_offset_y[3]
    set st__Object__get_offset_y[79]=st__Object__get_offset_y[43]
    set st__Object__get_offset_y[74]=st__Object__get_offset_y[79]
    set st__Object__get_offset_y[81]=st__Object__get_offset_y[79]
    set st__Object__get_offset_y[33]=st__Object__get_offset_y[81]
    set st__Object__get_offset_y[34]=st__Object__get_offset_y[81]
    set st__Object__get_offset_y[35]=st__Object__get_offset_y[81]
    set st__Object__get_offset_y[36]=st__Object__get_offset_y[81]
    set st__Object__get_offset_y[37]=st__Object__get_offset_y[81]
    set st__Object__get_offset_y[47]=st__Object__get_offset_y[19]
    set st__Object__get_offset_y[48]=st__Object__get_offset_y[47]
    set st__Object__get_offset_y[49]=st__Object__get_offset_y[48]
    set st__Object__get_offset_y[50]=st__Object__get_offset_y[48]
    set st__Object__get_offset_y[54]=st__Object__get_offset_y[19]
    call TriggerAddCondition(st__Object__get_offset_y[19],Condition( function sa__Object__get_offset_y))
    call TriggerAddAction(st__Object__get_offset_y[19], function sa__Object__get_offset_y)
    set st__Object__get_offset_z[19]=CreateTrigger()
    set st__Object__get_offset_z[3]=st__Object__get_offset_z[19]
    set st__Object__get_offset_z[43]=st__Object__get_offset_z[3]
    set st__Object__get_offset_z[79]=st__Object__get_offset_z[43]
    set st__Object__get_offset_z[74]=st__Object__get_offset_z[79]
    set st__Object__get_offset_z[81]=st__Object__get_offset_z[79]
    set st__Object__get_offset_z[33]=st__Object__get_offset_z[81]
    set st__Object__get_offset_z[34]=st__Object__get_offset_z[81]
    set st__Object__get_offset_z[35]=st__Object__get_offset_z[81]
    set st__Object__get_offset_z[36]=st__Object__get_offset_z[81]
    set st__Object__get_offset_z[37]=st__Object__get_offset_z[81]
    set st__Object__get_offset_z[47]=st__Object__get_offset_z[19]
    set st__Object__get_offset_z[48]=st__Object__get_offset_z[47]
    set st__Object__get_offset_z[49]=st__Object__get_offset_z[48]
    set st__Object__get_offset_z[50]=st__Object__get_offset_z[48]
    set st__Object__get_offset_z[54]=st__Object__get_offset_z[19]
    call TriggerAddCondition(st__Object__get_offset_z[19],Condition( function sa__Object__get_offset_z))
    call TriggerAddAction(st__Object__get_offset_z[19], function sa__Object__get_offset_z)
    set st__Object__get_offset_yaw[19]=CreateTrigger()
    set st__Object__get_offset_yaw[3]=st__Object__get_offset_yaw[19]
    set st__Object__get_offset_yaw[43]=st__Object__get_offset_yaw[3]
    set st__Object__get_offset_yaw[79]=st__Object__get_offset_yaw[43]
    set st__Object__get_offset_yaw[74]=st__Object__get_offset_yaw[79]
    set st__Object__get_offset_yaw[81]=st__Object__get_offset_yaw[79]
    set st__Object__get_offset_yaw[33]=st__Object__get_offset_yaw[81]
    set st__Object__get_offset_yaw[34]=st__Object__get_offset_yaw[81]
    set st__Object__get_offset_yaw[35]=st__Object__get_offset_yaw[81]
    set st__Object__get_offset_yaw[36]=st__Object__get_offset_yaw[81]
    set st__Object__get_offset_yaw[37]=st__Object__get_offset_yaw[81]
    set st__Object__get_offset_yaw[47]=st__Object__get_offset_yaw[19]
    set st__Object__get_offset_yaw[48]=st__Object__get_offset_yaw[47]
    set st__Object__get_offset_yaw[49]=st__Object__get_offset_yaw[48]
    set st__Object__get_offset_yaw[50]=st__Object__get_offset_yaw[48]
    set st__Object__get_offset_yaw[54]=st__Object__get_offset_yaw[19]
    call TriggerAddCondition(st__Object__get_offset_yaw[19],Condition( function sa__Object__get_offset_yaw))
    call TriggerAddAction(st__Object__get_offset_yaw[19], function sa__Object__get_offset_yaw)
    set st__Object__get_offset_pitch[19]=CreateTrigger()
    set st__Object__get_offset_pitch[3]=st__Object__get_offset_pitch[19]
    set st__Object__get_offset_pitch[43]=st__Object__get_offset_pitch[3]
    set st__Object__get_offset_pitch[79]=st__Object__get_offset_pitch[43]
    set st__Object__get_offset_pitch[74]=st__Object__get_offset_pitch[79]
    set st__Object__get_offset_pitch[81]=st__Object__get_offset_pitch[79]
    set st__Object__get_offset_pitch[33]=st__Object__get_offset_pitch[81]
    set st__Object__get_offset_pitch[34]=st__Object__get_offset_pitch[81]
    set st__Object__get_offset_pitch[35]=st__Object__get_offset_pitch[81]
    set st__Object__get_offset_pitch[36]=st__Object__get_offset_pitch[81]
    set st__Object__get_offset_pitch[37]=st__Object__get_offset_pitch[81]
    set st__Object__get_offset_pitch[47]=st__Object__get_offset_pitch[19]
    set st__Object__get_offset_pitch[48]=st__Object__get_offset_pitch[47]
    set st__Object__get_offset_pitch[49]=st__Object__get_offset_pitch[48]
    set st__Object__get_offset_pitch[50]=st__Object__get_offset_pitch[48]
    set st__Object__get_offset_pitch[54]=st__Object__get_offset_pitch[19]
    call TriggerAddCondition(st__Object__get_offset_pitch[19],Condition( function sa__Object__get_offset_pitch))
    call TriggerAddAction(st__Object__get_offset_pitch[19], function sa__Object__get_offset_pitch)
    set st__Object__get_offset_roll[19]=CreateTrigger()
    set st__Object__get_offset_roll[3]=st__Object__get_offset_roll[19]
    set st__Object__get_offset_roll[43]=st__Object__get_offset_roll[3]
    set st__Object__get_offset_roll[79]=st__Object__get_offset_roll[43]
    set st__Object__get_offset_roll[74]=st__Object__get_offset_roll[79]
    set st__Object__get_offset_roll[81]=st__Object__get_offset_roll[79]
    set st__Object__get_offset_roll[33]=st__Object__get_offset_roll[81]
    set st__Object__get_offset_roll[34]=st__Object__get_offset_roll[81]
    set st__Object__get_offset_roll[35]=st__Object__get_offset_roll[81]
    set st__Object__get_offset_roll[36]=st__Object__get_offset_roll[81]
    set st__Object__get_offset_roll[37]=st__Object__get_offset_roll[81]
    set st__Object__get_offset_roll[47]=st__Object__get_offset_roll[19]
    set st__Object__get_offset_roll[48]=st__Object__get_offset_roll[47]
    set st__Object__get_offset_roll[49]=st__Object__get_offset_roll[48]
    set st__Object__get_offset_roll[50]=st__Object__get_offset_roll[48]
    set st__Object__get_offset_roll[54]=st__Object__get_offset_roll[19]
    call TriggerAddCondition(st__Object__get_offset_roll[19],Condition( function sa__Object__get_offset_roll))
    call TriggerAddAction(st__Object__get_offset_roll[19], function sa__Object__get_offset_roll)
    set st__Object__set_offset_x[19]=CreateTrigger()
    set st__Object__set_offset_x[3]=st__Object__set_offset_x[19]
    set st__Object__set_offset_x[43]=st__Object__set_offset_x[3]
    set st__Object__set_offset_x[79]=st__Object__set_offset_x[43]
    set st__Object__set_offset_x[74]=st__Object__set_offset_x[79]
    set st__Object__set_offset_x[81]=st__Object__set_offset_x[79]
    set st__Object__set_offset_x[33]=st__Object__set_offset_x[81]
    set st__Object__set_offset_x[34]=st__Object__set_offset_x[81]
    set st__Object__set_offset_x[35]=st__Object__set_offset_x[81]
    set st__Object__set_offset_x[36]=st__Object__set_offset_x[81]
    set st__Object__set_offset_x[37]=st__Object__set_offset_x[81]
    set st__Object__set_offset_x[47]=st__Object__set_offset_x[19]
    set st__Object__set_offset_x[48]=st__Object__set_offset_x[47]
    set st__Object__set_offset_x[49]=st__Object__set_offset_x[48]
    set st__Object__set_offset_x[50]=st__Object__set_offset_x[48]
    set st__Object__set_offset_x[54]=st__Object__set_offset_x[19]
    call TriggerAddCondition(st__Object__set_offset_x[19],Condition( function sa__Object__set_offset_x))
    call TriggerAddAction(st__Object__set_offset_x[19], function sa__Object__set_offset_x)
    set st__Object__set_offset_y[19]=CreateTrigger()
    set st__Object__set_offset_y[3]=st__Object__set_offset_y[19]
    set st__Object__set_offset_y[43]=st__Object__set_offset_y[3]
    set st__Object__set_offset_y[79]=st__Object__set_offset_y[43]
    set st__Object__set_offset_y[74]=st__Object__set_offset_y[79]
    set st__Object__set_offset_y[81]=st__Object__set_offset_y[79]
    set st__Object__set_offset_y[33]=st__Object__set_offset_y[81]
    set st__Object__set_offset_y[34]=st__Object__set_offset_y[81]
    set st__Object__set_offset_y[35]=st__Object__set_offset_y[81]
    set st__Object__set_offset_y[36]=st__Object__set_offset_y[81]
    set st__Object__set_offset_y[37]=st__Object__set_offset_y[81]
    set st__Object__set_offset_y[47]=st__Object__set_offset_y[19]
    set st__Object__set_offset_y[48]=st__Object__set_offset_y[47]
    set st__Object__set_offset_y[49]=st__Object__set_offset_y[48]
    set st__Object__set_offset_y[50]=st__Object__set_offset_y[48]
    set st__Object__set_offset_y[54]=st__Object__set_offset_y[19]
    call TriggerAddCondition(st__Object__set_offset_y[19],Condition( function sa__Object__set_offset_y))
    call TriggerAddAction(st__Object__set_offset_y[19], function sa__Object__set_offset_y)
    set st__Object__set_offset_z[19]=CreateTrigger()
    set st__Object__set_offset_z[3]=st__Object__set_offset_z[19]
    set st__Object__set_offset_z[47]=st__Object__set_offset_z[19]
    set st__Object__set_offset_z[48]=st__Object__set_offset_z[47]
    set st__Object__set_offset_z[49]=st__Object__set_offset_z[48]
    set st__Object__set_offset_z[50]=st__Object__set_offset_z[48]
    set st__Object__set_offset_z[54]=st__Object__set_offset_z[19]
    call TriggerAddCondition(st__Object__set_offset_z[19],Condition( function sa__Object__set_offset_z))
    call TriggerAddAction(st__Object__set_offset_z[19], function sa__Object__set_offset_z)
    set st__Object__set_offset_yaw[19]=CreateTrigger()
    set st__Object__set_offset_yaw[3]=st__Object__set_offset_yaw[19]
    set st__Object__set_offset_yaw[43]=st__Object__set_offset_yaw[3]
    set st__Object__set_offset_yaw[79]=st__Object__set_offset_yaw[43]
    set st__Object__set_offset_yaw[74]=st__Object__set_offset_yaw[79]
    set st__Object__set_offset_yaw[81]=st__Object__set_offset_yaw[79]
    set st__Object__set_offset_yaw[33]=st__Object__set_offset_yaw[81]
    set st__Object__set_offset_yaw[34]=st__Object__set_offset_yaw[81]
    set st__Object__set_offset_yaw[35]=st__Object__set_offset_yaw[81]
    set st__Object__set_offset_yaw[36]=st__Object__set_offset_yaw[81]
    set st__Object__set_offset_yaw[37]=st__Object__set_offset_yaw[81]
    set st__Object__set_offset_yaw[47]=st__Object__set_offset_yaw[19]
    set st__Object__set_offset_yaw[48]=st__Object__set_offset_yaw[47]
    set st__Object__set_offset_yaw[49]=st__Object__set_offset_yaw[48]
    set st__Object__set_offset_yaw[50]=st__Object__set_offset_yaw[48]
    set st__Object__set_offset_yaw[54]=st__Object__set_offset_yaw[19]
    call TriggerAddCondition(st__Object__set_offset_yaw[19],Condition( function sa__Object__set_offset_yaw))
    call TriggerAddAction(st__Object__set_offset_yaw[19], function sa__Object__set_offset_yaw)
    set st__Object__set_offset_pitch[19]=CreateTrigger()
    set st__Object__set_offset_pitch[3]=st__Object__set_offset_pitch[19]
    set st__Object__set_offset_pitch[43]=st__Object__set_offset_pitch[3]
    set st__Object__set_offset_pitch[79]=st__Object__set_offset_pitch[43]
    set st__Object__set_offset_pitch[74]=st__Object__set_offset_pitch[79]
    set st__Object__set_offset_pitch[81]=st__Object__set_offset_pitch[79]
    set st__Object__set_offset_pitch[33]=st__Object__set_offset_pitch[81]
    set st__Object__set_offset_pitch[34]=st__Object__set_offset_pitch[81]
    set st__Object__set_offset_pitch[35]=st__Object__set_offset_pitch[81]
    set st__Object__set_offset_pitch[36]=st__Object__set_offset_pitch[81]
    set st__Object__set_offset_pitch[37]=st__Object__set_offset_pitch[81]
    set st__Object__set_offset_pitch[47]=st__Object__set_offset_pitch[19]
    set st__Object__set_offset_pitch[48]=st__Object__set_offset_pitch[47]
    set st__Object__set_offset_pitch[49]=st__Object__set_offset_pitch[48]
    set st__Object__set_offset_pitch[50]=st__Object__set_offset_pitch[48]
    set st__Object__set_offset_pitch[54]=st__Object__set_offset_pitch[19]
    call TriggerAddCondition(st__Object__set_offset_pitch[19],Condition( function sa__Object__set_offset_pitch))
    call TriggerAddAction(st__Object__set_offset_pitch[19], function sa__Object__set_offset_pitch)
    set st__Object__set_offset_roll[19]=CreateTrigger()
    set st__Object__set_offset_roll[3]=st__Object__set_offset_roll[19]
    set st__Object__set_offset_roll[43]=st__Object__set_offset_roll[3]
    set st__Object__set_offset_roll[79]=st__Object__set_offset_roll[43]
    set st__Object__set_offset_roll[74]=st__Object__set_offset_roll[79]
    set st__Object__set_offset_roll[81]=st__Object__set_offset_roll[79]
    set st__Object__set_offset_roll[33]=st__Object__set_offset_roll[81]
    set st__Object__set_offset_roll[34]=st__Object__set_offset_roll[81]
    set st__Object__set_offset_roll[35]=st__Object__set_offset_roll[81]
    set st__Object__set_offset_roll[36]=st__Object__set_offset_roll[81]
    set st__Object__set_offset_roll[37]=st__Object__set_offset_roll[81]
    set st__Object__set_offset_roll[47]=st__Object__set_offset_roll[19]
    set st__Object__set_offset_roll[48]=st__Object__set_offset_roll[47]
    set st__Object__set_offset_roll[49]=st__Object__set_offset_roll[48]
    set st__Object__set_offset_roll[50]=st__Object__set_offset_roll[48]
    set st__Object__set_offset_roll[54]=st__Object__set_offset_roll[19]
    call TriggerAddCondition(st__Object__set_offset_roll[19],Condition( function sa__Object__set_offset_roll))
    call TriggerAddAction(st__Object__set_offset_roll[19], function sa__Object__set_offset_roll)
    set st__Object_setOrientation[19]=CreateTrigger()
    set st__Object_setOrientation[3]=st__Object_setOrientation[19]
    set st__Object_setOrientation[43]=st__Object_setOrientation[3]
    set st__Object_setOrientation[79]=st__Object_setOrientation[43]
    set st__Object_setOrientation[74]=st__Object_setOrientation[79]
    set st__Object_setOrientation[81]=st__Object_setOrientation[79]
    set st__Object_setOrientation[33]=st__Object_setOrientation[81]
    set st__Object_setOrientation[34]=st__Object_setOrientation[81]
    set st__Object_setOrientation[35]=st__Object_setOrientation[81]
    set st__Object_setOrientation[36]=st__Object_setOrientation[81]
    set st__Object_setOrientation[37]=st__Object_setOrientation[81]
    set st__Object_setOrientation[52]=st__Object_setOrientation[3]
    set st__Object_setOrientation[72]=st__Object_setOrientation[52]
    set st__Object_setOrientation[73]=st__Object_setOrientation[52]
    set st__Object_setOrientation[77]=st__Object_setOrientation[52]
    set st__Object_setOrientation[98]=st__Object_setOrientation[77]
    set st__Object_setOrientation[114]=st__Object_setOrientation[77]
    set st__Object_setOrientation[117]=st__Object_setOrientation[77]
    set st__Object_setOrientation[140]=st__Object_setOrientation[77]
    set st__Object_setOrientation[149]=st__Object_setOrientation[77]
    set st__Object_setOrientation[150]=st__Object_setOrientation[77]
    set st__Object_setOrientation[47]=st__Object_setOrientation[19]
    set st__Object_setOrientation[48]=st__Object_setOrientation[47]
    set st__Object_setOrientation[49]=st__Object_setOrientation[48]
    set st__Object_setOrientation[50]=st__Object_setOrientation[48]
    set st__Object_setOrientation[54]=st__Object_setOrientation[19]
    call TriggerAddCondition(st__Object_setOrientation[19],Condition( function sa__Object_setOrientation))
    call TriggerAddAction(st__Object_setOrientation[19], function sa__Object_setOrientation)
    set st__Object_move[19]=CreateTrigger()
    set st__Object_move[3]=st__Object_move[19]
    set st__Object_move[43]=st__Object_move[3]
    set st__Object_move[79]=st__Object_move[43]
    set st__Object_move[74]=st__Object_move[79]
    set st__Object_move[81]=st__Object_move[79]
    set st__Object_move[33]=st__Object_move[81]
    set st__Object_move[34]=st__Object_move[81]
    set st__Object_move[35]=st__Object_move[81]
    set st__Object_move[36]=st__Object_move[81]
    set st__Object_move[37]=st__Object_move[81]
    set st__Object_move[52]=st__Object_move[3]
    set st__Object_move[72]=st__Object_move[52]
    set st__Object_move[73]=st__Object_move[52]
    set st__Object_move[77]=st__Object_move[52]
    set st__Object_move[98]=st__Object_move[77]
    set st__Object_move[114]=st__Object_move[77]
    set st__Object_move[117]=st__Object_move[77]
    set st__Object_move[140]=st__Object_move[77]
    set st__Object_move[149]=st__Object_move[77]
    set st__Object_move[150]=st__Object_move[77]
    set st__Object_move[47]=st__Object_move[19]
    set st__Object_move[48]=st__Object_move[47]
    set st__Object_move[49]=st__Object_move[48]
    set st__Object_move[50]=st__Object_move[48]
    set st__Object_move[54]=st__Object_move[19]
    call TriggerAddCondition(st__Object_move[19],Condition( function sa__Object_move))
    call TriggerAddAction(st__Object_move[19], function sa__Object_move)
    set st__Object_onDestroy[19]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[19],Condition( function sa__Object_onDestroy))
    set st__AbilityIndicator_refresh[147]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_refresh[147],Condition( function sa__Ability0021___ind_refresh))
    call TriggerAddAction(st__AbilityIndicator_refresh[147], function sa__Ability0021___ind_refresh)
    set st__AbilityIndicator_show[147]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_show[147],Condition( function sa__Ability0021___ind_show))
    call TriggerAddAction(st__AbilityIndicator_show[147], function sa__Ability0021___ind_show)
    set st__AbilityIndicator_onDestroy[147]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[147],Condition( function sa__Ability0021___ind_onDestroy))
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[147],Condition( function sa__AbilityIndicator_onDestroy))
    set st__ProgressBar_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__ProgressBar_onDestroy,Condition( function sa__ProgressBar_onDestroy))
    set st__Explosion_beforeExplosion[145]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_beforeExplosion[145],Condition( function sa__Ability0021_explosion_beforeExplosion))
    call TriggerAddAction(st__Explosion_beforeExplosion[145], function sa__Ability0021_explosion_beforeExplosion)
    set st__Explosion_executeExplosion[145]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[145],Condition( function sa__Ability0021_explosion_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[145], function sa__Ability0021_explosion_executeExplosion)
    set st__Explosion_onDestroy[145]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_onDestroy[145],Condition( function sa__Ability0021_explosion_onDestroy))
    call TriggerAddCondition(st__Explosion_onDestroy[145],Condition( function sa__Explosion_onDestroy))
    set st__Buff_addValue[144]=CreateTrigger()
    call TriggerAddCondition(st__Buff_addValue[144],Condition( function sa__Buff0021_main_addValue))
    call TriggerAddAction(st__Buff_addValue[144], function sa__Buff0021_main_addValue)
    set st__Buff_update[144]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[144],Condition( function sa__Buff0021_main_update))
    call TriggerAddAction(st__Buff_update[144], function sa__Buff0021_main_update)
    set st__Buff_init[144]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[144],Condition( function sa__Buff0021_main_init))
    call TriggerAddAction(st__Buff_init[144], function sa__Buff0021_main_init)
    set st__Buff_onDestroy[144]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[144],Condition( function sa__Buff0021_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[144],Condition( function sa__Buff_onDestroy))
    set st__LineIndicator_beforeRefresh[142]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[142],Condition( function sa__Ability0020___ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[142], function sa__Ability0020___ind_beforeRefresh)
    set st__Tombstone_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__Tombstone_onDestroy,Condition( function sa__Tombstone_onDestroy))
    set st__TreeOfLife_addLevel=CreateTrigger()
    call TriggerAddCondition(st__TreeOfLife_addLevel,Condition( function sa__TreeOfLife_addLevel))
    set st__TreeOfLife_end=CreateTrigger()
    call TriggerAddCondition(st__TreeOfLife_end,Condition( function sa__TreeOfLife_end))
    set st__Explosion_executeExplosion[138]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[138],Condition( function sa__Abilityu011___exx_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[138], function sa__Abilityu011___exx_executeExplosion)
    set st__Explosion_beforeExplosion[138]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_beforeExplosion[138],Condition( function sa__Abilityu011___exx_beforeExplosion))
    call TriggerAddAction(st__Explosion_beforeExplosion[138], function sa__Abilityu011___exx_beforeExplosion)
    set st__Explosion_onDestroy[138]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_onDestroy[138],Condition( function sa__Abilityu011___exx_onDestroy))
    call TriggerAddCondition(st__Explosion_onDestroy[138],Condition( function sa__Explosion_onDestroy))
    set st__Buff_update[137]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[137],Condition( function sa__Buffu011_main_update))
    call TriggerAddAction(st__Buff_update[137], function sa__Buffu011_main_update)
    set st__Buff_init[137]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[137],Condition( function sa__Buffu011_main_init))
    call TriggerAddAction(st__Buff_init[137], function sa__Buffu011_main_init)
    set st__Buff_onDestroy[137]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[137],Condition( function sa__Buffu011_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[137],Condition( function sa__Buff_onDestroy))
    set st__Trigger_getData=CreateTrigger()
    call TriggerAddCondition(st__Trigger_getData,Condition( function sa__Trigger_getData))
    set st__Trigger_new=CreateTrigger()
    call TriggerAddCondition(st__Trigger_new,Condition( function sa__Trigger_new))
    set st__Trigger_remove=CreateTrigger()
    call TriggerAddCondition(st__Trigger_remove,Condition( function sa__Trigger_remove))
    set st__Buff_update[135]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[135],Condition( function sa__Buffu010_main_update))
    call TriggerAddAction(st__Buff_update[135], function sa__Buffu010_main_update)
    set st__Buff_init[135]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[135],Condition( function sa__Buffu010_main_init))
    call TriggerAddAction(st__Buff_init[135], function sa__Buffu010_main_init)
    set st__Buff_onDestroy[135]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[135],Condition( function sa__Buffu010_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[135],Condition( function sa__Buff_onDestroy))
    set st__ChinghoFrame_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__ChinghoFrame_onDestroy,Condition( function sa__ChinghoFrame_onDestroy))
    set st__IconFrame_onDestroy[27]=null
    set st__IconFrame_onDestroy[28]=null
    set st__IconFrame_onDestroy[29]=CreateTrigger()
    call TriggerAddCondition(st__IconFrame_onDestroy[29],Condition( function sa__AbilityIcon_onDestroy))
    set st__LineIndicator_beforeRefresh[130]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[130],Condition( function sa__Ability0015__ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[130], function sa__Ability0015__ind_beforeRefresh)
    set st__IconFrame_onDestroy[30]=CreateTrigger()
    call TriggerAddCondition(st__IconFrame_onDestroy[30],Condition( function sa__StatIcon_onDestroy))
    set st__Explosion_executeExplosion[128]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[128],Condition( function sa__Ability0015__exp_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[128], function sa__Ability0015__exp_executeExplosion)
    set st__Closeable_close[31]=CreateTrigger()
    call TriggerAddCondition(st__Closeable_close[31],Condition( function sa__Closeable_close))
    call TriggerAddAction(st__Closeable_close[31], function sa__Closeable_close)
    set st__Closeable_onDestroy[31]=null
    set st__UI_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__UI_onDestroy,Condition( function sa__UI_onDestroy))
    set st__Ability_prototype_addValue[44]=CreateTrigger()
    set st__Ability_prototype_addValue[67]=st__Ability_prototype_addValue[44]
    set st__Ability_prototype_addValue[7]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[159]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[160]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[161]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[162]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[163]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[164]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[165]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[166]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[167]=st__Ability_prototype_addValue[7]
    set st__Ability_prototype_addValue[90]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[95]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[97]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[101]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[104]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[106]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[107]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[110]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[112]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[116]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[121]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[124]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[127]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[132]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[134]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[136]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[139]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[143]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[148]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[153]=st__Ability_prototype_addValue[67]
    set st__Ability_prototype_addValue[158]=st__Ability_prototype_addValue[67]
    call TriggerAddCondition(st__Ability_prototype_addValue[44],Condition( function sa__Ability_prototype_addValue))
    call TriggerAddAction(st__Ability_prototype_addValue[44], function sa__Ability_prototype_addValue)
    set st__Ability_prototype_addLevel[44]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_addLevel[44],Condition( function sa__Ability_prototype_addLevel))
    call TriggerAddAction(st__Ability_prototype_addLevel[44], function sa__Ability_prototype_addLevel)
    set st__Ability_prototype_addCount[44]=CreateTrigger()
    set st__Ability_prototype_addCount[67]=st__Ability_prototype_addCount[44]
    set st__Ability_prototype_addCount[7]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[159]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[160]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[161]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[162]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[163]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[164]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[165]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[166]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[167]=st__Ability_prototype_addCount[7]
    set st__Ability_prototype_addCount[90]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[95]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[97]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[101]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[104]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[106]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[107]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[110]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[112]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[116]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[121]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[124]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[127]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[132]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[134]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[136]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[139]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[143]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[148]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[153]=st__Ability_prototype_addCount[67]
    set st__Ability_prototype_addCount[158]=st__Ability_prototype_addCount[67]
    call TriggerAddCondition(st__Ability_prototype_addCount[44],Condition( function sa__Ability_prototype_addCount))
    call TriggerAddAction(st__Ability_prototype_addCount[44], function sa__Ability_prototype_addCount)
    set st__Ability_prototype_useCount[44]=CreateTrigger()
    set st__Ability_prototype_useCount[67]=st__Ability_prototype_useCount[44]
    set st__Ability_prototype_useCount[7]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[159]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[160]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[161]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[162]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[163]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[164]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[165]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[166]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[167]=st__Ability_prototype_useCount[7]
    set st__Ability_prototype_useCount[90]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[95]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[97]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[101]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[104]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[106]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[107]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[110]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[112]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[116]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[121]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[124]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[127]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[132]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[134]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[136]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[139]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[143]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[148]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[153]=st__Ability_prototype_useCount[67]
    set st__Ability_prototype_useCount[158]=st__Ability_prototype_useCount[67]
    call TriggerAddCondition(st__Ability_prototype_useCount[44],Condition( function sa__Ability_prototype_useCount))
    call TriggerAddAction(st__Ability_prototype_useCount[44], function sa__Ability_prototype_useCount)
    set st__Ability_prototype_getCarculatedManacost=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_getCarculatedManacost,Condition( function sa__Ability_prototype_getCarculatedManacost))
    set st__Ability_prototype_getMaxCooldown[44]=CreateTrigger()
    set st__Ability_prototype_getMaxCooldown[67]=st__Ability_prototype_getMaxCooldown[44]
    set st__Ability_prototype_getMaxCooldown[7]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[159]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[160]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[161]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[162]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[163]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[164]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[165]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[166]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[167]=st__Ability_prototype_getMaxCooldown[7]
    set st__Ability_prototype_getMaxCooldown[90]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[95]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[97]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[101]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[104]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[106]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[110]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[112]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[116]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[121]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[124]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[127]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[132]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[134]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[136]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[139]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[143]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[148]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[153]=st__Ability_prototype_getMaxCooldown[67]
    set st__Ability_prototype_getMaxCooldown[158]=st__Ability_prototype_getMaxCooldown[67]
    call TriggerAddCondition(st__Ability_prototype_getMaxCooldown[44],Condition( function sa__Ability_prototype_getMaxCooldown))
    call TriggerAddAction(st__Ability_prototype_getMaxCooldown[44], function sa__Ability_prototype_getMaxCooldown)
    set st__Ability_prototype_getCarculatedMaxCooldown=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_getCarculatedMaxCooldown,Condition( function sa__Ability_prototype_getCarculatedMaxCooldown))
    set st__Ability_prototype_iconClick[44]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_iconClick[44],Condition( function sa__Ability_prototype_iconClick))
    call TriggerAddAction(st__Ability_prototype_iconClick[44], function sa__Ability_prototype_iconClick)
    set st__Ability_prototype_relativeTooltip[44]=CreateTrigger()
    set st__Ability_prototype_relativeTooltip[67]=st__Ability_prototype_relativeTooltip[44]
    set st__Ability_prototype_relativeTooltip[7]=st__Ability_prototype_relativeTooltip[67]
    set st__Ability_prototype_relativeTooltip[159]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[160]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[161]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[162]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[163]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[164]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[165]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[166]=st__Ability_prototype_relativeTooltip[7]
    set st__Ability_prototype_relativeTooltip[167]=st__Ability_prototype_relativeTooltip[7]
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[44],Condition( function sa__Ability_prototype_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[44], function sa__Ability_prototype_relativeTooltip)
    set st__Ability_prototype_onUnlink[44]=CreateTrigger()
    set st__Ability_prototype_onUnlink[67]=st__Ability_prototype_onUnlink[44]
    set st__Ability_prototype_onUnlink[7]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[159]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[160]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[161]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[162]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[163]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[164]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[165]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[166]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[167]=st__Ability_prototype_onUnlink[7]
    set st__Ability_prototype_onUnlink[90]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[95]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[97]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[101]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[104]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[106]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[107]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[110]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[112]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[116]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[121]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[124]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[127]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[132]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[134]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[136]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[139]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[143]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[148]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[153]=st__Ability_prototype_onUnlink[67]
    set st__Ability_prototype_onUnlink[158]=st__Ability_prototype_onUnlink[67]
    call TriggerAddCondition(st__Ability_prototype_onUnlink[44],Condition( function sa__Ability_prototype_onUnlink))
    call TriggerAddAction(st__Ability_prototype_onUnlink[44], function sa__Ability_prototype_onUnlink)
    set st__Ability_prototype_basicAttack[44]=CreateTrigger()
    set st__Ability_prototype_basicAttack[67]=st__Ability_prototype_basicAttack[44]
    set st__Ability_prototype_basicAttack[7]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[159]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[160]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[161]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[162]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[163]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[164]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[165]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[166]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[167]=st__Ability_prototype_basicAttack[7]
    set st__Ability_prototype_basicAttack[90]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[95]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[97]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[101]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[104]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[106]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[107]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[110]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[112]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[121]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[124]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[132]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[134]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[136]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[139]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[143]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[148]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[153]=st__Ability_prototype_basicAttack[67]
    set st__Ability_prototype_basicAttack[158]=st__Ability_prototype_basicAttack[67]
    call TriggerAddCondition(st__Ability_prototype_basicAttack[44],Condition( function sa__Ability_prototype_basicAttack))
    call TriggerAddAction(st__Ability_prototype_basicAttack[44], function sa__Ability_prototype_basicAttack)
    set st__Ability_prototype_execute[44]=CreateTrigger()
    set st__Ability_prototype_execute[67]=st__Ability_prototype_execute[44]
    set st__Ability_prototype_execute[7]=st__Ability_prototype_execute[67]
    set st__Ability_prototype_execute[159]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[160]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[161]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[162]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[163]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[164]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[165]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[166]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[167]=st__Ability_prototype_execute[7]
    set st__Ability_prototype_execute[116]=st__Ability_prototype_execute[67]
    set st__Ability_prototype_execute[127]=st__Ability_prototype_execute[67]
    call TriggerAddCondition(st__Ability_prototype_execute[44],Condition( function sa__Ability_prototype_execute))
    call TriggerAddAction(st__Ability_prototype_execute[44], function sa__Ability_prototype_execute)
    set st__Ability_prototype_cancleFollow=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_cancleFollow,Condition( function sa__Ability_prototype_cancleFollow))
    set st__Ability_prototype_cancleReservation=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_cancleReservation,Condition( function sa__Ability_prototype_cancleReservation))
    set st__Ability_prototype_targetFilterAdditional[44]=CreateTrigger()
    set st__Ability_prototype_targetFilterAdditional[67]=st__Ability_prototype_targetFilterAdditional[44]
    set st__Ability_prototype_targetFilterAdditional[7]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[159]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[160]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[161]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[162]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[163]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[164]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[165]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[166]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[167]=st__Ability_prototype_targetFilterAdditional[7]
    set st__Ability_prototype_targetFilterAdditional[90]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[95]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[97]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[101]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[104]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[107]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[110]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[112]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[116]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[121]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[124]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[127]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[132]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[134]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[136]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[139]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[143]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[148]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[153]=st__Ability_prototype_targetFilterAdditional[67]
    set st__Ability_prototype_targetFilterAdditional[158]=st__Ability_prototype_targetFilterAdditional[67]
    call TriggerAddCondition(st__Ability_prototype_targetFilterAdditional[44],Condition( function sa__Ability_prototype_targetFilterAdditional))
    call TriggerAddAction(st__Ability_prototype_targetFilterAdditional[44], function sa__Ability_prototype_targetFilterAdditional)
    set st__Ability_prototype_useFilterAdditional[44]=CreateTrigger()
    set st__Ability_prototype_useFilterAdditional[67]=st__Ability_prototype_useFilterAdditional[44]
    set st__Ability_prototype_useFilterAdditional[7]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[159]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[160]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[161]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[162]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[163]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[164]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[165]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[166]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[167]=st__Ability_prototype_useFilterAdditional[7]
    set st__Ability_prototype_useFilterAdditional[90]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[95]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[97]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[101]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[104]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[106]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[107]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[110]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[112]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[116]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[124]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[127]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[132]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[134]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[136]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[139]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[143]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[148]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[153]=st__Ability_prototype_useFilterAdditional[67]
    set st__Ability_prototype_useFilterAdditional[158]=st__Ability_prototype_useFilterAdditional[67]
    call TriggerAddCondition(st__Ability_prototype_useFilterAdditional[44],Condition( function sa__Ability_prototype_useFilterAdditional))
    call TriggerAddAction(st__Ability_prototype_useFilterAdditional[44], function sa__Ability_prototype_useFilterAdditional)
    set st__Ability_prototype_useRequest=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_useRequest,Condition( function sa__Ability_prototype_useRequest))
    set st__Ability_prototype_init[44]=CreateTrigger()
    set st__Ability_prototype_init[67]=st__Ability_prototype_init[44]
    set st__Ability_prototype_init[7]=st__Ability_prototype_init[67]
    call TriggerAddCondition(st__Ability_prototype_init[44],Condition( function sa__Ability_prototype_init))
    call TriggerAddAction(st__Ability_prototype_init[44], function sa__Ability_prototype_init)
    set st__Ability_prototype_update[44]=CreateTrigger()
    set st__Ability_prototype_update[67]=st__Ability_prototype_update[44]
    set st__Ability_prototype_update[7]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[159]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[160]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[161]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[162]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[163]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[164]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[165]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[166]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[167]=st__Ability_prototype_update[7]
    set st__Ability_prototype_update[90]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[95]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[97]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[101]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[104]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[106]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[107]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[110]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[112]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[116]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[124]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[127]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[132]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[134]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[136]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[139]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[143]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[148]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[153]=st__Ability_prototype_update[67]
    set st__Ability_prototype_update[158]=st__Ability_prototype_update[67]
    call TriggerAddCondition(st__Ability_prototype_update[44],Condition( function sa__Ability_prototype_update))
    call TriggerAddAction(st__Ability_prototype_update[44], function sa__Ability_prototype_update)
    set st__Ability_prototype_pressRequest=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_pressRequest,Condition( function sa__Ability_prototype_pressRequest))
    set st__Ability_prototype_setPressState=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_setPressState,Condition( function sa__Ability_prototype_setPressState))
    set st__Ability_prototype_onRelease[44]=CreateTrigger()
    set st__Ability_prototype_onRelease[67]=st__Ability_prototype_onRelease[44]
    set st__Ability_prototype_onRelease[7]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[159]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[160]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[161]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[162]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[163]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[164]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[165]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[166]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[167]=st__Ability_prototype_onRelease[7]
    set st__Ability_prototype_onRelease[90]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[95]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[97]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[101]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[104]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[106]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[107]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[110]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[112]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[116]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[121]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[124]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[127]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[134]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[136]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[139]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[143]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[148]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[153]=st__Ability_prototype_onRelease[67]
    set st__Ability_prototype_onRelease[158]=st__Ability_prototype_onRelease[67]
    call TriggerAddCondition(st__Ability_prototype_onRelease[44],Condition( function sa__Ability_prototype_onRelease))
    call TriggerAddAction(st__Ability_prototype_onRelease[44], function sa__Ability_prototype_onRelease)
    set st__Ability_prototype_beforeRelease[44]=CreateTrigger()
    set st__Ability_prototype_beforeRelease[67]=st__Ability_prototype_beforeRelease[44]
    set st__Ability_prototype_beforeRelease[7]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[159]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[160]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[161]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[162]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[163]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[164]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[165]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[166]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[167]=st__Ability_prototype_beforeRelease[7]
    set st__Ability_prototype_beforeRelease[90]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[95]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[97]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[101]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[104]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[106]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[112]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[116]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[121]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[124]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[127]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[134]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[136]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[139]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[143]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[148]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[153]=st__Ability_prototype_beforeRelease[67]
    set st__Ability_prototype_beforeRelease[158]=st__Ability_prototype_beforeRelease[67]
    call TriggerAddCondition(st__Ability_prototype_beforeRelease[44],Condition( function sa__Ability_prototype_beforeRelease))
    call TriggerAddAction(st__Ability_prototype_beforeRelease[44], function sa__Ability_prototype_beforeRelease)
    set st__Ability_prototype_onKeyboard[44]=CreateTrigger()
    set st__Ability_prototype_onKeyboard[67]=st__Ability_prototype_onKeyboard[44]
    set st__Ability_prototype_onKeyboard[7]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[159]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[160]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[161]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[162]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[163]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[164]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[165]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[166]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[167]=st__Ability_prototype_onKeyboard[7]
    set st__Ability_prototype_onKeyboard[90]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[95]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[97]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[101]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[104]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[106]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[107]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[110]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[112]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[116]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[121]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[124]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[127]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[132]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[134]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[136]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[139]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[143]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[148]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[153]=st__Ability_prototype_onKeyboard[67]
    set st__Ability_prototype_onKeyboard[158]=st__Ability_prototype_onKeyboard[67]
    call TriggerAddCondition(st__Ability_prototype_onKeyboard[44],Condition( function sa__Ability_prototype_onKeyboard))
    call TriggerAddAction(st__Ability_prototype_onKeyboard[44], function sa__Ability_prototype_onKeyboard)
    set st__Ability_prototype_onPress[44]=CreateTrigger()
    set st__Ability_prototype_onPress[67]=st__Ability_prototype_onPress[44]
    set st__Ability_prototype_onPress[7]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[159]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[160]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[161]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[162]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[163]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[164]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[165]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[166]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[167]=st__Ability_prototype_onPress[7]
    set st__Ability_prototype_onPress[90]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[95]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[97]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[101]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[104]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[106]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[107]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[110]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[112]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[116]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[121]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[124]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[127]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[134]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[136]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[139]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[143]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[148]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[153]=st__Ability_prototype_onPress[67]
    set st__Ability_prototype_onPress[158]=st__Ability_prototype_onPress[67]
    call TriggerAddCondition(st__Ability_prototype_onPress[44],Condition( function sa__Ability_prototype_onPress))
    call TriggerAddAction(st__Ability_prototype_onPress[44], function sa__Ability_prototype_onPress)
    set st__Ability_prototype_beforePress[44]=CreateTrigger()
    set st__Ability_prototype_beforePress[67]=st__Ability_prototype_beforePress[44]
    set st__Ability_prototype_beforePress[7]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[159]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[160]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[161]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[162]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[163]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[164]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[165]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[166]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[167]=st__Ability_prototype_beforePress[7]
    set st__Ability_prototype_beforePress[90]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[95]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[97]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[101]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[104]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[106]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[112]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[116]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[121]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[124]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[127]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[132]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[134]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[136]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[139]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[143]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[148]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[153]=st__Ability_prototype_beforePress[67]
    set st__Ability_prototype_beforePress[158]=st__Ability_prototype_beforePress[67]
    call TriggerAddCondition(st__Ability_prototype_beforePress[44],Condition( function sa__Ability_prototype_beforePress))
    call TriggerAddAction(st__Ability_prototype_beforePress[44], function sa__Ability_prototype_beforePress)
    set st__Ability_prototype_getAttackSpeedValue[44]=CreateTrigger()
    set st__Ability_prototype_getAttackSpeedValue[67]=st__Ability_prototype_getAttackSpeedValue[44]
    set st__Ability_prototype_getAttackSpeedValue[7]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[159]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[160]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[161]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[162]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[163]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[164]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[165]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[166]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[167]=st__Ability_prototype_getAttackSpeedValue[7]
    set st__Ability_prototype_getAttackSpeedValue[90]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[95]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[97]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[101]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[104]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[106]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[107]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[110]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[112]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[116]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[121]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[124]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[127]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[132]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[134]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[136]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[139]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[143]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[148]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[153]=st__Ability_prototype_getAttackSpeedValue[67]
    set st__Ability_prototype_getAttackSpeedValue[158]=st__Ability_prototype_getAttackSpeedValue[67]
    call TriggerAddCondition(st__Ability_prototype_getAttackSpeedValue[44],Condition( function sa__Ability_prototype_getAttackSpeedValue))
    call TriggerAddAction(st__Ability_prototype_getAttackSpeedValue[44], function sa__Ability_prototype_getAttackSpeedValue)
    set st__Ability_prototype_leftClick[44]=CreateTrigger()
    set st__Ability_prototype_leftClick[67]=st__Ability_prototype_leftClick[44]
    set st__Ability_prototype_leftClick[7]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[159]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[160]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[161]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[162]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[163]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[164]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[165]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[166]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[167]=st__Ability_prototype_leftClick[7]
    set st__Ability_prototype_leftClick[90]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[95]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[97]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[101]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[104]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[106]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[107]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[110]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[112]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[116]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[121]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[124]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[127]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[132]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[134]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[136]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[139]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[143]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[148]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[153]=st__Ability_prototype_leftClick[67]
    set st__Ability_prototype_leftClick[158]=st__Ability_prototype_leftClick[67]
    call TriggerAddCondition(st__Ability_prototype_leftClick[44],Condition( function sa__Ability_prototype_leftClick))
    call TriggerAddAction(st__Ability_prototype_leftClick[44], function sa__Ability_prototype_leftClick)
    set st__Ability_prototype_onRightClick[44]=CreateTrigger()
    set st__Ability_prototype_onRightClick[67]=st__Ability_prototype_onRightClick[44]
    set st__Ability_prototype_onRightClick[7]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[159]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[160]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[161]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[162]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[163]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[164]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[165]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[166]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[167]=st__Ability_prototype_onRightClick[7]
    set st__Ability_prototype_onRightClick[90]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[95]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[97]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[101]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[104]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[106]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[107]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[110]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[112]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[116]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[121]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[124]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[127]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[134]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[136]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[139]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[143]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[148]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[153]=st__Ability_prototype_onRightClick[67]
    set st__Ability_prototype_onRightClick[158]=st__Ability_prototype_onRightClick[67]
    call TriggerAddCondition(st__Ability_prototype_onRightClick[44],Condition( function sa__Ability_prototype_onRightClick))
    call TriggerAddAction(st__Ability_prototype_onRightClick[44], function sa__Ability_prototype_onRightClick)
    set st__Ability_prototype_onStop[44]=CreateTrigger()
    set st__Ability_prototype_onStop[67]=st__Ability_prototype_onStop[44]
    set st__Ability_prototype_onStop[7]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[159]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[160]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[161]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[162]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[163]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[164]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[165]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[166]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[167]=st__Ability_prototype_onStop[7]
    set st__Ability_prototype_onStop[90]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[95]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[97]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[101]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[104]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[106]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[107]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[110]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[112]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[116]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[121]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[124]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[127]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[132]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[134]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[136]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[139]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[143]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[148]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[153]=st__Ability_prototype_onStop[67]
    set st__Ability_prototype_onStop[158]=st__Ability_prototype_onStop[67]
    call TriggerAddCondition(st__Ability_prototype_onStop[44],Condition( function sa__Ability_prototype_onStop))
    call TriggerAddAction(st__Ability_prototype_onStop[44], function sa__Ability_prototype_onStop)
    set st__Ability_prototype_stopButton[44]=CreateTrigger()
    set st__Ability_prototype_stopButton[67]=st__Ability_prototype_stopButton[44]
    set st__Ability_prototype_stopButton[7]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[159]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[160]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[161]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[162]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[163]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[164]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[165]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[166]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[167]=st__Ability_prototype_stopButton[7]
    set st__Ability_prototype_stopButton[90]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[95]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[97]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[101]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[104]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[106]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[107]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[110]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[112]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[116]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[121]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[124]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[127]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[132]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[134]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[136]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[139]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[143]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[148]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[153]=st__Ability_prototype_stopButton[67]
    set st__Ability_prototype_stopButton[158]=st__Ability_prototype_stopButton[67]
    call TriggerAddCondition(st__Ability_prototype_stopButton[44],Condition( function sa__Ability_prototype_stopButton))
    call TriggerAddAction(st__Ability_prototype_stopButton[44], function sa__Ability_prototype_stopButton)
    set st__Ability_prototype_essentialInit=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_essentialInit,Condition( function sa__Ability_prototype_essentialInit))
    set st__Ability_prototype_create=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_create,Condition( function sa__Ability_prototype_create))
    set st__Ability_prototype_onDeath[44]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDeath[44],Condition( function sa__Ability_prototype_onDeath))
    call TriggerAddAction(st__Ability_prototype_onDeath[44], function sa__Ability_prototype_onDeath)
    set st__Ability_prototype_kill=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_kill,Condition( function sa__Ability_prototype_kill))
    set st__Ability_prototype_onDestroy[44]=CreateTrigger()
    set st__Ability_prototype_onDestroy[67]=st__Ability_prototype_onDestroy[44]
    set st__Ability_prototype_onDestroy[7]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[90]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[95]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[97]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[101]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[104]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[106]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[107]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[110]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[112]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[116]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[121]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[124]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[127]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[132]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[134]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[136]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[143]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[148]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[153]=st__Ability_prototype_onDestroy[67]
    set st__Ability_prototype_onDestroy[158]=st__Ability_prototype_onDestroy[67]
    call TriggerAddCondition(st__Ability_prototype_onDestroy[44],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_new=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_new,Condition( function sa__Ability_prototype_new))
    set st__Ability_prototype_sendSyncTarget=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_sendSyncTarget,Condition( function sa__Ability_prototype_sendSyncTarget))
    set st__Actor__get_x[45]=CreateTrigger()
    set st__Actor__get_x[38]=st__Actor__get_x[45]
    set st__Actor__get_x[39]=st__Actor__get_x[38]
    set st__Actor__get_x[40]=st__Actor__get_x[38]
    set st__Actor__get_x[115]=st__Actor__get_x[40]
    set st__Actor__get_x[126]=st__Actor__get_x[40]
    set st__Actor__get_x[88]=st__Actor__get_x[38]
    set st__Actor__get_x[92]=st__Actor__get_x[38]
    set st__Actor__get_x[93]=st__Actor__get_x[38]
    set st__Actor__get_x[96]=st__Actor__get_x[38]
    set st__Actor__get_x[99]=st__Actor__get_x[38]
    set st__Actor__get_x[102]=st__Actor__get_x[38]
    set st__Actor__get_x[103]=st__Actor__get_x[38]
    set st__Actor__get_x[105]=st__Actor__get_x[38]
    set st__Actor__get_x[118]=st__Actor__get_x[38]
    set st__Actor__get_x[119]=st__Actor__get_x[38]
    set st__Actor__get_x[123]=st__Actor__get_x[38]
    set st__Actor__get_x[125]=st__Actor__get_x[38]
    set st__Actor__get_x[129]=st__Actor__get_x[38]
    set st__Actor__get_x[131]=st__Actor__get_x[38]
    set st__Actor__get_x[133]=st__Actor__get_x[38]
    set st__Actor__get_x[141]=st__Actor__get_x[38]
    set st__Actor__get_x[146]=st__Actor__get_x[38]
    set st__Actor__get_x[151]=st__Actor__get_x[38]
    set st__Actor__get_x[156]=st__Actor__get_x[38]
    call TriggerAddCondition(st__Actor__get_x[45],Condition( function sa__Actor__get_x))
    call TriggerAddAction(st__Actor__get_x[45], function sa__Actor__get_x)
    set st__Actor__set_x[45]=CreateTrigger()
    set st__Actor__set_x[38]=st__Actor__set_x[45]
    set st__Actor__set_x[39]=st__Actor__set_x[38]
    set st__Actor__set_x[40]=st__Actor__set_x[38]
    set st__Actor__set_x[115]=st__Actor__set_x[40]
    set st__Actor__set_x[126]=st__Actor__set_x[40]
    set st__Actor__set_x[88]=st__Actor__set_x[38]
    set st__Actor__set_x[92]=st__Actor__set_x[38]
    set st__Actor__set_x[93]=st__Actor__set_x[38]
    set st__Actor__set_x[96]=st__Actor__set_x[38]
    set st__Actor__set_x[99]=st__Actor__set_x[38]
    set st__Actor__set_x[102]=st__Actor__set_x[38]
    set st__Actor__set_x[103]=st__Actor__set_x[38]
    set st__Actor__set_x[105]=st__Actor__set_x[38]
    set st__Actor__set_x[118]=st__Actor__set_x[38]
    set st__Actor__set_x[119]=st__Actor__set_x[38]
    set st__Actor__set_x[123]=st__Actor__set_x[38]
    set st__Actor__set_x[125]=st__Actor__set_x[38]
    set st__Actor__set_x[129]=st__Actor__set_x[38]
    set st__Actor__set_x[131]=st__Actor__set_x[38]
    set st__Actor__set_x[133]=st__Actor__set_x[38]
    set st__Actor__set_x[141]=st__Actor__set_x[38]
    set st__Actor__set_x[146]=st__Actor__set_x[38]
    set st__Actor__set_x[151]=st__Actor__set_x[38]
    set st__Actor__set_x[156]=st__Actor__set_x[38]
    set st__Actor__set_x[78]=st__Actor__set_x[45]
    set st__Actor__set_x[41]=st__Actor__set_x[78]
    set st__Actor__set_x[42]=st__Actor__set_x[41]
    set st__Actor__set_x[87]=st__Actor__set_x[41]
    set st__Actor__set_x[111]=st__Actor__set_x[41]
    call TriggerAddCondition(st__Actor__set_x[45],Condition( function sa__Actor__set_x))
    call TriggerAddAction(st__Actor__set_x[45], function sa__Actor__set_x)
    set st__Actor__get_y[45]=CreateTrigger()
    set st__Actor__get_y[38]=st__Actor__get_y[45]
    set st__Actor__get_y[39]=st__Actor__get_y[38]
    set st__Actor__get_y[40]=st__Actor__get_y[38]
    set st__Actor__get_y[115]=st__Actor__get_y[40]
    set st__Actor__get_y[126]=st__Actor__get_y[40]
    set st__Actor__get_y[88]=st__Actor__get_y[38]
    set st__Actor__get_y[92]=st__Actor__get_y[38]
    set st__Actor__get_y[93]=st__Actor__get_y[38]
    set st__Actor__get_y[96]=st__Actor__get_y[38]
    set st__Actor__get_y[99]=st__Actor__get_y[38]
    set st__Actor__get_y[102]=st__Actor__get_y[38]
    set st__Actor__get_y[103]=st__Actor__get_y[38]
    set st__Actor__get_y[105]=st__Actor__get_y[38]
    set st__Actor__get_y[118]=st__Actor__get_y[38]
    set st__Actor__get_y[119]=st__Actor__get_y[38]
    set st__Actor__get_y[123]=st__Actor__get_y[38]
    set st__Actor__get_y[125]=st__Actor__get_y[38]
    set st__Actor__get_y[129]=st__Actor__get_y[38]
    set st__Actor__get_y[131]=st__Actor__get_y[38]
    set st__Actor__get_y[133]=st__Actor__get_y[38]
    set st__Actor__get_y[141]=st__Actor__get_y[38]
    set st__Actor__get_y[146]=st__Actor__get_y[38]
    set st__Actor__get_y[151]=st__Actor__get_y[38]
    set st__Actor__get_y[156]=st__Actor__get_y[38]
    call TriggerAddCondition(st__Actor__get_y[45],Condition( function sa__Actor__get_y))
    call TriggerAddAction(st__Actor__get_y[45], function sa__Actor__get_y)
    set st__Actor__set_y[45]=CreateTrigger()
    set st__Actor__set_y[38]=st__Actor__set_y[45]
    set st__Actor__set_y[39]=st__Actor__set_y[38]
    set st__Actor__set_y[40]=st__Actor__set_y[38]
    set st__Actor__set_y[115]=st__Actor__set_y[40]
    set st__Actor__set_y[126]=st__Actor__set_y[40]
    set st__Actor__set_y[88]=st__Actor__set_y[38]
    set st__Actor__set_y[92]=st__Actor__set_y[38]
    set st__Actor__set_y[93]=st__Actor__set_y[38]
    set st__Actor__set_y[96]=st__Actor__set_y[38]
    set st__Actor__set_y[99]=st__Actor__set_y[38]
    set st__Actor__set_y[102]=st__Actor__set_y[38]
    set st__Actor__set_y[103]=st__Actor__set_y[38]
    set st__Actor__set_y[105]=st__Actor__set_y[38]
    set st__Actor__set_y[118]=st__Actor__set_y[38]
    set st__Actor__set_y[119]=st__Actor__set_y[38]
    set st__Actor__set_y[123]=st__Actor__set_y[38]
    set st__Actor__set_y[125]=st__Actor__set_y[38]
    set st__Actor__set_y[129]=st__Actor__set_y[38]
    set st__Actor__set_y[131]=st__Actor__set_y[38]
    set st__Actor__set_y[133]=st__Actor__set_y[38]
    set st__Actor__set_y[141]=st__Actor__set_y[38]
    set st__Actor__set_y[146]=st__Actor__set_y[38]
    set st__Actor__set_y[151]=st__Actor__set_y[38]
    set st__Actor__set_y[156]=st__Actor__set_y[38]
    set st__Actor__set_y[78]=st__Actor__set_y[45]
    set st__Actor__set_y[41]=st__Actor__set_y[78]
    set st__Actor__set_y[42]=st__Actor__set_y[41]
    set st__Actor__set_y[87]=st__Actor__set_y[41]
    set st__Actor__set_y[111]=st__Actor__set_y[41]
    call TriggerAddCondition(st__Actor__set_y[45],Condition( function sa__Actor__set_y))
    call TriggerAddAction(st__Actor__set_y[45], function sa__Actor__set_y)
    set st__Actor_onSuspend[45]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[45],Condition( function sa__Actor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[45], function sa__Actor_onSuspend)
    set st__Actor_onComplete[45]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[45],Condition( function sa__Actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[45], function sa__Actor_onComplete)
    set st__Actor_periodicAction[45]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[45],Condition( function sa__Actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[45], function sa__Actor_periodicAction)
    set st__Actor_suspendFilter[45]=CreateTrigger()
    call TriggerAddCondition(st__Actor_suspendFilter[45],Condition( function sa__Actor_suspendFilter))
    call TriggerAddAction(st__Actor_suspendFilter[45], function sa__Actor_suspendFilter)
    set st__Actor_killFilter[45]=CreateTrigger()
    set st__Actor_killFilter[38]=st__Actor_killFilter[45]
    set st__Actor_killFilter[39]=st__Actor_killFilter[38]
    set st__Actor_killFilter[40]=st__Actor_killFilter[38]
    set st__Actor_killFilter[115]=st__Actor_killFilter[40]
    set st__Actor_killFilter[126]=st__Actor_killFilter[40]
    set st__Actor_killFilter[88]=st__Actor_killFilter[38]
    set st__Actor_killFilter[92]=st__Actor_killFilter[38]
    set st__Actor_killFilter[93]=st__Actor_killFilter[38]
    set st__Actor_killFilter[96]=st__Actor_killFilter[38]
    set st__Actor_killFilter[99]=st__Actor_killFilter[38]
    set st__Actor_killFilter[103]=st__Actor_killFilter[38]
    set st__Actor_killFilter[105]=st__Actor_killFilter[38]
    set st__Actor_killFilter[118]=st__Actor_killFilter[38]
    set st__Actor_killFilter[119]=st__Actor_killFilter[38]
    set st__Actor_killFilter[123]=st__Actor_killFilter[38]
    set st__Actor_killFilter[125]=st__Actor_killFilter[38]
    set st__Actor_killFilter[129]=st__Actor_killFilter[38]
    set st__Actor_killFilter[131]=st__Actor_killFilter[38]
    set st__Actor_killFilter[141]=st__Actor_killFilter[38]
    set st__Actor_killFilter[146]=st__Actor_killFilter[38]
    set st__Actor_killFilter[151]=st__Actor_killFilter[38]
    set st__Actor_killFilter[156]=st__Actor_killFilter[38]
    set st__Actor_killFilter[78]=st__Actor_killFilter[45]
    set st__Actor_killFilter[41]=st__Actor_killFilter[78]
    set st__Actor_killFilter[42]=st__Actor_killFilter[41]
    set st__Actor_killFilter[87]=st__Actor_killFilter[41]
    set st__Actor_killFilter[111]=st__Actor_killFilter[41]
    call TriggerAddCondition(st__Actor_killFilter[45],Condition( function sa__Actor_killFilter))
    call TriggerAddAction(st__Actor_killFilter[45], function sa__Actor_killFilter)
    set st__Actor_create=CreateTrigger()
    call TriggerAddCondition(st__Actor_create,Condition( function sa__Actor_create))
    set st__Actor_onDestroy[45]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[45],Condition( function sa__Actor_onDestroy))
    set st__CloseUI_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__CloseUI_onDestroy,Condition( function sa__CloseUI_onDestroy))
    set st__Explosion_executeExplosion[122]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[122],Condition( function sa__Ability0013__exp_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[122], function sa__Ability0013__exp_executeExplosion)
    set st__Explosion_beforeExplosion[122]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_beforeExplosion[122],Condition( function sa__Ability0013__exp_beforeExplosion))
    call TriggerAddAction(st__Explosion_beforeExplosion[122], function sa__Ability0013__exp_beforeExplosion)
    set st__Curve_getCarculatedX[47]=CreateTrigger()
    set st__Curve_getCarculatedX[48]=st__Curve_getCarculatedX[47]
    call TriggerAddCondition(st__Curve_getCarculatedX[47],Condition( function sa__Curve_getCarculatedX))
    call TriggerAddAction(st__Curve_getCarculatedX[47], function sa__Curve_getCarculatedX)
    set st__Curve_getCarculatedY[47]=CreateTrigger()
    set st__Curve_getCarculatedY[48]=st__Curve_getCarculatedY[47]
    call TriggerAddCondition(st__Curve_getCarculatedY[47],Condition( function sa__Curve_getCarculatedY))
    call TriggerAddAction(st__Curve_getCarculatedY[47], function sa__Curve_getCarculatedY)
    set st__Curve_getCarculatedZ[47]=CreateTrigger()
    set st__Curve_getCarculatedZ[48]=st__Curve_getCarculatedZ[47]
    call TriggerAddCondition(st__Curve_getCarculatedZ[47],Condition( function sa__Curve_getCarculatedZ))
    call TriggerAddAction(st__Curve_getCarculatedZ[47], function sa__Curve_getCarculatedZ)
    set st__Object__get_x[47]=CreateTrigger()
    set st__Object__get_x[48]=st__Object__get_x[47]
    set st__Object__get_x[49]=st__Object__get_x[48]
    set st__Object__get_x[50]=st__Object__get_x[48]
    call TriggerAddCondition(st__Object__get_x[47],Condition( function sa__Curve__get_x))
    call TriggerAddAction(st__Object__get_x[47], function sa__Curve__get_x)
    set st__Object__get_y[47]=CreateTrigger()
    set st__Object__get_y[48]=st__Object__get_y[47]
    set st__Object__get_y[49]=st__Object__get_y[48]
    set st__Object__get_y[50]=st__Object__get_y[48]
    call TriggerAddCondition(st__Object__get_y[47],Condition( function sa__Curve__get_y))
    call TriggerAddAction(st__Object__get_y[47], function sa__Curve__get_y)
    set st__Object__get_z[47]=CreateTrigger()
    set st__Object__get_z[48]=st__Object__get_z[47]
    set st__Object__get_z[49]=st__Object__get_z[48]
    set st__Object__get_z[50]=st__Object__get_z[48]
    call TriggerAddCondition(st__Object__get_z[47],Condition( function sa__Curve__get_z))
    call TriggerAddAction(st__Object__get_z[47], function sa__Curve__get_z)
    set st__Curve_create=CreateTrigger()
    call TriggerAddCondition(st__Curve_create,Condition( function sa__Curve_create))
    set st__Object_onDestroy[47]=CreateTrigger()
    set st__Object_onDestroy[48]=st__Object_onDestroy[47]
    set st__Object_onDestroy[49]=st__Object_onDestroy[48]
    set st__Object_onDestroy[50]=st__Object_onDestroy[48]
    call TriggerAddCondition(st__Object_onDestroy[47],Condition( function sa__Curve_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[47],Condition( function sa__Object_onDestroy))
    set st__AbilityIndicator_refresh[120]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_refresh[120],Condition( function sa__Ability0010__ind_refresh))
    call TriggerAddAction(st__AbilityIndicator_refresh[120], function sa__Ability0010__ind_refresh)
    set st__AbilityIndicator_show[120]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_show[120],Condition( function sa__Ability0010__ind_show))
    call TriggerAddAction(st__AbilityIndicator_show[120], function sa__Ability0010__ind_show)
    set st__AbilityIndicator_onDestroy[120]=CreateTrigger()
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[120],Condition( function sa__Ability0010__ind_onDestroy))
    call TriggerAddCondition(st__AbilityIndicator_onDestroy[120],Condition( function sa__AbilityIndicator_onDestroy))
    set st__Bezier_create=CreateTrigger()
    call TriggerAddCondition(st__Bezier_create,Condition( function sa__Bezier_create))
    set st__Curve_getCarculatedX[49]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedX[49],Condition( function sa__Bezier2_getCarculatedX))
    call TriggerAddAction(st__Curve_getCarculatedX[49], function sa__Bezier2_getCarculatedX)
    set st__Curve_getCarculatedY[49]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedY[49],Condition( function sa__Bezier2_getCarculatedY))
    call TriggerAddAction(st__Curve_getCarculatedY[49], function sa__Bezier2_getCarculatedY)
    set st__Curve_getCarculatedZ[49]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedZ[49],Condition( function sa__Bezier2_getCarculatedZ))
    call TriggerAddAction(st__Curve_getCarculatedZ[49], function sa__Bezier2_getCarculatedZ)
    set st__Curve_getCarculatedX[50]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedX[50],Condition( function sa__Bezier3_getCarculatedX))
    call TriggerAddAction(st__Curve_getCarculatedX[50], function sa__Bezier3_getCarculatedX)
    set st__Curve_getCarculatedY[50]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedY[50],Condition( function sa__Bezier3_getCarculatedY))
    call TriggerAddAction(st__Curve_getCarculatedY[50], function sa__Bezier3_getCarculatedY)
    set st__Curve_getCarculatedZ[50]=CreateTrigger()
    call TriggerAddCondition(st__Curve_getCarculatedZ[50],Condition( function sa__Bezier3_getCarculatedZ))
    call TriggerAddAction(st__Curve_getCarculatedZ[50], function sa__Bezier3_getCarculatedZ)
    set st__Group_new=CreateTrigger()
    call TriggerAddCondition(st__Group_new,Condition( function sa__Group_new))
    set st__Group_release=CreateTrigger()
    call TriggerAddCondition(st__Group_release,Condition( function sa__Group_release))
    set st__Group_clear=CreateTrigger()
    call TriggerAddCondition(st__Group_clear,Condition( function sa__Group_clear))
    set st__Group_getNearest=CreateTrigger()
    call TriggerAddCondition(st__Group_getNearest,Condition( function sa__Group_getNearest))
    set st__Object_onDestroy[54]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[54],Condition( function sa__Lightning_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[54],Condition( function sa__Object_onDestroy))
    set st__Buff_addValue[113]=CreateTrigger()
    call TriggerAddCondition(st__Buff_addValue[113],Condition( function sa__Buffu001_main_addValue))
    call TriggerAddAction(st__Buff_addValue[113], function sa__Buffu001_main_addValue)
    set st__Buff_update[113]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[113],Condition( function sa__Buffu001_main_update))
    call TriggerAddAction(st__Buff_update[113], function sa__Buffu001_main_update)
    set st__Buff_init[113]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[113],Condition( function sa__Buffu001_main_init))
    call TriggerAddAction(st__Buff_init[113], function sa__Buffu001_main_init)
    set st__Buff_onDestroy[113]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[113],Condition( function sa__Buffu001_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[113],Condition( function sa__Buff_onDestroy))
    set st__Line__Line_setColor[55]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setColor[55],Condition( function sa__Line__Line_setColor))
    call TriggerAddAction(st__Line__Line_setColor[55], function sa__Line__Line_setColor)
    set st__Line__Line_setLocalColor[55]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setLocalColor[55],Condition( function sa__Line__Line_setLocalColor))
    call TriggerAddAction(st__Line__Line_setLocalColor[55], function sa__Line__Line_setLocalColor)
    set st__Line__Line_refreshPosition[55]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_refreshPosition[55],Condition( function sa__Line__Line_refreshPosition))
    call TriggerAddAction(st__Line__Line_refreshPosition[55], function sa__Line__Line_refreshPosition)
    set st__Line__Line_periodicAction[55]=CreateTrigger()
    set st__Line__Line_periodicAction[56]=st__Line__Line_periodicAction[55]
    set st__Line__Line_periodicAction[57]=st__Line__Line_periodicAction[55]
    set st__Line__Line_periodicAction[58]=st__Line__Line_periodicAction[55]
    call TriggerAddCondition(st__Line__Line_periodicAction[55],Condition( function sa__Line__Line_periodicAction))
    call TriggerAddAction(st__Line__Line_periodicAction[55], function sa__Line__Line_periodicAction)
    set st__Line__Line_create=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_create,Condition( function sa__Line__Line_create))
    set st__Line__Line_onDestroy[55]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_onDestroy[55],Condition( function sa__Line__Line_onDestroy))
    set st__Line__Line_setLocalColor[56]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setLocalColor[56],Condition( function sa__Square_setLocalColor))
    call TriggerAddAction(st__Line__Line_setLocalColor[56], function sa__Square_setLocalColor)
    set st__Line__Line_setColor[56]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setColor[56],Condition( function sa__Square_setColor))
    call TriggerAddAction(st__Line__Line_setColor[56], function sa__Square_setColor)
    set st__Line__Line_refreshPosition[56]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_refreshPosition[56],Condition( function sa__Square_refreshPosition))
    call TriggerAddAction(st__Line__Line_refreshPosition[56], function sa__Square_refreshPosition)
    set st__Line__Line_onDestroy[56]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_onDestroy[56],Condition( function sa__Square_onDestroy))
    call TriggerAddCondition(st__Line__Line_onDestroy[56],Condition( function sa__Line__Line_onDestroy))
    set st__Line__Line_setLocalColor[57]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setLocalColor[57],Condition( function sa__DoubleLine_setLocalColor))
    call TriggerAddAction(st__Line__Line_setLocalColor[57], function sa__DoubleLine_setLocalColor)
    set st__Line__Line_setColor[57]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setColor[57],Condition( function sa__DoubleLine_setColor))
    call TriggerAddAction(st__Line__Line_setColor[57], function sa__DoubleLine_setColor)
    set st__Line__Line_refreshPosition[57]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_refreshPosition[57],Condition( function sa__DoubleLine_refreshPosition))
    call TriggerAddAction(st__Line__Line_refreshPosition[57], function sa__DoubleLine_refreshPosition)
    set st__Line__Line_onDestroy[57]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_onDestroy[57],Condition( function sa__DoubleLine_onDestroy))
    call TriggerAddCondition(st__Line__Line_onDestroy[57],Condition( function sa__Line__Line_onDestroy))
    set st__LineIndicator_beforeRefresh[109]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[109],Condition( function sa__Ability0007__ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[109], function sa__Ability0007__ind_beforeRefresh)
    set st__Explosion_executeExplosion[108]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[108],Condition( function sa__Ability0007__exp_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[108], function sa__Ability0007__exp_executeExplosion)
    set st__Line__Line_refreshPosition[58]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_refreshPosition[58],Condition( function sa__Arrow_refreshPosition))
    call TriggerAddAction(st__Line__Line_refreshPosition[58], function sa__Arrow_refreshPosition)
    set st__Line__Line_setLocalColor[58]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setLocalColor[58],Condition( function sa__Arrow_setLocalColor))
    call TriggerAddAction(st__Line__Line_setLocalColor[58], function sa__Arrow_setLocalColor)
    set st__Line__Line_setColor[58]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_setColor[58],Condition( function sa__Arrow_setColor))
    call TriggerAddAction(st__Line__Line_setColor[58], function sa__Arrow_setColor)
    set st__Line__Line_onDestroy[58]=CreateTrigger()
    call TriggerAddCondition(st__Line__Line_onDestroy[58],Condition( function sa__Arrow_onDestroy))
    call TriggerAddCondition(st__Line__Line_onDestroy[58],Condition( function sa__Line__Line_onDestroy))
    set st__IconFrame_onDestroy[59]=CreateTrigger()
    call TriggerAddCondition(st__IconFrame_onDestroy[59],Condition( function sa__SkillShopWidget_onDestroy))
    set st__SkillShop_addLevel=CreateTrigger()
    call TriggerAddCondition(st__SkillShop_addLevel,Condition( function sa__SkillShop_addLevel))
    set st__Closeable_close[60]=CreateTrigger()
    call TriggerAddCondition(st__Closeable_close[60],Condition( function sa__SkillShop_close))
    call TriggerAddAction(st__Closeable_close[60], function sa__SkillShop_close)
    set st__SkillShop_getTierChance=CreateTrigger()
    call TriggerAddCondition(st__SkillShop_getTierChance,Condition( function sa__SkillShop_getTierChance))
    set st__Closeable_onDestroy[60]=CreateTrigger()
    call TriggerAddCondition(st__Closeable_onDestroy[60],Condition( function sa__SkillShop_onDestroy))
    set st__SlotChanger_stateDefault=CreateTrigger()
    call TriggerAddCondition(st__SlotChanger_stateDefault,Condition( function sa__SlotChanger_stateDefault))
    set st__SlotChanger_close=CreateTrigger()
    call TriggerAddCondition(st__SlotChanger_close,Condition( function sa__SlotChanger_close))
    set st__SlotChanger_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__SlotChanger_onDestroy,Condition( function sa__SlotChanger_onDestroy))
    set st__InstantText_setColor=CreateTrigger()
    call TriggerAddCondition(st__InstantText_setColor,Condition( function sa__InstantText_setColor))
    set st__InstantText_createForBothPlayer=CreateTrigger()
    call TriggerAddCondition(st__InstantText_createForBothPlayer,Condition( function sa__InstantText_createForBothPlayer))
    set st__Timer_getData=CreateTrigger()
    call TriggerAddCondition(st__Timer_getData,Condition( function sa__Timer_getData))
    set st__Timer_getDataEx=CreateTrigger()
    call TriggerAddCondition(st__Timer_getDataEx,Condition( function sa__Timer_getDataEx))
    set st__Timer_pause=CreateTrigger()
    call TriggerAddCondition(st__Timer_pause,Condition( function sa__Timer_pause))
    set st__Timer_start=CreateTrigger()
    call TriggerAddCondition(st__Timer_start,Condition( function sa__Timer_start))
    set st__Timer_release=CreateTrigger()
    call TriggerAddCondition(st__Timer_release,Condition( function sa__Timer_release))
    set st__Timer_new=CreateTrigger()
    call TriggerAddCondition(st__Timer_new,Condition( function sa__Timer_new))
    set st__LineIndicator_beforeRefresh[100]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[100],Condition( function sa__Ability0003__ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[100], function sa__Ability0003__ind_beforeRefresh)
    set st__User_oskeyIndex2String=CreateTrigger()
    call TriggerAddCondition(st__User_oskeyIndex2String,Condition( function sa__User_oskeyIndex2String))
    set st__User_getGold=CreateTrigger()
    call TriggerAddCondition(st__User_getGold,Condition( function sa__User_getGold))
    set st__User_addGold=CreateTrigger()
    call TriggerAddCondition(st__User_addGold,Condition( function sa__User_addGold))
    set st__User_getFocusUnit=CreateTrigger()
    call TriggerAddCondition(st__User_getFocusUnit,Condition( function sa__User_getFocusUnit))
    set st__Ability_getTypeTier=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeTier,Condition( function sa__Ability_getTypeTier))
    set st__Ability_getRandomAbility=CreateTrigger()
    call TriggerAddCondition(st__Ability_getRandomAbility,Condition( function sa__Ability_getRandomAbility))
    set st__Ability_getTypeTooltip=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeTooltip,Condition( function sa__Ability_getTypeTooltip))
    set st__Ability_getTypeCost=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeCost,Condition( function sa__Ability_getTypeCost))
    set st__Ability_getTypeName=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeName,Condition( function sa__Ability_getTypeName))
    set st__Ability_getTypeIconPath=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeIconPath,Condition( function sa__Ability_getTypeIconPath))
    set st__Ability_getTypeBonusStatIndex=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeBonusStatIndex,Condition( function sa__Ability_getTypeBonusStatIndex))
    set st__Ability_getTypeTag=CreateTrigger()
    call TriggerAddCondition(st__Ability_getTypeTag,Condition( function sa__Ability_getTypeTag))
    set st__Ability_prototype_iconClick[67]=CreateTrigger()
    set st__Ability_prototype_iconClick[7]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[159]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[160]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[161]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[162]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[163]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[164]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[165]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[166]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[167]=st__Ability_prototype_iconClick[7]
    set st__Ability_prototype_iconClick[90]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[95]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[97]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[101]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[104]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[106]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[107]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[110]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[112]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[116]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[124]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[127]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[132]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[134]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[136]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[139]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[143]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[148]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[153]=st__Ability_prototype_iconClick[67]
    set st__Ability_prototype_iconClick[158]=st__Ability_prototype_iconClick[67]
    call TriggerAddCondition(st__Ability_prototype_iconClick[67],Condition( function sa__Ability_iconClick))
    call TriggerAddAction(st__Ability_prototype_iconClick[67], function sa__Ability_iconClick)
    set st__Ability_prototype_addLevel[67]=CreateTrigger()
    set st__Ability_prototype_addLevel[7]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[159]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[160]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[161]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[162]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[163]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[164]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[165]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[166]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[167]=st__Ability_prototype_addLevel[7]
    set st__Ability_prototype_addLevel[90]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[95]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[97]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[101]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[104]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[106]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[107]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[110]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[112]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[116]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[121]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[124]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[127]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[132]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[134]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[136]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[139]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[143]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[148]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[153]=st__Ability_prototype_addLevel[67]
    set st__Ability_prototype_addLevel[158]=st__Ability_prototype_addLevel[67]
    call TriggerAddCondition(st__Ability_prototype_addLevel[67],Condition( function sa__Ability_addLevel))
    call TriggerAddAction(st__Ability_prototype_addLevel[67], function sa__Ability_addLevel)
    set st__Ability_deactivate[67]=CreateTrigger()
    set st__Ability_deactivate[7]=st__Ability_deactivate[67]
    set st__Ability_deactivate[159]=st__Ability_deactivate[7]
    set st__Ability_deactivate[160]=st__Ability_deactivate[7]
    set st__Ability_deactivate[161]=st__Ability_deactivate[7]
    set st__Ability_deactivate[162]=st__Ability_deactivate[7]
    set st__Ability_deactivate[163]=st__Ability_deactivate[7]
    set st__Ability_deactivate[164]=st__Ability_deactivate[7]
    set st__Ability_deactivate[165]=st__Ability_deactivate[7]
    set st__Ability_deactivate[166]=st__Ability_deactivate[7]
    set st__Ability_deactivate[167]=st__Ability_deactivate[7]
    set st__Ability_deactivate[90]=st__Ability_deactivate[67]
    set st__Ability_deactivate[95]=st__Ability_deactivate[67]
    set st__Ability_deactivate[97]=st__Ability_deactivate[67]
    set st__Ability_deactivate[101]=st__Ability_deactivate[67]
    set st__Ability_deactivate[104]=st__Ability_deactivate[67]
    set st__Ability_deactivate[106]=st__Ability_deactivate[67]
    set st__Ability_deactivate[107]=st__Ability_deactivate[67]
    set st__Ability_deactivate[110]=st__Ability_deactivate[67]
    set st__Ability_deactivate[112]=st__Ability_deactivate[67]
    set st__Ability_deactivate[116]=st__Ability_deactivate[67]
    set st__Ability_deactivate[124]=st__Ability_deactivate[67]
    set st__Ability_deactivate[127]=st__Ability_deactivate[67]
    set st__Ability_deactivate[132]=st__Ability_deactivate[67]
    set st__Ability_deactivate[134]=st__Ability_deactivate[67]
    set st__Ability_deactivate[136]=st__Ability_deactivate[67]
    set st__Ability_deactivate[139]=st__Ability_deactivate[67]
    set st__Ability_deactivate[143]=st__Ability_deactivate[67]
    set st__Ability_deactivate[148]=st__Ability_deactivate[67]
    set st__Ability_deactivate[153]=st__Ability_deactivate[67]
    set st__Ability_deactivate[158]=st__Ability_deactivate[67]
    call TriggerAddCondition(st__Ability_deactivate[67],Condition( function sa__Ability_deactivate))
    call TriggerAddAction(st__Ability_deactivate[67], function sa__Ability_deactivate)
    set st__Ability_prototype_onDeath[67]=CreateTrigger()
    set st__Ability_prototype_onDeath[7]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[159]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[160]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[161]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[162]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[163]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[164]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[165]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[166]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[167]=st__Ability_prototype_onDeath[7]
    set st__Ability_prototype_onDeath[90]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[95]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[97]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[101]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[104]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[106]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[107]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[110]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[112]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[116]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[121]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[124]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[127]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[132]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[134]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[136]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[139]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[143]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[148]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[153]=st__Ability_prototype_onDeath[67]
    set st__Ability_prototype_onDeath[158]=st__Ability_prototype_onDeath[67]
    call TriggerAddCondition(st__Ability_prototype_onDeath[67],Condition( function sa__Ability_onDeath))
    call TriggerAddAction(st__Ability_prototype_onDeath[67], function sa__Ability_onDeath)
    set st__ChinghoWidget_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__ChinghoWidget_onDestroy,Condition( function sa__ChinghoWidget_onDestroy))
    set st__Ability_prototype_relativeTooltip[95]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[95],Condition( function sa__Ability0001_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[95], function sa__Ability0001_main_relativeTooltip)
    set st__Ability_prototype_execute[95]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[95],Condition( function sa__Ability0001_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[95], function sa__Ability0001_main_execute)
    set st__Ability_prototype_init[95]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[95],Condition( function sa__Ability0001_main_init))
    call TriggerAddAction(st__Ability_prototype_init[95], function sa__Ability0001_main_init)
    set st__LineIndicator_beforeRefresh[94]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[94],Condition( function sa__Ability0001__ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[94], function sa__Ability0001__ind_beforeRefresh)
    set st__CharacterWidget_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__CharacterWidget_onDestroy,Condition( function sa__CharacterWidget_onDestroy))
    set st__CharacterInfoPanel_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__CharacterInfoPanel_onDestroy,Condition( function sa__CharacterInfoPanel_onDestroy))
    set st__Explosion_executeExplosion[91]=CreateTrigger()
    call TriggerAddCondition(st__Explosion_executeExplosion[91],Condition( function sa__Ability0001_explosion_executeExplosion))
    call TriggerAddAction(st__Explosion_executeExplosion[91], function sa__Ability0001_explosion_executeExplosion)
    set st__Ability_prototype_relativeTooltip[90]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[90],Condition( function sa__Ability0000_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[90], function sa__Ability0000_main_relativeTooltip)
    set st__Ability_prototype_execute[90]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[90],Condition( function sa__Ability0000_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[90], function sa__Ability0000_main_execute)
    set st__Ability_prototype_init[90]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[90],Condition( function sa__Ability0000_main_init))
    call TriggerAddAction(st__Ability_prototype_init[90], function sa__Ability0000_main_init)
    set st__LineIndicator_beforeRefresh[89]=CreateTrigger()
    call TriggerAddCondition(st__LineIndicator_beforeRefresh[89],Condition( function sa__Ability0000__ind_beforeRefresh))
    call TriggerAddAction(st__LineIndicator_beforeRefresh[89], function sa__Ability0000__ind_beforeRefresh)
    set st__CharacterSelect_finish=CreateTrigger()
    call TriggerAddCondition(st__CharacterSelect_finish,Condition( function sa__CharacterSelect_finish))
    set st__GuardianFrame_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__GuardianFrame_onDestroy,Condition( function sa__GuardianFrame_onDestroy))
    set st__Buff_update[86]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[86],Condition( function sa__BuffEnsn_main_update))
    call TriggerAddAction(st__Buff_update[86], function sa__BuffEnsn_main_update)
    set st__Buff_init[86]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[86],Condition( function sa__BuffEnsn_main_init))
    call TriggerAddAction(st__Buff_init[86], function sa__BuffEnsn_main_init)
    set st__Buff_onDestroy[86]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[86],Condition( function sa__BuffEnsn_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[86],Condition( function sa__Buff_onDestroy))
    set st__Buff_update[85]=CreateTrigger()
    call TriggerAddCondition(st__Buff_update[85],Condition( function sa__BuffStun_main_update))
    call TriggerAddAction(st__Buff_update[85], function sa__BuffStun_main_update)
    set st__Buff_init[85]=CreateTrigger()
    call TriggerAddCondition(st__Buff_init[85],Condition( function sa__BuffStun_main_init))
    call TriggerAddAction(st__Buff_init[85], function sa__BuffStun_main_init)
    set st__Buff_onDestroy[85]=CreateTrigger()
    call TriggerAddCondition(st__Buff_onDestroy[85],Condition( function sa__BuffStun_main_onDestroy))
    call TriggerAddCondition(st__Buff_onDestroy[85],Condition( function sa__Buff_onDestroy))
    set st__Mouse_triggerRegisterGenericRightClick=CreateTrigger()
    call TriggerAddCondition(st__Mouse_triggerRegisterGenericRightClick,Condition( function sa__Mouse_triggerRegisterGenericRightClick))
    set st__Mouse_getX=CreateTrigger()
    call TriggerAddCondition(st__Mouse_getX,Condition( function sa__Mouse_getX))
    set st__Mouse_getY=CreateTrigger()
    call TriggerAddCondition(st__Mouse_getY,Condition( function sa__Mouse_getY))
    set st__Mouse_activateRefresher=CreateTrigger()
    call TriggerAddCondition(st__Mouse_activateRefresher,Condition( function sa__Mouse_activateRefresher))
    set st__Wave_spawn=CreateTrigger()
    call TriggerAddCondition(st__Wave_spawn,Condition( function sa__Wave_spawn))
    set st__Wave___spawner_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__Wave___spawner_onDestroy,Condition( function sa__Wave___spawner_onDestroy))
    set st__Guardians_addLevel=CreateTrigger()
    call TriggerAddCondition(st__Guardians_addLevel,Condition( function sa__Guardians_addLevel))
    set st__Game_defeat=CreateTrigger()
    call TriggerAddCondition(st__Game_defeat,Condition( function sa__Game_defeat))
    set st__Game_addLevel=CreateTrigger()
    call TriggerAddCondition(st__Game_addLevel,Condition( function sa__Game_addLevel))
    set st__Game_endSelect=CreateTrigger()
    call TriggerAddCondition(st__Game_endSelect,Condition( function sa__Game_endSelect))
    set st__Actor__get_x[78]=CreateTrigger()
    set st__Actor__get_x[41]=st__Actor__get_x[78]
    set st__Actor__get_x[42]=st__Actor__get_x[41]
    set st__Actor__get_x[87]=st__Actor__get_x[41]
    set st__Actor__get_x[111]=st__Actor__get_x[41]
    call TriggerAddCondition(st__Actor__get_x[78],Condition( function sa__Movement__get_x))
    call TriggerAddAction(st__Actor__get_x[78], function sa__Movement__get_x)
    set st__Actor__get_y[78]=CreateTrigger()
    set st__Actor__get_y[41]=st__Actor__get_y[78]
    set st__Actor__get_y[42]=st__Actor__get_y[41]
    set st__Actor__get_y[87]=st__Actor__get_y[41]
    set st__Actor__get_y[111]=st__Actor__get_y[41]
    call TriggerAddCondition(st__Actor__get_y[78],Condition( function sa__Movement__get_y))
    call TriggerAddAction(st__Actor__get_y[78], function sa__Movement__get_y)
    set st__Movement__get_z=CreateTrigger()
    call TriggerAddCondition(st__Movement__get_z,Condition( function sa__Movement__get_z))
    set st__Movement__get_target[78]=CreateTrigger()
    call TriggerAddCondition(st__Movement__get_target[78],Condition( function sa__Movement__get_target))
    call TriggerAddAction(st__Movement__get_target[78], function sa__Movement__get_target)
    set st__Movement__set_target=CreateTrigger()
    call TriggerAddCondition(st__Movement__set_target,Condition( function sa__Movement__set_target))
    set st__Movement__get_curve=CreateTrigger()
    call TriggerAddCondition(st__Movement__get_curve,Condition( function sa__Movement__get_curve))
    set st__Movement__set_curve=CreateTrigger()
    call TriggerAddCondition(st__Movement__set_curve,Condition( function sa__Movement__set_curve))
    set st__Movement_setTargetLocation=CreateTrigger()
    call TriggerAddCondition(st__Movement_setTargetLocation,Condition( function sa__Movement_setTargetLocation))
    set st__Actor_onSuspend[78]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[78],Condition( function sa__Movement_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[78], function sa__Movement_onSuspend)
    set st__Actor_onComplete[78]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[78],Condition( function sa__Movement_onComplete))
    call TriggerAddAction(st__Actor_onComplete[78], function sa__Movement_onComplete)
    set st__Movement_onCollision[78]=CreateTrigger()
    call TriggerAddCondition(st__Movement_onCollision[78],Condition( function sa__Movement_onCollision))
    call TriggerAddAction(st__Movement_onCollision[78], function sa__Movement_onCollision)
    set st__Movement_moveAction[78]=CreateTrigger()
    set st__Movement_moveAction[41]=st__Movement_moveAction[78]
    set st__Movement_moveAction[42]=st__Movement_moveAction[41]
    set st__Movement_moveAction[87]=st__Movement_moveAction[41]
    set st__Movement_moveAction[111]=st__Movement_moveAction[41]
    call TriggerAddCondition(st__Movement_moveAction[78],Condition( function sa__Movement_moveAction))
    call TriggerAddAction(st__Movement_moveAction[78], function sa__Movement_moveAction)
    set st__Actor_suspendFilter[78]=CreateTrigger()
    call TriggerAddCondition(st__Actor_suspendFilter[78],Condition( function sa__Movement_suspendFilter))
    call TriggerAddAction(st__Actor_suspendFilter[78], function sa__Movement_suspendFilter)
    set st__Actor_periodicAction[78]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[78],Condition( function sa__Movement_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[78], function sa__Movement_periodicAction)
    set st__Movement_create=CreateTrigger()
    call TriggerAddCondition(st__Movement_create,Condition( function sa__Movement_create))
    set st__Actor_onDestroy[78]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[78],Condition( function sa__Movement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[78],Condition( function sa__Actor_onDestroy))
    set st__Agent_create=CreateTrigger()
    call TriggerAddCondition(st__Agent_create,Condition( function sa__Agent_create))
    set st__Object_onDestroy[3]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[3],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[3],Condition( function sa__Object_onDestroy))
    set st__Ability_prototype_init[162]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[162],Condition( function sa__AbilityC003_main_init))
    call TriggerAddAction(st__Ability_prototype_init[162], function sa__AbilityC003_main_init)
    set st__Ability_prototype_onDestroy[162]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[162],Condition( function sa__AbilityC003_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[162],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[161]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[161],Condition( function sa__AbilityC002_main_init))
    call TriggerAddAction(st__Ability_prototype_init[161], function sa__AbilityC002_main_init)
    set st__Ability_prototype_onDestroy[161]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[161],Condition( function sa__AbilityC002_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[161],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[160]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[160],Condition( function sa__AbilityC001_main_init))
    call TriggerAddAction(st__Ability_prototype_init[160], function sa__AbilityC001_main_init)
    set st__Ability_prototype_onDestroy[160]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[160],Condition( function sa__AbilityC001_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[160],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[159]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[159],Condition( function sa__AbilityC000_main_init))
    call TriggerAddAction(st__Ability_prototype_init[159], function sa__AbilityC000_main_init)
    set st__Ability_prototype_onDestroy[159]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[159],Condition( function sa__AbilityC000_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[159],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_relativeTooltip[158]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[158],Condition( function sa__Ability0040_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[158], function sa__Ability0040_main_relativeTooltip)
    set st__Ability_prototype_execute[158]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[158],Condition( function sa__Ability0040_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[158], function sa__Ability0040_main_execute)
    set st__Ability_prototype_init[158]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[158],Condition( function sa__Ability0040_main_init))
    call TriggerAddAction(st__Ability_prototype_init[158], function sa__Ability0040_main_init)
    set st__Ability_prototype_relativeTooltip[153]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[153],Condition( function sa__Ability0030_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[153], function sa__Ability0030_main_relativeTooltip)
    set st__Ability_prototype_execute[153]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[153],Condition( function sa__Ability0030_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[153], function sa__Ability0030_main_execute)
    set st__Ability_prototype_init[153]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[153],Condition( function sa__Ability0030_main_init))
    call TriggerAddAction(st__Ability_prototype_init[153], function sa__Ability0030_main_init)
    set st__Ability_prototype_relativeTooltip[148]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[148],Condition( function sa__Ability0021_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[148], function sa__Ability0021_main_relativeTooltip)
    set st__Ability_prototype_execute[148]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[148],Condition( function sa__Ability0021_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[148], function sa__Ability0021_main_execute)
    set st__Ability_prototype_init[148]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[148],Condition( function sa__Ability0021_main_init))
    call TriggerAddAction(st__Ability_prototype_init[148], function sa__Ability0021_main_init)
    set st__Ability_prototype_relativeTooltip[143]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[143],Condition( function sa__Ability0020_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[143], function sa__Ability0020_main_relativeTooltip)
    set st__Ability_prototype_execute[143]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[143],Condition( function sa__Ability0020_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[143], function sa__Ability0020_main_execute)
    set st__Ability_prototype_init[143]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[143],Condition( function sa__Ability0020_main_init))
    call TriggerAddAction(st__Ability_prototype_init[143], function sa__Ability0020_main_init)
    set st__Ability_prototype_relativeTooltip[139]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[139],Condition( function sa__Abilityu011_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[139], function sa__Abilityu011_main_relativeTooltip)
    set st__Ability_prototype_execute[139]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[139],Condition( function sa__Abilityu011_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[139], function sa__Abilityu011_main_execute)
    set st__Ability_prototype_init[139]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[139],Condition( function sa__Abilityu011_main_init))
    call TriggerAddAction(st__Ability_prototype_init[139], function sa__Abilityu011_main_init)
    set st__Ability_prototype_onDestroy[139]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[139],Condition( function sa__Abilityu011_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[139],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_relativeTooltip[136]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[136],Condition( function sa__Abilityu010_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[136], function sa__Abilityu010_main_relativeTooltip)
    set st__Ability_prototype_execute[136]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[136],Condition( function sa__Abilityu010_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[136], function sa__Abilityu010_main_execute)
    set st__Ability_prototype_init[136]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[136],Condition( function sa__Abilityu010_main_init))
    call TriggerAddAction(st__Ability_prototype_init[136], function sa__Abilityu010_main_init)
    set st__Ability_prototype_relativeTooltip[97]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[97],Condition( function sa__Ability0002_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[97], function sa__Ability0002_main_relativeTooltip)
    set st__Ability_prototype_execute[97]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[97],Condition( function sa__Ability0002_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[97], function sa__Ability0002_main_execute)
    set st__Ability_prototype_init[97]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[97],Condition( function sa__Ability0002_main_init))
    call TriggerAddAction(st__Ability_prototype_init[97], function sa__Ability0002_main_init)
    set st__Ability_prototype_relativeTooltip[134]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[134],Condition( function sa__Ability0016_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[134], function sa__Ability0016_main_relativeTooltip)
    set st__Ability_prototype_execute[134]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[134],Condition( function sa__Ability0016_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[134], function sa__Ability0016_main_execute)
    set st__Ability_prototype_init[134]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[134],Condition( function sa__Ability0016_main_init))
    call TriggerAddAction(st__Ability_prototype_init[134], function sa__Ability0016_main_init)
    set st__Ability_prototype_relativeTooltip[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[132],Condition( function sa__Ability0015_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[132], function sa__Ability0015_main_relativeTooltip)
    set st__Ability_prototype_beforeRelease[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_beforeRelease[132],Condition( function sa__Ability0015_main_beforeRelease))
    call TriggerAddAction(st__Ability_prototype_beforeRelease[132], function sa__Ability0015_main_beforeRelease)
    set st__Ability_prototype_onRelease[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onRelease[132],Condition( function sa__Ability0015_main_onRelease))
    call TriggerAddAction(st__Ability_prototype_onRelease[132], function sa__Ability0015_main_onRelease)
    set st__Ability_prototype_onRightClick[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onRightClick[132],Condition( function sa__Ability0015_main_onRightClick))
    call TriggerAddAction(st__Ability_prototype_onRightClick[132], function sa__Ability0015_main_onRightClick)
    set st__Ability_prototype_execute[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[132],Condition( function sa__Ability0015_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[132], function sa__Ability0015_main_execute)
    set st__Ability_prototype_onPress[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onPress[132],Condition( function sa__Ability0015_main_onPress))
    call TriggerAddAction(st__Ability_prototype_onPress[132], function sa__Ability0015_main_onPress)
    set st__Ability_prototype_init[132]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[132],Condition( function sa__Ability0015_main_init))
    call TriggerAddAction(st__Ability_prototype_init[132], function sa__Ability0015_main_init)
    set st__Ability_prototype_relativeTooltip[101]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[101],Condition( function sa__Ability0003_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[101], function sa__Ability0003_main_relativeTooltip)
    set st__Ability_prototype_execute[101]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[101],Condition( function sa__Ability0003_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[101], function sa__Ability0003_main_execute)
    set st__Ability_prototype_init[101]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[101],Condition( function sa__Ability0003_main_init))
    call TriggerAddAction(st__Ability_prototype_init[101], function sa__Ability0003_main_init)
    set st__Ability_prototype_relativeTooltip[127]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[127],Condition( function sa__Ability0014_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[127], function sa__Ability0014_main_relativeTooltip)
    set st__Ability_prototype_basicAttack[127]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_basicAttack[127],Condition( function sa__Ability0014_main_basicAttack))
    call TriggerAddAction(st__Ability_prototype_basicAttack[127], function sa__Ability0014_main_basicAttack)
    set st__Ability_prototype_init[127]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[127],Condition( function sa__Ability0014_main_init))
    call TriggerAddAction(st__Ability_prototype_init[127], function sa__Ability0014_main_init)
    set st__UnitActor_rightClick[38]=CreateTrigger()
    set st__UnitActor_rightClick[39]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[40]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[115]=st__UnitActor_rightClick[40]
    set st__UnitActor_rightClick[126]=st__UnitActor_rightClick[40]
    set st__UnitActor_rightClick[88]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[92]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[93]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[96]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[99]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[102]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[103]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[105]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[118]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[119]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[123]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[125]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[129]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[131]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[133]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[141]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[146]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[151]=st__UnitActor_rightClick[38]
    set st__UnitActor_rightClick[156]=st__UnitActor_rightClick[38]
    call TriggerAddCondition(st__UnitActor_rightClick[38],Condition( function sa__UnitActor_rightClick))
    call TriggerAddAction(st__UnitActor_rightClick[38], function sa__UnitActor_rightClick)
    set st__Actor_onSuspend[38]=CreateTrigger()
    set st__Actor_onSuspend[39]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[88]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[92]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[93]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[99]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[102]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[103]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[105]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[123]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[125]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[131]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[141]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[146]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[151]=st__Actor_onSuspend[38]
    set st__Actor_onSuspend[156]=st__Actor_onSuspend[38]
    call TriggerAddCondition(st__Actor_onSuspend[38],Condition( function sa__UnitActor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[38], function sa__UnitActor_onSuspend)
    set st__Actor_onComplete[38]=CreateTrigger()
    set st__Actor_onComplete[39]=st__Actor_onComplete[38]
    set st__Actor_onComplete[103]=st__Actor_onComplete[38]
    set st__Actor_onComplete[123]=st__Actor_onComplete[38]
    set st__Actor_onComplete[131]=st__Actor_onComplete[38]
    set st__Actor_onComplete[156]=st__Actor_onComplete[38]
    call TriggerAddCondition(st__Actor_onComplete[38],Condition( function sa__UnitActor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[38], function sa__UnitActor_onComplete)
    set st__Actor_periodicAction[38]=CreateTrigger()
    set st__Actor_periodicAction[39]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[40]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[115]=st__Actor_periodicAction[40]
    set st__Actor_periodicAction[126]=st__Actor_periodicAction[40]
    set st__Actor_periodicAction[93]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[99]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[102]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[103]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[105]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[119]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[125]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[146]=st__Actor_periodicAction[38]
    set st__Actor_periodicAction[151]=st__Actor_periodicAction[38]
    call TriggerAddCondition(st__Actor_periodicAction[38],Condition( function sa__UnitActor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[38], function sa__UnitActor_periodicAction)
    set st__UnitActor_suspendFilterAdditional[38]=CreateTrigger()
    set st__UnitActor_suspendFilterAdditional[39]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[40]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[115]=st__UnitActor_suspendFilterAdditional[40]
    set st__UnitActor_suspendFilterAdditional[126]=st__UnitActor_suspendFilterAdditional[40]
    set st__UnitActor_suspendFilterAdditional[88]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[92]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[93]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[99]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[102]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[103]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[105]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[118]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[119]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[123]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[125]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[129]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[131]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[133]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[141]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[146]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[151]=st__UnitActor_suspendFilterAdditional[38]
    set st__UnitActor_suspendFilterAdditional[156]=st__UnitActor_suspendFilterAdditional[38]
    call TriggerAddCondition(st__UnitActor_suspendFilterAdditional[38],Condition( function sa__UnitActor_suspendFilterAdditional))
    call TriggerAddAction(st__UnitActor_suspendFilterAdditional[38], function sa__UnitActor_suspendFilterAdditional)
    set st__Actor_suspendFilter[38]=CreateTrigger()
    set st__Actor_suspendFilter[39]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[40]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[115]=st__Actor_suspendFilter[40]
    set st__Actor_suspendFilter[126]=st__Actor_suspendFilter[40]
    set st__Actor_suspendFilter[88]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[92]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[93]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[96]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[99]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[102]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[103]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[105]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[118]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[119]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[123]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[125]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[129]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[131]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[133]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[141]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[146]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[151]=st__Actor_suspendFilter[38]
    set st__Actor_suspendFilter[156]=st__Actor_suspendFilter[38]
    call TriggerAddCondition(st__Actor_suspendFilter[38],Condition( function sa__UnitActor_suspendFilter))
    call TriggerAddAction(st__Actor_suspendFilter[38], function sa__UnitActor_suspendFilter)
    set st__UnitActor_create=CreateTrigger()
    call TriggerAddCondition(st__UnitActor_create,Condition( function sa__UnitActor_create))
    set st__Actor_onDestroy[38]=CreateTrigger()
    set st__Actor_onDestroy[39]=st__Actor_onDestroy[38]
    set st__Actor_onDestroy[88]=st__Actor_onDestroy[38]
    set st__Actor_onDestroy[125]=st__Actor_onDestroy[38]
    call TriggerAddCondition(st__Actor_onDestroy[38],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[38],Condition( function sa__Actor_onDestroy))
    set st__Ability_prototype_relativeTooltip[104]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[104],Condition( function sa__Ability0004_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[104], function sa__Ability0004_main_relativeTooltip)
    set st__Ability_prototype_execute[104]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[104],Condition( function sa__Ability0004_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[104], function sa__Ability0004_main_execute)
    set st__Ability_prototype_init[104]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[104],Condition( function sa__Ability0004_main_init))
    call TriggerAddAction(st__Ability_prototype_init[104], function sa__Ability0004_main_init)
    set st__Actor_onComplete[105]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[105],Condition( function sa__Ability0005_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[105], function sa__Ability0005_actor_onComplete)
    set st__Actor_onDestroy[105]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[105],Condition( function sa__Ability0005_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[105],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[105],Condition( function sa__Actor_onDestroy))
    set st__Ability_prototype_relativeTooltip[106]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[106],Condition( function sa__Ability0005_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[106], function sa__Ability0005_main_relativeTooltip)
    set st__Ability_prototype_targetFilterAdditional[106]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_targetFilterAdditional[106],Condition( function sa__Ability0005_main_targetFilterAdditional))
    call TriggerAddAction(st__Ability_prototype_targetFilterAdditional[106], function sa__Ability0005_main_targetFilterAdditional)
    set st__Ability_prototype_execute[106]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[106],Condition( function sa__Ability0005_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[106], function sa__Ability0005_main_execute)
    set st__Ability_prototype_init[106]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[106],Condition( function sa__Ability0005_main_init))
    call TriggerAddAction(st__Ability_prototype_init[106], function sa__Ability0005_main_init)
    set st__Ability_prototype_getMaxCooldown[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_getMaxCooldown[107],Condition( function sa__Ability0006_main_getMaxCooldown))
    call TriggerAddAction(st__Ability_prototype_getMaxCooldown[107], function sa__Ability0006_main_getMaxCooldown)
    set st__Ability_prototype_relativeTooltip[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[107],Condition( function sa__Ability0006_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[107], function sa__Ability0006_main_relativeTooltip)
    set st__Ability_prototype_beforePress[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_beforePress[107],Condition( function sa__Ability0006_main_beforePress))
    call TriggerAddAction(st__Ability_prototype_beforePress[107], function sa__Ability0006_main_beforePress)
    set st__Ability_prototype_beforeRelease[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_beforeRelease[107],Condition( function sa__Ability0006_main_beforeRelease))
    call TriggerAddAction(st__Ability_prototype_beforeRelease[107], function sa__Ability0006_main_beforeRelease)
    set st__Ability_prototype_execute[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[107],Condition( function sa__Ability0006_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[107], function sa__Ability0006_main_execute)
    set st__Ability_prototype_init[107]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[107],Condition( function sa__Ability0006_main_init))
    call TriggerAddAction(st__Ability_prototype_init[107], function sa__Ability0006_main_init)
    set st__Ability_prototype_relativeTooltip[110]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[110],Condition( function sa__Ability0007_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[110], function sa__Ability0007_main_relativeTooltip)
    set st__Ability_prototype_beforePress[110]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_beforePress[110],Condition( function sa__Ability0007_main_beforePress))
    call TriggerAddAction(st__Ability_prototype_beforePress[110], function sa__Ability0007_main_beforePress)
    set st__Ability_prototype_beforeRelease[110]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_beforeRelease[110],Condition( function sa__Ability0007_main_beforeRelease))
    call TriggerAddAction(st__Ability_prototype_beforeRelease[110], function sa__Ability0007_main_beforeRelease)
    set st__Ability_prototype_execute[110]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[110],Condition( function sa__Ability0007_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[110], function sa__Ability0007_main_execute)
    set st__Ability_prototype_init[110]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[110],Condition( function sa__Ability0007_main_init))
    call TriggerAddAction(st__Ability_prototype_init[110], function sa__Ability0007_main_init)
    set st__Ability_prototype_relativeTooltip[112]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[112],Condition( function sa__Abilityu000_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[112], function sa__Abilityu000_main_relativeTooltip)
    set st__Ability_prototype_execute[112]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[112],Condition( function sa__Abilityu000_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[112], function sa__Abilityu000_main_execute)
    set st__Ability_prototype_init[112]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[112],Condition( function sa__Abilityu000_main_init))
    call TriggerAddAction(st__Ability_prototype_init[112], function sa__Abilityu000_main_init)
    set st__Actor_onSuspend[40]=CreateTrigger()
    set st__Actor_onSuspend[115]=st__Actor_onSuspend[40]
    set st__Actor_onSuspend[126]=st__Actor_onSuspend[40]
    call TriggerAddCondition(st__Actor_onSuspend[40],Condition( function sa__MeleeAttack_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[40], function sa__MeleeAttack_onSuspend)
    set st__Actor_onComplete[40]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[40],Condition( function sa__MeleeAttack_onComplete))
    call TriggerAddAction(st__Actor_onComplete[40], function sa__MeleeAttack_onComplete)
    set st__MeleeAttack_create=CreateTrigger()
    call TriggerAddCondition(st__MeleeAttack_create,Condition( function sa__MeleeAttack_create))
    set st__Actor_onDestroy[40]=CreateTrigger()
    set st__Actor_onDestroy[115]=st__Actor_onDestroy[40]
    set st__Actor_onDestroy[126]=st__Actor_onDestroy[40]
    call TriggerAddCondition(st__Actor_onDestroy[40],Condition( function sa__MeleeAttack_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[40],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[40],Condition( function sa__Actor_onDestroy))
    set st__Effect__get_origin_effect=CreateTrigger()
    call TriggerAddCondition(st__Effect__get_origin_effect,Condition( function sa__Effect__get_origin_effect))
    set st__Object__get_x[52]=CreateTrigger()
    set st__Object__get_x[72]=st__Object__get_x[52]
    set st__Object__get_x[73]=st__Object__get_x[52]
    set st__Object__get_x[77]=st__Object__get_x[52]
    set st__Object__get_x[98]=st__Object__get_x[77]
    set st__Object__get_x[114]=st__Object__get_x[77]
    set st__Object__get_x[117]=st__Object__get_x[77]
    set st__Object__get_x[140]=st__Object__get_x[77]
    set st__Object__get_x[149]=st__Object__get_x[77]
    set st__Object__get_x[150]=st__Object__get_x[77]
    call TriggerAddCondition(st__Object__get_x[52],Condition( function sa__Effect__get_x))
    call TriggerAddAction(st__Object__get_x[52], function sa__Effect__get_x)
    set st__Object__get_offset_x[52]=CreateTrigger()
    set st__Object__get_offset_x[72]=st__Object__get_offset_x[52]
    set st__Object__get_offset_x[73]=st__Object__get_offset_x[52]
    set st__Object__get_offset_x[77]=st__Object__get_offset_x[52]
    set st__Object__get_offset_x[98]=st__Object__get_offset_x[77]
    set st__Object__get_offset_x[114]=st__Object__get_offset_x[77]
    set st__Object__get_offset_x[117]=st__Object__get_offset_x[77]
    set st__Object__get_offset_x[140]=st__Object__get_offset_x[77]
    set st__Object__get_offset_x[149]=st__Object__get_offset_x[77]
    set st__Object__get_offset_x[150]=st__Object__get_offset_x[77]
    call TriggerAddCondition(st__Object__get_offset_x[52],Condition( function sa__Effect__get_offset_x))
    call TriggerAddAction(st__Object__get_offset_x[52], function sa__Effect__get_offset_x)
    set st__Object__get_y[52]=CreateTrigger()
    set st__Object__get_y[72]=st__Object__get_y[52]
    set st__Object__get_y[73]=st__Object__get_y[52]
    set st__Object__get_y[77]=st__Object__get_y[52]
    set st__Object__get_y[98]=st__Object__get_y[77]
    set st__Object__get_y[114]=st__Object__get_y[77]
    set st__Object__get_y[117]=st__Object__get_y[77]
    set st__Object__get_y[140]=st__Object__get_y[77]
    set st__Object__get_y[149]=st__Object__get_y[77]
    set st__Object__get_y[150]=st__Object__get_y[77]
    call TriggerAddCondition(st__Object__get_y[52],Condition( function sa__Effect__get_y))
    call TriggerAddAction(st__Object__get_y[52], function sa__Effect__get_y)
    set st__Object__get_offset_y[52]=CreateTrigger()
    set st__Object__get_offset_y[72]=st__Object__get_offset_y[52]
    set st__Object__get_offset_y[73]=st__Object__get_offset_y[52]
    set st__Object__get_offset_y[77]=st__Object__get_offset_y[52]
    set st__Object__get_offset_y[98]=st__Object__get_offset_y[77]
    set st__Object__get_offset_y[114]=st__Object__get_offset_y[77]
    set st__Object__get_offset_y[117]=st__Object__get_offset_y[77]
    set st__Object__get_offset_y[140]=st__Object__get_offset_y[77]
    set st__Object__get_offset_y[149]=st__Object__get_offset_y[77]
    set st__Object__get_offset_y[150]=st__Object__get_offset_y[77]
    call TriggerAddCondition(st__Object__get_offset_y[52],Condition( function sa__Effect__get_offset_y))
    call TriggerAddAction(st__Object__get_offset_y[52], function sa__Effect__get_offset_y)
    set st__Object__get_z[52]=CreateTrigger()
    set st__Object__get_z[72]=st__Object__get_z[52]
    set st__Object__get_z[73]=st__Object__get_z[52]
    set st__Object__get_z[77]=st__Object__get_z[52]
    set st__Object__get_z[98]=st__Object__get_z[77]
    set st__Object__get_z[114]=st__Object__get_z[77]
    set st__Object__get_z[117]=st__Object__get_z[77]
    set st__Object__get_z[140]=st__Object__get_z[77]
    set st__Object__get_z[149]=st__Object__get_z[77]
    set st__Object__get_z[150]=st__Object__get_z[77]
    call TriggerAddCondition(st__Object__get_z[52],Condition( function sa__Effect__get_z))
    call TriggerAddAction(st__Object__get_z[52], function sa__Effect__get_z)
    set st__Object__get_offset_z[52]=CreateTrigger()
    set st__Object__get_offset_z[72]=st__Object__get_offset_z[52]
    set st__Object__get_offset_z[73]=st__Object__get_offset_z[52]
    set st__Object__get_offset_z[77]=st__Object__get_offset_z[52]
    set st__Object__get_offset_z[98]=st__Object__get_offset_z[77]
    set st__Object__get_offset_z[114]=st__Object__get_offset_z[77]
    set st__Object__get_offset_z[117]=st__Object__get_offset_z[77]
    set st__Object__get_offset_z[140]=st__Object__get_offset_z[77]
    set st__Object__get_offset_z[149]=st__Object__get_offset_z[77]
    set st__Object__get_offset_z[150]=st__Object__get_offset_z[77]
    call TriggerAddCondition(st__Object__get_offset_z[52],Condition( function sa__Effect__get_offset_z))
    call TriggerAddAction(st__Object__get_offset_z[52], function sa__Effect__get_offset_z)
    set st__Object__get_yaw[52]=CreateTrigger()
    set st__Object__get_yaw[72]=st__Object__get_yaw[52]
    set st__Object__get_yaw[73]=st__Object__get_yaw[52]
    set st__Object__get_yaw[77]=st__Object__get_yaw[52]
    set st__Object__get_yaw[98]=st__Object__get_yaw[77]
    set st__Object__get_yaw[114]=st__Object__get_yaw[77]
    set st__Object__get_yaw[117]=st__Object__get_yaw[77]
    set st__Object__get_yaw[140]=st__Object__get_yaw[77]
    set st__Object__get_yaw[149]=st__Object__get_yaw[77]
    set st__Object__get_yaw[150]=st__Object__get_yaw[77]
    call TriggerAddCondition(st__Object__get_yaw[52],Condition( function sa__Effect__get_yaw))
    call TriggerAddAction(st__Object__get_yaw[52], function sa__Effect__get_yaw)
    set st__Object__get_offset_yaw[52]=CreateTrigger()
    set st__Object__get_offset_yaw[72]=st__Object__get_offset_yaw[52]
    set st__Object__get_offset_yaw[73]=st__Object__get_offset_yaw[52]
    set st__Object__get_offset_yaw[77]=st__Object__get_offset_yaw[52]
    set st__Object__get_offset_yaw[98]=st__Object__get_offset_yaw[77]
    set st__Object__get_offset_yaw[114]=st__Object__get_offset_yaw[77]
    set st__Object__get_offset_yaw[117]=st__Object__get_offset_yaw[77]
    set st__Object__get_offset_yaw[140]=st__Object__get_offset_yaw[77]
    set st__Object__get_offset_yaw[149]=st__Object__get_offset_yaw[77]
    set st__Object__get_offset_yaw[150]=st__Object__get_offset_yaw[77]
    call TriggerAddCondition(st__Object__get_offset_yaw[52],Condition( function sa__Effect__get_offset_yaw))
    call TriggerAddAction(st__Object__get_offset_yaw[52], function sa__Effect__get_offset_yaw)
    set st__Object__get_pitch[52]=CreateTrigger()
    set st__Object__get_pitch[72]=st__Object__get_pitch[52]
    set st__Object__get_pitch[73]=st__Object__get_pitch[52]
    set st__Object__get_pitch[77]=st__Object__get_pitch[52]
    set st__Object__get_pitch[98]=st__Object__get_pitch[77]
    set st__Object__get_pitch[114]=st__Object__get_pitch[77]
    set st__Object__get_pitch[117]=st__Object__get_pitch[77]
    set st__Object__get_pitch[140]=st__Object__get_pitch[77]
    set st__Object__get_pitch[149]=st__Object__get_pitch[77]
    set st__Object__get_pitch[150]=st__Object__get_pitch[77]
    call TriggerAddCondition(st__Object__get_pitch[52],Condition( function sa__Effect__get_pitch))
    call TriggerAddAction(st__Object__get_pitch[52], function sa__Effect__get_pitch)
    set st__Object__get_offset_pitch[52]=CreateTrigger()
    set st__Object__get_offset_pitch[72]=st__Object__get_offset_pitch[52]
    set st__Object__get_offset_pitch[73]=st__Object__get_offset_pitch[52]
    set st__Object__get_offset_pitch[77]=st__Object__get_offset_pitch[52]
    set st__Object__get_offset_pitch[98]=st__Object__get_offset_pitch[77]
    set st__Object__get_offset_pitch[114]=st__Object__get_offset_pitch[77]
    set st__Object__get_offset_pitch[117]=st__Object__get_offset_pitch[77]
    set st__Object__get_offset_pitch[140]=st__Object__get_offset_pitch[77]
    set st__Object__get_offset_pitch[149]=st__Object__get_offset_pitch[77]
    set st__Object__get_offset_pitch[150]=st__Object__get_offset_pitch[77]
    call TriggerAddCondition(st__Object__get_offset_pitch[52],Condition( function sa__Effect__get_offset_pitch))
    call TriggerAddAction(st__Object__get_offset_pitch[52], function sa__Effect__get_offset_pitch)
    set st__Object__get_roll[52]=CreateTrigger()
    set st__Object__get_roll[72]=st__Object__get_roll[52]
    set st__Object__get_roll[73]=st__Object__get_roll[52]
    set st__Object__get_roll[77]=st__Object__get_roll[52]
    set st__Object__get_roll[98]=st__Object__get_roll[77]
    set st__Object__get_roll[114]=st__Object__get_roll[77]
    set st__Object__get_roll[117]=st__Object__get_roll[77]
    set st__Object__get_roll[140]=st__Object__get_roll[77]
    set st__Object__get_roll[149]=st__Object__get_roll[77]
    set st__Object__get_roll[150]=st__Object__get_roll[77]
    call TriggerAddCondition(st__Object__get_roll[52],Condition( function sa__Effect__get_roll))
    call TriggerAddAction(st__Object__get_roll[52], function sa__Effect__get_roll)
    set st__Object__get_offset_roll[52]=CreateTrigger()
    set st__Object__get_offset_roll[72]=st__Object__get_offset_roll[52]
    set st__Object__get_offset_roll[73]=st__Object__get_offset_roll[52]
    set st__Object__get_offset_roll[77]=st__Object__get_offset_roll[52]
    set st__Object__get_offset_roll[98]=st__Object__get_offset_roll[77]
    set st__Object__get_offset_roll[114]=st__Object__get_offset_roll[77]
    set st__Object__get_offset_roll[117]=st__Object__get_offset_roll[77]
    set st__Object__get_offset_roll[140]=st__Object__get_offset_roll[77]
    set st__Object__get_offset_roll[149]=st__Object__get_offset_roll[77]
    set st__Object__get_offset_roll[150]=st__Object__get_offset_roll[77]
    call TriggerAddCondition(st__Object__get_offset_roll[52],Condition( function sa__Effect__get_offset_roll))
    call TriggerAddAction(st__Object__get_offset_roll[52], function sa__Effect__get_offset_roll)
    set st__Object__set_x[52]=CreateTrigger()
    set st__Object__set_x[72]=st__Object__set_x[52]
    set st__Object__set_x[73]=st__Object__set_x[52]
    set st__Object__set_x[77]=st__Object__set_x[52]
    set st__Object__set_x[98]=st__Object__set_x[77]
    set st__Object__set_x[114]=st__Object__set_x[77]
    set st__Object__set_x[117]=st__Object__set_x[77]
    set st__Object__set_x[140]=st__Object__set_x[77]
    set st__Object__set_x[149]=st__Object__set_x[77]
    set st__Object__set_x[150]=st__Object__set_x[77]
    call TriggerAddCondition(st__Object__set_x[52],Condition( function sa__Effect__set_x))
    call TriggerAddAction(st__Object__set_x[52], function sa__Effect__set_x)
    set st__Object__set_offset_x[52]=CreateTrigger()
    set st__Object__set_offset_x[72]=st__Object__set_offset_x[52]
    set st__Object__set_offset_x[73]=st__Object__set_offset_x[52]
    set st__Object__set_offset_x[77]=st__Object__set_offset_x[52]
    set st__Object__set_offset_x[98]=st__Object__set_offset_x[77]
    set st__Object__set_offset_x[114]=st__Object__set_offset_x[77]
    set st__Object__set_offset_x[117]=st__Object__set_offset_x[77]
    set st__Object__set_offset_x[140]=st__Object__set_offset_x[77]
    set st__Object__set_offset_x[149]=st__Object__set_offset_x[77]
    set st__Object__set_offset_x[150]=st__Object__set_offset_x[77]
    call TriggerAddCondition(st__Object__set_offset_x[52],Condition( function sa__Effect__set_offset_x))
    call TriggerAddAction(st__Object__set_offset_x[52], function sa__Effect__set_offset_x)
    set st__Object__set_y[52]=CreateTrigger()
    set st__Object__set_y[72]=st__Object__set_y[52]
    set st__Object__set_y[73]=st__Object__set_y[52]
    set st__Object__set_y[77]=st__Object__set_y[52]
    set st__Object__set_y[98]=st__Object__set_y[77]
    set st__Object__set_y[114]=st__Object__set_y[77]
    set st__Object__set_y[117]=st__Object__set_y[77]
    set st__Object__set_y[140]=st__Object__set_y[77]
    set st__Object__set_y[149]=st__Object__set_y[77]
    set st__Object__set_y[150]=st__Object__set_y[77]
    call TriggerAddCondition(st__Object__set_y[52],Condition( function sa__Effect__set_y))
    call TriggerAddAction(st__Object__set_y[52], function sa__Effect__set_y)
    set st__Object__set_offset_y[52]=CreateTrigger()
    set st__Object__set_offset_y[72]=st__Object__set_offset_y[52]
    set st__Object__set_offset_y[73]=st__Object__set_offset_y[52]
    set st__Object__set_offset_y[77]=st__Object__set_offset_y[52]
    set st__Object__set_offset_y[98]=st__Object__set_offset_y[77]
    set st__Object__set_offset_y[114]=st__Object__set_offset_y[77]
    set st__Object__set_offset_y[117]=st__Object__set_offset_y[77]
    set st__Object__set_offset_y[140]=st__Object__set_offset_y[77]
    set st__Object__set_offset_y[149]=st__Object__set_offset_y[77]
    set st__Object__set_offset_y[150]=st__Object__set_offset_y[77]
    call TriggerAddCondition(st__Object__set_offset_y[52],Condition( function sa__Effect__set_offset_y))
    call TriggerAddAction(st__Object__set_offset_y[52], function sa__Effect__set_offset_y)
    set st__Object__set_z[52]=CreateTrigger()
    set st__Object__set_z[72]=st__Object__set_z[52]
    set st__Object__set_z[73]=st__Object__set_z[52]
    set st__Object__set_z[77]=st__Object__set_z[52]
    set st__Object__set_z[98]=st__Object__set_z[77]
    set st__Object__set_z[114]=st__Object__set_z[77]
    set st__Object__set_z[117]=st__Object__set_z[77]
    set st__Object__set_z[140]=st__Object__set_z[77]
    set st__Object__set_z[149]=st__Object__set_z[77]
    set st__Object__set_z[150]=st__Object__set_z[77]
    call TriggerAddCondition(st__Object__set_z[52],Condition( function sa__Effect__set_z))
    call TriggerAddAction(st__Object__set_z[52], function sa__Effect__set_z)
    set st__Object__set_offset_z[52]=CreateTrigger()
    set st__Object__set_offset_z[72]=st__Object__set_offset_z[52]
    set st__Object__set_offset_z[73]=st__Object__set_offset_z[52]
    set st__Object__set_offset_z[77]=st__Object__set_offset_z[52]
    set st__Object__set_offset_z[98]=st__Object__set_offset_z[77]
    set st__Object__set_offset_z[114]=st__Object__set_offset_z[77]
    set st__Object__set_offset_z[117]=st__Object__set_offset_z[77]
    set st__Object__set_offset_z[140]=st__Object__set_offset_z[77]
    set st__Object__set_offset_z[149]=st__Object__set_offset_z[77]
    set st__Object__set_offset_z[150]=st__Object__set_offset_z[77]
    call TriggerAddCondition(st__Object__set_offset_z[52],Condition( function sa__Effect__set_offset_z))
    call TriggerAddAction(st__Object__set_offset_z[52], function sa__Effect__set_offset_z)
    set st__Object__set_yaw[52]=CreateTrigger()
    set st__Object__set_yaw[72]=st__Object__set_yaw[52]
    set st__Object__set_yaw[73]=st__Object__set_yaw[52]
    set st__Object__set_yaw[77]=st__Object__set_yaw[52]
    set st__Object__set_yaw[98]=st__Object__set_yaw[77]
    set st__Object__set_yaw[114]=st__Object__set_yaw[77]
    set st__Object__set_yaw[117]=st__Object__set_yaw[77]
    set st__Object__set_yaw[140]=st__Object__set_yaw[77]
    set st__Object__set_yaw[149]=st__Object__set_yaw[77]
    set st__Object__set_yaw[150]=st__Object__set_yaw[77]
    call TriggerAddCondition(st__Object__set_yaw[52],Condition( function sa__Effect__set_yaw))
    call TriggerAddAction(st__Object__set_yaw[52], function sa__Effect__set_yaw)
    set st__Object__set_offset_yaw[52]=CreateTrigger()
    set st__Object__set_offset_yaw[72]=st__Object__set_offset_yaw[52]
    set st__Object__set_offset_yaw[73]=st__Object__set_offset_yaw[52]
    set st__Object__set_offset_yaw[77]=st__Object__set_offset_yaw[52]
    set st__Object__set_offset_yaw[98]=st__Object__set_offset_yaw[77]
    set st__Object__set_offset_yaw[114]=st__Object__set_offset_yaw[77]
    set st__Object__set_offset_yaw[117]=st__Object__set_offset_yaw[77]
    set st__Object__set_offset_yaw[140]=st__Object__set_offset_yaw[77]
    set st__Object__set_offset_yaw[149]=st__Object__set_offset_yaw[77]
    set st__Object__set_offset_yaw[150]=st__Object__set_offset_yaw[77]
    call TriggerAddCondition(st__Object__set_offset_yaw[52],Condition( function sa__Effect__set_offset_yaw))
    call TriggerAddAction(st__Object__set_offset_yaw[52], function sa__Effect__set_offset_yaw)
    set st__Object__set_pitch[52]=CreateTrigger()
    set st__Object__set_pitch[72]=st__Object__set_pitch[52]
    set st__Object__set_pitch[73]=st__Object__set_pitch[52]
    set st__Object__set_pitch[77]=st__Object__set_pitch[52]
    set st__Object__set_pitch[98]=st__Object__set_pitch[77]
    set st__Object__set_pitch[114]=st__Object__set_pitch[77]
    set st__Object__set_pitch[117]=st__Object__set_pitch[77]
    set st__Object__set_pitch[140]=st__Object__set_pitch[77]
    set st__Object__set_pitch[149]=st__Object__set_pitch[77]
    set st__Object__set_pitch[150]=st__Object__set_pitch[77]
    call TriggerAddCondition(st__Object__set_pitch[52],Condition( function sa__Effect__set_pitch))
    call TriggerAddAction(st__Object__set_pitch[52], function sa__Effect__set_pitch)
    set st__Object__set_offset_pitch[52]=CreateTrigger()
    set st__Object__set_offset_pitch[72]=st__Object__set_offset_pitch[52]
    set st__Object__set_offset_pitch[73]=st__Object__set_offset_pitch[52]
    set st__Object__set_offset_pitch[77]=st__Object__set_offset_pitch[52]
    set st__Object__set_offset_pitch[98]=st__Object__set_offset_pitch[77]
    set st__Object__set_offset_pitch[114]=st__Object__set_offset_pitch[77]
    set st__Object__set_offset_pitch[117]=st__Object__set_offset_pitch[77]
    set st__Object__set_offset_pitch[140]=st__Object__set_offset_pitch[77]
    set st__Object__set_offset_pitch[149]=st__Object__set_offset_pitch[77]
    set st__Object__set_offset_pitch[150]=st__Object__set_offset_pitch[77]
    call TriggerAddCondition(st__Object__set_offset_pitch[52],Condition( function sa__Effect__set_offset_pitch))
    call TriggerAddAction(st__Object__set_offset_pitch[52], function sa__Effect__set_offset_pitch)
    set st__Object__set_roll[52]=CreateTrigger()
    set st__Object__set_roll[72]=st__Object__set_roll[52]
    set st__Object__set_roll[73]=st__Object__set_roll[52]
    set st__Object__set_roll[77]=st__Object__set_roll[52]
    set st__Object__set_roll[98]=st__Object__set_roll[77]
    set st__Object__set_roll[114]=st__Object__set_roll[77]
    set st__Object__set_roll[117]=st__Object__set_roll[77]
    set st__Object__set_roll[140]=st__Object__set_roll[77]
    set st__Object__set_roll[149]=st__Object__set_roll[77]
    set st__Object__set_roll[150]=st__Object__set_roll[77]
    call TriggerAddCondition(st__Object__set_roll[52],Condition( function sa__Effect__set_roll))
    call TriggerAddAction(st__Object__set_roll[52], function sa__Effect__set_roll)
    set st__Object__set_offset_roll[52]=CreateTrigger()
    set st__Object__set_offset_roll[72]=st__Object__set_offset_roll[52]
    set st__Object__set_offset_roll[73]=st__Object__set_offset_roll[52]
    set st__Object__set_offset_roll[77]=st__Object__set_offset_roll[52]
    set st__Object__set_offset_roll[98]=st__Object__set_offset_roll[77]
    set st__Object__set_offset_roll[114]=st__Object__set_offset_roll[77]
    set st__Object__set_offset_roll[117]=st__Object__set_offset_roll[77]
    set st__Object__set_offset_roll[140]=st__Object__set_offset_roll[77]
    set st__Object__set_offset_roll[149]=st__Object__set_offset_roll[77]
    set st__Object__set_offset_roll[150]=st__Object__set_offset_roll[77]
    call TriggerAddCondition(st__Object__set_offset_roll[52],Condition( function sa__Effect__set_offset_roll))
    call TriggerAddAction(st__Object__set_offset_roll[52], function sa__Effect__set_offset_roll)
    set st__Effect_setScale=CreateTrigger()
    call TriggerAddCondition(st__Effect_setScale,Condition( function sa__Effect_setScale))
    set st__Effect_setAlpha=CreateTrigger()
    call TriggerAddCondition(st__Effect_setAlpha,Condition( function sa__Effect_setAlpha))
    set st__Effect_setColor=CreateTrigger()
    call TriggerAddCondition(st__Effect_setColor,Condition( function sa__Effect_setColor))
    set st__Effect_setPosition=CreateTrigger()
    call TriggerAddCondition(st__Effect_setPosition,Condition( function sa__Effect_setPosition))
    set st__Effect_setDuration=CreateTrigger()
    call TriggerAddCondition(st__Effect_setDuration,Condition( function sa__Effect_setDuration))
    set st__Effect_kill=CreateTrigger()
    call TriggerAddCondition(st__Effect_kill,Condition( function sa__Effect_kill))
    set st__Effect_setAnim=CreateTrigger()
    call TriggerAddCondition(st__Effect_setAnim,Condition( function sa__Effect_setAnim))
    set st__Effect_setLocalAlpha=CreateTrigger()
    call TriggerAddCondition(st__Effect_setLocalAlpha,Condition( function sa__Effect_setLocalAlpha))
    set st__Effect_setLocalColor=CreateTrigger()
    call TriggerAddCondition(st__Effect_setLocalColor,Condition( function sa__Effect_setLocalColor))
    set st__Effect_create=CreateTrigger()
    call TriggerAddCondition(st__Effect_create,Condition( function sa__Effect_create))
    set st__Object_onDestroy[52]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[52],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[52],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[52],Condition( function sa__Object_onDestroy))
    set st__Actor_onComplete[115]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[115],Condition( function sa__Abilityu001_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[115], function sa__Abilityu001_actor_onComplete)
    set st__Ability_prototype_relativeTooltip[116]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[116],Condition( function sa__Abilityu001_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[116], function sa__Abilityu001_main_relativeTooltip)
    set st__Ability_prototype_basicAttack[116]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_basicAttack[116],Condition( function sa__Abilityu001_main_basicAttack))
    call TriggerAddAction(st__Ability_prototype_basicAttack[116], function sa__Abilityu001_main_basicAttack)
    set st__Ability_prototype_init[116]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[116],Condition( function sa__Abilityu001_main_init))
    call TriggerAddAction(st__Ability_prototype_init[116], function sa__Abilityu001_main_init)
    set st__Movement__get_target[41]=CreateTrigger()
    set st__Movement__get_target[42]=st__Movement__get_target[41]
    set st__Movement__get_target[87]=st__Movement__get_target[41]
    set st__Movement__get_target[111]=st__Movement__get_target[41]
    call TriggerAddCondition(st__Movement__get_target[41],Condition( function sa__UnitMovement__get_target))
    call TriggerAddAction(st__Movement__get_target[41], function sa__UnitMovement__get_target)
    set st__UnitMovement_explosionFilterAdditional[41]=CreateTrigger()
    set st__UnitMovement_explosionFilterAdditional[42]=st__UnitMovement_explosionFilterAdditional[41]
    set st__UnitMovement_explosionFilterAdditional[87]=st__UnitMovement_explosionFilterAdditional[41]
    set st__UnitMovement_explosionFilterAdditional[111]=st__UnitMovement_explosionFilterAdditional[41]
    call TriggerAddCondition(st__UnitMovement_explosionFilterAdditional[41],Condition( function sa__UnitMovement_explosionFilterAdditional))
    call TriggerAddAction(st__UnitMovement_explosionFilterAdditional[41], function sa__UnitMovement_explosionFilterAdditional)
    set st__UnitMovement_executeExplosion[41]=CreateTrigger()
    set st__UnitMovement_executeExplosion[42]=st__UnitMovement_executeExplosion[41]
    set st__UnitMovement_executeExplosion[111]=st__UnitMovement_executeExplosion[41]
    call TriggerAddCondition(st__UnitMovement_executeExplosion[41],Condition( function sa__UnitMovement_executeExplosion))
    call TriggerAddAction(st__UnitMovement_executeExplosion[41], function sa__UnitMovement_executeExplosion)
    set st__UnitMovement_damageTarget=CreateTrigger()
    call TriggerAddCondition(st__UnitMovement_damageTarget,Condition( function sa__UnitMovement_damageTarget))
    set st__UnitMovement_rangeFilter[41]=CreateTrigger()
    set st__UnitMovement_rangeFilter[42]=st__UnitMovement_rangeFilter[41]
    set st__UnitMovement_rangeFilter[87]=st__UnitMovement_rangeFilter[41]
    set st__UnitMovement_rangeFilter[111]=st__UnitMovement_rangeFilter[41]
    call TriggerAddCondition(st__UnitMovement_rangeFilter[41],Condition( function sa__UnitMovement_rangeFilter))
    call TriggerAddAction(st__UnitMovement_rangeFilter[41], function sa__UnitMovement_rangeFilter)
    set st__UnitMovement_waveFilterAdditional[41]=CreateTrigger()
    set st__UnitMovement_waveFilterAdditional[42]=st__UnitMovement_waveFilterAdditional[41]
    set st__UnitMovement_waveFilterAdditional[87]=st__UnitMovement_waveFilterAdditional[41]
    set st__UnitMovement_waveFilterAdditional[111]=st__UnitMovement_waveFilterAdditional[41]
    call TriggerAddCondition(st__UnitMovement_waveFilterAdditional[41],Condition( function sa__UnitMovement_waveFilterAdditional))
    call TriggerAddAction(st__UnitMovement_waveFilterAdditional[41], function sa__UnitMovement_waveFilterAdditional)
    set st__UnitMovement_waveRangeFilter[41]=CreateTrigger()
    set st__UnitMovement_waveRangeFilter[42]=st__UnitMovement_waveRangeFilter[41]
    set st__UnitMovement_waveRangeFilter[87]=st__UnitMovement_waveRangeFilter[41]
    set st__UnitMovement_waveRangeFilter[111]=st__UnitMovement_waveRangeFilter[41]
    call TriggerAddCondition(st__UnitMovement_waveRangeFilter[41],Condition( function sa__UnitMovement_waveRangeFilter))
    call TriggerAddAction(st__UnitMovement_waveRangeFilter[41], function sa__UnitMovement_waveRangeFilter)
    set st__UnitMovement_executeWave[41]=CreateTrigger()
    set st__UnitMovement_executeWave[42]=st__UnitMovement_executeWave[41]
    set st__UnitMovement_executeWave[87]=st__UnitMovement_executeWave[41]
    set st__UnitMovement_executeWave[111]=st__UnitMovement_executeWave[41]
    call TriggerAddCondition(st__UnitMovement_executeWave[41],Condition( function sa__UnitMovement_executeWave))
    call TriggerAddAction(st__UnitMovement_executeWave[41], function sa__UnitMovement_executeWave)
    set st__UnitMovement_collisionFilterAdditional[41]=CreateTrigger()
    set st__UnitMovement_collisionFilterAdditional[42]=st__UnitMovement_collisionFilterAdditional[41]
    set st__UnitMovement_collisionFilterAdditional[87]=st__UnitMovement_collisionFilterAdditional[41]
    set st__UnitMovement_collisionFilterAdditional[111]=st__UnitMovement_collisionFilterAdditional[41]
    call TriggerAddCondition(st__UnitMovement_collisionFilterAdditional[41],Condition( function sa__UnitMovement_collisionFilterAdditional))
    call TriggerAddAction(st__UnitMovement_collisionFilterAdditional[41], function sa__UnitMovement_collisionFilterAdditional)
    set st__UnitMovement_targetFilterAdditional[41]=CreateTrigger()
    set st__UnitMovement_targetFilterAdditional[42]=st__UnitMovement_targetFilterAdditional[41]
    set st__UnitMovement_targetFilterAdditional[87]=st__UnitMovement_targetFilterAdditional[41]
    set st__UnitMovement_targetFilterAdditional[111]=st__UnitMovement_targetFilterAdditional[41]
    call TriggerAddCondition(st__UnitMovement_targetFilterAdditional[41],Condition( function sa__UnitMovement_targetFilterAdditional))
    call TriggerAddAction(st__UnitMovement_targetFilterAdditional[41], function sa__UnitMovement_targetFilterAdditional)
    set st__UnitMovement_executeTarget[41]=CreateTrigger()
    set st__UnitMovement_executeTarget[42]=st__UnitMovement_executeTarget[41]
    set st__UnitMovement_executeTarget[111]=st__UnitMovement_executeTarget[41]
    call TriggerAddCondition(st__UnitMovement_executeTarget[41],Condition( function sa__UnitMovement_executeTarget))
    call TriggerAddAction(st__UnitMovement_executeTarget[41], function sa__UnitMovement_executeTarget)
    set st__Actor_suspendFilter[41]=CreateTrigger()
    set st__Actor_suspendFilter[42]=st__Actor_suspendFilter[41]
    set st__Actor_suspendFilter[87]=st__Actor_suspendFilter[41]
    set st__Actor_suspendFilter[111]=st__Actor_suspendFilter[41]
    call TriggerAddCondition(st__Actor_suspendFilter[41],Condition( function sa__UnitMovement_suspendFilter))
    call TriggerAddAction(st__Actor_suspendFilter[41], function sa__UnitMovement_suspendFilter)
    set st__Actor_onSuspend[41]=CreateTrigger()
    set st__Actor_onSuspend[42]=st__Actor_onSuspend[41]
    set st__Actor_onSuspend[87]=st__Actor_onSuspend[41]
    set st__Actor_onSuspend[111]=st__Actor_onSuspend[41]
    call TriggerAddCondition(st__Actor_onSuspend[41],Condition( function sa__UnitMovement_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[41], function sa__UnitMovement_onSuspend)
    set st__Actor_onComplete[41]=CreateTrigger()
    set st__Actor_onComplete[42]=st__Actor_onComplete[41]
    set st__Actor_onComplete[87]=st__Actor_onComplete[41]
    call TriggerAddCondition(st__Actor_onComplete[41],Condition( function sa__UnitMovement_onComplete))
    call TriggerAddAction(st__Actor_onComplete[41], function sa__UnitMovement_onComplete)
    set st__Movement_onCollision[41]=CreateTrigger()
    set st__Movement_onCollision[42]=st__Movement_onCollision[41]
    set st__Movement_onCollision[87]=st__Movement_onCollision[41]
    set st__Movement_onCollision[111]=st__Movement_onCollision[41]
    call TriggerAddCondition(st__Movement_onCollision[41],Condition( function sa__UnitMovement_onCollision))
    call TriggerAddAction(st__Movement_onCollision[41], function sa__UnitMovement_onCollision)
    set st__Actor_periodicAction[41]=CreateTrigger()
    set st__Actor_periodicAction[42]=st__Actor_periodicAction[41]
    set st__Actor_periodicAction[87]=st__Actor_periodicAction[41]
    set st__Actor_periodicAction[111]=st__Actor_periodicAction[41]
    call TriggerAddCondition(st__Actor_periodicAction[41],Condition( function sa__UnitMovement_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[41], function sa__UnitMovement_periodicAction)
    set st__UnitMovement_create=CreateTrigger()
    call TriggerAddCondition(st__UnitMovement_create,Condition( function sa__UnitMovement_create))
    set st__Actor_onDestroy[41]=CreateTrigger()
    set st__Actor_onDestroy[42]=st__Actor_onDestroy[41]
    call TriggerAddCondition(st__Actor_onDestroy[41],Condition( function sa__UnitMovement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[41],Condition( function sa__Movement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[41],Condition( function sa__Actor_onDestroy))
    set st__Actor_periodicAction[118]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[118],Condition( function sa__Ability0010_make_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[118], function sa__Ability0010_make_periodicAction)
    set st__Actor_onComplete[118]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[118],Condition( function sa__Ability0010_make_onComplete))
    call TriggerAddAction(st__Actor_onComplete[118], function sa__Ability0010_make_onComplete)
    set st__Actor_onSuspend[118]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[118],Condition( function sa__Ability0010_make_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[118], function sa__Ability0010_make_onSuspend)
    set st__Actor_onDestroy[118]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[118],Condition( function sa__Ability0010_make_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[118],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[118],Condition( function sa__Actor_onDestroy))
    set st__Actor_onComplete[119]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[119],Condition( function sa__Ability0010_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[119], function sa__Ability0010_actor_onComplete)
    set st__Actor_onSuspend[119]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[119],Condition( function sa__Ability0010_actor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[119], function sa__Ability0010_actor_onSuspend)
    set st__Actor_onDestroy[119]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[119],Condition( function sa__Ability0010_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[119],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[119],Condition( function sa__Actor_onDestroy))
    set st__Ability_prototype_iconClick[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_iconClick[121],Condition( function sa__Ability0010_main_iconClick))
    call TriggerAddAction(st__Ability_prototype_iconClick[121], function sa__Ability0010_main_iconClick)
    set st__Ability_prototype_relativeTooltip[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[121],Condition( function sa__Ability0010_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[121], function sa__Ability0010_main_relativeTooltip)
    set st__Ability_prototype_useFilterAdditional[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_useFilterAdditional[121],Condition( function sa__Ability0010_main_useFilterAdditional))
    call TriggerAddAction(st__Ability_prototype_useFilterAdditional[121], function sa__Ability0010_main_useFilterAdditional)
    set st__Ability_prototype_execute[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[121],Condition( function sa__Ability0010_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[121], function sa__Ability0010_main_execute)
    set st__Ability_prototype_update[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_update[121],Condition( function sa__Ability0010_main_update))
    call TriggerAddAction(st__Ability_prototype_update[121], function sa__Ability0010_main_update)
    set st__Ability_prototype_init[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[121],Condition( function sa__Ability0010_main_init))
    call TriggerAddAction(st__Ability_prototype_init[121], function sa__Ability0010_main_init)
    set st__Ability_deactivate[121]=CreateTrigger()
    call TriggerAddCondition(st__Ability_deactivate[121],Condition( function sa__Ability0010_main_deactivate))
    call TriggerAddAction(st__Ability_deactivate[121], function sa__Ability0010_main_deactivate)
    set st__Actor_periodicAction[123]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[123],Condition( function sa__Ability0013_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[123], function sa__Ability0013_actor_periodicAction)
    set st__Actor_onDestroy[123]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[123],Condition( function sa__Ability0013_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[123],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[123],Condition( function sa__Actor_onDestroy))
    set st__Ability_prototype_relativeTooltip[124]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_relativeTooltip[124],Condition( function sa__Ability0013_main_relativeTooltip))
    call TriggerAddAction(st__Ability_prototype_relativeTooltip[124], function sa__Ability0013_main_relativeTooltip)
    set st__Ability_prototype_execute[124]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_execute[124],Condition( function sa__Ability0013_main_execute))
    call TriggerAddAction(st__Ability_prototype_execute[124], function sa__Ability0013_main_execute)
    set st__Ability_prototype_init[124]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[124],Condition( function sa__Ability0013_main_init))
    call TriggerAddAction(st__Ability_prototype_init[124], function sa__Ability0013_main_init)
    set st__Unit_prototype__get_origin_unit=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_origin_unit,Condition( function sa__Unit_prototype__get_origin_unit))
    set st__Unit_prototype__get_level=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_level,Condition( function sa__Unit_prototype__get_level))
    set st__Unit_prototype__set_level=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_level,Condition( function sa__Unit_prototype__set_level))
    set st__Unit_prototype_getCarculatedStatValue=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_getCarculatedStatValue,Condition( function sa__Unit_prototype_getCarculatedStatValue))
    set st__Unit_prototype_refreshLevelStatValue=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_refreshLevelStatValue,Condition( function sa__Unit_prototype_refreshLevelStatValue))
    set st__Unit_prototype__get_owner=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_owner,Condition( function sa__Unit_prototype__get_owner))
    set st__Object__get_x[43]=CreateTrigger()
    set st__Object__get_x[79]=st__Object__get_x[43]
    set st__Object__get_x[74]=st__Object__get_x[79]
    set st__Object__get_x[81]=st__Object__get_x[79]
    set st__Object__get_x[33]=st__Object__get_x[81]
    set st__Object__get_x[34]=st__Object__get_x[81]
    set st__Object__get_x[35]=st__Object__get_x[81]
    set st__Object__get_x[36]=st__Object__get_x[81]
    set st__Object__get_x[37]=st__Object__get_x[81]
    call TriggerAddCondition(st__Object__get_x[43],Condition( function sa__Unit_prototype__get_x))
    call TriggerAddAction(st__Object__get_x[43], function sa__Unit_prototype__get_x)
    set st__Object__get_y[43]=CreateTrigger()
    set st__Object__get_y[79]=st__Object__get_y[43]
    set st__Object__get_y[74]=st__Object__get_y[79]
    set st__Object__get_y[81]=st__Object__get_y[79]
    set st__Object__get_y[33]=st__Object__get_y[81]
    set st__Object__get_y[34]=st__Object__get_y[81]
    set st__Object__get_y[35]=st__Object__get_y[81]
    set st__Object__get_y[36]=st__Object__get_y[81]
    set st__Object__get_y[37]=st__Object__get_y[81]
    call TriggerAddCondition(st__Object__get_y[43],Condition( function sa__Unit_prototype__get_y))
    call TriggerAddAction(st__Object__get_y[43], function sa__Unit_prototype__get_y)
    set st__Object__get_z[43]=CreateTrigger()
    set st__Object__get_z[79]=st__Object__get_z[43]
    set st__Object__get_z[74]=st__Object__get_z[79]
    set st__Object__get_z[81]=st__Object__get_z[79]
    set st__Object__get_z[33]=st__Object__get_z[81]
    set st__Object__get_z[34]=st__Object__get_z[81]
    set st__Object__get_z[35]=st__Object__get_z[81]
    set st__Object__get_z[36]=st__Object__get_z[81]
    set st__Object__get_z[37]=st__Object__get_z[81]
    call TriggerAddCondition(st__Object__get_z[43],Condition( function sa__Unit_prototype__get_z))
    call TriggerAddAction(st__Object__get_z[43], function sa__Unit_prototype__get_z)
    set st__Object__get_yaw[43]=CreateTrigger()
    set st__Object__get_yaw[79]=st__Object__get_yaw[43]
    set st__Object__get_yaw[74]=st__Object__get_yaw[79]
    set st__Object__get_yaw[81]=st__Object__get_yaw[79]
    set st__Object__get_yaw[33]=st__Object__get_yaw[81]
    set st__Object__get_yaw[34]=st__Object__get_yaw[81]
    set st__Object__get_yaw[35]=st__Object__get_yaw[81]
    set st__Object__get_yaw[36]=st__Object__get_yaw[81]
    set st__Object__get_yaw[37]=st__Object__get_yaw[81]
    call TriggerAddCondition(st__Object__get_yaw[43],Condition( function sa__Unit_prototype__get_yaw))
    call TriggerAddAction(st__Object__get_yaw[43], function sa__Unit_prototype__get_yaw)
    set st__Object__set_x[43]=CreateTrigger()
    set st__Object__set_x[79]=st__Object__set_x[43]
    set st__Object__set_x[74]=st__Object__set_x[79]
    set st__Object__set_x[81]=st__Object__set_x[79]
    set st__Object__set_x[33]=st__Object__set_x[81]
    set st__Object__set_x[34]=st__Object__set_x[81]
    set st__Object__set_x[35]=st__Object__set_x[81]
    set st__Object__set_x[36]=st__Object__set_x[81]
    set st__Object__set_x[37]=st__Object__set_x[81]
    call TriggerAddCondition(st__Object__set_x[43],Condition( function sa__Unit_prototype__set_x))
    call TriggerAddAction(st__Object__set_x[43], function sa__Unit_prototype__set_x)
    set st__Object__set_y[43]=CreateTrigger()
    set st__Object__set_y[79]=st__Object__set_y[43]
    set st__Object__set_y[74]=st__Object__set_y[79]
    set st__Object__set_y[81]=st__Object__set_y[79]
    set st__Object__set_y[33]=st__Object__set_y[81]
    set st__Object__set_y[34]=st__Object__set_y[81]
    set st__Object__set_y[35]=st__Object__set_y[81]
    set st__Object__set_y[36]=st__Object__set_y[81]
    set st__Object__set_y[37]=st__Object__set_y[81]
    call TriggerAddCondition(st__Object__set_y[43],Condition( function sa__Unit_prototype__set_y))
    call TriggerAddAction(st__Object__set_y[43], function sa__Unit_prototype__set_y)
    set st__Object__set_z[43]=CreateTrigger()
    set st__Object__set_z[79]=st__Object__set_z[43]
    set st__Object__set_z[74]=st__Object__set_z[79]
    set st__Object__set_z[81]=st__Object__set_z[79]
    set st__Object__set_z[33]=st__Object__set_z[81]
    set st__Object__set_z[34]=st__Object__set_z[81]
    set st__Object__set_z[35]=st__Object__set_z[81]
    set st__Object__set_z[36]=st__Object__set_z[81]
    set st__Object__set_z[37]=st__Object__set_z[81]
    call TriggerAddCondition(st__Object__set_z[43],Condition( function sa__Unit_prototype__set_z))
    call TriggerAddAction(st__Object__set_z[43], function sa__Unit_prototype__set_z)
    set st__Object__set_yaw[43]=CreateTrigger()
    set st__Object__set_yaw[79]=st__Object__set_yaw[43]
    set st__Object__set_yaw[74]=st__Object__set_yaw[79]
    set st__Object__set_yaw[81]=st__Object__set_yaw[79]
    set st__Object__set_yaw[33]=st__Object__set_yaw[81]
    set st__Object__set_yaw[34]=st__Object__set_yaw[81]
    set st__Object__set_yaw[35]=st__Object__set_yaw[81]
    set st__Object__set_yaw[36]=st__Object__set_yaw[81]
    set st__Object__set_yaw[37]=st__Object__set_yaw[81]
    call TriggerAddCondition(st__Object__set_yaw[43],Condition( function sa__Unit_prototype__set_yaw))
    call TriggerAddAction(st__Object__set_yaw[43], function sa__Unit_prototype__set_yaw)
    set st__Object__set_offset_z[43]=CreateTrigger()
    set st__Object__set_offset_z[79]=st__Object__set_offset_z[43]
    set st__Object__set_offset_z[74]=st__Object__set_offset_z[79]
    set st__Object__set_offset_z[81]=st__Object__set_offset_z[79]
    set st__Object__set_offset_z[33]=st__Object__set_offset_z[81]
    set st__Object__set_offset_z[34]=st__Object__set_offset_z[81]
    set st__Object__set_offset_z[35]=st__Object__set_offset_z[81]
    set st__Object__set_offset_z[36]=st__Object__set_offset_z[81]
    set st__Object__set_offset_z[37]=st__Object__set_offset_z[81]
    call TriggerAddCondition(st__Object__set_offset_z[43],Condition( function sa__Unit_prototype__set_offset_z))
    call TriggerAddAction(st__Object__set_offset_z[43], function sa__Unit_prototype__set_offset_z)
    set st__Unit_prototype__get_name=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_name,Condition( function sa__Unit_prototype__get_name))
    set st__Unit_prototype__get_hp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_hp,Condition( function sa__Unit_prototype__get_hp))
    set st__Unit_prototype__set_hp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_hp,Condition( function sa__Unit_prototype__set_hp))
    set st__Unit_prototype__get_hpregen=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_hpregen,Condition( function sa__Unit_prototype__get_hpregen))
    set st__Unit_prototype_restoreHP=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_restoreHP,Condition( function sa__Unit_prototype_restoreHP))
    set st__Unit_prototype__get_maxhp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_maxhp,Condition( function sa__Unit_prototype__get_maxhp))
    set st__Unit_prototype__set_maxhp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_maxhp,Condition( function sa__Unit_prototype__set_maxhp))
    set st__Unit_prototype__get_mp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_mp,Condition( function sa__Unit_prototype__get_mp))
    set st__Unit_prototype__get_mpregen=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_mpregen,Condition( function sa__Unit_prototype__get_mpregen))
    set st__Unit_prototype__get_maxmp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_maxmp,Condition( function sa__Unit_prototype__get_maxmp))
    set st__Unit_prototype__set_maxmp=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_maxmp,Condition( function sa__Unit_prototype__set_maxmp))
    set st__Unit_prototype__get_attack=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_attack,Condition( function sa__Unit_prototype__get_attack))
    set st__Unit_prototype__get_attack_speed=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_attack_speed,Condition( function sa__Unit_prototype__get_attack_speed))
    set st__Unit_prototype__get_attack_range=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_attack_range,Condition( function sa__Unit_prototype__get_attack_range))
    set st__Unit_prototype__set_attack_range=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_attack_range,Condition( function sa__Unit_prototype__set_attack_range))
    set st__Unit_prototype__get_movement_speed=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_movement_speed,Condition( function sa__Unit_prototype__get_movement_speed))
    set st__Unit_prototype__set_movement_speed=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_movement_speed,Condition( function sa__Unit_prototype__set_movement_speed))
    set st__Unit_prototype__get_accuracy=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_accuracy,Condition( function sa__Unit_prototype__get_accuracy))
    set st__Unit_prototype__get_evasion=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__get_evasion,Condition( function sa__Unit_prototype__get_evasion))
    set st__Unit_prototype__set_collision=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype__set_collision,Condition( function sa__Unit_prototype__set_collision))
    set st__Unit_prototype_damageTarget=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_damageTarget,Condition( function sa__Unit_prototype_damageTarget))
    set st__Unit_prototype_getAbility=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_getAbility,Condition( function sa__Unit_prototype_getAbility))
    set st__Unit_prototype_getStatus=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_getStatus,Condition( function sa__Unit_prototype_getStatus))
    set st__Unit_prototype_plusStatus=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_plusStatus,Condition( function sa__Unit_prototype_plusStatus))
    set st__Unit_prototype_minusStatus=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_minusStatus,Condition( function sa__Unit_prototype_minusStatus))
    set st__Unit_prototype_resetAnim=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_resetAnim,Condition( function sa__Unit_prototype_resetAnim))
    set st__Unit_prototype_setAnim=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_setAnim,Condition( function sa__Unit_prototype_setAnim))
    set st__Unit_prototype_queueAnim=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_queueAnim,Condition( function sa__Unit_prototype_queueAnim))
    set st__Unit_prototype_setAnimSpeed=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_setAnimSpeed,Condition( function sa__Unit_prototype_setAnimSpeed))
    set st__Unit_prototype_isMoveable=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_isMoveable,Condition( function sa__Unit_prototype_isMoveable))
    set st__Unit_prototype_inRange=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_inRange,Condition( function sa__Unit_prototype_inRange))
    set st__Unit_prototype_inLine=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_inLine,Condition( function sa__Unit_prototype_inLine))
    set st__Unit_prototype_inSector=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_inSector,Condition( function sa__Unit_prototype_inSector))
    set st__Unit_prototype_isEnemy=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_isEnemy,Condition( function sa__Unit_prototype_isEnemy))
    set st__Unit_prototype_isAlly=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_isAlly,Condition( function sa__Unit_prototype_isAlly))
    set st__Unit_prototype_isUnitType=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_isUnitType,Condition( function sa__Unit_prototype_isUnitType))
    set st__Unit_prototype_issueTargetOrder=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_issueTargetOrder,Condition( function sa__Unit_prototype_issueTargetOrder))
    set st__Unit_prototype_get=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_get,Condition( function sa__Unit_prototype_get))
    set st__Unit_prototype_create=CreateTrigger()
    call TriggerAddCondition(st__Unit_prototype_create,Condition( function sa__Unit_prototype_create))
    set st__Object_onDestroy[43]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[43],Condition( function sa__Unit_prototype_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[43],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[43],Condition( function sa__Object_onDestroy))
    set st__Ability_prototype_init[167]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[167],Condition( function sa__AbilityC008_main_init))
    call TriggerAddAction(st__Ability_prototype_init[167], function sa__AbilityC008_main_init)
    set st__Ability_prototype_onDestroy[167]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[167],Condition( function sa__AbilityC008_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[167],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[166]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[166],Condition( function sa__AbilityC007_main_init))
    call TriggerAddAction(st__Ability_prototype_init[166], function sa__AbilityC007_main_init)
    set st__Ability_prototype_onDestroy[166]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[166],Condition( function sa__AbilityC007_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[166],Condition( function sa__Ability_prototype_onDestroy))
    set st__Missile_explosionFilterAdditional[77]=CreateTrigger()
    set st__Missile_explosionFilterAdditional[98]=st__Missile_explosionFilterAdditional[77]
    set st__Missile_explosionFilterAdditional[114]=st__Missile_explosionFilterAdditional[77]
    set st__Missile_explosionFilterAdditional[117]=st__Missile_explosionFilterAdditional[77]
    set st__Missile_explosionFilterAdditional[140]=st__Missile_explosionFilterAdditional[77]
    set st__Missile_explosionFilterAdditional[149]=st__Missile_explosionFilterAdditional[77]
    set st__Missile_explosionFilterAdditional[150]=st__Missile_explosionFilterAdditional[77]
    call TriggerAddCondition(st__Missile_explosionFilterAdditional[77],Condition( function sa__Missile_explosionFilterAdditional))
    call TriggerAddAction(st__Missile_explosionFilterAdditional[77], function sa__Missile_explosionFilterAdditional)
    set st__Missile_executeExplosion[77]=CreateTrigger()
    set st__Missile_executeExplosion[98]=st__Missile_executeExplosion[77]
    set st__Missile_executeExplosion[114]=st__Missile_executeExplosion[77]
    set st__Missile_executeExplosion[140]=st__Missile_executeExplosion[77]
    set st__Missile_executeExplosion[149]=st__Missile_executeExplosion[77]
    set st__Missile_executeExplosion[150]=st__Missile_executeExplosion[77]
    call TriggerAddCondition(st__Missile_executeExplosion[77],Condition( function sa__Missile_executeExplosion))
    call TriggerAddAction(st__Missile_executeExplosion[77], function sa__Missile_executeExplosion)
    set st__Missile_damageTarget=CreateTrigger()
    call TriggerAddCondition(st__Missile_damageTarget,Condition( function sa__Missile_damageTarget))
    set st__Missile_rangeFilter[77]=CreateTrigger()
    set st__Missile_rangeFilter[98]=st__Missile_rangeFilter[77]
    set st__Missile_rangeFilter[114]=st__Missile_rangeFilter[77]
    set st__Missile_rangeFilter[117]=st__Missile_rangeFilter[77]
    set st__Missile_rangeFilter[140]=st__Missile_rangeFilter[77]
    set st__Missile_rangeFilter[149]=st__Missile_rangeFilter[77]
    set st__Missile_rangeFilter[150]=st__Missile_rangeFilter[77]
    call TriggerAddCondition(st__Missile_rangeFilter[77],Condition( function sa__Missile_rangeFilter))
    call TriggerAddAction(st__Missile_rangeFilter[77], function sa__Missile_rangeFilter)
    set st__Missile_waveFilterAdditional[77]=CreateTrigger()
    set st__Missile_waveFilterAdditional[98]=st__Missile_waveFilterAdditional[77]
    set st__Missile_waveFilterAdditional[114]=st__Missile_waveFilterAdditional[77]
    set st__Missile_waveFilterAdditional[117]=st__Missile_waveFilterAdditional[77]
    set st__Missile_waveFilterAdditional[140]=st__Missile_waveFilterAdditional[77]
    set st__Missile_waveFilterAdditional[149]=st__Missile_waveFilterAdditional[77]
    set st__Missile_waveFilterAdditional[150]=st__Missile_waveFilterAdditional[77]
    call TriggerAddCondition(st__Missile_waveFilterAdditional[77],Condition( function sa__Missile_waveFilterAdditional))
    call TriggerAddAction(st__Missile_waveFilterAdditional[77], function sa__Missile_waveFilterAdditional)
    set st__Missile_waveRangeFilter[77]=CreateTrigger()
    set st__Missile_waveRangeFilter[98]=st__Missile_waveRangeFilter[77]
    set st__Missile_waveRangeFilter[114]=st__Missile_waveRangeFilter[77]
    set st__Missile_waveRangeFilter[117]=st__Missile_waveRangeFilter[77]
    set st__Missile_waveRangeFilter[140]=st__Missile_waveRangeFilter[77]
    set st__Missile_waveRangeFilter[149]=st__Missile_waveRangeFilter[77]
    set st__Missile_waveRangeFilter[150]=st__Missile_waveRangeFilter[77]
    call TriggerAddCondition(st__Missile_waveRangeFilter[77],Condition( function sa__Missile_waveRangeFilter))
    call TriggerAddAction(st__Missile_waveRangeFilter[77], function sa__Missile_waveRangeFilter)
    set st__Missile_executeWave[77]=CreateTrigger()
    set st__Missile_executeWave[98]=st__Missile_executeWave[77]
    set st__Missile_executeWave[114]=st__Missile_executeWave[77]
    set st__Missile_executeWave[117]=st__Missile_executeWave[77]
    set st__Missile_executeWave[140]=st__Missile_executeWave[77]
    set st__Missile_executeWave[149]=st__Missile_executeWave[77]
    call TriggerAddCondition(st__Missile_executeWave[77],Condition( function sa__Missile_executeWave))
    call TriggerAddAction(st__Missile_executeWave[77], function sa__Missile_executeWave)
    set st__Missile_collisionFilterAdditional[77]=CreateTrigger()
    set st__Missile_collisionFilterAdditional[98]=st__Missile_collisionFilterAdditional[77]
    set st__Missile_collisionFilterAdditional[114]=st__Missile_collisionFilterAdditional[77]
    set st__Missile_collisionFilterAdditional[117]=st__Missile_collisionFilterAdditional[77]
    set st__Missile_collisionFilterAdditional[140]=st__Missile_collisionFilterAdditional[77]
    set st__Missile_collisionFilterAdditional[149]=st__Missile_collisionFilterAdditional[77]
    set st__Missile_collisionFilterAdditional[150]=st__Missile_collisionFilterAdditional[77]
    call TriggerAddCondition(st__Missile_collisionFilterAdditional[77],Condition( function sa__Missile_collisionFilterAdditional))
    call TriggerAddAction(st__Missile_collisionFilterAdditional[77], function sa__Missile_collisionFilterAdditional)
    set st__Missile_targetFilterAdditional[77]=CreateTrigger()
    set st__Missile_targetFilterAdditional[98]=st__Missile_targetFilterAdditional[77]
    set st__Missile_targetFilterAdditional[114]=st__Missile_targetFilterAdditional[77]
    set st__Missile_targetFilterAdditional[117]=st__Missile_targetFilterAdditional[77]
    set st__Missile_targetFilterAdditional[140]=st__Missile_targetFilterAdditional[77]
    set st__Missile_targetFilterAdditional[149]=st__Missile_targetFilterAdditional[77]
    set st__Missile_targetFilterAdditional[150]=st__Missile_targetFilterAdditional[77]
    call TriggerAddCondition(st__Missile_targetFilterAdditional[77],Condition( function sa__Missile_targetFilterAdditional))
    call TriggerAddAction(st__Missile_targetFilterAdditional[77], function sa__Missile_targetFilterAdditional)
    set st__Missile_executeTarget[77]=CreateTrigger()
    set st__Missile_executeTarget[117]=st__Missile_executeTarget[77]
    set st__Missile_executeTarget[150]=st__Missile_executeTarget[77]
    call TriggerAddCondition(st__Missile_executeTarget[77],Condition( function sa__Missile_executeTarget))
    call TriggerAddAction(st__Missile_executeTarget[77], function sa__Missile_executeTarget)
    set st__Missile_killFilter[77]=CreateTrigger()
    set st__Missile_killFilter[98]=st__Missile_killFilter[77]
    set st__Missile_killFilter[114]=st__Missile_killFilter[77]
    set st__Missile_killFilter[117]=st__Missile_killFilter[77]
    set st__Missile_killFilter[140]=st__Missile_killFilter[77]
    set st__Missile_killFilter[149]=st__Missile_killFilter[77]
    set st__Missile_killFilter[150]=st__Missile_killFilter[77]
    call TriggerAddCondition(st__Missile_killFilter[77],Condition( function sa__Missile_killFilter))
    call TriggerAddAction(st__Missile_killFilter[77], function sa__Missile_killFilter)
    set st__Missile_onBound[77]=CreateTrigger()
    set st__Missile_onBound[98]=st__Missile_onBound[77]
    set st__Missile_onBound[114]=st__Missile_onBound[77]
    set st__Missile_onBound[117]=st__Missile_onBound[77]
    set st__Missile_onBound[140]=st__Missile_onBound[77]
    set st__Missile_onBound[149]=st__Missile_onBound[77]
    set st__Missile_onBound[150]=st__Missile_onBound[77]
    call TriggerAddCondition(st__Missile_onBound[77],Condition( function sa__Missile_onBound))
    call TriggerAddAction(st__Missile_onBound[77], function sa__Missile_onBound)
    set st__Missile_beforeExplosion[77]=CreateTrigger()
    set st__Missile_beforeExplosion[98]=st__Missile_beforeExplosion[77]
    set st__Missile_beforeExplosion[114]=st__Missile_beforeExplosion[77]
    set st__Missile_beforeExplosion[140]=st__Missile_beforeExplosion[77]
    set st__Missile_beforeExplosion[149]=st__Missile_beforeExplosion[77]
    set st__Missile_beforeExplosion[150]=st__Missile_beforeExplosion[77]
    call TriggerAddCondition(st__Missile_beforeExplosion[77],Condition( function sa__Missile_beforeExplosion))
    call TriggerAddAction(st__Missile_beforeExplosion[77], function sa__Missile_beforeExplosion)
    set st__Missile_afterExplosion[77]=CreateTrigger()
    set st__Missile_afterExplosion[114]=st__Missile_afterExplosion[77]
    set st__Missile_afterExplosion[140]=st__Missile_afterExplosion[77]
    set st__Missile_afterExplosion[149]=st__Missile_afterExplosion[77]
    set st__Missile_afterExplosion[150]=st__Missile_afterExplosion[77]
    call TriggerAddCondition(st__Missile_afterExplosion[77],Condition( function sa__Missile_afterExplosion))
    call TriggerAddAction(st__Missile_afterExplosion[77], function sa__Missile_afterExplosion)
    set st__Missile_beforeWave[77]=CreateTrigger()
    set st__Missile_beforeWave[98]=st__Missile_beforeWave[77]
    set st__Missile_beforeWave[114]=st__Missile_beforeWave[77]
    set st__Missile_beforeWave[117]=st__Missile_beforeWave[77]
    set st__Missile_beforeWave[140]=st__Missile_beforeWave[77]
    set st__Missile_beforeWave[149]=st__Missile_beforeWave[77]
    call TriggerAddCondition(st__Missile_beforeWave[77],Condition( function sa__Missile_beforeWave))
    call TriggerAddAction(st__Missile_beforeWave[77], function sa__Missile_beforeWave)
    set st__Missile_afterWave[77]=CreateTrigger()
    set st__Missile_afterWave[98]=st__Missile_afterWave[77]
    set st__Missile_afterWave[114]=st__Missile_afterWave[77]
    set st__Missile_afterWave[117]=st__Missile_afterWave[77]
    set st__Missile_afterWave[140]=st__Missile_afterWave[77]
    set st__Missile_afterWave[149]=st__Missile_afterWave[77]
    call TriggerAddCondition(st__Missile_afterWave[77],Condition( function sa__Missile_afterWave))
    call TriggerAddAction(st__Missile_afterWave[77], function sa__Missile_afterWave)
    set st__Missile_periodicAction[77]=CreateTrigger()
    set st__Missile_periodicAction[114]=st__Missile_periodicAction[77]
    set st__Missile_periodicAction[117]=st__Missile_periodicAction[77]
    set st__Missile_periodicAction[140]=st__Missile_periodicAction[77]
    set st__Missile_periodicAction[149]=st__Missile_periodicAction[77]
    call TriggerAddCondition(st__Missile_periodicAction[77],Condition( function sa__Missile_periodicAction))
    call TriggerAddAction(st__Missile_periodicAction[77], function sa__Missile_periodicAction)
    set st__Missile_create=CreateTrigger()
    call TriggerAddCondition(st__Missile_create,Condition( function sa__Missile_create))
    set st__Object_onDestroy[77]=CreateTrigger()
    set st__Object_onDestroy[114]=st__Object_onDestroy[77]
    set st__Object_onDestroy[117]=st__Object_onDestroy[77]
    set st__Object_onDestroy[140]=st__Object_onDestroy[77]
    call TriggerAddCondition(st__Object_onDestroy[77],Condition( function sa__Missile_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[77],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[77],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[77],Condition( function sa__Object_onDestroy))
    set st__Actor_onComplete[111]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[111],Condition( function sa__Abilityu000_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[111], function sa__Abilityu000_actor_onComplete)
    set st__Actor_onDestroy[111]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[111],Condition( function sa__Abilityu000_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[111],Condition( function sa__UnitMovement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[111],Condition( function sa__Movement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[111],Condition( function sa__Actor_onDestroy))
    set st__Ability_prototype_init[165]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[165],Condition( function sa__AbilityC006_main_init))
    call TriggerAddAction(st__Ability_prototype_init[165], function sa__AbilityC006_main_init)
    set st__Ability_prototype_onDestroy[165]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[165],Condition( function sa__AbilityC006_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[165],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[164]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[164],Condition( function sa__AbilityC005_main_init))
    call TriggerAddAction(st__Ability_prototype_init[164], function sa__AbilityC005_main_init)
    set st__Ability_prototype_onDestroy[164]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[164],Condition( function sa__AbilityC005_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[164],Condition( function sa__Ability_prototype_onDestroy))
    set st__Ability_prototype_init[163]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_init[163],Condition( function sa__AbilityC004_main_init))
    call TriggerAddAction(st__Ability_prototype_init[163], function sa__AbilityC004_main_init)
    set st__Ability_prototype_onDestroy[163]=CreateTrigger()
    call TriggerAddCondition(st__Ability_prototype_onDestroy[163],Condition( function sa__AbilityC004_main_onDestroy))
    call TriggerAddCondition(st__Ability_prototype_onDestroy[163],Condition( function sa__Ability_prototype_onDestroy))
    set st__Unit_create=CreateTrigger()
    call TriggerAddCondition(st__Unit_create,Condition( function sa__Unit_create))
    set st__Object_onDestroy[79]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[79],Condition( function sa__Unit_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[79],Condition( function sa__Unit_prototype_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[79],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[79],Condition( function sa__Object_onDestroy))
    set st__Undead_isGuardianAlive[81]=CreateTrigger()
    set st__Undead_isGuardianAlive[33]=st__Undead_isGuardianAlive[81]
    set st__Undead_isGuardianAlive[34]=st__Undead_isGuardianAlive[81]
    set st__Undead_isGuardianAlive[35]=st__Undead_isGuardianAlive[81]
    set st__Undead_isGuardianAlive[36]=st__Undead_isGuardianAlive[81]
    set st__Undead_isGuardianAlive[37]=st__Undead_isGuardianAlive[81]
    call TriggerAddCondition(st__Undead_isGuardianAlive[81],Condition( function sa__Undead_isGuardianAlive))
    call TriggerAddAction(st__Undead_isGuardianAlive[81], function sa__Undead_isGuardianAlive)
    set st__Undead_getNearestHero[81]=CreateTrigger()
    set st__Undead_getNearestHero[33]=st__Undead_getNearestHero[81]
    set st__Undead_getNearestHero[34]=st__Undead_getNearestHero[81]
    set st__Undead_getNearestHero[35]=st__Undead_getNearestHero[81]
    set st__Undead_getNearestHero[36]=st__Undead_getNearestHero[81]
    set st__Undead_getNearestHero[37]=st__Undead_getNearestHero[81]
    call TriggerAddCondition(st__Undead_getNearestHero[81],Condition( function sa__Undead_getNearestHero))
    call TriggerAddAction(st__Undead_getNearestHero[81], function sa__Undead_getNearestHero)
    set st__Undead_getNearestGuardian[81]=CreateTrigger()
    set st__Undead_getNearestGuardian[33]=st__Undead_getNearestGuardian[81]
    set st__Undead_getNearestGuardian[34]=st__Undead_getNearestGuardian[81]
    set st__Undead_getNearestGuardian[35]=st__Undead_getNearestGuardian[81]
    set st__Undead_getNearestGuardian[36]=st__Undead_getNearestGuardian[81]
    set st__Undead_getNearestGuardian[37]=st__Undead_getNearestGuardian[81]
    call TriggerAddCondition(st__Undead_getNearestGuardian[81],Condition( function sa__Undead_getNearestGuardian))
    call TriggerAddAction(st__Undead_getNearestGuardian[81], function sa__Undead_getNearestGuardian)
    set st__Undead_onSetTarget[81]=CreateTrigger()
    set st__Undead_onSetTarget[33]=st__Undead_onSetTarget[81]
    set st__Undead_onSetTarget[34]=st__Undead_onSetTarget[81]
    set st__Undead_onSetTarget[35]=st__Undead_onSetTarget[81]
    set st__Undead_onSetTarget[36]=st__Undead_onSetTarget[81]
    set st__Undead_onSetTarget[37]=st__Undead_onSetTarget[81]
    call TriggerAddCondition(st__Undead_onSetTarget[81],Condition( function sa__Undead_onSetTarget))
    call TriggerAddAction(st__Undead_onSetTarget[81], function sa__Undead_onSetTarget)
    set st__Undead_onFreeTarget[81]=CreateTrigger()
    set st__Undead_onFreeTarget[33]=st__Undead_onFreeTarget[81]
    set st__Undead_onFreeTarget[34]=st__Undead_onFreeTarget[81]
    set st__Undead_onFreeTarget[35]=st__Undead_onFreeTarget[81]
    set st__Undead_onFreeTarget[36]=st__Undead_onFreeTarget[81]
    set st__Undead_onFreeTarget[37]=st__Undead_onFreeTarget[81]
    call TriggerAddCondition(st__Undead_onFreeTarget[81],Condition( function sa__Undead_onFreeTarget))
    call TriggerAddAction(st__Undead_onFreeTarget[81], function sa__Undead_onFreeTarget)
    set st__Undead_refreshTarget[81]=CreateTrigger()
    set st__Undead_refreshTarget[33]=st__Undead_refreshTarget[81]
    set st__Undead_refreshTarget[34]=st__Undead_refreshTarget[81]
    set st__Undead_refreshTarget[35]=st__Undead_refreshTarget[81]
    set st__Undead_refreshTarget[36]=st__Undead_refreshTarget[81]
    set st__Undead_refreshTarget[37]=st__Undead_refreshTarget[81]
    call TriggerAddCondition(st__Undead_refreshTarget[81],Condition( function sa__Undead_refreshTarget))
    call TriggerAddAction(st__Undead_refreshTarget[81], function sa__Undead_refreshTarget)
    set st__Undead_getTarget=CreateTrigger()
    call TriggerAddCondition(st__Undead_getTarget,Condition( function sa__Undead_getTarget))
    set st__Undead_periodicAction[81]=CreateTrigger()
    set st__Undead_periodicAction[34]=st__Undead_periodicAction[81]
    set st__Undead_periodicAction[35]=st__Undead_periodicAction[81]
    set st__Undead_periodicAction[36]=st__Undead_periodicAction[81]
    set st__Undead_periodicAction[37]=st__Undead_periodicAction[81]
    call TriggerAddCondition(st__Undead_periodicAction[81],Condition( function sa__Undead_periodicAction))
    call TriggerAddAction(st__Undead_periodicAction[81], function sa__Undead_periodicAction)
    set st__Undead_onDamaged[81]=CreateTrigger()
    set st__Undead_onDamaged[33]=st__Undead_onDamaged[81]
    set st__Undead_onDamaged[34]=st__Undead_onDamaged[81]
    set st__Undead_onDamaged[35]=st__Undead_onDamaged[81]
    set st__Undead_onDamaged[36]=st__Undead_onDamaged[81]
    set st__Undead_onDamaged[37]=st__Undead_onDamaged[81]
    call TriggerAddCondition(st__Undead_onDamaged[81],Condition( function sa__Undead_onDamaged))
    call TriggerAddAction(st__Undead_onDamaged[81], function sa__Undead_onDamaged)
    set st__Undead_encount=CreateTrigger()
    call TriggerAddCondition(st__Undead_encount,Condition( function sa__Undead_encount))
    set st__Undead_init[81]=CreateTrigger()
    set st__Undead_init[33]=st__Undead_init[81]
    set st__Undead_init[37]=st__Undead_init[81]
    call TriggerAddCondition(st__Undead_init[81],Condition( function sa__Undead_init))
    call TriggerAddAction(st__Undead_init[81], function sa__Undead_init)
    set st__Undead_create=CreateTrigger()
    call TriggerAddCondition(st__Undead_create,Condition( function sa__Undead_create))
    set st__Object_onDestroy[81]=CreateTrigger()
    set st__Object_onDestroy[33]=st__Object_onDestroy[81]
    set st__Object_onDestroy[34]=st__Object_onDestroy[81]
    set st__Object_onDestroy[35]=st__Object_onDestroy[81]
    set st__Object_onDestroy[36]=st__Object_onDestroy[81]
    set st__Object_onDestroy[37]=st__Object_onDestroy[81]
    call TriggerAddCondition(st__Object_onDestroy[81],Condition( function sa__Undead_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[81],Condition( function sa__Unit_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[81],Condition( function sa__Unit_prototype_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[81],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[81],Condition( function sa__Object_onDestroy))
    set st__Actor_onComplete[125]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[125],Condition( function sa__additional_onComplete))
    call TriggerAddAction(st__Actor_onComplete[125], function sa__additional_onComplete)
    set st__Actor_onComplete[126]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[126],Condition( function sa__Ability0014_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[126], function sa__Ability0014_actor_onComplete)
    set st__Actor_onDestroy[103]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[103],Condition( function sa__Ability0004_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[103],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[103],Condition( function sa__Actor_onDestroy))
    set st__Actor_periodicAction[129]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[129],Condition( function sa__Ability0015_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[129], function sa__Ability0015_actor_periodicAction)
    set st__Actor_onComplete[129]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[129],Condition( function sa__Ability0015_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[129], function sa__Ability0015_actor_onComplete)
    set st__Actor_onSuspend[129]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[129],Condition( function sa__Ability0015_actor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[129], function sa__Ability0015_actor_onSuspend)
    set st__Actor_onDestroy[129]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[129],Condition( function sa__Ability0015_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[129],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[129],Condition( function sa__Actor_onDestroy))
    set st__Actor_periodicAction[131]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[131],Condition( function sa__Ability0015_charge_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[131], function sa__Ability0015_charge_periodicAction)
    set st__Actor_onDestroy[131]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[131],Condition( function sa__Ability0015_charge_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[131],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[131],Condition( function sa__Actor_onDestroy))
    set st__Ability0004__chain_rangeFilter=CreateTrigger()
    call TriggerAddCondition(st__Ability0004__chain_rangeFilter,Condition( function sa__Ability0004__chain_rangeFilter))
    set st__Ability0004__chain_explosionFilterAdditional=CreateTrigger()
    call TriggerAddCondition(st__Ability0004__chain_explosionFilterAdditional,Condition( function sa__Ability0004__chain_explosionFilterAdditional))
    set st__Ability0004__chain_executeExplosion=CreateTrigger()
    call TriggerAddCondition(st__Ability0004__chain_executeExplosion,Condition( function sa__Ability0004__chain_executeExplosion))
    set st__Actor_killFilter[102]=CreateTrigger()
    call TriggerAddCondition(st__Actor_killFilter[102],Condition( function sa__Ability0004__chain_killFilter))
    call TriggerAddAction(st__Actor_killFilter[102], function sa__Ability0004__chain_killFilter)
    set st__Actor_onComplete[102]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[102],Condition( function sa__Ability0004__chain_onComplete))
    call TriggerAddAction(st__Actor_onComplete[102], function sa__Ability0004__chain_onComplete)
    set st__Actor_onDestroy[102]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[102],Condition( function sa__Ability0004__chain_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[102],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[102],Condition( function sa__Actor_onDestroy))
    set st__Actor_killFilter[133]=CreateTrigger()
    call TriggerAddCondition(st__Actor_killFilter[133],Condition( function sa__Ability0016_actor_killFilter))
    call TriggerAddAction(st__Actor_killFilter[133], function sa__Ability0016_actor_killFilter)
    set st__Actor_periodicAction[133]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[133],Condition( function sa__Ability0016_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[133], function sa__Ability0016_actor_periodicAction)
    set st__Actor_onComplete[133]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[133],Condition( function sa__Ability0016_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[133], function sa__Ability0016_actor_onComplete)
    set st__Actor_onSuspend[133]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[133],Condition( function sa__Ability0016_actor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[133], function sa__Ability0016_actor_onSuspend)
    set st__Actor_onDestroy[133]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[133],Condition( function sa__Ability0016_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[133],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[133],Condition( function sa__Actor_onDestroy))
    set st__Actor_onComplete[99]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[99],Condition( function sa__Ability0003_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[99], function sa__Ability0003_actor_onComplete)
    set st__Actor_onDestroy[99]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[99],Condition( function sa__Ability0003_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[99],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[99],Condition( function sa__Actor_onDestroy))
    set st__Missile_periodicAction[98]=CreateTrigger()
    call TriggerAddCondition(st__Missile_periodicAction[98],Condition( function sa__Ability0003__ball_periodicAction))
    call TriggerAddAction(st__Missile_periodicAction[98], function sa__Ability0003__ball_periodicAction)
    set st__Missile_executeTarget[98]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeTarget[98],Condition( function sa__Ability0003__ball_executeTarget))
    call TriggerAddAction(st__Missile_executeTarget[98], function sa__Ability0003__ball_executeTarget)
    set st__Missile_afterExplosion[98]=CreateTrigger()
    call TriggerAddCondition(st__Missile_afterExplosion[98],Condition( function sa__Ability0003__ball_afterExplosion))
    call TriggerAddAction(st__Missile_afterExplosion[98], function sa__Ability0003__ball_afterExplosion)
    set st__Object_onDestroy[98]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[98],Condition( function sa__Ability0003__ball_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[98],Condition( function sa__Missile_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[98],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[98],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[98],Condition( function sa__Object_onDestroy))
    set st__UnitActor_suspendFilterAdditional[96]=CreateTrigger()
    call TriggerAddCondition(st__UnitActor_suspendFilterAdditional[96],Condition( function sa__Ability0002_actor_suspendFilterAdditional))
    call TriggerAddAction(st__UnitActor_suspendFilterAdditional[96], function sa__Ability0002_actor_suspendFilterAdditional)
    set st__Actor_onSuspend[96]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onSuspend[96],Condition( function sa__Ability0002_actor_onSuspend))
    call TriggerAddAction(st__Actor_onSuspend[96], function sa__Ability0002_actor_onSuspend)
    set st__Actor_onComplete[96]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[96],Condition( function sa__Ability0002_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[96], function sa__Ability0002_actor_onComplete)
    set st__Actor_periodicAction[96]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[96],Condition( function sa__Ability0002_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[96], function sa__Ability0002_actor_periodicAction)
    set st__Actor_onDestroy[96]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[96],Condition( function sa__Ability0002_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[96],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[96],Condition( function sa__Actor_onDestroy))
    set st__Missile_executeTarget[140]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeTarget[140],Condition( function sa__Ability0020___bullet_executeTarget))
    call TriggerAddAction(st__Missile_executeTarget[140], function sa__Ability0020___bullet_executeTarget)
    set st__Actor_onComplete[141]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[141],Condition( function sa__Ability0020_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[141], function sa__Ability0020_actor_onComplete)
    set st__Actor_periodicAction[141]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[141],Condition( function sa__Ability0020_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[141], function sa__Ability0020_actor_periodicAction)
    set st__Actor_onDestroy[141]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[141],Condition( function sa__Ability0020_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[141],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[141],Condition( function sa__Actor_onDestroy))
    set st__Actor_onComplete[93]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[93],Condition( function sa__Ability0001_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[93], function sa__Ability0001_actor_onComplete)
    set st__Actor_onDestroy[93]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[93],Condition( function sa__Ability0001_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[93],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[93],Condition( function sa__Actor_onDestroy))
    set st__Actor_onComplete[146]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[146],Condition( function sa__Ability0021_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[146], function sa__Ability0021_actor_onComplete)
    set st__Actor_onDestroy[146]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[146],Condition( function sa__Ability0021_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[146],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[146],Condition( function sa__Actor_onDestroy))
    set st__Actor_onComplete[92]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[92],Condition( function sa__Ability0001_a2_onComplete))
    call TriggerAddAction(st__Actor_onComplete[92], function sa__Ability0001_a2_onComplete)
    set st__Actor_periodicAction[92]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[92],Condition( function sa__Ability0001_a2_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[92], function sa__Ability0001_a2_periodicAction)
    set st__Actor_onDestroy[92]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[92],Condition( function sa__Ability0001_a2_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[92],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[92],Condition( function sa__Actor_onDestroy))
    set st__Missile_executeTarget[149]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeTarget[149],Condition( function sa__Ability0030___mss_executeTarget))
    call TriggerAddAction(st__Missile_executeTarget[149], function sa__Ability0030___mss_executeTarget)
    set st__Object_onDestroy[149]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[149],Condition( function sa__Ability0030___mss_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[149],Condition( function sa__Missile_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[149],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[149],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[149],Condition( function sa__Object_onDestroy))
    set st__Missile_periodicAction[150]=CreateTrigger()
    call TriggerAddCondition(st__Missile_periodicAction[150],Condition( function sa__Ability0030___ball_periodicAction))
    call TriggerAddAction(st__Missile_periodicAction[150], function sa__Ability0030___ball_periodicAction)
    set st__Missile_executeWave[150]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeWave[150],Condition( function sa__Ability0030___ball_executeWave))
    call TriggerAddAction(st__Missile_executeWave[150], function sa__Ability0030___ball_executeWave)
    set st__Missile_beforeWave[150]=CreateTrigger()
    call TriggerAddCondition(st__Missile_beforeWave[150],Condition( function sa__Ability0030___ball_beforeWave))
    call TriggerAddAction(st__Missile_beforeWave[150], function sa__Ability0030___ball_beforeWave)
    set st__Missile_afterWave[150]=CreateTrigger()
    call TriggerAddCondition(st__Missile_afterWave[150],Condition( function sa__Ability0030___ball_afterWave))
    call TriggerAddAction(st__Missile_afterWave[150], function sa__Ability0030___ball_afterWave)
    set st__Object_onDestroy[150]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[150],Condition( function sa__Ability0030___ball_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[150],Condition( function sa__Missile_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[150],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[150],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[150],Condition( function sa__Object_onDestroy))
    set st__Actor_onComplete[151]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[151],Condition( function sa__Ability0030_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[151], function sa__Ability0030_actor_onComplete)
    set st__Actor_onDestroy[151]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[151],Condition( function sa__Ability0030_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[151],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[151],Condition( function sa__Actor_onDestroy))
    set st__Actor_periodicAction[88]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[88],Condition( function sa__Ability0000_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[88], function sa__Ability0000_actor_periodicAction)
    set st__Actor_onComplete[88]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onComplete[88],Condition( function sa__Ability0000_actor_onComplete))
    call TriggerAddAction(st__Actor_onComplete[88], function sa__Ability0000_actor_onComplete)
    set st__Actor_periodicAction[156]=CreateTrigger()
    call TriggerAddCondition(st__Actor_periodicAction[156],Condition( function sa__Ability0040_actor_periodicAction))
    call TriggerAddAction(st__Actor_periodicAction[156], function sa__Ability0040_actor_periodicAction)
    set st__Actor_onDestroy[156]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[156],Condition( function sa__Ability0040_actor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[156],Condition( function sa__UnitActor_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[156],Condition( function sa__Actor_onDestroy))
    set st__UnitMovement_executeExplosion[87]=CreateTrigger()
    call TriggerAddCondition(st__UnitMovement_executeExplosion[87],Condition( function sa__Ability0000_mv_executeExplosion))
    call TriggerAddAction(st__UnitMovement_executeExplosion[87], function sa__Ability0000_mv_executeExplosion)
    set st__UnitMovement_executeTarget[87]=CreateTrigger()
    call TriggerAddCondition(st__UnitMovement_executeTarget[87],Condition( function sa__Ability0000_mv_executeTarget))
    call TriggerAddAction(st__UnitMovement_executeTarget[87], function sa__Ability0000_mv_executeTarget)
    set st__Actor_onDestroy[87]=CreateTrigger()
    call TriggerAddCondition(st__Actor_onDestroy[87],Condition( function sa__Ability0000_mv_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[87],Condition( function sa__UnitMovement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[87],Condition( function sa__Movement_onDestroy))
    call TriggerAddCondition(st__Actor_onDestroy[87],Condition( function sa__Actor_onDestroy))
    set st__Object_onDestroy[72]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[72],Condition( function sa__Circle_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[72],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[72],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[72],Condition( function sa__Object_onDestroy))
    set st__TargetCircle_create=CreateTrigger()
    call TriggerAddCondition(st__TargetCircle_create,Condition( function sa__TargetCircle_create))
    set st__Object_onDestroy[73]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[73],Condition( function sa__TargetCircle_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[73],Condition( function sa__Effect_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[73],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[73],Condition( function sa__Object_onDestroy))
    set st__Object_onDestroy[74]=CreateTrigger()
    call TriggerAddCondition(st__Object_onDestroy[74],Condition( function sa__Guardian_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[74],Condition( function sa__Unit_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[74],Condition( function sa__Unit_prototype_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[74],Condition( function sa__Agent_onDestroy))
    call TriggerAddCondition(st__Object_onDestroy[74],Condition( function sa__Object_onDestroy))
    set st__Missile_executeExplosion[117]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeExplosion[117],Condition( function sa__Ability0010_potion_executeExplosion))
    call TriggerAddAction(st__Missile_executeExplosion[117], function sa__Ability0010_potion_executeExplosion)
    set st__Missile_beforeExplosion[117]=CreateTrigger()
    call TriggerAddCondition(st__Missile_beforeExplosion[117],Condition( function sa__Ability0010_potion_beforeExplosion))
    call TriggerAddAction(st__Missile_beforeExplosion[117], function sa__Ability0010_potion_beforeExplosion)
    set st__Missile_afterExplosion[117]=CreateTrigger()
    call TriggerAddCondition(st__Missile_afterExplosion[117],Condition( function sa__Ability0010_potion_afterExplosion))
    call TriggerAddAction(st__Missile_afterExplosion[117], function sa__Ability0010_potion_afterExplosion)
    set st__Undead_periodicAction[33]=CreateTrigger()
    call TriggerAddCondition(st__Undead_periodicAction[33],Condition( function sa__UndeadU000_periodicAction))
    call TriggerAddAction(st__Undead_periodicAction[33], function sa__UndeadU000_periodicAction)
    set st__Undead_init[34]=CreateTrigger()
    call TriggerAddCondition(st__Undead_init[34],Condition( function sa__UndeadU001_init))
    call TriggerAddAction(st__Undead_init[34], function sa__UndeadU001_init)
    set st__Undead_init[35]=CreateTrigger()
    call TriggerAddCondition(st__Undead_init[35],Condition( function sa__UndeadU002_init))
    call TriggerAddAction(st__Undead_init[35], function sa__UndeadU002_init)
    set st__Undead_init[36]=CreateTrigger()
    call TriggerAddCondition(st__Undead_init[36],Condition( function sa__UndeadU003_init))
    call TriggerAddAction(st__Undead_init[36], function sa__UndeadU003_init)
    set st__Missile_executeTarget[114]=CreateTrigger()
    call TriggerAddCondition(st__Missile_executeTarget[114],Condition( function sa__Abilityu001__mss_executeTarget))
    call TriggerAddAction(st__Missile_executeTarget[114], function sa__Abilityu001__mss_executeTarget)








































































































































































    call ExecuteFunc("s__AbilityIndicator_onInit")
    call ExecuteFunc("s__ConstantString_onInit")
    call ExecuteFunc("s__Tombstone_onInit")
    call ExecuteFunc("s__UI_onInit")
    call ExecuteFunc("s__UndeadU000_onInit")
    call ExecuteFunc("s__UndeadU001_onInit")
    call ExecuteFunc("s__UndeadU002_onInit")
    call ExecuteFunc("s__UndeadU003_onInit")
    call ExecuteFunc("s__UndeadU004_onInit")
    call ExecuteFunc("s__Unit_prototype_onInit")
    call ExecuteFunc("s__Ability_prototype_onInit")
    call ExecuteFunc("s__SkillShop_onInit")
    call ExecuteFunc("s__Sound3D_onInit")
    call ExecuteFunc("s__UnitData_onInit")
    call ExecuteFunc("s__User_onInit")
    call ExecuteFunc("s__Ability_onInit")
    call ExecuteFunc("s__Guardian_onInit")
    call ExecuteFunc("s__Unit_onInit")
    call ExecuteFunc("s__Game_onInit")
    call ExecuteFunc("s__Undead_onInit")
    call ExecuteFunc("s__Wave_onInit")
    call ExecuteFunc("s__Mouse_onInit")
    call ExecuteFunc("s__Ability0000_main_onInit")
    call ExecuteFunc("s__Ability0001_main_onInit")
    call ExecuteFunc("s__Ability0002_main_onInit")
    call ExecuteFunc("s__Ability0003_main_onInit")
    call ExecuteFunc("s__Ability0004_main_onInit")
    call ExecuteFunc("s__Ability0005_main_onInit")
    call ExecuteFunc("s__Ability0006_main_onInit")
    call ExecuteFunc("s__Ability0007_main_onInit")
    call ExecuteFunc("s__Abilityu000_main_onInit")
    call ExecuteFunc("s__Abilityu001_main_onInit")
    call ExecuteFunc("s__Ability0010_main_onInit")
    call ExecuteFunc("s__Ability0013_main_onInit")
    call ExecuteFunc("s__Ability0014_main_onInit")
    call ExecuteFunc("s__Ability0015_main_onInit")
    call ExecuteFunc("s__Ability0016_main_onInit")
    call ExecuteFunc("s__Abilityu010_main_onInit")
    call ExecuteFunc("s__Abilityu011_main_onInit")
    call ExecuteFunc("s__Ability0020_main_onInit")
    call ExecuteFunc("s__Ability0021_main_onInit")
    call ExecuteFunc("s__Ability0030_main_onInit")
    call ExecuteFunc("s__Ability0040_main_onInit")
    call ExecuteFunc("s__AbilityC000_main_onInit")
    call ExecuteFunc("s__AbilityC001_main_onInit")
    call ExecuteFunc("s__AbilityC002_main_onInit")
    call ExecuteFunc("s__AbilityC003_main_onInit")
    call ExecuteFunc("s__AbilityC004_main_onInit")
    call ExecuteFunc("s__AbilityC005_main_onInit")
    call ExecuteFunc("s__AbilityC006_main_onInit")
    call ExecuteFunc("s__AbilityC007_main_onInit")
    call ExecuteFunc("s__AbilityC008_main_onInit")
endfunction

